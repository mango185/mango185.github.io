<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>github/gitee/coding+hexo搭建部署个人博客</title>
    <url>/post/7d43abd0.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:24 GMT+0800 (GMT+08:00) --><h1 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h1><p>1、安装 node.js</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AVRASM"><figure class="iseeu highlight /avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">https:</span>//nodejs<span class="meta">.org</span>/en/	下载安装</span><br></pre></td></tr></table></figure></div><p>2、安装 git</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">https:</span><span class="comment">//git-scm.com/	下载安装</span></span><br></pre></td></tr></table></figure></div><p>3、安装 Hexo</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AVRASM"><figure class="iseeu highlight /avrasm"><table><tr><td class="code"><pre><span class="line">执行安装命令 npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure></div><h1 id="二、建站"><a href="#二、建站" class="headerlink" title="二、建站"></a>二、建站</h1><h2 id="1、创建存放博客的文件夹blog"><a href="#1、创建存放博客的文件夹blog" class="headerlink" title="1、创建存放博客的文件夹blog"></a>1、创建存放博客的文件夹blog</h2><h2 id="2、在该文件夹下，打开-git-bash"><a href="#2、在该文件夹下，打开-git-bash" class="headerlink" title="2、在该文件夹下，打开 git bash"></a>2、在该文件夹下，打开 git bash</h2><h2 id="3、初始化hexo，在该文件夹下新建所需文件"><a href="#3、初始化hexo，在该文件夹下新建所需文件" class="headerlink" title="3、初始化hexo，在该文件夹下新建所需文件"></a>3、初始化hexo，在该文件夹下新建所需文件</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CMAKE"><figure class="iseeu highlight /cmake"><table><tr><td class="code"><pre><span class="line">   执行命令		hexo init</span><br><span class="line">完成后，执行命令	npm <span class="keyword">install</span></span><br></pre></td></tr></table></figure></div><h2 id="4、创建一篇新文章"><a href="#4、创建一篇新文章" class="headerlink" title="4、创建一篇新文章"></a>4、创建一篇新文章</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">   hexo <span class="keyword">new</span> <span class="literal">[<span class="identifier">layout</span>]</span> &lt;title&gt;</span><br><span class="line">如果文章标题有空格，则需把整个标题用引号包起来</span><br><span class="line"></span><br><span class="line">可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 <span class="module-access"><span class="module"><span class="identifier">_config</span>.</span></span>yml 中的 default_layout 参数来指定默认布局</span><br></pre></td></tr></table></figure></div><h3 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h3><p>Hexo 有三种默认布局：post、page 和 draft，它们分别对应不同的路径，而自定义的其他布局和 post 相同，都将储存到 source/_posts 文件夹</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">布局	路径</span><br><span class="line">post	source/_posts</span><br><span class="line">page	source</span><br><span class="line">draft	source/_drafts</span><br></pre></td></tr></table></figure></div><h3 id="不要处理我的文章"><a href="#不要处理我的文章" class="headerlink" title="不要处理我的文章"></a>不要处理我的文章</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">如果你不想你的文章被处理，你可以将</span> <span class="string">Front-Matter</span> <span class="string">中的</span> <span class="attr">layout:</span> <span class="string">设为</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></div><h3 id="文件名称"><a href="#文件名称" class="headerlink" title="文件名称"></a>文件名称</h3><p>Hexo默认以标题做为文件名称, 但您可编辑 new_post_name 参数来改变默认的文件名称, 举例来说, 设为:<br></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">year-<span class="symbol">:month-</span><span class="symbol">:day-</span><span class="symbol">:title</span>.md 可让您更方便的通过日期来管理文章</span><br><span class="line"></span><br><span class="line">变量	描述</span><br><span class="line"><span class="symbol">:title</span>	标题(小写, 空格将会被替换为短杠)</span><br><span class="line"><span class="symbol">:year</span>	建立的年份，比如 <span class="number">2020</span></span><br><span class="line"><span class="symbol">:month</span>	建立的月份（有前导零），比如， 04</span><br><span class="line"><span class="symbol">:i_month</span>	建立的月份（无前导零），比如， <span class="number">4</span></span><br><span class="line"><span class="symbol">:day</span>	建立的日期（有前导零），比如， 07</span><br><span class="line"><span class="symbol">:i_day</span>	建立的日期（无前导零），比如， <span class="number">7</span></span><br></pre></td></tr></table></figure></div><p></p><h3 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h3><p>刚刚提到了 Hexo 的一种特殊布局：draft，这种布局在建立时会被保存到 source/_drafts 文件夹，您可通过 publish 命令将草稿移动到 source/_posts 文件夹，该命令的使用方式与 new 十分类似，您也可在命令中指定 layout 来指定布局</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GLSL"><figure class="iseeu highlight /glsl"><table><tr><td class="code"><pre><span class="line">    hexo publish [<span class="keyword">layout</span>] &lt;title&gt;</span><br><span class="line">草稿默认不会显示在页面中，您可在执行时加上 --draft 参数，或是把 render_drafts 参数设为 <span class="literal">true</span> 来预览草稿</span><br></pre></td></tr></table></figure></div><h3 id="模版（Scaffold）"><a href="#模版（Scaffold）" class="headerlink" title="模版（Scaffold）"></a>模版（Scaffold）</h3><p>在新建文章时，Hexo 会根据 scaffolds 文件夹内相对应的文件来建立文件，例如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type">photo</span> <span class="string">"My Gallery"</span></span><br></pre></td></tr></table></figure></div><p>在执行这行指令时，Hexo 会尝试在 scaffolds 文件夹中寻找 photo.md，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">变量</span>	<span class="string">描述</span></span><br><span class="line"><span class="attr">layout</span>	<span class="string">布局</span></span><br><span class="line"><span class="attr">title</span>	<span class="string">标题</span></span><br><span class="line"><span class="attr">date</span>	<span class="string">文件建立日期</span></span><br></pre></td></tr></table></figure></div><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>Front-matter 是文件最上方以 — 分隔的区域，用于指定个别文件的变量，举例来说：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line">    <span class="attr">title</span>: <span class="string">Hello World</span></span><br><span class="line">    <span class="attr">date</span>: <span class="string">2013/7/13 20:46:25</span></span><br><span class="line">    <span class="attr">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">以下是预先定义的参数，您可在模板中使用这些参数值并加以利用</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">参数</span>		<span class="string">描述			默认值</span></span><br><span class="line">    <span class="attr">layout</span>		<span class="string">布局	</span></span><br><span class="line">    <span class="attr">title</span>		<span class="string">标题	</span></span><br><span class="line">    <span class="attr">date</span>		<span class="string">建立日期		文件建立日期</span></span><br><span class="line">    <span class="attr">updated</span>		<span class="string">更新日期		文件更新日期</span></span><br><span class="line">    <span class="attr">comments</span>	<span class="string">开启文章的评论功能	true</span></span><br><span class="line">    <span class="attr">tags</span>		<span class="string">标签（不适用于分页）	</span></span><br><span class="line">    <span class="attr">categories</span>	<span class="string">分类（不适用于分页）	</span></span><br><span class="line">    <span class="attr">permalink</span>	<span class="string">覆盖文章网址</span></span><br></pre></td></tr></table></figure></div><h3 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h3><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 Foo, Bar 不等于 Bar, Foo；而标签没有顺序和层次</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SUBUNIT"><figure class="iseeu highlight /subunit"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">- Diary</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br></pre></td></tr></table></figure></div><h4 id="分类方法的分歧"><a href="#分类方法的分歧" class="headerlink" title="分类方法的分歧"></a>分类方法的分歧</h4><p>如果有过使用WordPress的经验，就很容易误解Hexo的分类方式。WordPress支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是Hexo不支持指定多个同级分类。下面的指定方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line"><span class="bullet">- </span>Diary</span><br><span class="line"><span class="bullet">- </span>Life</span><br><span class="line">会使分类Life成为Diary的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</span><br></pre></td></tr></table></figure></div><h3 id="JSON-Front-matter"><a href="#JSON-Front-matter" class="headerlink" title="JSON Front-matter"></a>JSON Front-matter</h3><p>除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 — 代换成 ;;; 即可</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MIPSASM"><figure class="iseeu highlight /mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="string">"title"</span>: <span class="string">"Hello World"</span>,</span><br><span class="line"><span class="string">"date"</span>: <span class="string">"2020/5/27 20:46:25"</span></span><br><span class="line"><span class="comment">;;;</span></span><br></pre></td></tr></table></figure></div><h1 id="三、配置"><a href="#三、配置" class="headerlink" title="三、配置"></a>三、配置</h1><h2 id="在-config-yml-中修改大部份的配置"><a href="#在-config-yml-中修改大部份的配置" class="headerlink" title="在 _config.yml 中修改大部份的配置"></a>在 _config.yml 中修改大部份的配置</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">title</span>		<span class="string">网站标题</span></span><br><span class="line"><span class="attr">subtitle</span>	<span class="string">网站副标题</span></span><br><span class="line"><span class="attr">description</span>	<span class="string">网站描述</span></span><br><span class="line"><span class="attr">author</span>		<span class="string">您的名字</span></span><br><span class="line"><span class="attr">language</span>	<span class="string">网站使用的语言</span></span><br><span class="line"><span class="attr">timezone</span>	<span class="string">网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York, Japan, 和 UTC</span></span><br></pre></td></tr></table></figure></div><p>其中，description 主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author 参数用于主题显示文章的作者。）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELIXIR"><figure class="iseeu highlight /elixir"><table><tr><td class="code"><pre><span class="line">参数			描述			默认值</span><br><span class="line">url			网址	</span><br><span class="line">root			网站根目录	</span><br><span class="line">permalink		文章的 永久链接 格式	<span class="symbol">:year/</span><span class="symbol">:month/</span><span class="symbol">:day/</span><span class="symbol">:title/</span></span><br><span class="line">permalink_defaults	永久链接中各部分的默认值	</span><br><span class="line">pretty_urls		改写 permalink 的值来美化 URL	</span><br><span class="line">pretty_urls.trailing_index	是否在永久链接中保留尾部的 index.html，设置为 <span class="keyword">false</span> 时去除	<span class="keyword">true</span></span><br><span class="line">pretty_urls.trailing_html	是否在永久链接中保留尾部的 .html, 设置为 <span class="keyword">false</span> 时去除 (对尾部的 index.html无效)	<span class="keyword">true</span></span><br></pre></td></tr></table></figure></div><p>比如，一个页面的永久链接是:</p><blockquote><p><a href="http://example.com/foo/bar/index.html" target="_blank" rel="noopener">http://example.com/foo/bar/index.html</a></p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">    <span class="attr">trailing_index:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></div><p>此时页面的永久链接会变为：</p><blockquote><p><a href="http://example.com/foo/bar/" target="_blank" rel="noopener">http://example.com/foo/bar/</a></p></blockquote><p>如果网站存放在子目录中，例如 <a href="http://yoursite.com/blog，则将" target="_blank" rel="noopener">http://yoursite.com/blog，则将</a> url 设为 <a href="http://yoursite.com/blog" target="_blank" rel="noopener">http://yoursite.com/blog</a> 并把 root 设为 /blog/</p><h2 id="覆盖主题配置"><a href="#覆盖主题配置" class="headerlink" title="覆盖主题配置"></a>覆盖主题配置</h2><p>通常情况下，Hexo 主题是一个独立的项目，并拥有一个独立的 _config.yml 配置文件。</p><p>你可以在站点的 _config.yml 配置文件中配置你的主题，这样你就不需要 fork 一份主题并维护主题独立的配置文件。</p><p>以下是一个覆盖主题配置的例子：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="meta"># _config.yml</span></span><br><span class="line"><span class="symbol">theme_config:</span></span><br><span class="line"><span class="symbol">    bio:</span> <span class="string">"My awesome bio"</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># themes/my-theme/_config.yml</span></span><br><span class="line"><span class="symbol">bio:</span> <span class="string">"Some generic bio"</span></span><br><span class="line"><span class="symbol">logo:</span> <span class="string">"a-cool-image.png"</span></span><br></pre></td></tr></table></figure></div><p>最终主题配置的输出是：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attribute">bio</span>: <span class="string">"My awesome bio"</span>,</span><br><span class="line">    logo: <span class="string">"a-cool-image.png"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h1 id="四、指令"><a href="#四、指令" class="headerlink" title="四、指令"></a>四、指令</h1><h3 id="init————————–-gt"><a href="#init————————–-gt" class="headerlink" title="init————————–&gt;"></a>init————————–&gt;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">hexo init [<span class="built_in">folder</span>]</span><br><span class="line">新建一个网站。如果没有设置 <span class="built_in">folder</span> ，Hexo 默认在目前的文件夹建立网站</span><br></pre></td></tr></table></figure></div><h3 id="new————————–-gt"><a href="#new————————–-gt" class="headerlink" title="new————————–&gt;"></a>new————————–&gt;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br><span class="line">新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来</span><br><span class="line">例如：hexo new <span class="string">"post title with whitespace"</span></span><br><span class="line"></span><br><span class="line">参数	描述</span><br><span class="line">-p, --path	自定义新文章的路径</span><br><span class="line">-r, --replace	如果存在同名文章，将其替换</span><br><span class="line">-s, --slug	文章的 Slug，作为新文章的文件名和发布后的 URL</span><br><span class="line">默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 index.md 文件。你可以使用 --path 参数来覆盖上述行为、自行决定文件的目录：</span><br><span class="line"></span><br><span class="line">hexo new<span class="built_in"> page </span>--path about/me <span class="string">"About me"</span></span><br><span class="line">以上命令会创建一个 source/about/me.md 文件，同时 Front Matter 中的 title 为 <span class="string">"About me"</span></span><br><span class="line"></span><br><span class="line">注意！title 是必须指定的！如果你这么做并不能达到你的目的：</span><br><span class="line"></span><br><span class="line">hexo new<span class="built_in"> page </span>--path about/me</span><br><span class="line">此时 Hexo 会创建 source/_posts/about/me.md，同时 me.md 的 Front Matter 中的 title 为 <span class="string">"page"</span>。这是因为在上述命令中，hexo-cli 将<span class="built_in"> page </span>视为指定文章的标题、并采用默认的 layout。</span><br></pre></td></tr></table></figure></div><h3 id="generate————————–-gt"><a href="#generate————————–-gt" class="headerlink" title="generate————————–&gt;"></a>generate————————–&gt;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VERILOG"><figure class="iseeu highlight /verilog"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">generate</span></span><br><span class="line">生成静态文件</span><br><span class="line">该命令可以简写为：	hexo g</span><br><span class="line"></span><br><span class="line">选项	描述</span><br><span class="line">-d, --deploy	文件生成后立即部署网站</span><br><span class="line">-w, --watch	监视文件变动</span><br><span class="line">-b, --bail	生成过程中如果发生任何未处理的异常则抛出异常</span><br><span class="line">-f, --<span class="keyword">force</span>	强制重新生成文件</span><br><span class="line">        Hexo 引入了差分机制，如果 public 目录存在，那么 hexo g 只会重新生成改动的文件。</span><br><span class="line">        使用该参数的效果接近 hexo clean &amp;&amp; hexo <span class="keyword">generate</span></span><br><span class="line">-c, --concurrency	最大同时生成文件的数量，默认无限制</span><br></pre></td></tr></table></figure></div><h3 id="publish————————–-gt"><a href="#publish————————–-gt" class="headerlink" title="publish————————–&gt;"></a>publish————————–&gt;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">hexo publish [layout] <span class="tag">&lt;<span class="name">filename</span>&gt;</span></span><br><span class="line">发表草稿</span><br></pre></td></tr></table></figure></div><h3 id="server————————–-gt"><a href="#server————————–-gt" class="headerlink" title="server————————–&gt;"></a>server————————–&gt;</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">hexo server</span><br><span class="line">启动服务器。默认情况下，访问网址为：http:<span class="string">//localhost</span><span class="function">:4000</span>/</span><br><span class="line">该命令可以简写为：	hexo s</span><br><span class="line"></span><br><span class="line">选项	描述</span><br><span class="line">-p, <span class="params">--port</span>	重设端口</span><br><span class="line">-s, <span class="params">--static</span>	只使用静态文件</span><br><span class="line">-l, <span class="params">--log</span>	启动日记记录，使用覆盖记录格式</span><br></pre></td></tr></table></figure><h3 id="deploy————————–-gt"><a href="#deploy————————–-gt" class="headerlink" title="deploy————————–&gt;"></a>deploy————————–&gt;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VERILOG"><figure class="iseeu highlight /verilog"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line">部署网站</span><br><span class="line">该命令可以简写为：	hexo d</span><br><span class="line"></span><br><span class="line">参数	描述</span><br><span class="line">-g, --<span class="keyword">generate</span>	部署之前预先生成静态文件</span><br></pre></td></tr></table></figure></div><h3 id="render————————–-gt"><a href="#render————————–-gt" class="headerlink" title="render————————–&gt;"></a>render————————–&gt;</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">hexo render &lt;file1&gt; [file2] <span class="string">...</span></span><br><span class="line">渲染文件</span><br><span class="line"></span><br><span class="line">参数	描述</span><br><span class="line">-o, <span class="params">--output</span>	设置输出路径</span><br></pre></td></tr></table></figure><h3 id="migrate————————–-gt"><a href="#migrate————————–-gt" class="headerlink" title="migrate————————–&gt;"></a>migrate————————–&gt;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELM"><figure class="iseeu highlight /elm"><table><tr><td class="code"><pre><span class="line"><span class="title">hexo</span> migrate &lt;<span class="keyword">type</span>&gt;</span><br><span class="line"></span><br><span class="line">从其他博客系统 迁移内容</span><br></pre></td></tr></table></figure></div><h3 id="clean————————–-gt"><a href="#clean————————–-gt" class="headerlink" title="clean————————–&gt;"></a>clean————————–&gt;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">清除缓存文件 db.json 和已生成的静态文件 <span class="built_in">public</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">在某些情况(尤其是更换主题后)，如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令</span><br></pre></td></tr></table></figure></div><h3 id="list————————–-gt"><a href="#list————————–-gt" class="headerlink" title="list————————–&gt;"></a>list————————–&gt;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CPP"><figure class="iseeu highlight /cpp"><table><tr><td class="code"><pre><span class="line">hexo <span class="built_in">list</span> &lt;type&gt;</span><br><span class="line"></span><br><span class="line">列出网站资料</span><br></pre></td></tr></table></figure></div><h3 id="version————————–-gt"><a href="#version————————–-gt" class="headerlink" title="version————————–&gt;"></a>version————————–&gt;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">hexo <span class="built_in">version</span></span><br><span class="line"></span><br><span class="line">显示 Hexo 版本</span><br></pre></td></tr></table></figure></div><h3 id="选项————————–-gt"><a href="#选项————————–-gt" class="headerlink" title="选项————————–&gt;"></a>选项————————–&gt;</h3><h4 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">hexo <span class="comment">--safe</span></span><br><span class="line"></span><br><span class="line">在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行</span><br></pre></td></tr></table></figure></div><h4 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LUA"><figure class="iseeu highlight /lua"><table><tr><td class="code"><pre><span class="line">hexo <span class="comment">--debug</span></span><br><span class="line"></span><br><span class="line">在终端中显示调试信息并记录到 <span class="built_in">debug</span>.<span class="built_in">log</span>。当您碰到问题时，可以尝试用调试模式重新执行一次，并 提交调试信息到 GitHub</span><br></pre></td></tr></table></figure></div><h4 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">hexo <span class="comment">--silent</span></span><br><span class="line">隐藏终端信息</span><br></pre></td></tr></table></figure></div><h4 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">使用 <span class="selector-tag">custom</span><span class="selector-class">.yml</span> 代替默认的 _<span class="selector-tag">config</span><span class="selector-class">.yml</span></span><br><span class="line"><span class="selector-tag">hexo</span> <span class="selector-tag">server</span> <span class="selector-tag">--config</span> <span class="selector-tag">custom</span><span class="selector-class">.yml</span></span><br><span class="line"></span><br><span class="line">使用 <span class="selector-tag">custom</span><span class="selector-class">.yml</span> 和 <span class="selector-tag">custom2</span><span class="selector-class">.json</span>，其中 <span class="selector-tag">custom2</span><span class="selector-class">.json</span> 优先级更高</span><br><span class="line"><span class="selector-tag">hexo</span> <span class="selector-tag">generate</span> <span class="selector-tag">--config</span> <span class="selector-tag">custom</span><span class="selector-class">.yml</span>,<span class="selector-tag">custom2</span><span class="selector-class">.json</span>,<span class="selector-tag">custom3</span><span class="selector-class">.yml</span></span><br><span class="line"></span><br><span class="line">自定义配置文件的路径，指定这个参数后将不再使用默认的 _<span class="selector-tag">config</span><span class="selector-class">.yml</span>。</span><br><span class="line">可以使用一个 <span class="selector-tag">YAML</span> 或 <span class="selector-tag">JSON</span> 文件的路径，也可以使用逗号分隔（无空格）的多个 <span class="selector-tag">YAML</span> 或 <span class="selector-tag">JSON</span> 文件的路径。</span><br><span class="line">例如：</span><br><span class="line">    使用 <span class="selector-tag">custom</span><span class="selector-class">.yml</span> 代替默认的 _<span class="selector-tag">config</span><span class="selector-class">.yml</span></span><br><span class="line">    <span class="selector-tag">hexo</span> <span class="selector-tag">server</span> <span class="selector-tag">--config</span> <span class="selector-tag">custom</span><span class="selector-class">.yml</span></span><br><span class="line"></span><br><span class="line">    使用 <span class="selector-tag">custom</span><span class="selector-class">.yml</span>, <span class="selector-tag">custom2</span><span class="selector-class">.json</span> 和 <span class="selector-tag">custom3</span><span class="selector-class">.yml</span>，其中 <span class="selector-tag">custom3</span><span class="selector-class">.yml</span> 优先级最高，其次是 <span class="selector-tag">custom2</span><span class="selector-class">.json</span></span><br><span class="line">    <span class="selector-tag">hexo</span> <span class="selector-tag">generate</span> <span class="selector-tag">--config</span> <span class="selector-tag">custom</span><span class="selector-class">.yml</span>,<span class="selector-tag">custom2</span><span class="selector-class">.json</span>,<span class="selector-tag">custom3</span><span class="selector-class">.yml</span></span><br><span class="line"></span><br><span class="line">当指定了多个配置文件以后，<span class="selector-tag">Hexo</span> 会按顺序将这部分配置文件合并成一个 _<span class="selector-tag">multiconfig</span><span class="selector-class">.yml</span>。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 <span class="selector-tag">YAML</span> 和 <span class="selector-tag">JSON</span> 文件。</span><br></pre></td></tr></table></figure></div><h4 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">hexo <span class="comment">--draft</span></span><br><span class="line">显示 source/_drafts 文件夹中的草稿文章</span><br></pre></td></tr></table></figure></div><h4 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h4><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">hexo <span class="params">--cwd</span> <span class="string">/path/to/cwd</span></span><br><span class="line">自定义当前工作目录（Current working directory）的路径</span><br></pre></td></tr></table></figure><h1 id="五、关于ssh密钥"><a href="#五、关于ssh密钥" class="headerlink" title="五、关于ssh密钥"></a>五、关于ssh密钥</h1><h2 id="1、检查现有密钥"><a href="#1、检查现有密钥" class="headerlink" title="1、检查现有密钥"></a>1、检查现有密钥</h2><p>① 打开 Git Bash。</p><p>② 输入 ls -al ~/.ssh 以查看是否存在现有 SSH 密钥：</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">ls</span> -al ~<span class="string">/.ssh</span></span><br><span class="line"><span class="comment"># Lists the files in your .ssh directory, if they exist</span></span><br></pre></td></tr></table></figure><p>③ 检查目录列表以查看是否已经有 SSH 公钥。 默认情况下，公钥的文件名是以下之一：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">id_rsa</span><span class="selector-class">.pub</span></span><br><span class="line"><span class="selector-tag">id_ecdsa</span><span class="selector-class">.pub</span></span><br><span class="line"><span class="selector-tag">id_ed25519</span><span class="selector-class">.pub</span></span><br></pre></td></tr></table></figure></div><h2 id="2、github"><a href="#2、github" class="headerlink" title="2、github"></a>2、github</h2><h3 id="生成新-SSH-密钥"><a href="#生成新-SSH-密钥" class="headerlink" title="生成新 SSH 密钥"></a>生成新 SSH 密钥</h3><p>① 打开 Git Bash。</p><p>② 粘贴下面的文本（替换为您的 GitHub 电子邮件地址）。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LASSO"><figure class="iseeu highlight /lasso"><table><tr><td class="code"><pre><span class="line">$ ssh<span class="params">-keygen</span> <span class="params">-t</span> rsa <span class="params">-b</span> <span class="number">4096</span> <span class="params">-C</span> <span class="string">"your_email@example.com"</span></span><br><span class="line"></span><br><span class="line">    这将创建以所提供的电子邮件地址为标签的新 SSH 密钥。</span><br><span class="line"></span><br><span class="line"> Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa key <span class="built_in">pair</span>.</span><br></pre></td></tr></table></figure></div><p>③ 提示“Enter a file in which to save the key（输入要保存密钥的文件）”时，按 Enter 键。 这将接受默认文件位置。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">Enter <span class="keyword">a</span> <span class="built_in">file</span> <span class="keyword">in</span> which <span class="built_in">to</span> save <span class="keyword">the</span> key (/c/Users/you/.ssh/id_rsa):[Press enter]</span><br></pre></td></tr></table></figure></div><p>④ 在提示时输入安全密码。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): [<span class="keyword">Type</span> <span class="type">a </span>passphrase]</span><br><span class="line"></span><br><span class="line">Enter same passphrase again: [<span class="keyword">Type</span> <span class="type">passphrase </span>again]</span><br></pre></td></tr></table></figure></div><h2 id="3、gitee"><a href="#3、gitee" class="headerlink" title="3、gitee"></a>3、gitee</h2><h3 id="生成-添加新-SSH-密钥"><a href="#生成-添加新-SSH-密钥" class="headerlink" title="生成/添加新 SSH 密钥"></a>生成/添加新 SSH 密钥</h3><p>码云提供了基于SSH协议的Git服务，在使用SSH协议访问仓库仓库之前，需要先配置好账户/仓库的SSH公钥。</p><p>可以按如下命令来生成 sshkey:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"xxxxx@xxxxx.com"</span>  </span><br><span class="line"># Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa <span class="built_in">key</span> pair...</span><br></pre></td></tr></table></figure></div><p>按照提示完成三次回车，即可生成 ssh key。通过查看 ~/.ssh/id_rsa.pub 文件内容，获取到你的 public key</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">cat ~<span class="regexp">/.ssh/i</span>d_rsa.pub</span><br><span class="line"></span><br><span class="line"><span class="comment"># ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6eNtGpNGwstc....</span></span><br></pre></td></tr></table></figure></div><p>复制生成后的 ssh key，通过仓库主页 「管理」-&gt;「部署公钥管理」-&gt;「添加部署公钥」 ，添加生成的 public key 添加到仓库中。</p><p>添加后，在终端（Terminal）中输入</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">ssh -T git@gitee.com</span><br><span class="line">首次使用需要确认并添加主机到本机SSH可信列表。若返回:</span><br><span class="line"> Hi XXX! You<span class="symbol">'ve</span> successfully authenticated, but Gitee.com does <span class="keyword">not</span> provide shell <span class="keyword">access</span>. </span><br><span class="line">则证明添加成功。</span><br></pre></td></tr></table></figure></div><h2 id="4、coding"><a href="#4、coding" class="headerlink" title="4、coding"></a>4、coding</h2><h3 id="生成新-SSH-密钥-1"><a href="#生成新-SSH-密钥-1" class="headerlink" title="生成新 SSH 密钥"></a>生成新 SSH 密钥</h3><p>打开命令行终端输入 ssh-keygen -m PEM -t rsa -b 4096 -C “<a href="mailto:your.email@example.com">your.email@example.com</a>“( 邮箱)，连续点击 Enter 键即可。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b <span class="number">4096</span> -C <span class="string">"your.email@example.com"</span></span><br><span class="line"><span class="comment"># Creates a new ssh key, using the provided email as a label</span></span><br><span class="line"><span class="comment"># Generating public/private rsa key pair.</span></span><br><span class="line">Enter <span class="built_in">file</span> <span class="keyword">in</span> which <span class="built_in">to</span> save <span class="keyword">the</span> key (/Users/you/.ssh/id_rsa): [Press enter] <span class="comment"> // 推荐使用默认地址</span></span><br><span class="line"></span><br><span class="line">Enter passphrase (<span class="literal">empty</span> <span class="keyword">for</span> no passphrase):  <span class="comment"> //此处点击 Enter 键即可，也可以填写密码，填写密码后每次使用 SSH 方式推送代码时都会要求输入密码，由于这个 Key 也不是用于军事目的，所以也无需设置密码。</span></span><br><span class="line"></span><br><span class="line">若需要使用多个 SSH 密钥对（您可能同时在多个代码托管平台工作），在提示“Enter <span class="built_in">file</span> <span class="keyword">in</span> which <span class="built_in">to</span> save <span class="keyword">the</span> key” 时，输入一个新的文件名称就不会覆盖默认的密钥对。</span><br><span class="line"></span><br><span class="line">成功之后显示如下信息：</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /Users/you/.ssh/id_rsa.</span><br><span class="line"><span class="comment"># Your public key has been saved in /Users/you/.ssh/id_rsa.pub.</span></span><br><span class="line"><span class="comment"># The key fingerprint is:</span></span><br><span class="line"><span class="comment"># 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your.email@example.com</span></span><br></pre></td></tr></table></figure></div><h3 id="添加公钥"><a href="#添加公钥" class="headerlink" title="添加公钥"></a>添加公钥</h3><p>CODING 提供账户 SSH 公钥和项目 SSH 公钥设置。本质上账户公钥和部署公钥是一样的，只是关联的方式不同。</p><p>一个 SSH 公钥文件，如果和 CODING 账户关联，便称为账户 SSH 公钥，配置后拥有账户下所有项目的读写权限；如果和某一个项目关联，则称为部署公钥，配置后默认拥有该项目的只读权限。</p><h4 id="添加账户公钥"><a href="#添加账户公钥" class="headerlink" title="添加账户公钥"></a>添加账户公钥</h4><p>① 在终端输入 open ~/.ssh，用文本编辑器打开 id_rsa.pub 文件（此处是生成公钥的默认名称，如果生成公钥时采用了其他名称，打开相对应的文件即可），复制全部内容。</p><p>② 登录 CODING ，点击右上角【个人设置】，选择菜单【SSH 公钥】，点击【新增公钥】按钮。</p><p>③ 将第一步中复制的内容填写到【公钥内容】一栏，公钥名称按需填写即可。</p><p>④ 设定公钥有效期，可选择具体日期或设置永久有效。</p><p>⑤ 点击【添加】，然后输入账户密码即可成功添加公钥。</p><p>⑥ 完成后在命令行测试，首次建立链接会要求信任主机。命令 ：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NGINX"><figure class="iseeu highlight /nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T git<span class="variable">@e</span>.coding.net</span><br></pre></td></tr></table></figure></div><h4 id="添加部署公钥"><a href="#添加部署公钥" class="headerlink" title="添加部署公钥"></a>添加部署公钥</h4><p>① 在终端输入 open ~/.ssh，用文本编辑器打开 id_deploy.pub 文件（此处部署公钥名称为 id_deploy.pub，在生成部署公钥的时候完全可以自定义名称），复制全部内容。</p><p>② 登录 CODING，进入目标项目，点击【代码仓库】-&gt; 【仓库设置】-&gt; 【部署公钥】-&gt;【新建部署公钥】。</p><p>③ 将第一步中复制的内容填写到【公钥内容】一栏，公钥名称自定义。</p><p>④ 点击【新建】，然后输入账户密码即可成功添加部署公钥</p><p>⑤ 部署公钥默认拥有该项目的只读权限，如果需要获取推送权限，请勾选部署公钥设置里的【授予推送权限】。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux命令</title>
    <url>/post/82734d8.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:24 GMT+0800 (GMT+08:00) --><h1 id="linux常用命令："><a href="#linux常用命令：" class="headerlink" title="linux常用命令："></a>linux常用命令：</h1><h4 id="小技巧："><a href="#小技巧：" class="headerlink" title="小技巧："></a>小技巧：</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">上下箭头可以选择历史的命令</span><br><span class="line"><span class="literal">tab</span>键可以自动补全文件名</span><br></pre></td></tr></table></figure></div><h3 id="1-pwd-查看当前所在位置"><a href="#1-pwd-查看当前所在位置" class="headerlink" title="1.pwd  查看当前所在位置"></a>1.pwd 查看当前所在位置</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">查看当前所在位置，显示的是绝对路径</span><br></pre></td></tr></table></figure></div><h3 id="2-ls-查询目录中的内容"><a href="#2-ls-查询目录中的内容" class="headerlink" title="2.ls  查询目录中的内容"></a>2.ls 查询目录中的内容</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAML"><figure class="iseeu highlight /haml"><table><tr><td class="code"><pre><span class="line">颜色说明：</span><br><span class="line">    蓝色的为文件夹  白色为文件    </span><br><span class="line">    红色为压缩文件     绿色代表该文件拥有最高权限（777）</span><br><span class="line"></span><br><span class="line">ls 【选项】 【文件或者目录】</span><br><span class="line">    选项：</span><br><span class="line">        -<span class="ruby">a  显示所有文件，包括隐藏文件</span></span><br><span class="line"><span class="ruby">        -l  显示详细信息</span></span><br><span class="line"><span class="ruby">        -d  查看目录属性</span></span><br><span class="line"></span><br><span class="line"><span class="ruby">ll  以行形式查看文件详细内容，包括隐藏文件</span></span><br></pre></td></tr></table></figure></div><h3 id="3-ctrl-L-Ctrl-C（Ctrl-Z）"><a href="#3-ctrl-L-Ctrl-C（Ctrl-Z）" class="headerlink" title="3.ctrl+L  Ctrl+C（Ctrl+Z）"></a>3.ctrl+L Ctrl+C（Ctrl+Z）</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TP"><figure class="iseeu highlight /tp"><table><tr><td class="code"><pre><span class="line">ctrl+L    清屏</span><br><span class="line">Ctrl+C（Ctrl+<span class="keyword">Z</span>）   强制退出</span><br></pre></td></tr></table></figure></div><h3 id="4-cd-移动到某个位置"><a href="#4-cd-移动到某个位置" class="headerlink" title="4.cd 移动到某个位置"></a>4.cd 移动到某个位置</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> 【选项】 【文件或者目录】</span><br><span class="line">    <span class="string">..</span>  返回到上一级目录</span><br><span class="line">    /   返回到根目录</span><br><span class="line"></span><br><span class="line">xxx 进入到xxx文件里</span><br><span class="line">    相对路径：参照当前所在目录进行查询</span><br><span class="line">    绝对路径：从根目录开始指定，一级一级的递归查找，在任何目录下都可以进入指定目录</span><br></pre></td></tr></table></figure><h3 id="5-date-查看当前服务器时间"><a href="#5-date-查看当前服务器时间" class="headerlink" title="5.date  查看当前服务器时间"></a>5.date 查看当前服务器时间</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">date</span></span><br></pre></td></tr></table></figure></div><h3 id="6-ifconfig-查看自己的ip地址"><a href="#6-ifconfig-查看自己的ip地址" class="headerlink" title="6.ifconfig  查看自己的ip地址"></a>6.ifconfig 查看自己的ip地址</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARMASM"><figure class="iseeu highlight /armasm"><table><tr><td class="code"><pre><span class="line">在DOS中使用 ipconfig查看自己的<span class="built_in">IP</span>地址</span><br></pre></td></tr></table></figure></div><h3 id="7-ping-检测网络连通"><a href="#7-ping-检测网络连通" class="headerlink" title="7.ping  检测网络连通"></a>7.ping 检测网络连通</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOIT"><figure class="iseeu highlight /autoit"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ping</span> 【主机名/域名】</span><br><span class="line">例如：<span class="built_in">ping</span>  www.baidu.com</span><br></pre></td></tr></table></figure></div><h3 id="8-mkdir创建目录-touch创建文件"><a href="#8-mkdir创建目录-touch创建文件" class="headerlink" title="8.mkdir创建目录   touch创建文件"></a>8.mkdir创建目录 touch创建文件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span></span><br><span class="line">    创建单独目录（也可以创建多个目录，中间用空格隔开）</span><br><span class="line">    <span class="built_in">mkdir</span> 文件名</span><br><span class="line"></span><br><span class="line">touch</span><br><span class="line">    创建文件 （也可以创建多个文件，中间用空格隔开）</span><br><span class="line">    touch 文件名</span><br></pre></td></tr></table></figure></div><h3 id="9-rm-删除"><a href="#9-rm-删除" class="headerlink" title="9.rm 删除"></a>9.rm 删除</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">rm</span> 【选项】 【文件】 （也可以删除多个文件，中间用空格隔开）</span><br><span class="line">    选项：</span><br><span class="line">        -r 删除目录 （也可以删除多个目录，中间用空格隔开）</span><br><span class="line">        -f 强制</span><br><span class="line"></span><br><span class="line"><span class="keyword">rmdir</span></span><br><span class="line">    删除空目录 （也可以删除多个目录，中间用空格隔开）</span><br><span class="line">    <span class="keyword">rmdir</span> 【目录名】</span><br><span class="line">    <span class="keyword">rm</span> -rf  【文件名】</span><br><span class="line">    强制删除文件夹或者目录 （也可以删除多个目录，中间用空格隔开）</span><br><span class="line">    《===禁术！慎重使用===》</span><br></pre></td></tr></table></figure></div><h3 id="10-cp-复制"><a href="#10-cp-复制" class="headerlink" title="10.cp  复制"></a>10.cp 复制</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">cp 【原文件的目录】 【目标文件的目录】</span><br><span class="line">cp   -r 【原文件夹的目录】 【目标文件的目录】</span><br><span class="line"></span><br><span class="line">同时复制多个文件和文件夹：</span><br><span class="line">    cp -r ../aaa/&#123;<span class="number">123</span>,<span class="number">123.</span>zip,<span class="number">333</span>,<span class="number">6666</span>&#125; ./</span><br></pre></td></tr></table></figure></div><h3 id="11-mv-剪切或者改名"><a href="#11-mv-剪切或者改名" class="headerlink" title="11.mv  剪切或者改名"></a>11.mv 剪切或者改名</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COS"><figure class="iseeu highlight /cos"><table><tr><td class="code"><pre><span class="line"><span class="keyword">mv</span> 【原文件目录】 【目标文件目录】</span><br><span class="line">注意：原文件目录和目标目录不在同一目录下为剪切，否则为改名</span><br></pre></td></tr></table></figure></div><h3 id="12-vim-编辑文件内容"><a href="#12-vim-编辑文件内容" class="headerlink" title="12.vim  编辑文件内容"></a>12.vim 编辑文件内容</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">vim</span> <span class="string">【文件名】</span></span><br><span class="line"><span class="attr">vi</span>	<span class="string">【文件名】</span></span><br><span class="line">    <span class="meta">输入i</span> <span class="string">进入到insert状态，不想输入时按esc键退出编辑状态</span></span><br><span class="line">    <span class="attr">输入：（冒号）进入到命令页面，可以输入</span></span><br><span class="line">        <span class="attr">w</span>	<span class="string">保存文件，但不退出</span></span><br><span class="line">        <span class="meta">w!</span>	<span class="string">强制保存，但不退出</span></span><br><span class="line">        <span class="attr">q</span>	<span class="string">不保存文件，直接退出</span></span><br><span class="line">        <span class="meta">q!</span>	<span class="string">不保存文件，强制退出</span></span><br><span class="line">        <span class="attr">wq</span>	<span class="string">保存并退出</span></span><br><span class="line">        <span class="meta">wq!</span>	<span class="string">强制保存并退出</span></span><br></pre></td></tr></table></figure></div><h3 id="13-cat-查看文件内容"><a href="#13-cat-查看文件内容" class="headerlink" title="13.cat  查看文件内容"></a>13.cat 查看文件内容</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">cat</span> <span class="string">【文件名】</span></span><br><span class="line"><span class="attr">more</span> <span class="string">【文件名】(文件内容篇幅较长时，可能显示不完整，按回车往下翻一行，按空格翻页）ctrl+z退出</span></span><br></pre></td></tr></table></figure></div><h3 id="14-chmod-赋权"><a href="#14-chmod-赋权" class="headerlink" title="14.chmod  赋权"></a>14.chmod 赋权</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">chmod 【赋权级别】 【文件名】</span><br><span class="line">    例如：chmod  <span class="number">664</span>  a.txt</span><br><span class="line"></span><br><span class="line">chmod  -R  <span class="number">777</span>  abc  (R要大写)</span><br><span class="line">    加R是递归，对该文件和其子文件统一赋权</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    r(Read，读取)：对文件而言，具有读取文件内容的权限；对目录来说，具有浏览目录的权限。</span><br><span class="line">    w(Write,写入)：对文件而言，具有新增,修改,删除文件内容的权限；对目录来说，具有新建，删除，修改，移动目录内文件的权限。</span><br><span class="line">    x(eXecute，执行)：对文件而言，具有执行文件的权限；对目录来说该用户具有进入目录的权限。</span><br><span class="line">        <span class="number">1</span>、目录的只读访问不允许使用cd进入目录，必须要有执行的权限才能进入。</span><br><span class="line">        <span class="number">2</span>、只有执行权限只能进入目录，不能看到目录下的内容，要想看到目录下的文件名和目录名，需要可读权限。</span><br><span class="line">        <span class="number">3</span>、一个文件能不能被删除，主要看该文件所在的目录对用户是否具有写权限，如果目录对用户没有写权限，则该目录下的所有文件都不能被删除，文件所有者除外</span><br><span class="line">        <span class="number">4</span>、目录的w位不设置，即使你拥有目录中某文件的w权限也不能写该文件</span><br><span class="line">    新建文件默认权限<span class="number">777</span>，新建目录默认权限<span class="number">666</span>。在unix或者linux中，每创建一个文件或者目录时，这个文件或者目录都具有一个默认的权限，比如目录<span class="number">755</span>，文件<span class="number">644</span>，这些默认权限是通过“umask”权限掩码控制的。一般默认的umask值为<span class="number">022</span>，其最终效果就是新创建的目录权限为<span class="number">755</span>，文件权限为<span class="number">644</span>。所以只要修改了用户的umask值，就可以控制默认权限。</span><br></pre></td></tr></table></figure></div><h3 id="15-netstat-查看当前端口号"><a href="#15-netstat-查看当前端口号" class="headerlink" title="15.netstat  查看当前端口号"></a>15.netstat 查看当前端口号</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">显示详细的网络状况		netstat -a</span><br><span class="line">显示当前户籍UDP连接状况		netstat -nu</span><br><span class="line">显示UDP端口号的使用情况		netstat -apu</span><br><span class="line"></span><br><span class="line">    -a或<span class="params">--all</span> 显示所有连线中的Socket。</span><br><span class="line">    -A&lt;网络类型&gt;或--&lt;网络类型&gt; 列出该网络类型连线中的相关地址。</span><br><span class="line">    -c或<span class="params">--continuous</span> 持续列出网络状态。</span><br><span class="line">    -C或<span class="params">--cache</span> 显示路由器配置的快取信息。</span><br><span class="line">    -e或<span class="params">--extend</span> 显示网络其他相关信息。</span><br><span class="line">    -F或<span class="params">--fib</span> 显示FIB。</span><br><span class="line">    -g或<span class="params">--groups</span> 显示多重广播功能群组组员名单。</span><br><span class="line">    -h或<span class="params">--help</span> 在线帮助。</span><br><span class="line">    -i或<span class="params">--interfaces</span> 显示网络界面信息表单。</span><br><span class="line">    -l或<span class="params">--listening</span> 显示监控中的服务器的Socket。</span><br><span class="line">    -M或<span class="params">--masquerade</span> 显示伪装的网络连线。</span><br><span class="line">    -n或<span class="params">--numeric</span> 直接使用IP地址，而不通过域名服务器。</span><br><span class="line">    -N或<span class="params">--netlink</span>或<span class="params">--symbolic</span> 显示网络硬件外围设备的符号连接名称。</span><br><span class="line">    -o或<span class="params">--timers</span> 显示计时器。</span><br><span class="line">    -p或<span class="params">--programs</span> 显示正在使用Socket的程序识别码和程序名称。</span><br><span class="line">    -r或<span class="params">--route</span> 显示Routing Table。</span><br><span class="line">    -s或<span class="params">--statistics</span> 显示网络工作信息统计表。</span><br><span class="line">    -t或<span class="params">--tcp</span> 显示TCP传输协议的连线状况。</span><br><span class="line">    -u或<span class="params">--udp</span> 显示UDP传输协议的连线状况。</span><br><span class="line">    -v或<span class="params">--verbose</span> 显示指令执行过程。</span><br><span class="line">    -V或<span class="params">--version</span> 显示版本信息。</span><br><span class="line">    -w或<span class="params">--raw</span> 显示RAW传输协议的连线状况。</span><br><span class="line">    -x或<span class="params">--unix</span> 此参数的效果和指定<span class="string">"-A unix"</span>参数相同。</span><br><span class="line">    <span class="params">--ip</span>或<span class="params">--inet</span> 此参数的效果和指定<span class="string">"-A inet"</span>参数相同。</span><br></pre></td></tr></table></figure><h3 id="16-ps-ef-查看进程号"><a href="#16-ps-ef-查看进程号" class="headerlink" title="16.ps -ef   查看进程号"></a>16.ps -ef 查看进程号</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">Pid：进程号</span><br><span class="line"></span><br><span class="line">Kill  <span class="number">-9</span> 进程号</span><br><span class="line">    强制杀死某个进程</span><br></pre></td></tr></table></figure></div><h3 id="17-su-切换为超级用户"><a href="#17-su-切换为超级用户" class="headerlink" title="17.su  切换为超级用户"></a>17.su 切换为超级用户</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="keyword">exit</span> 退出超级用户</span><br></pre></td></tr></table></figure></div><h3 id="18-Top-动态查看系统资源占有率"><a href="#18-Top-动态查看系统资源占有率" class="headerlink" title="18.Top  动态查看系统资源占有率"></a>18.Top 动态查看系统资源占有率</h3><h3 id="19-Find-根据文件名查找指定文件"><a href="#19-Find-根据文件名查找指定文件" class="headerlink" title="19.Find  根据文件名查找指定文件"></a>19.Find 根据文件名查找指定文件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">Find</span> 【搜索目录】【搜索类型】 【搜索文件名】</span><br><span class="line">    例如：  <span class="builtin-name">Find</span>  /  -name  aaa</span><br></pre></td></tr></table></figure></div><h3 id="20-less-查看静态日志文件"><a href="#20-less-查看静态日志文件" class="headerlink" title="20.less  查看静态日志文件"></a>20.less 查看静态日志文件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">less [文件名]</span><br><span class="line">    q    退出</span><br><span class="line">    /    搜索</span><br><span class="line">    空格 向下翻页</span><br><span class="line">   <span class="built_in"> Page </span>up  向上翻页</span><br><span class="line">   <span class="built_in"> Page </span>down 向下翻页</span><br><span class="line">    Enter  向下一行</span><br><span class="line">    y   向上一行</span><br></pre></td></tr></table></figure></div><h3 id="21-tail-查看动态日志文件"><a href="#21-tail-查看动态日志文件" class="headerlink" title="21.tail  查看动态日志文件"></a>21.tail 查看动态日志文件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">tail <span class="number">-100f</span> [文件名] </span><br><span class="line">    <span class="number">100</span>指显示内容的行数，可以任意更改</span><br><span class="line">ctrl+z退出</span><br></pre></td></tr></table></figure></div><h3 id="22-grep-过滤"><a href="#22-grep-过滤" class="headerlink" title="22.grep  过滤"></a>22.grep 过滤</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">一般<span class="keyword">grep</span>前面要加一个管道符“|”</span><br><span class="line">netstat -<span class="keyword">an</span> | <span class="keyword">grep</span> <span class="number">3306</span>   //查看所有<span class="number">3306</span>端口使用情况·</span><br><span class="line">tail  -<span class="number">100</span><span class="keyword">f</span>   <span class="keyword">abc</span>.txt | <span class="keyword">grep</span> xxx</span><br><span class="line">less  <span class="keyword">abc</span>.txt  |  <span class="keyword">grep</span> xxx</span><br></pre></td></tr></table></figure></div><h3 id="23、rz上传文件-sz下载文件"><a href="#23、rz上传文件-sz下载文件" class="headerlink" title="23、rz上传文件  sz下载文件"></a>23、rz上传文件 sz下载文件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">rz</span> <span class="string">上传文件     rz 回车，选择文件进行上传</span></span><br><span class="line"><span class="attr">sz</span> <span class="string">【文件名】   下载文件</span></span><br></pre></td></tr></table></figure></div><h3 id="24-zip-压缩文件"><a href="#24-zip-压缩文件" class="headerlink" title="24.zip  压缩文件"></a>24.zip 压缩文件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">zip</span> 压缩文件名 源文件      备注：压缩文件</span><br><span class="line">    <span class="selector-tag">zip</span> <span class="selector-tag">-r</span> 压缩文件名  源目录  备注：压缩目录</span><br><span class="line">    <span class="selector-tag">unzip</span> 解压缩文件  备注：解压缩<span class="selector-class">.zip</span>文件</span><br><span class="line">    <span class="selector-tag">unzip</span> <span class="selector-tag">-d</span> 需要解压到的文件夹 源文件</span><br><span class="line"><span class="selector-tag">tar</span></span><br><span class="line">    <span class="selector-tag">tar</span> <span class="selector-tag">-zcvf</span> 压缩包名<span class="selector-class">.tar</span><span class="selector-class">.gz</span> 源文件     备注：压缩为<span class="selector-tag">-tar</span><span class="selector-class">.gz</span>格式的文件</span><br><span class="line">    <span class="selector-tag">tar</span> <span class="selector-tag">-zxvf</span> 压缩包名<span class="selector-class">.tar</span><span class="selector-class">.gz</span>            备注：解压缩<span class="selector-tag">-tar</span><span class="selector-class">.gz</span>格式的文件</span><br><span class="line">    <span class="selector-tag">tar</span> <span class="selector-tag">-zxvf</span> 压缩包名<span class="selector-class">.tar</span><span class="selector-class">.gz</span> <span class="selector-tag">-C</span>  要解压到的路径  备注：解压缩<span class="selector-tag">-tar</span><span class="selector-class">.gz</span>格式的文件到指定目录</span><br></pre></td></tr></table></figure></div><h3 id="25-ln命令-在文件之间创建链接"><a href="#25-ln命令-在文件之间创建链接" class="headerlink" title="25.ln命令  在文件之间创建链接"></a>25.ln命令 在文件之间创建链接</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line">该命令在文件之间创建链接。这种操作实际上是给系统中已有的某个文件指定另外一个可用于访问它的名称。对于这个新的文件名，我们可以为之指定不同的访问权限，以控制对信息的共享和安全性的问题。</span><br><span class="line"></span><br><span class="line"><span class="built_in">ln</span>的链接分软链接和硬链接两种：</span><br><span class="line">    softlink   <span class="meta">#软连接</span></span><br><span class="line">    hardlink   <span class="meta">#硬连接</span></span><br><span class="line">    <span class="number">1</span>、软链接就是：“<span class="built_in">ln</span> –s 源文件 目标文件”，只会在选定的位置上生成一个文件的镜像，不会占用磁盘空间，类似与windows的快捷方式。</span><br><span class="line">    <span class="number">2</span>、硬链接<span class="built_in">ln</span>源文件目标文件，没有参数-s， 会在选定的位置上生成一个和源文件大小相同的文件，无论是软链接还是硬链接，文件都保持同步变化。</span><br><span class="line">    </span><br><span class="line"><span class="built_in">ln</span> –s 源文件 目标文件</span><br><span class="line"><span class="built_in">ln</span>   源文件 目标文件</span><br><span class="line"><span class="built_in">ln</span> -s / /home/sns</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>如何搭建adb环境</title>
    <url>/post/6b29ae9c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="一、真机通过adb连接电脑"><a href="#一、真机通过adb连接电脑" class="headerlink" title="一、真机通过adb连接电脑"></a>一、真机通过adb连接电脑</h1><p>准备:需要一个安卓手机+usb数据线</p><p>1、用数据线把电脑和手机连接起来。Usb插口尽量插在后面的usb口上。</p><p>2、如果手机上出现如下图片，点确认</p><p><img src="https://s1.ax1x.com/2020/08/09/aT0KoD.png" alt="aT0KoD.png"></p><p>如果没有出现，先进行第三步</p><p>3、打开手机设置，找到开发者选项</p><p>有些手机需要连续点击自己的版本号，才能出现这个选项，具体根据机型不同有一定变化，可自行百度</p><p><img src="https://s1.ax1x.com/2020/08/09/aT0Uw8.png" alt="aT0Uw8.png"></p><p>4、点击开发者选项，打开usb调试</p><p><img src="https://s1.ax1x.com/2020/08/09/aT0BWj.png" alt="aT0BWj.png"></p><p>5、此时可选择拔掉数据线，重新插拔。看是否出现第二步。</p><p>如果出现，则进行第六步，如果没有出现则进行重复以上步骤，或者检查数据线，或者检查usb插口。</p><p>6、电脑上安装adb环境</p><p>如果你已经下载了airtest，则无需再次安装，因为airtest内置了adb环境。</p><p>如果你电脑没有下载airtest，则需安装platform-tools（安卓工具调试包），直接百度下载，下载后解压到自己任意目录里即可。</p><p><img src="https://s1.ax1x.com/2020/08/09/aTDrq0.png" alt="aTDrq0.png"></p><p>7、百度下载adb驱动程序（ADB Driver Installer），进行解压。</p><p>可以和上面的放在同一个文件夹里</p><p><img src="https://s1.ax1x.com/2020/08/09/aTrKoT.png" alt="aTrKoT.png"></p><p>8、双击运行adb环境检查工具</p><p>如果没有任何反应，则说明你当前电脑上adb环境是好的。如果出现了下载，则等待下载完成自动安装即可。</p><p><img src="https://s1.ax1x.com/2020/08/09/aTr8SJ.png" alt="aTr8SJ.png"></p><p>9、添加环境变量</p><p><img src="https://s1.ax1x.com/2020/08/09/aTszUf.png" alt="aTszUf.png"></p><p>可以尝试使用adb，这个命令，检查自己电脑上adb环境是否ok。</p><p>如果出现一堆帮助信息，则证明adb安装成功</p><p><img src="https://s1.ax1x.com/2020/08/09/aTyP2Q.png" alt="aTyP2Q.png"></p><p>10、此时已经可以使用adb命令了</p><p>11、如果此时想在airtest里面控制手机</p><p>先点击刷新adb。出现我们的设备信息后，点击connect。注意，正常的状态应该是device状态。</p><p><img src="https://s1.ax1x.com/2020/08/09/aTy1M9.png" alt="aTy1M9.png"></p><p>注意：在刷新adb的过程中，可能你的手机上还会出现调试提醒，记得点击同意。</p><p>如果一直找不到你的手机设备信息，可以选择重新插usb线。</p><p>在连接时可能会出现让你下载两个应用，正常同意安装即可。</p><p>一个是键盘插件，一个是框架插件。</p><p>Yosemite是输入法软件，如果导致手机无法正常打字，将该软件卸载掉即可，但是在自动化过程中，必须保留该软件。</p><p><img src="https://s1.ax1x.com/2020/08/09/aTyrqI.png" alt="aTyrqI.png"></p><h1 id="二、模拟器通过adb连接电脑"><a href="#二、模拟器通过adb连接电脑" class="headerlink" title="二、模拟器通过adb连接电脑"></a>二、模拟器通过adb连接电脑</h1><p>市场上有大量的模拟器，可以模拟手机，有各种手机可选</p><p>1、打开模拟器</p><p>2、在cmd中输入：<code>adb devices</code></p><p>此时出现的列表中找不到对应的安卓设备</p><p>3、在cmd中输入：<code>adb connect 127.0.0.1:7555</code>（7555为模拟器对应的端口号,此处为网易MUMU模拟器）</p><p><img src="https://s1.ax1x.com/2020/08/09/aT6QFf.png" alt="aT6QFf.png"></p><p>4、再次输入：<code>adb devices</code>，列表中找到对应模拟器表面连接成功</p><h1 id="三、Airtest连接模拟器"><a href="#三、Airtest连接模拟器" class="headerlink" title="三、Airtest连接模拟器"></a>三、Airtest连接模拟器</h1><p>airtest内置的有adb</p><p>1、首先，与手机类似，需要打开模拟器的 开发者选项-允许USB调试 。</p><p>部分模拟器可能需要找到 设置-关于手机-版本号 点击多次后才能打开开发者选项</p><p>2、打开AirtestIDE设备窗内的 <code>远程设备连接</code> ，输入<code>adb connect 127.0.0.1:62001</code> 后(该端口号与模拟器品牌相关)，点击 <code>连接</code> 按钮。不同模拟器使用不同的端口号：</p><p><img src="https://s1.ax1x.com/2020/08/09/aT6QFf.png" alt="aT6QFf.png"></p><p>3.设备列表中可见 <code>127.0.0.1:7555</code> 设备，先点击<code>Connect</code>按钮旁的下拉菜单，勾选<code>Javacap</code>模式后，再点击 <code>Conenct</code> 按钮（如果没有勾选<code>Javacap</code>模式，会导致看到的手机画面是黑屏）。如果还是未能连接成功，可以补充勾选其他选项再连。</p><p><img src="https://s1.ax1x.com/2020/08/09/aT64fO.png" alt="aT64fO.png"></p><p>4.以下就是连接好了</p><p><img src="https://s1.ax1x.com/2020/08/09/aTcpcQ.png" alt="aTcpcQ.png"></p><p>补充.：部分模拟器相关问题</p><ol><li><p>连模拟器时，需要先勾选 <code>use javacap</code> 选项后再点击 <code>connect</code> 按钮连接，才能避免看到的屏幕是黑屏。</p></li><li><p>在部分版本的模拟器上，可能勾选了 <code>use javacap</code> 后依然连接失败，此时可以尝试再勾选 <code>use adb orientation</code> 选项后再重新连接即可。</p></li><li><p>部分品牌模拟器，可能出现无法正常点击的现象，可以尝试勾选 <code>use ADBtouch</code> 后再连接。</p></li><li><p>部分品牌模拟器，可能无法调用<code>yosemite</code>输入法，导致 <code>text()</code> 接口无法输入文字，可以先确认模拟器设置中，硬件-物理键盘 是否被勾选了，取消勾选后再重新尝试即可。如果依然无法输入，可以考虑换用<code>poco</code>来输入，或是直接使用adb指令输入英文内容</p></li></ol><h1 id="四、adb通过wifi连接android设备"><a href="#四、adb通过wifi连接android设备" class="headerlink" title="四、adb通过wifi连接android设备"></a>四、adb通过wifi连接android设备</h1><p>adb支持usb连接模式和tcpip连接模式，我们可以用tcpip模式通过wifi无线连接adb。</p><p>具体连接步骤如下：</p><p>1、确认本机PC没有任何adb设备连接，包括模拟器和usb连接</p><p>查看当前PC端连接有多少设备：</p><p><code>adb devices</code>命令后，列表显示为空；</p><p>2、将远程android设备接入Wi-Fi，并查看其IP地址</p><p>查看android设备的IP地址，这里有三种方式查看Android设备IP。</p><ol><li><p>设置－关于手机－状态信息－IP地址中查看</p></li><li><p>设置－WLAN-点击当前链接上的Wi-Fi查看IP</p></li></ol><p>例如：设置—〉无线或网络—〉WLAN设置—〉查看当前连接Wi-Fi的IP地址（部分机型需要按menu键并选择“高级”选项—〉IP地址）</p><ol start="3"><li>通过adb命令查看设备IP地址：<code>adb shell netcfg</code></li></ol><p>前提：（设备已经和PC建立了usb连接）</p><p>确保电脑和Android设备连接在同一个WIFI网络环境（同一个局域网下，进行通信）</p><p>3、本机<code>cmd</code>命令下执行<code>ping</code> android设备的IP</p><p><img src="https://s1.ax1x.com/2020/08/09/aTguPf.png" alt="aTguPf.png"></p><p>如果ping成功，说明可以连接</p><p>4、执行 <code>adb connect</code></p><p>知道设备IP地址之后，就可以用<code>adb connect</code>命令通过IP和端口号连接adb。</p><p><img src="https://s1.ax1x.com/2020/08/09/aTgMRS.png" alt="aTgMRS.png"></p><p>如果显示连接成功，则可继续执行后面的操作</p><p>5、执行 <code>adb connect</code>不成功，提示：connect拒绝</p><p><img src="https://s1.ax1x.com/2020/08/09/aT2IpT.png" alt="aT2IpT.png"></p><p>用<code>adb tcpip</code>模式重启adb</p><p><code>adb tcpip 5555</code></p><p><img src="https://s1.ax1x.com/2020/08/09/aT2qB9.png" alt="aT2qB9.png"></p><p>连接成功，提示：<code>connected to 10.129.49.143:5555</code></p><p><code>adb connect ip</code>连接成功以后可以执行原来usb连接时的所有命令</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>软件测试</tag>
        <tag>adb</tag>
        <tag>Android</tag>
        <tag>Airtest</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins+RobotFramework配置定时任务</title>
    <url>/post/760eb130.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="1、安装插件"><a href="#1、安装插件" class="headerlink" title="1、安装插件"></a>1、安装插件</h1><p>Manage Jenkins → Manage Plugins</p><p>→ 安装robot插件 <code>Robot Framework plugin</code></p><p>→ 安装Groovy插件 <code>Groovy</code></p><p><img src="https://s1.ax1x.com/2020/08/09/a7kuxx.png" alt="a7kuxx.png"></p><h1 id="2、新建Item"><a href="#2、新建Item" class="headerlink" title="2、新建Item"></a>2、新建Item</h1><p>任务名称：test（自定义，必填）<br>选择自由风格的项目：<code>Freestyle project</code><br>点<code>&lt;确定&gt;</code></p><p><img src="https://s1.ax1x.com/2020/08/09/a7kdQP.png" alt="a7kdQP.png"></p><h1 id="3、配置"><a href="#3、配置" class="headerlink" title="3、配置"></a>3、配置</h1><p>① 构建触发器：</p><p>勾选<code>Build periodically</code><br>日程表：* * * * * 表示任务在什么时候触发执行，不写的可以用*表示</p><p><img src="https://s1.ax1x.com/2020/08/09/a7k6ij.png" alt="a7k6ij.png"></p><p>② 构建：</p><p><code>Execute Windows batch command</code> 执行windows批处理命令</p><p>命令： <code>robot -d 报告生成报告地址 项目路径</code></p><p>或者： <code>pybot -d 报告生成报告地址 项目路径</code></p><p><img src="https://s1.ax1x.com/2020/08/09/a7kHY9.png" alt="a7kHY9.png"></p><p>再次增加构建步骤：</p><p><code>Execute system Groovy script</code></p><p><code>Groovy Script</code> ： <code>System.setProperty(“hudson.model.DirectoryBrowserSupport.CSP”,””)</code></p><p><img src="https://s1.ax1x.com/2020/08/09/a7kXy6.png" alt="a7kXy6.png"></p><p>③ 构建后操作：</p><p><code>Publish RobotFramework test results</code></p><p><code>Directory of Robot output</code>：<code>报告地址</code></p><p><img src="https://s1.ax1x.com/2020/08/09/a7AA6P.png" alt="a7AA6P.png"></p><p>点<code>高级</code></p><p><img src="https://s1.ax1x.com/2020/08/09/a7Alpn.png" alt="a7Alpn.png"></p><p>最后点<code>确定</code>即可</p><h1 id="4、可能出现的问题"><a href="#4、可能出现的问题" class="headerlink" title="4、可能出现的问题"></a>4、可能出现的问题</h1><p>点击日志出现：</p><p><img src="https://s1.ax1x.com/2020/08/09/a7PNR0.png" alt="a7PNR0.png"></p><p>官方说明：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">Jenkins 1.641 / Jenkins 1.625.3 introduce the Content-Security-Policy header <span class="keyword">to</span> static files served by Jenkins (specifically, DirectoryBrowserSupport). This header is <span class="builtin-name">set</span> <span class="keyword">to</span> a very restrictive<span class="built_in"> default </span><span class="builtin-name">set</span> of permissions <span class="keyword">to</span> protect Jenkins<span class="built_in"> users </span><span class="keyword">from</span> malicious HTML/JS files <span class="keyword">in</span> workspaces, /userContent, <span class="keyword">or</span> archived artifacts.</span><br><span class="line"></span><br><span class="line">jenkins增加的内容安全策略，默认情况下，是禁止执行javascript,css等资源的。</span><br></pre></td></tr></table></figure></div><p>解决方法：</p><p>找到jenkins的安装目录下的<code>jenkins.xml</code>，修改此文件</p><p>修改前：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;arguments&gt;-Xrs -Xmx256m -Dhudson.<span class="attribute">lifecycle</span>=hudson.lifecycle.WindowsServiceLifecycle -jar <span class="string">"%BASE%\jenkins.war"</span> <span class="attribute">--httpPort</span>=8080&lt;/arguments&gt;</span><br></pre></td></tr></table></figure></div><p>修改后：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;arguments&gt;-Xrs -Xmx256m -Dhudson.model.DirectoryBrowserSupport.CSP= -Dhudson.<span class="attribute">lifecycle</span>=hudson.lifecycle.WindowsServiceLifecycle -jar <span class="string">"%BASE%\jenkins.war"</span> <span class="attribute">--httpPort</span>=8080 <span class="attribute">--webroot</span>=<span class="string">"%BASE%\war"</span>&lt;/arguments&gt;</span><br></pre></td></tr></table></figure></div><p>一定要重启jenkins，最好能再执行一下测试脚本，让它生成新的报告文件就行了。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>软件测试</tag>
        <tag>RobotFramework</tag>
        <tag>jdk</tag>
        <tag>Jenkins</tag>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins环境搭建</title>
    <url>/post/8103562c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="一、Jenkins介绍"><a href="#一、Jenkins介绍" class="headerlink" title="一、Jenkins介绍"></a>一、Jenkins介绍</h1><p>Jenkins是一个开源软件项目，是基于Java开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。</p><h1 id="二、Jenkins的功能"><a href="#二、Jenkins的功能" class="headerlink" title="二、Jenkins的功能"></a>二、Jenkins的功能</h1><p>Jenkins功能包括2项：持续的软件版本发布/测试项目、监控外部调用执行的工作。</p><h1 id="三、环境安装"><a href="#三、环境安装" class="headerlink" title="三、环境安装"></a>三、环境安装</h1><p>第一种方法：（不使用tomcat服务的方法）</p><p>使用<code>jenkins.war</code>来安装jenkins的：（即：将jenkins做为windows程序服务来安装使用）</p><p>1、下载<code>jenkins.war</code>,然后cmd到<code>.war</code>文件存放的目录：输入命令安装： <code>java -jar jenkins.war</code></p><p>2、完成后，浏览器访问：<code>localhost:8080</code> （如果要修改端口： <code>java -jar jenkins.jar--httpPort=8081</code> 命令行安装时直接指定端口）</p><p>第二种方法：（最常用的： <code>jdk+tomcat+jenkins</code>)</p><h2 id="3-1、安装jdk"><a href="#3-1、安装jdk" class="headerlink" title="3.1、安装jdk"></a>3.1、安装jdk</h2><p>因为Jenkins是基于java开发的，所以前提就是要安装好java环境</p><p><a href="https://www.oracle.com/java/technologies/javase-jdk14-downloads.html" target="_blank" rel="noopener" class="LinkCard">jdk官网下载地址</a></p><p>下载安装完jdk之后</p><p>在系统变量中添加三个变量：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">JAVA_HOME   ：  D:\Java\jdk1<span class="number">.8</span><span class="number">.0</span>_191  </span><br><span class="line">（参数值为jdk的安装路径）</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAGGERSCRIPT"><figure class="iseeu highlight /taggerscript"><table><tr><td class="code"><pre><span class="line">Path  ：   <span class="variable">%JAVA_HOME%</span><span class="symbol">\b</span>in;<span class="variable">%JAVA_HOME%</span><span class="symbol">\j</span>re<span class="symbol">\b</span>in;</span><br><span class="line">（一般系统中自带Path变量名，只需要将该变量值追加进去即可）</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">CLASSPATH   ：   .;%JAVA_HOME%\<span class="class"><span class="keyword">lib</span>;</span>%JAVA_HOME%\<span class="class"><span class="keyword">lib</span>\<span class="title">tools</span>.<span class="title">jar</span> （最前面的  .  也要带）</span></span><br></pre></td></tr></table></figure></div><p>添加完环境变量之后必须点击全部的确定</p><p>之后，在命令行输入 <code>java -version</code></p><p>提示：</p><p><img src="https://s1.ax1x.com/2020/07/28/aETGKf.png" alt="aETGKf.png"></p><p>即为成功！！</p><h2 id="3-2、安装tomcat"><a href="#3-2、安装tomcat" class="headerlink" title="3.2、安装tomcat"></a>3.2、安装tomcat</h2><p><a href="http://tomcat.apache.org/" target="_blank" rel="noopener" class="LinkCard">tomcat官网下载地址</a></p><p>选择一个版本的tomcat下载即可</p><p><img src="https://s1.ax1x.com/2020/08/09/a7CQE9.png" alt="a7CQE9.png"></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/" class="LinkCard">清华大学开源软件镜像站下载地址</a></p><p><img src="https://s1.ax1x.com/2020/08/09/a7C0UA.png" alt="a7C0UA.png"></p><p>下载完成后，进行解压安装tomcat即可；</p><p>配置环境变量：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">新建CATALINA_HOME，变量值为tomcat安装目录</span><br><span class="line"></span><br><span class="line">path中添加：   %CATALINA_HOME%\<span class="class"><span class="keyword">lib</span>;</span>%CATALINA_HOME%\bin</span><br></pre></td></tr></table></figure></div><p>注意：</p><ul><li><p>有需要的话，这里要注意的是，因为tomcat服务默认端口8080，可以自己设置一个靠后较大数字的（如9090,8888,9999等等），避免端口占用导致服务启不了</p></li><li><p>在tomcat安装目录下的conf文件夹下找到server.xml，去修改端口即可</p></li></ul><h2 id="3-3、下载Jenkins"><a href="#3-3、下载Jenkins" class="headerlink" title="3.3、下载Jenkins"></a>3.3、下载Jenkins</h2><p><a href="https://www.jenkins.io" target="_blank" rel="noopener" class="LinkCard">jenkins官网</a></p><p>确定自己要安装的环境，然后点击下载（这里下载windows的）</p><p><img src="https://s1.ax1x.com/2020/08/09/a7CfEj.png" alt="a7CfEj.png"></p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/windows/" target="_blank" rel="noopener" class="LinkCard">清华大学开源软件镜像站下载地址</a></p><p>下载完成后 ，安装时可以指定路径到<code>tomcat/webapps/</code>目录下。</p><p>如果下载的是<code>jenkins.war</code>包直接放到tomcat/webapps/目录下即可。</p><p>然后进入 <code>tomcat/bin/</code>目录下启动 <code>startup.bat</code>，浏览器访问：<code>localhost:8080/jenkins/</code>就可以了</p><h2 id="3-4、浏览器访问Jenkins"><a href="#3-4、浏览器访问Jenkins" class="headerlink" title="3.4、浏览器访问Jenkins"></a>3.4、浏览器访问Jenkins</h2><p>浏览器初次访问时要耐心等待，jenkins会不断的启动及刷新界面。刷新出来后，只要显示解锁界面就基本成功了（后续按提示操作即可）</p><p>如果是初次安装Jenkins，在输入管理员初始密码这一步的时候，关闭浏览器，或者停掉服务</p><p><img src="https://s1.ax1x.com/2020/08/09/a7CqrF.png" alt="a7CqrF.png"></p><p>更改Jenkins插件下载地址：</p><p>进入Jenkins安装目录（ 我的Jenkins安装目录为<code>E:\Jenkins</code> ），进行下面三步操作：</p><p>第一步：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line">将<span class="attribute">E</span>:\Jenkins\hudson.model.UpdateCenter.xml中的url改为：</span><br><span class="line"></span><br><span class="line"><span class="attribute">http</span>:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span></span><br></pre></td></tr></table></figure></div><p>第二步：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">将E:\Jenkins\updates\default.json文件中，</span><br><span class="line"></span><br><span class="line"> http:<span class="regexp">//</span>www.google.com 替换成 http:<span class="regexp">//</span>www.baidu.com </span><br><span class="line"></span><br><span class="line"> http:<span class="regexp">//u</span>pdates.jenkins-ci.org<span class="regexp">/download 替换成 https:/</span><span class="regexp">/mirrors.tuna.tsinghua.edu.cn/</span>jenkins</span><br></pre></td></tr></table></figure></div><p>第三步：解决Jenkins禁止执行javascript,css等资源</p><p><img src="https://s1.ax1x.com/2020/08/09/a7PNR0.png" alt="a7PNR0.png"></p><p>官方说明：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">Jenkins 1.641 / Jenkins 1.625.3 introduce the Content-Security-Policy header <span class="keyword">to</span> static files served by Jenkins (specifically, DirectoryBrowserSupport). This header is <span class="builtin-name">set</span> <span class="keyword">to</span> a very restrictive<span class="built_in"> default </span><span class="builtin-name">set</span> of permissions <span class="keyword">to</span> protect Jenkins<span class="built_in"> users </span><span class="keyword">from</span> malicious HTML/JS files <span class="keyword">in</span> workspaces, /userContent, <span class="keyword">or</span> archived artifacts.</span><br><span class="line"></span><br><span class="line">jenkins增加的内容安全策略，默认情况下，是禁止执行javascript,css等资源的。</span><br></pre></td></tr></table></figure></div><p>解决方法：</p><p>找到jenkins的安装目录下的<code>jenkins.xml</code>，修改此文件</p><p>修改前：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;arguments&gt;-Xrs -Xmx256m -Dhudson.<span class="attribute">lifecycle</span>=hudson.lifecycle.WindowsServiceLifecycle -jar <span class="string">"%BASE%\jenkins.war"</span> <span class="attribute">--httpPort</span>=8080&lt;/arguments&gt;</span><br></pre></td></tr></table></figure></div><p>修改后：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;arguments&gt;-Xrs -Xmx256m -Dhudson.model.DirectoryBrowserSupport.CSP= -Dhudson.<span class="attribute">lifecycle</span>=hudson.lifecycle.WindowsServiceLifecycle -jar <span class="string">"%BASE%\jenkins.war"</span> <span class="attribute">--httpPort</span>=8080 <span class="attribute">--webroot</span>=<span class="string">"%BASE%\war"</span>&lt;/arguments&gt;</span><br></pre></td></tr></table></figure></div><p>一定要重启jenkins，最好能再执行一下测试脚本，让它生成新的报告文件就行了。</p><p>修改完以后，重启Jenkins服务再输入密码，继续安装，<strong>速度贼快</strong>。</p><p><img src="https://s1.ax1x.com/2020/08/09/a7PrdJ.png" alt="a7PrdJ.png"></p><p>如果直接进入了Jenkins中，可以选择从磁盘中重新加载，然后重新配置，下载推荐的插件</p><p><img src="https://s1.ax1x.com/2020/08/09/a7PWQK.png" alt="a7PWQK.png"></p><h2 id="3-5、Jenkins技巧：如何启动、停止、重启、重载Jenkins"><a href="#3-5、Jenkins技巧：如何启动、停止、重启、重载Jenkins" class="headerlink" title="3.5、Jenkins技巧：如何启动、停止、重启、重载Jenkins"></a>3.5、Jenkins技巧：如何启动、停止、重启、重载Jenkins</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GROOVY"><figure class="iseeu highlight /groovy"><table><tr><td class="code"><pre><span class="line">Jenkins地址		<span class="string">http:</span><span class="comment">//localhost:8080/</span></span><br><span class="line"></span><br><span class="line">启动Jenkins		java -jar jenkins.war 启动jenkins服务器</span><br><span class="line">重启Jenkins		浏览器输入：	<span class="string">http:</span><span class="comment">//localhost:8080/restart</span></span><br><span class="line">重载Jenkins配置信息      浏览器输入：	<span class="string">http:</span><span class="comment">//localhost:8080/reload</span></span><br><span class="line">停止Jenkins服务器	浏览器输入：	<span class="string">http:</span><span class="comment">//localhost:8080/exit</span></span><br></pre></td></tr></table></figure></div><h2 id="3-6、改变Jenkins工作目录"><a href="#3-6、改变Jenkins工作目录" class="headerlink" title="3.6、改变Jenkins工作目录"></a>3.6、改变Jenkins工作目录</h2><p>如上，直接安装jenkins到<code>tomcat/webapps/</code>目录下后，jenkins的工作目录会默认放到<code>C:\Users\Administrator\.jenkins</code>目录下</p><p>如果想更改工作目录：需要在系统环境变量里面新增一个：<code>JENKINS_HOME</code>环境变量，然后需要完全重启tomcat。否则不会生效（后续不能轻易更换，否则之前的jenkins所有配置都会失效。）</p><p>在windows下修改默认工作目录的方法：（为什么要修改？这就像一个应用运行久了，什么东西都会往这里塞，自定义一个目录更好管理）</p><p>如：我自己新建一个jenkins的工作目录<code>D:/jenkins</code>，然后配置环境变量时：<code>JENKINS_HOME：D:/jenkins</code></p><p>配置完成后，一定要完全重启tomcat服务器。（完成）</p><p>—上述安装都是最简单的在windows上直接安装使用jenkins，通过启动tomcat就可方便启动jenkins使用的方法</p><h2 id="3-7、重启tomcat"><a href="#3-7、重启tomcat" class="headerlink" title="3.7、重启tomcat"></a>3.7、重启tomcat</h2><p>可能会出现报错：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">unable <span class="keyword">to</span> open the<span class="built_in"> service </span>‘tomcat9’</span><br></pre></td></tr></table></figure></div><p>解决方法：</p><p>进入到<code>tomcat\bin</code>目录下，执行 <code>service.bat install</code> 命令</p><p><img src="https://s1.ax1x.com/2020/08/09/a7iB1P.png" alt="a7iB1P.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>软件测试</tag>
        <tag>jdk</tag>
        <tag>Jenkins</tag>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>本地搭建MySQL</title>
    <url>/post/57ed617.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="一：下载"><a href="#一：下载" class="headerlink" title="一：下载"></a>一：下载</h1><p>下载地址：</p><p><a href="https://downloads.mysql.com/archives/community/" target="_blank" rel="noopener" class="LinkCard">MySQL下载</a></p><p><img src="https://s1.ax1x.com/2020/07/16/UBflDg.png" alt="UBflDg.png"></p><p>下载完成后正常解压</p><p><img src="https://s1.ax1x.com/2020/07/16/UBfavT.png" alt="UBfavT.png"></p><h1 id="二：创建配置文件"><a href="#二：创建配置文件" class="headerlink" title="二：创建配置文件"></a>二：创建配置文件</h1><p>注意！！！！！</p><p>正常解压的文件里面是没有 <code>my.ini</code> 文件的，需要自己手动创建，并将以下内容放到文件中（不用管中文还是什么，直接复制到创建的<code>my.ini</code>文件中即可，<code>basedir</code>参数要相应的改成自己<code>mysql</code>的安装路径，<code>datadir</code>参数也要改成相应的路径，<code>datadir</code>参数最后面一定要加 <code>//Data</code>，单斜杠也可以，但有些电脑会报错，最好是双斜杠，注意是 <code>/</code> 而不是<code>\</code> ）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"><span class="attribute">default-character-set</span>=utf8</span><br><span class="line"> </span><br><span class="line">[mysqld]</span><br><span class="line"><span class="comment"># 设置3306端口</span></span><br><span class="line">port = 3306</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"><span class="attribute">basedir</span>=E:\mysql-8.0.15-winx64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"><span class="attribute">datadir</span>=E:\mysql-8.0.15-winx64//Data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"><span class="attribute">max_connections</span>=20</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line"><span class="attribute">character-set-server</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决 group  by	报错 ERROR 1055 (42000)</span></span><br><span class="line"><span class="attribute">sql_mode</span>=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"><span class="attribute">default-storage-engine</span>=INNODB</span><br></pre></td></tr></table></figure></div><h1 id="三：配置环境变量"><a href="#三：配置环境变量" class="headerlink" title="三：配置环境变量"></a>三：配置环境变量</h1><p>上述配置完成后，需要配置环境变量</p><p>“我的电脑” – &gt; 鼠标右击，选择属性–&gt;”高级系统设置” – &gt;”环境变量”；</p><p>新建变量名：<code>MYSQL_PATH</code>，变量值：<code>F:\FileRecv\mysql-8.0.15-winx64</code>（<strong>mysql的安装路径</strong>）,然后确定；</p><p><img src="https://s1.ax1x.com/2020/07/16/UBhQRx.png" alt="UBhQRx.png"></p><p>配置 <code>path</code> 中 <code>mysql bin</code> 路径 <code>%MYSQL_HOME%\bin</code></p><p><img src="https://s1.ax1x.com/2020/07/16/UBhYee.png" alt="UBhYee.png"></p><h1 id="四：安装及配置服务"><a href="#四：安装及配置服务" class="headerlink" title="四：安装及配置服务"></a>四：安装及配置服务</h1><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><p>以<strong>管理员</strong>身份打开cmd,进入到mysql的安装目录下的<code>bin</code>目录下；</p><p>执行：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BRAINFUCK"><figure class="iseeu highlight /brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">mysqld</span> --<span class="comment">initialize</span> --<span class="comment">console</span></span><br></pre></td></tr></table></figure></div><p>执行完成后，会显示root账号的初始密码: <code>root@localhost: 后面的“&gt;6u_e9I;,pE=”</code>就是mysql的默认密码，<strong>在修改密码之前，这个初始密码要记录下来，因为安装完成后登陆时需要用到</strong>。</p><p>可能会出现的报错：</p><blockquote><p>在运行某软件或编译程序时提示缺少、找不到<code>vcruntime140_1.dll</code>等类似提示</p></blockquote><p>1、如果在运行某软件或编译程序时提示缺少、找不到<code>vcruntime140_1.dll</code>等类似提示，可将从脚本之家下载来的<code>vcruntime140_1.dll</code>拷贝到指定目录即可(一般是system系统目录或放到软件同级目录里面)，或者重新添加文件引用。</p><p>2、载下来文件之后，先将其解压(一般都是rar压缩包), 然后根据系统的情况选择<code>X86</code>/<code>X64</code>，<code>X86</code>为<code>32</code>位电脑，<code>X64</code>为<code>64</code>位电脑。默认都是支持<code>32</code>位系统的</p><p><a href="http://wangdun.jb51.net:81/dll/2019/vcruntime140_1_jb51.rar" target="_blank" rel="noopener" class="LinkCard">vcruntime140_1.dll下载文件</a></p><p>3、根据软件情况选择文件版本。此步骤比较复杂，如果是Windows的dll文件，</p><ul><li><p>版本号以5.0开头的或含有 nt 一般是windows2000的文件。</p></li><li><p>版本号以5.1开头的或含有 xp、xpsp1、xpsp2、xpsp3 信息的一般是windowsXP的文件。</p></li><li><p>版本号以6.0开头的或含有 longhorn、vista 信息的一般是windowsVista的文件。</p></li><li><p>版本号以6.1开头的或含有 win7 信息的一般是windows7的文件。</p></li><li><p>如果不是windows的dll文件，则需要灵活查看版本号、描述、网友提供的信息、以及相关dll的版本号去判断。</p></li></ul><p>4、直接拷贝该文件到系统目录里：</p><ol><li><p><code>Windows 95/98/Me</code>系统，将<code>vcruntime140_1.dll</code>复制到<code>C:\Windows\System</code>目录下。</p></li><li><p><code>Windows NT/2000</code>系统，将<code>vcruntime140_1.dll</code>复制到<code>C:\WINNT\System32</code>目录下。</p></li><li><p><code>Windows XP/WIN7/win10</code>系统(64位系统对应64位dll文件，32位系统对应32位dll文件)，将<code>vcruntime140_1.dll</code>复制到<code>C:\Windows\System32</code>目录下。</p></li></ol><p>5、打开”<code>开始-运行-输入regsvr32 vcruntime140_1.dll</code>“，回车即可解决。</p><p><strong>以下操作均要以管理员的身份且需要在mysql的bin目录下执行，可以避免其他类型的报错！！</strong></p><p>安装mysql服务</p><p>在mysql安装目录下的bin目录下执行命令：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">mysqld <span class="comment">--install</span></span><br></pre></td></tr></table></figure></div><p>安装成功后提示：<code>Service successfully installed</code>.</p><p>注意！可能会有这样的提示：</p><ul><li>报错一：</li></ul><blockquote><p><code>Install/Remove of the Service Denied!</code></p></blockquote><p>这样报错的原因是没有以管理员身份进入cmd</p><ul><li>报错二：</li></ul><blockquote><p><code>The service already exists! The current server installed: &quot;E:\chrome xz\mysql-8.0.15-winx64\mysql-8.0.15-winx64\bin\mysqld&quot; MySQL</code></p></blockquote><p>Mysql没有卸载干净</p><p>卸载mysql的命令：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line">sc <span class="keyword">delete</span> mysql</span><br></pre></td></tr></table></figure></div><h2 id="配置mysql"><a href="#配置mysql" class="headerlink" title="配置mysql"></a>配置mysql</h2><p>在mysql安装目录的bin目录下执行：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BRAINFUCK"><figure class="iseeu highlight /brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">mysqld</span> --<span class="comment">initialize</span>--<span class="comment">insecure</span></span><br></pre></td></tr></table></figure></div><p>回车后再执行：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">mysqld <span class="comment">--initialize</span></span><br></pre></td></tr></table></figure></div><p>这时，会在mysql的安装目录下生成一个<code>Data</code>文件夹（Date文件夹是储存mysql数据的文件夹）；</p><p><img src="https://s1.ax1x.com/2020/07/16/UB5qR1.png" alt="UB5qR1.png"></p><h1 id="五：进入数据库及修改密码"><a href="#五：进入数据库及修改密码" class="headerlink" title="五：进入数据库及修改密码"></a>五：进入数据库及修改密码</h1><p>启动mysql服务：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DOS"><figure class="iseeu highlight /dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> mysql</span><br></pre></td></tr></table></figure></div><p>（补充：服务停止命令：<code>net stop mysql</code>）</p><p>在mysql安装目录下的bin目录下执行命令：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EBNF"><figure class="iseeu highlight /ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">mysql -u root -p</span></span><br></pre></td></tr></table></figure></div><p>这时会提醒你输入password,录入前面记录下来的初始密码，直接回车；显示welcome,表示登陆成功</p><p>最后重置一下密码，方便以后去登录，直接执行以下sql语句:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">ALTER<span class="built_in"> USER </span><span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'新密码'</span>;</span><br></pre></td></tr></table></figure></div><p>修改一个你能记得住的密码！！！！！</p><h1 id="六：退出"><a href="#六：退出" class="headerlink" title="六：退出"></a>六：退出</h1><p>退出mysql：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="keyword">exit</span>  回车</span><br></pre></td></tr></table></figure></div><p>MySQL服务停止命令：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line">net <span class="built_in">stop</span> mysql</span><br></pre></td></tr></table></figure></div><p><strong>后续登录都要以管理员的身份且需要在mysql的bin目录下执行</strong></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL命令</title>
    <url>/post/1069a098.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="一、管理MySQL的命令"><a href="#一、管理MySQL的命令" class="headerlink" title="一、管理MySQL的命令"></a>一、管理MySQL的命令</h1><h2 id="1、use-数据库名"><a href="#1、use-数据库名" class="headerlink" title="1、use 数据库名;"></a>1、use 数据库名;</h2><p>选择要操作的Mysql数据库，使用该命令后所有Mysql命令都只针对该数据库。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> 数据库名;</span><br></pre></td></tr></table></figure></div><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">use</span> <span class="title">test</span>;</span><br><span class="line">Database changed</span><br></pre></td></tr></table></figure></div><h2 id="2、show-databases"><a href="#2、show-databases" class="headerlink" title="2、show databases;"></a>2、show databases;</h2><p>列出 MySQL 数据库管理系统的数据库列表。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br></pre></td></tr></table></figure></div><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| test               |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">4 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure></div><h2 id="3、显示表"><a href="#3、显示表" class="headerlink" title="3、显示表"></a>3、显示表</h2><h3 id="3-1、show-tables"><a href="#3-1、show-tables" class="headerlink" title="3.1、show tables;"></a>3.1、show tables;</h3><p>显示指定数据库的所有表，使用该命令前需要使用 use 命令来选择要操作的数据库。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure></div><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; use test;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">| Tables<span class="emphasis">_in_</span>test |</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">| students       |</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">1 row in set (0.14 sec)</span><br></pre></td></tr></table></figure></div><h2 id="3-2、show-columns-from-students"><a href="#3-2、show-columns-from-students" class="headerlink" title="3.2、show columns from students;"></a>3.2、show columns from students;</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">columns</span> <span class="keyword">from</span>  数据表;</span><br></pre></td></tr></table></figure></div><p>显示数据表的属性，属性类型，主键信息 ，是否为 NULL，默认值等其他信息。</p><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; show columns from students;</span><br><span class="line"><span class="code">+-------+</span>----------<span class="code">+------+</span>-----<span class="code">+---------+</span>-------+</span><br><span class="line">| Field | Type     | Null | Key | Default | Extra |</span><br><span class="line"><span class="code">+-------+</span>----------<span class="code">+------+</span>-----<span class="code">+---------+</span>-------+</span><br><span class="line">| id    | int      | YES  |     | NULL    |       |</span><br><span class="line">| name  | char(10) | YES  |     | NULL    |       |</span><br><span class="line">| class | char(10) | YES  |     | NULL    |       |</span><br><span class="line"><span class="code">+-------+</span>----------<span class="code">+------+</span>-----<span class="code">+---------+</span>-------+</span><br><span class="line">3 rows in set (0.06 sec)</span><br></pre></td></tr></table></figure></div><h3 id="3-3、show-index-from-students"><a href="#3-3、show-index-from-students" class="headerlink" title="3.3、show index from students;"></a>3.3、show index from students;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">index</span> <span class="keyword">from</span>  数据表;</span><br></pre></td></tr></table></figure></div><p>显示数据表的详细索引信息，包括PRIMARY KEY（主键）。</p><p>例：</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">mysql&gt; show index from two;</span><br><span class="line">+<span class="params">-------</span>+<span class="params">------------</span>+<span class="params">----------</span>+<span class="params">--------------</span>+<span class="params">-------------</span>+<span class="params">-----------</span>+<span class="params">-------------</span>+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">------</span>+<span class="params">------------</span>+<span class="params">---------</span>+<span class="params">---------------</span>+<span class="params">---------</span>+<span class="params">------------</span>+</span><br><span class="line">| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |</span><br><span class="line">+<span class="params">-------</span>+<span class="params">------------</span>+<span class="params">----------</span>+<span class="params">--------------</span>+<span class="params">-------------</span>+<span class="params">-----------</span>+<span class="params">-------------</span>+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">------</span>+<span class="params">------------</span>+<span class="params">---------</span>+<span class="params">---------------</span>+<span class="params">---------</span>+<span class="params">------------</span>+</span><br><span class="line">| two   |          0 | PRIMARY  |            1 | id          | A         |           3 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |</span><br><span class="line">+<span class="params">-------</span>+<span class="params">------------</span>+<span class="params">----------</span>+<span class="params">--------------</span>+<span class="params">-------------</span>+<span class="params">-----------</span>+<span class="params">-------------</span>+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">------</span>+<span class="params">------------</span>+<span class="params">---------</span>+<span class="params">---------------</span>+<span class="params">---------</span>+<span class="params">------------</span>+</span><br><span class="line">1 row in <span class="keyword">set</span> <span class="params">(0.07 sec)</span></span><br></pre></td></tr></table></figure><h3 id="3-4、show-table-status-from-数据库名"><a href="#3-4、show-table-status-from-数据库名" class="headerlink" title="3.4、show table status from 数据库名;"></a>3.4、show table status from 数据库名;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> <span class="keyword">from</span> 数据库名;</span><br></pre></td></tr></table></figure></div><p>显示数据库中所有表的信息</p><p>例：</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">mysql&gt; show table status from test;</span><br><span class="line">+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">------</span>+<span class="params">----------------</span>+<span class="params">-------------</span>+<span class="params">-------------------</span>+<span class="params">--------------</span>+<span class="params">-----------</span>+<span class="params">----------------</span>+<span class="params">---------------------</span>+<span class="params">---------------------</span>+<span class="params">------------</span>+<span class="params">-----------------</span>+<span class="params">----------</span>+<span class="params">----------------</span>+<span class="params">---------</span>+</span><br><span class="line">| Name     | Engine | Version | Row_format | Rows | Avg_row_length | Data_length | Max_data_length   | Index_length | Data_free | Auto_increment | Create_time         | Update_time         | Check_time | Collation       | Checksum | Create_options | Comment |</span><br><span class="line">+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">------</span>+<span class="params">----------------</span>+<span class="params">-------------</span>+<span class="params">-------------------</span>+<span class="params">--------------</span>+<span class="params">-----------</span>+<span class="params">----------------</span>+<span class="params">---------------------</span>+<span class="params">---------------------</span>+<span class="params">------------</span>+<span class="params">-----------------</span>+<span class="params">----------</span>+<span class="params">----------------</span>+<span class="params">---------</span>+</span><br><span class="line">| students | MyISAM |      10 | Fixed      |    5 |             65 |         390 | 18295873486192639 |         1024 |        65 |              1 | 2020-06-13 15<span class="function">:00</span><span class="function">:45</span> | 2020-06-15 09<span class="function">:14</span><span class="function">:57</span> | NULL       | utf8_general_ci |     NULL |                |         |</span><br><span class="line">+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">------</span>+<span class="params">----------------</span>+<span class="params">-------------</span>+<span class="params">-------------------</span>+<span class="params">--------------</span>+<span class="params">-----------</span>+<span class="params">----------------</span>+<span class="params">---------------------</span>+<span class="params">---------------------</span>+<span class="params">------------</span>+<span class="params">-----------------</span>+<span class="params">----------</span>+<span class="params">----------------</span>+<span class="params">---------</span>+</span><br><span class="line">1 row in <span class="keyword">set</span> <span class="params">(0.27 sec)</span></span><br></pre></td></tr></table></figure><h3 id="3-5、show-table-status-from-test-like-‘stu-’"><a href="#3-5、show-table-status-from-test-like-‘stu-’" class="headerlink" title="3.5、show table status from test like ‘stu%’;"></a>3.5、show table status from test like ‘stu%’;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">like</span> <span class="string">'stu%'</span>;</span><br></pre></td></tr></table></figure></div><p>显示数据库 test 中，表名以stu开头的表的信息</p><p>例：</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">mysql&gt; show table status from test like 'stu%';</span><br><span class="line">+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">------</span>+<span class="params">----------------</span>+<span class="params">-------------</span>+<span class="params">-------------------</span>+<span class="params">--------------</span>+<span class="params">-----------</span>+<span class="params">----------------</span>+<span class="params">---------------------</span>+<span class="params">---------------------</span>+<span class="params">------------</span>+<span class="params">-----------------</span>+<span class="params">----------</span>+<span class="params">----------------</span>+<span class="params">---------</span>+</span><br><span class="line">| Name     | Engine | Version | Row_format | Rows | Avg_row_length | Data_length | Max_data_length   | Index_length | Data_free | Auto_increment | Create_time         | Update_time         | Check_time | Collation       | Checksum | Create_options | Comment |</span><br><span class="line">+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">------</span>+<span class="params">----------------</span>+<span class="params">-------------</span>+<span class="params">-------------------</span>+<span class="params">--------------</span>+<span class="params">-----------</span>+<span class="params">----------------</span>+<span class="params">---------------------</span>+<span class="params">---------------------</span>+<span class="params">------------</span>+<span class="params">-----------------</span>+<span class="params">----------</span>+<span class="params">----------------</span>+<span class="params">---------</span>+</span><br><span class="line">| students | MyISAM |      10 | Fixed      |    5 |             65 |         390 | 18295873486192639 |         1024 |        65 |              1 | 2020-06-13 15<span class="function">:00</span><span class="function">:45</span> | 2020-06-15 09<span class="function">:14</span><span class="function">:57</span> | NULL       | utf8_general_ci |     NULL |                |         |</span><br><span class="line">+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">------</span>+<span class="params">----------------</span>+<span class="params">-------------</span>+<span class="params">-------------------</span>+<span class="params">--------------</span>+<span class="params">-----------</span>+<span class="params">----------------</span>+<span class="params">---------------------</span>+<span class="params">---------------------</span>+<span class="params">------------</span>+<span class="params">-----------------</span>+<span class="params">----------</span>+<span class="params">----------------</span>+<span class="params">---------</span>+</span><br><span class="line">1 row in <span class="keyword">set</span> <span class="params">(0.00 sec)</span></span><br></pre></td></tr></table></figure><h3 id="3-6、show-table-status-from-test-like-‘stu-’-G"><a href="#3-6、show-table-status-from-test-like-‘stu-’-G" class="headerlink" title="3.6、show table status from test like ‘stu%’\G;"></a>3.6、show table status from test like ‘stu%’\G;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">like</span> <span class="string">'stu%'</span>\G;</span><br></pre></td></tr></table></figure></div><p>加上 \G，查询结果按列打印</p><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">mysql&gt;</span> <span class="string">show</span> <span class="string">table</span> <span class="string">status</span> <span class="string">from</span> <span class="string">test</span> <span class="string">like</span> <span class="string">'stu%'</span><span class="string">\G;</span></span><br><span class="line"><span class="string">***************************</span> <span class="number">1</span><span class="string">.</span> <span class="string">row</span> <span class="string">***************************</span></span><br><span class="line">           <span class="attr">Name:</span> <span class="string">students</span></span><br><span class="line">         <span class="attr">Engine:</span> <span class="string">MyISAM</span></span><br><span class="line">        <span class="attr">Version:</span> <span class="number">10</span></span><br><span class="line">     <span class="attr">Row_format:</span> <span class="string">Fixed</span></span><br><span class="line">           <span class="attr">Rows:</span> <span class="number">5</span></span><br><span class="line"> <span class="attr">Avg_row_length:</span> <span class="number">65</span></span><br><span class="line">    <span class="attr">Data_length:</span> <span class="number">390</span></span><br><span class="line"><span class="attr">Max_data_length:</span> <span class="number">18295873486192639</span></span><br><span class="line">   <span class="attr">Index_length:</span> <span class="number">1024</span></span><br><span class="line">      <span class="attr">Data_free:</span> <span class="number">65</span></span><br><span class="line"> <span class="attr">Auto_increment:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">Create_time:</span> <span class="number">2020</span><span class="number">-06</span><span class="number">-13</span> <span class="number">15</span><span class="string">:00:45</span></span><br><span class="line">    <span class="attr">Update_time:</span> <span class="number">2020</span><span class="number">-06</span><span class="number">-15</span> <span class="number">09</span><span class="string">:14:57</span></span><br><span class="line">     <span class="attr">Check_time:</span> <span class="literal">NULL</span></span><br><span class="line">      <span class="attr">Collation:</span> <span class="string">utf8_general_ci</span></span><br><span class="line">       <span class="attr">Checksum:</span> <span class="literal">NULL</span></span><br><span class="line"> <span class="attr">Create_options:</span></span><br><span class="line">        <span class="attr">Comment:</span></span><br><span class="line"><span class="number">1</span> <span class="string">row</span> <span class="string">in</span> <span class="string">set</span> <span class="string">(0.00</span> <span class="string">sec)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ERROR:</span></span><br><span class="line"><span class="literal">No</span> <span class="string">query</span> <span class="string">specified</span></span><br></pre></td></tr></table></figure></div><h3 id="3-7、show-table-status-from-test-like-‘stu-’-g"><a href="#3-7、show-table-status-from-test-like-‘stu-’-g" class="headerlink" title="3.7、show table status from test like ‘stu%’\g;"></a>3.7、show table status from test like ‘stu%’\g;</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">like</span> <span class="string">'stu%'</span>\g;</span><br></pre></td></tr></table></figure></div><p>加上 \g，查询结果按表的形式打印</p><p>例：</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">mysql&gt; show table status from test like 'stu%'\g;</span><br><span class="line">+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">------</span>+<span class="params">----------------</span>+<span class="params">-------------</span>+<span class="params">-------------------</span>+<span class="params">--------------</span>+<span class="params">-----------</span>+<span class="params">----------------</span>+<span class="params">---------------------</span>+<span class="params">---------------------</span>+<span class="params">------------</span>+<span class="params">-----------------</span>+<span class="params">----------</span>+<span class="params">----------------</span>+<span class="params">---------</span>+</span><br><span class="line">| Name     | Engine | Version | Row_format | Rows | Avg_row_length | Data_length | Max_data_length   | Index_length | Data_free | Auto_increment | Create_time         | Update_time         | Check_time | Collation       | Checksum | Create_options | Comment |</span><br><span class="line">+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">------</span>+<span class="params">----------------</span>+<span class="params">-------------</span>+<span class="params">-------------------</span>+<span class="params">--------------</span>+<span class="params">-----------</span>+<span class="params">----------------</span>+<span class="params">---------------------</span>+<span class="params">---------------------</span>+<span class="params">------------</span>+<span class="params">-----------------</span>+<span class="params">----------</span>+<span class="params">----------------</span>+<span class="params">---------</span>+</span><br><span class="line">| students | MyISAM |      10 | Fixed      |    5 |             65 |         390 | 18295873486192639 |         1024 |        65 |              1 | 2020-06-13 15<span class="function">:00</span><span class="function">:45</span> | 2020-06-15 09<span class="function">:14</span><span class="function">:57</span> | NULL       | utf8_general_ci |     NULL |                |         |</span><br><span class="line">+<span class="params">----------</span>+<span class="params">--------</span>+<span class="params">---------</span>+<span class="params">------------</span>+<span class="params">------</span>+<span class="params">----------------</span>+<span class="params">-------------</span>+<span class="params">-------------------</span>+<span class="params">--------------</span>+<span class="params">-----------</span>+<span class="params">----------------</span>+<span class="params">---------------------</span>+<span class="params">---------------------</span>+<span class="params">------------</span>+<span class="params">-----------------</span>+<span class="params">----------</span>+<span class="params">----------------</span>+<span class="params">---------</span>+</span><br><span class="line">1 row in <span class="keyword">set</span> <span class="params">(0.00 sec)</span></span><br><span class="line"></span><br><span class="line">ERROR:</span><br><span class="line">No query specified</span><br></pre></td></tr></table></figure><h3 id="3-8、查看表结构"><a href="#3-8、查看表结构" class="headerlink" title="3.8、查看表结构"></a>3.8、查看表结构</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">desc 表名<span class="comment">;		（单独查看一张表）</span></span><br></pre></td></tr></table></figure></div><h3 id="3-9、查看建表语句"><a href="#3-9、查看建表语句" class="headerlink" title="3.9、查看建表语句"></a>3.9、查看建表语句</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> 表名</span><br></pre></td></tr></table></figure></div><h2 id="4、MySQL-创建数据库"><a href="#4、MySQL-创建数据库" class="headerlink" title="4、MySQL 创建数据库"></a>4、MySQL 创建数据库</h2><p>我们可以在登陆 MySQL 服务后，使用 create 命令创建数据库，语法如下:</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名;</span><br></pre></td></tr></table></figure><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; create database test1;</span><br><span class="line">Query OK, 1 row affected (0.14 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| sys                |</span><br><span class="line">| test               |</span><br><span class="line">| test1              |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">6 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h2 id="5、drop-命令删除数据库"><a href="#5、drop-命令删除数据库" class="headerlink" title="5、drop 命令删除数据库"></a>5、drop 命令删除数据库</h2><p>drop 命令格式：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> &lt;数据库名&gt;;</span><br></pre></td></tr></table></figure><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; drop database test1;</span><br><span class="line">Query OK, 0 rows affected (0.22 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span></span><br><span class="line"><span class="emphasis">| mysql              |</span></span><br><span class="line"><span class="emphasis">| performance_</span>schema |</span><br><span class="line">| sys                |</span><br><span class="line">| test               |</span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h1 id="二、MySQL-创建数据表"><a href="#二、MySQL-创建数据表" class="headerlink" title="二、MySQL 创建数据表"></a>二、MySQL 创建数据表</h1><h2 id="1、创建表"><a href="#1、创建表" class="headerlink" title="1、创建表"></a>1、创建表</h2><p>创建MySQL数据表需要以下信息：</p><ul><li><p>表名</p></li><li><p>表字段名</p></li><li><p>定义每个表字段</p></li></ul><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> table_name (column_name column_type) <span class="keyword">engine</span> myisam <span class="keyword">charset</span> utf8;</span><br></pre></td></tr></table></figure></div><p><code>engine myisam charset utf8</code> 防乱码，可以不写</p><h2 id="2、MySQL-数据类型"><a href="#2、MySQL-数据类型" class="headerlink" title="2、MySQL 数据类型"></a>2、MySQL 数据类型</h2><p>MySQL中定义数据字段的类型对数据库的优化是非常重要的。</p><p>MySQL支持多种类型，大致可以分为三类：数值、日期/时间和字符串(字符)类型。</p><p>字节(Byte)=8位(bit)</p><h3 id="2-1、数值类型"><a href="#2-1、数值类型" class="headerlink" title="2.1、数值类型"></a>2.1、数值类型</h3><p>MySQL支持所有标准SQL数值数据类型。</p><p>这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值数据类型(FLOAT、REAL和DOUBLE PRECISION)。</p><p>关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。</p><p>BIT数据类型保存位字段值，并且支持MyISAM、MEMORY、InnoDB和BDB表。</p><p>作为SQL标准的扩展，MySQL也支持整数类型TINYINT、MEDIUMINT和BIGINT。下面的表显示了需要的每个整数类型的存储和范围。</p><p>mysql字段定义中<code>INT(x)</code>中的<code>x</code>仅仅指的是显示宽度。该可选显示宽度规定用于显示宽度小于指定的列宽度的值时从左侧用<code>0</code>填满宽度。显示宽度并不限制可以在列内保存的值的范围，也不限制超过列的指定宽度的值的显示。所以x的定义与存储空间没有任何关系都是4个字节。若想显示补充的<code>0</code>可以在设置<code>zerofill</code>，即<code>id int(5) zerofill</code>,</p><table><thead><tr><th>类型</th><th>大小</th><th>范围（有符号）</th><th>范围（无符号）</th><th>用途</th></tr></thead><tbody><tr><td>TINYINT</td><td>1 byte</td><td>(-128，127)</td><td>(0，255)</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2 bytes</td><td>(-32 768，32 767)</td><td>(0，65 535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3 bytes</td><td>(-8 388 608，8 388 607)</td><td>(0，16 777 215)</td><td>大整数值</td></tr><tr><td>INT或INTEGER</td><td>4 bytes</td><td>(-2 147 483 648，2 147 483 647)</td><td>(0，4 294 967 295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8 bytes</td><td>(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td>(0，18 446 744 073 709 551 615)</td><td>极大整数值</td></tr><tr><td>FLOAT</td><td>4 bytes</td><td>(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td>0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td>单精度 浮点数值</td></tr><tr><td>DOUBLE</td><td>8 bytes</td><td>(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td>双精度 浮点数值</td></tr><tr><td>DECIMAL</td><td>对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td>依赖于M和D的值</td><td>依赖于M和D的值</td><td>小数值</td></tr></tbody></table><h3 id="2-2、日期和时间类型"><a href="#2-2、日期和时间类型" class="headerlink" title="2.2、日期和时间类型"></a>2.2、日期和时间类型</h3><p>表示时间值的日期和时间类型为DATETIME、DATE、TIMESTAMP、TIME和YEAR。</p><p>每个时间类型有一个有效值范围和一个”零”值，当指定不合法的MySQL不能表示的值时使用”零”值。</p><p>TIMESTAMP类型有专有的自动更新特性。</p><table><thead><tr><th>类型</th><th>大小 ( bytes)</th><th>范围</th><th>格式</th><th>用途</th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01/9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>‘-838:59:59’/‘838:59:59’</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901/2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>1000-01-01 00:00:00/9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4</td><td>1970-01-01 00:00:00/2038 结束时间是第 2147483647 秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038年1月19日 凌晨 03:14:07</td><td>YYYYMMDD HHMMSS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><h3 id="2-3、字符串类型"><a href="#2-3、字符串类型" class="headerlink" title="2.3、字符串类型"></a>2.3、字符串类型</h3><p>字符串类型指CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。</p><p>char表示定长、长度固定，varchanr表示变长，即长度可变。</p><ul><li><p>即char类型是规定多少字长则必须存储多少字长，超过的长度的字段则只能截取出对应的长度进行存储，相对于要求字长长度不够的字段则用空格补齐。</p></li><li><p>而varchar类型则是只要在规定字长之内，有多少存多少，无需补齐；超出的部分和char一样，舍去即可。（由perfix来实现）</p></li><li><p>对于char类型来说，最多只能存放的字符个数为255，和编码无关。</p></li><li><p>varchar最多能存放65532个字符。VARCHAR的最大有效长度由最大行大小和使用的字符集来确定。整体最大长度是65532字节。</p><ul><li>由字符集来确定，字符集分单字节和多字节</li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">Latin1  一个字符占一个字节，最多能存放 <span class="number">65532</span> 个字符</span><br><span class="line">GBK     一个字符占两个字节， 最多能存 <span class="number">32766</span> 个字符</span><br><span class="line">UTF8    一个字符占三个字节， 最多能存 <span class="number">21844</span> 个字符</span><br></pre></td></tr></table></figure></div><table><thead><tr><th>类型</th><th>大小</th><th>用途</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255 bytes</td><td>定长字符串</td></tr><tr><td>VARCHAR</td><td>0-65535 bytes</td><td>变长字符串</td></tr><tr><td>TINYBLOB</td><td>0-255 bytes</td><td>不超过 255 个字符的二进制字符串</td></tr><tr><td>TINYTEXT</td><td>0-255 bytes</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535 bytes</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535 bytes</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215 bytes</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215 bytes</td><td>中等长度文本数据</td></tr><tr><td>LONGBLOB</td><td>0-4 294 967 295 bytes</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295 bytes</td><td>极大文本数据</td></tr></tbody></table><p><strong>注意</strong>：</p><ul><li><p>char(n) 和 varchar(n) 中括号中 n 代表字符的个数，并不代表字节个数，比如 CHAR(30) 就可以存储 30 个字符。</p></li><li><p>CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。</p></li><li><p>BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。</p></li><li><p>BLOB 是一个二进制大对象，可以容纳可变数量的数据。有 4 种 BLOB 类型：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。它们区别在于可容纳存储范围不同。</p></li><li><p>有 4 种 TEXT 类型：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。对应的这 4 种 BLOB 类型，可存储的最大长度不同，可根据实际情况选择。</p></li></ul><h2 id="3、表字段类型属性"><a href="#3、表字段类型属性" class="headerlink" title="3、表字段类型属性"></a>3、表字段类型属性</h2><h2 id="3-1、auto-increment"><a href="#3-1、auto-increment" class="headerlink" title="3.1、auto_increment"></a>3.1、auto_increment</h2><p>auto_increment定义列为自增的属性，一般用于主键，数值会自动加1。</p><h2 id="3-2、primary-key"><a href="#3-2、primary-key" class="headerlink" title="3.2、primary key"></a>3.2、primary key</h2><p>主键：承担标识作用的列，能够确定一条记录的唯一标识</p><p>primary key关键字用于定义列为主键。 可以使用多列来定义主键，列间以逗号分隔。</p><p>主键是不能重复的，不能为空，可以区分每一行的列。</p><p>删除主键约束：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SAS"><figure class="iseeu highlight /sas"><table><tr><td class="code"><pre><span class="line"><span class="meta">alter</span> <span class="meta">table</span> 表名 <span class="meta">drop</span> <span class="meta">primary</span> <span class="meta">key</span>;</span><br></pre></td></tr></table></figure></div><h3 id="3-3、foreign-key"><a href="#3-3、foreign-key" class="headerlink" title="3.3、foreign key"></a>3.3、foreign key</h3><p>外键：是另一个表的主键，外键可以有重复的，可以为空值，用来和其他表建立连接用的，一般谈到了外键，一定是至少涉及到了两个表。</p><p>foreign key 外键，用于与另一张表的关联。是能确定另一张表记录的字段，用于保持数据的一致性</p><p>创建外键：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> T (<span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">10</span>) primary <span class="keyword">key</span>,E_id <span class="built_in">int</span>(<span class="number">2</span>),<span class="keyword">foreign</span> <span class="keyword">key</span>(E_id) <span class="keyword">references</span> E(<span class="keyword">id</span>)) <span class="keyword">engine</span> myisam <span class="keyword">charset</span> utf8;</span><br></pre></td></tr></table></figure></div><p>创建外键时，E_id为想要把该表的E_id字段设置成外键，E（id）为对应表E的主键字段</p><p>删除外键约束：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">foreign</span> <span class="keyword">key</span> 外键（区分大小写）;</span><br></pre></td></tr></table></figure></div><h3 id="3-4、索引"><a href="#3-4、索引" class="headerlink" title="3.4、索引"></a>3.4、索引</h3><p>索引：使用索引可以快速访问数据库表中的特定信息，数据库索引好比是一本前面的目录，能加快数据库的查询速度。</p><h4 id="3-4-1、索引种类"><a href="#3-4-1、索引种类" class="headerlink" title="3.4.1、索引种类"></a>3.4.1、索引种类</h4><ul><li><p>普通索引：仅加速查询</p></li><li><p>唯一索引：加速查询 + 列唯一值（可以有null）</p></li><li><p>主键索引：加速查询 + 列唯一值（不可以有null） + 表中只有一个</p></li><li><p>组合索引：多列值组成一个索引，专门用于组合搜索，其效率大于索引合并</p></li><li><p>全文索引：对文本的内容进行分词，进行搜索</p></li></ul><h4 id="3-4-2、语法"><a href="#3-4-2、语法" class="headerlink" title="3.4.2、语法"></a>3.4.2、语法</h4><p>创建普通索引：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="built_in">create</span> index 索引名字 <span class="keyword">on</span> 表名（列名）</span><br></pre></td></tr></table></figure></div><p>修改表结构(添加索引)：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">table</span> tableName <span class="keyword">ADD</span> <span class="keyword">INDEX</span> indexName(columnName)</span><br></pre></td></tr></table></figure></div><p>创建表的时候直接指定：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> mytable(  </span><br><span class="line"><span class="keyword">ID</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,   </span><br><span class="line">username <span class="built_in">VARCHAR</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,  </span><br><span class="line"><span class="keyword">INDEX</span> [indexName] (username(<span class="keyword">length</span>))  </span><br><span class="line"> );</span><br></pre></td></tr></table></figure></div><p>创建唯一索引：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> <span class="keyword">index</span> 索引名字 <span class="keyword">on</span> 表名（列名）</span><br></pre></td></tr></table></figure><p>创建普通组合索引：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="built_in">create</span> index 索引名字 <span class="keyword">on</span> 表名（列<span class="title">1</span>，列<span class="title">2</span>）</span><br></pre></td></tr></table></figure></div><p>删除索引的语法：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> [indexName] <span class="keyword">ON</span> mytable;</span><br></pre></td></tr></table></figure><h4 id="3-4-3、索引的使用原则"><a href="#3-4-3、索引的使用原则" class="headerlink" title="3.4.3、索引的使用原则"></a>3.4.3、索引的使用原则</h4><p>经常在查询中用作条件的列应当添加索引，频繁进行排序或分组的列（即进行order by 或 group by 的列），应当为其添加索引；一个列的值域很大时应当为其添加索引。</p><h3 id="3-5、zerofill"><a href="#3-5、zerofill" class="headerlink" title="3.5、zerofill"></a>3.5、zerofill</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SAS"><figure class="iseeu highlight /sas"><table><tr><td class="code"><pre><span class="line">zerofill    <span class="meta"> int(</span><span class="meta">x</span>)型数据实际数据长度小于<span class="meta">x</span>，自动在左边补0，直到长度为<span class="meta">x</span></span><br></pre></td></tr></table></figure></div><h3 id="3-6、enum"><a href="#3-6、enum" class="headerlink" title="3.6、enum"></a>3.6、enum</h3><p>enum 单选，枚举 插入数据时可按照选项序号进行插入</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> table_B (<span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">2</span>),<span class="keyword">name</span> <span class="built_in">char</span>(<span class="number">5</span>),sex enum(<span class="string">'男'</span>,<span class="string">'女'</span>)) <span class="keyword">engine</span> myisam <span class="keyword">charset</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> table_B (<span class="keyword">id</span>,<span class="keyword">name</span>,sex) <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">'张三'</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> table_B (<span class="keyword">id</span>,<span class="keyword">name</span>,sex) <span class="keyword">values</span> (<span class="number">2</span>,<span class="string">'李四'</span>,<span class="number">3</span>);	<span class="comment"># 不存在第三个数据，此时age为空</span></span><br></pre></td></tr></table></figure></div><h3 id="3-7、set"><a href="#3-7、set" class="headerlink" title="3.7、set"></a>3.7、set</h3><p>set 多选</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> table_C (<span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">3</span>),<span class="keyword">result</span> <span class="keyword">set</span>(<span class="string">'优'</span>,<span class="string">'差'</span>,<span class="string">'良'</span>),<span class="built_in">time</span> <span class="built_in">date</span>) <span class="keyword">engine</span> myisam <span class="keyword">charset</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> table_C (<span class="keyword">id</span>,<span class="keyword">result</span>,<span class="built_in">time</span>) <span class="keyword">values</span> (<span class="number">1</span>,<span class="string">'优,差'</span>,<span class="string">'2020-06-16'</span>);</span><br></pre></td></tr></table></figure></div><p>使用数字代表，每个选项依次为1,2,4,8,16，……</p><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">优	        <span class="number">1</span></span><br><span class="line">良	        <span class="number">2</span></span><br><span class="line">差	        <span class="number">4</span></span><br><span class="line">优，良	        <span class="number">3</span></span><br><span class="line">优，差	        <span class="number">5</span></span><br><span class="line">良，差	        <span class="number">6</span></span><br><span class="line">优，良，差	<span class="number">7</span></span><br><span class="line">……</span><br></pre></td></tr></table></figure></div><h3 id="3-8、not-null"><a href="#3-8、not-null" class="headerlink" title="3.8、not null"></a>3.8、not null</h3><p>not null</p><p>空值是不占用空间的</p><p>mysql中的NULL其实是占用空间的</p><p>NOT NULL 的字段是不能插入NULL的，只能插入“空值”</p><p>很多表都包含可为NULL的列，即使应用程序并不需要保存NULL也是如此，这是因为可为NULL是列的默认属性（TIMESTAMP除外），然而通常情况下最好指定列为NOT NULL，除非真的需要存储NULL值。</p><p>如果查询中包含可为NULL的列，对MySQL来说更难优化，因为可为NULL的列使得索引统计和值比较更加复杂。可为NULL的列会使用更多的存储空间，在MySQL里也需要特殊的处理。当可为NULL的字段被索引时，每个索引记录需要一个额外的字节，在MyASIM里甚至还可能导致固定大小的索引（例如只有一个整数列的索引）变成可变大小的索引。</p><p>通常把可为NULL的列改为NOT NULL 带来的性能提升比较小，所以（调忧时）没有必要首先在现有schema中查找并修改这种情况，除非确定这会导致问题。但是，如果计划在列上建索引，就应该尽量避免设计为NULL的列。当然也有一些例外，例如值得一提的是，InnoDB使用单独的位（Bit）存储NULL值，所以对于稀疏数据（很多值为NULL，只有少数行是非NULL）有很好的空间效率。但这一点不适用于MyISAM</p><h3 id="3-9、default"><a href="#3-9、default" class="headerlink" title="3.9、default"></a>3.9、default</h3><p>default 添加默认值</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">create table one (id int(4),name char(10)<span class="built_in"> default </span>‘小明’) engine myisam charset utf8;</span><br></pre></td></tr></table></figure></div><h3 id="3-10、comment"><a href="#3-10、comment" class="headerlink" title="3.10、comment"></a>3.10、comment</h3><p>comment 字段注释</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> one (<span class="keyword">id</span> <span class="built_in">int</span>(<span class="number">4</span>) <span class="keyword">comment</span> ‘学号’,<span class="keyword">name</span> <span class="built_in">char</span>(<span class="number">10</span>)) <span class="keyword">engine</span> myisam <span class="keyword">charset</span> utf8;</span><br></pre></td></tr></table></figure></div><h3 id="3-11、engine-charset"><a href="#3-11、engine-charset" class="headerlink" title="3.11、engine     charset"></a>3.11、engine charset</h3><p>engine 设置存储引擎，charset 设置编码。</p><h3 id="例1：创建表"><a href="#例1：创建表" class="headerlink" title="例1：创建表"></a>例1：创建表</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table one (id int(4)) engine myisam charset utf8;</span><br><span class="line">Query OK, 0 rows affected, 2 warnings (0.41 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">| Tables<span class="emphasis">_in_</span>test |</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">| one            |</span><br><span class="line">| students       |</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; desc one;</span><br><span class="line"><span class="code">+-------+</span>------<span class="code">+------+</span>-----<span class="code">+---------+</span>-------+</span><br><span class="line">| Field | Type | Null | Key | Default | Extra |</span><br><span class="line"><span class="code">+-------+</span>------<span class="code">+------+</span>-----<span class="code">+---------+</span>-------+</span><br><span class="line">| id    | int  | YES  |     | NULL    |       |</span><br><span class="line"><span class="code">+-------+</span>------<span class="code">+------+</span>-----<span class="code">+---------+</span>-------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h3 id="例2：加入not-null，防止数据为空时，出现NULL"><a href="#例2：加入not-null，防止数据为空时，出现NULL" class="headerlink" title="例2：加入not null，防止数据为空时，出现NULL"></a>例2：加入not null，防止数据为空时，出现NULL</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table two (id int <span class="keyword">not</span> <span class="literal">null</span> auto_increment,name char(10) <span class="keyword">not</span> <span class="literal">null</span>, class char(10),primary key (id)) engine myisam charset utf8;</span><br><span class="line">Query OK, 0 rows affected, 1 <span class="builtin-name">warning</span> (0.11 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> two;</span><br><span class="line">Empty <span class="builtin-name">set</span> (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; desc two;</span><br><span class="line">+-------+----------+------+-----+---------+----------------+</span><br><span class="line">| Field |<span class="built_in"> Type </span>    | <span class="literal">Null</span> | Key |<span class="built_in"> Default </span>| Extra          |</span><br><span class="line">+-------+----------+------+-----+---------+----------------+</span><br><span class="line">| id    | int      | <span class="literal">NO</span>   | PRI | <span class="literal">NULL</span>    | auto_increment |</span><br><span class="line">| name  | char(10) | <span class="literal">NO</span>   |     | <span class="literal">NULL</span>    |                |</span><br><span class="line">| class | char(10) | <span class="literal">YES</span>  |     | <span class="literal">NULL</span>    |                |</span><br><span class="line">+-------+----------+------+-----+---------+----------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="builtin-name">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure></div><h3 id="例3：加入自增，加入主键"><a href="#例3：加入自增，加入主键" class="headerlink" title="例3：加入自增，加入主键"></a>例3：加入自增，加入主键</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table five (</span><br><span class="line">    -&gt; id int <span class="keyword">not</span> <span class="literal">null</span> auto_increment,</span><br><span class="line">    -&gt; name char(10) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    -&gt; class char(10),</span><br><span class="line">    -&gt; primary key (id)</span><br><span class="line">    -&gt; ) engine myisam charset utf8;</span><br><span class="line">Query OK, 0 rows affected, 1 <span class="builtin-name">warning</span> (0.10 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; desc five;</span><br><span class="line">+-------+----------+------+-----+---------+----------------+</span><br><span class="line">| Field |<span class="built_in"> Type </span>    | <span class="literal">Null</span> | Key |<span class="built_in"> Default </span>| Extra          |</span><br><span class="line">+-------+----------+------+-----+---------+----------------+</span><br><span class="line">| id    | int      | <span class="literal">NO</span>   | PRI | <span class="literal">NULL</span>    | auto_increment |</span><br><span class="line">| name  | char(10) | <span class="literal">NO</span>   |     | <span class="literal">NULL</span>    |                |</span><br><span class="line">| class | char(10) | <span class="literal">YES</span>  |     | <span class="literal">NULL</span>    |                |</span><br><span class="line">+-------+----------+------+-----+---------+----------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="builtin-name">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure></div><h3 id="例4：加入主键，可以直接在要设置的列名后添加"><a href="#例4：加入主键，可以直接在要设置的列名后添加" class="headerlink" title="例4：加入主键，可以直接在要设置的列名后添加"></a>例4：加入主键，可以直接在要设置的列名后添加</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">table</span> one (id <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">primary key</span>,<span class="type">name</span> <span class="type">char</span>(<span class="number">10</span>)) engine myisam charset utf8;</span><br></pre></td></tr></table></figure></div><p>注意：MySQL命令终止符为分号 <code>;</code> 。</p><p>注意： <code>-&gt;</code> 是换行符标识，不要复制。</p><h2 id="4、MySQL-删除数据表"><a href="#4、MySQL-删除数据表" class="headerlink" title="4、MySQL 删除数据表"></a>4、MySQL 删除数据表</h2><p>MySQL中删除数据表是非常容易操作的， 但是你再进行删除表操作时要非常小心，因为执行删除命令后所有数据都会消失。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line">drop <span class="keyword">table</span> table_name ;				删除一个表</span><br><span class="line">drop <span class="keyword">table</span> table_name1,table_name2 ;		删除多个表</span><br></pre></td></tr></table></figure></div><p>例1：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; show tables;</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">| Tables<span class="emphasis">_in_</span>test |</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">| five           |</span><br><span class="line">| one            |</span><br><span class="line">| students       |</span><br><span class="line">| three          |</span><br><span class="line">| two            |</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; drop table one;</span><br><span class="line">Query OK, 0 rows affected (0.14 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">| Tables<span class="emphasis">_in_</span>test |</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">| five           |</span><br><span class="line">| students       |</span><br><span class="line">| three          |</span><br><span class="line">| two            |</span><br><span class="line"><span class="code">+----------------+</span></span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><p>例2：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; show tables;</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">| Tables<span class="emphasis">_in_</span>test2 |</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">| a               |</span><br><span class="line">| b               |</span><br><span class="line">| c               |</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; drop table a,b;</span><br><span class="line">Query OK, 0 rows affected (0.24 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show tables;</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">| Tables<span class="emphasis">_in_</span>test2 |</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">| c               |</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h2 id="5、修改表名"><a href="#5、修改表名" class="headerlink" title="5、修改表名"></a>5、修改表名</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> 旧表名 <span class="keyword">to</span> 新表名</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 旧表名 <span class="keyword">rename</span> <span class="keyword">to</span> 新表名</span><br></pre></td></tr></table></figure></div><h1 id="七、MySQL-插入数据"><a href="#七、MySQL-插入数据" class="headerlink" title="七、MySQL 插入数据"></a>七、MySQL 插入数据</h1><h2 id="1、插入一行或多行数据"><a href="#1、插入一行或多行数据" class="headerlink" title="1、插入一行或多行数据"></a>1、插入一行或多行数据</h2><p>MySQL 表中使用 INSERT INTO SQL语句来插入数据。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">insert <span class="built_in">int</span>o 表名称(列<span class="number">1</span>，列<span class="number">2</span>，列<span class="number">3</span>，.....)  values  (值<span class="number">1</span>，值<span class="number">2</span>，值<span class="number">3</span>，....),(值<span class="number">1</span>，值<span class="number">2</span>，值<span class="number">3</span>，....),(值<span class="number">1</span>，值<span class="number">2</span>，值<span class="number">3</span>，....),(值<span class="number">1</span>，值<span class="number">2</span>，值<span class="number">3</span>，....);</span><br><span class="line"></span><br><span class="line">insert <span class="built_in">int</span>o 表名称 <span class="keyword">set</span> 列<span class="number">1</span>=值<span class="number">1</span>，列<span class="number">2</span>=值<span class="number">2</span>，……;</span><br><span class="line"></span><br><span class="line">insert <span class="built_in">int</span>o 表名称 values  (值<span class="number">1</span>，值<span class="number">2</span>，值<span class="number">3</span>，....),(值<span class="number">1</span>，值<span class="number">2</span>，值<span class="number">3</span>，....),(值<span class="number">1</span>，值<span class="number">2</span>，值<span class="number">3</span>，....),(值<span class="number">1</span>，值<span class="number">2</span>，值<span class="number">3</span>，....);</span><br></pre></td></tr></table></figure></div><p>如果数据是字符型，必须使用单引号或者双引号，如：”value”。</p><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; insert into two (name,class) values (<span class="emphasis">'张三'</span>,<span class="emphasis">'三班'</span>),(<span class="emphasis">'李四'</span>,<span class="emphasis">'四班'</span>);</span><br><span class="line">Query OK, 2 rows affected (0.15 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">| id | name   | class  |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">|  1 | 张三   | 三班   |</span><br><span class="line">|  2 | 李四   | 四班   |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><p>注意： 使用箭头标记 <code>-&gt;</code> 不是 SQL 语句的一部分，它仅仅表示一个新行，如果一条SQL语句太长，我们可以通过回车键来创建一个新行来编写 SQL 语句，SQL 语句的命令结束符为分号 <code>;</code>。</p><p>在以上实例中，我们并没有提供 id 的数据，因为该字段我们在创建表的时候已经设置它为 AUTO_INCREMENT(自动增加) 属性。 所以，该字段会自动递增而不需要我们去设置。</p><h2 id="2、插入列"><a href="#2、插入列" class="headerlink" title="2、插入列"></a>2、插入列</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 列名 列类型;		(新增一列，列在新增时需要附带该列的类别）</span><br></pre></td></tr></table></figure></div><p>添加到指定列后面：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> （<span class="keyword">column</span>） 列名 <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">after</span> 列名;</span><br></pre></td></tr></table></figure></div><p>添加到第一列：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> （<span class="keyword">column</span>） 列名 <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">first</span>;</span><br></pre></td></tr></table></figure></div><p>注：column可写可不写</p><h2 id="3、查询一个表的内容插入到另一个表中"><a href="#3、查询一个表的内容插入到另一个表中" class="headerlink" title="3、查询一个表的内容插入到另一个表中"></a>3、查询一个表的内容插入到另一个表中</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">insert <span class="built_in">int</span>o 表<span class="number">1</span> （列名<span class="number">1</span>，列名<span class="number">2</span>，……） select 列名<span class="number">1</span>，列名<span class="number">2</span>，…… <span class="keyword">from</span> 表<span class="number">2</span>;</span><br></pre></td></tr></table></figure></div><h1 id="八、删"><a href="#八、删" class="headerlink" title="八、删"></a>八、删</h1><p>使用 SQL 的 DELETE FROM 命令来删除 MySQL 数据表中的记录。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> <span class="built_in">table_name</span> [<span class="keyword">where</span> Clause]</span><br></pre></td></tr></table></figure></div><p>如果没有指定 where 子句，MySQL 表中的所有记录将被删除。</p><p>可以在 where 子句中指定任何条件</p><p>可以在单个表中一次性删除记录。</p><p>删除一行数据</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表 <span class="keyword">where</span> 列=值（条件）;</span><br></pre></td></tr></table></figure><p>删除空数据</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">is</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure></div><h2 id="1、删除一行数据"><a href="#1、删除一行数据" class="headerlink" title="1、删除一行数据"></a>1、删除一行数据</h2><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表 <span class="keyword">where</span> 列=值（条件）;</span><br></pre></td></tr></table></figure><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">| id | name | class  | age  |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">|  1 | aaa  | NULL   | NULL |</span><br><span class="line">|  2 | bbb  | NULL   | NULL |</span><br><span class="line">|  3 | aaa  | 一班   |  687 |</span><br><span class="line">|  4 | ccc  | NULL   | NULL |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; delete from two where id=1;</span><br><span class="line">Query OK, 1 row affected (0.09 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">| id | name | class  | age  |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">|  2 | bbb  | NULL   | NULL |</span><br><span class="line">|  3 | aaa  | 一班   |  687 |</span><br><span class="line">|  4 | ccc  | NULL   | NULL |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h2 id="2、删除空数据"><a href="#2、删除空数据" class="headerlink" title="2、删除空数据"></a>2、删除空数据</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">is</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">| id | name | class  | age  |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">|  2 | bbb  | NULL   | NULL |</span><br><span class="line">|  3 | aaa  | 一班   |  687 |</span><br><span class="line">|  4 | ccc  | NULL   | NULL |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; delete from two where name=<span class="emphasis">'NULL'</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">| id | name | class  | age  |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">|  2 | bbb  | NULL   | NULL |</span><br><span class="line">|  3 | aaa  | 一班   |  687 |</span><br><span class="line">|  4 | ccc  | NULL   | NULL |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; delete from two where class is NULL;</span><br><span class="line">Query OK, 2 rows affected (0.05 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">| id | name | class  | age  |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">|  3 | aaa  | 一班   |  687 |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h2 id="3、删除多行数据"><a href="#3、删除多行数据" class="headerlink" title="3、删除多行数据"></a>3、删除多行数据</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="number">2</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure></div><h2 id="4、删除一个单元格"><a href="#4、删除一个单元格" class="headerlink" title="4、删除一个单元格"></a>4、删除一个单元格</h2><p>删除一个单元格可以通过修改一个单元格为空来实现</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列名=<span class="literal">null</span> <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><h2 id="5、删除列"><a href="#5、删除列" class="headerlink" title="5、删除列"></a>5、删除列</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> （<span class="keyword">column</span>） 列名;</span><br></pre></td></tr></table></figure></div><h2 id="6、清空表数据"><a href="#6、清空表数据" class="headerlink" title="6、清空表数据"></a>6、清空表数据</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COFFEESCRIPT"><figure class="iseeu highlight /coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure></div><p>例如，设置主键自增的表，删除表内容后，再次添加数据时，主键自增的数据会接着原来的数据继续添加</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> 表名	（清空表里所有行，比<span class="keyword">delete</span>更彻底，不能跟<span class="keyword">where</span>子句）</span><br></pre></td></tr></table></figure></div><p>例如，设置主键自增的表，删除表内容后，再次添加数据时，主键自增的数据会直接从最开始的值添加</p><h2 id="7、drop-命令删除数据库"><a href="#7、drop-命令删除数据库" class="headerlink" title="7、drop 命令删除数据库"></a>7、drop 命令删除数据库</h2><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> &lt;数据库名&gt;;</span><br></pre></td></tr></table></figure><h2 id="8、MySQL-删除数据表"><a href="#8、MySQL-删除数据表" class="headerlink" title="8、MySQL 删除数据表"></a>8、MySQL 删除数据表</h2><p>MySQL中删除数据表是非常容易操作的， 但是你再进行删除表操作时要非常小心，因为执行删除命令后所有数据都会消失。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line">drop <span class="keyword">table</span> table_name ;				删除一个表</span><br><span class="line">drop <span class="keyword">table</span> table_name1,table_name2 ;		删除多个表</span><br></pre></td></tr></table></figure></div><h1 id="九、改"><a href="#九、改" class="headerlink" title="九、改"></a>九、改</h1><p>如果我们需要修改或更新 MySQL 中的数据，我们可以使用 SQL UPDATE 命令来操作。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="built_in">table_name</span> <span class="keyword">set</span> field1=<span class="built_in">new</span>-value1, field2=<span class="built_in">new</span>-value2 [<span class="keyword">WHERE</span> Clause]</span><br></pre></td></tr></table></figure></div><p>可以同时更新一个或多个字段。</p><p>可以在 WHERE 子句中指定任何条件。</p><p>可以在一个单独表中同时更新数据。</p><p>当需要更新数据表中指定行的数据时可以使用 WHERE 子句</p><h2 id="1、只更新一个数据"><a href="#1、只更新一个数据" class="headerlink" title="1、只更新一个数据"></a>1、只更新一个数据</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; update two set name=<span class="emphasis">'王二'</span> where id=1;</span><br><span class="line">Query OK, 1 row affected (0.11 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">| id | name   | class  |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">|  1 | 王二   | 三班   |</span><br><span class="line">|  2 | 李四   | 四班   |</span><br><span class="line">|  3 | aaa    | 一班   |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h2 id="2、更新同一行的多个数据"><a href="#2、更新同一行的多个数据" class="headerlink" title="2、更新同一行的多个数据"></a>2、更新同一行的多个数据</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; update two set name=<span class="emphasis">'王二'</span>,class=<span class="emphasis">'二班'</span> where id=1;</span><br><span class="line">Query OK, 1 row affected (0.05 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">| id | name   | class  |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">|  1 | 王二   | 二班   |</span><br><span class="line">|  2 | 李四   | 四班   |</span><br><span class="line">|  3 | aaa    | 一班   |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h2 id="3、更新同一列为相同数据"><a href="#3、更新同一列为相同数据" class="headerlink" title="3、更新同一列为相同数据"></a>3、更新同一列为相同数据</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; update two set name=<span class="emphasis">'王二'</span>;</span><br><span class="line">Query OK, 2 rows affected (0.05 sec)</span><br><span class="line">Rows matched: 3  Changed: 2  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">| id | name   | class  |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">|  1 | 王二   | 二班   |</span><br><span class="line">|  2 | 王二   | 四班   |</span><br><span class="line">|  3 | 王二   | 一班   |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h2 id="4、更新多行多列数据"><a href="#4、更新多行多列数据" class="headerlink" title="4、更新多行多列数据"></a>4、更新多行多列数据</h2><p>方法1： <code>on duplicate key update</code> 语法</p><p><a href="http://docs.oracle.com/cd/E17952_01/refman-5.1-en/insert-on-duplicate.html" target="_blank" rel="noopener" calss="LinkCard">on duplicate key update 语法的官方说明</a></p><p>它会先执行插入操作，碰到有主键或唯一索引的列发生冲突时，对冲突的这一行，执行update操作，更新sql语句中指定的某几列。如果所有的列都不冲突，此语法和简单的insert into语法效果一样。</p><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span>------+</span><br><span class="line">| id | name   | class  | age  |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span>------+</span><br><span class="line">|  1 | 王二   | 二班   |   11 |</span><br><span class="line">|  2 | 王二   | 四班   |   22 |</span><br><span class="line">|  3 | 王二   | 一班   |   33 |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span>------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert into two (id,name,age) values (2,<span class="emphasis">'李四'</span>,2222),(3,<span class="emphasis">'aaa'</span>,3333) on duplicate key update name=values(name),age=values(age);</span><br><span class="line">Query OK, 4 rows affected (0.29 sec)</span><br><span class="line">Records: 2  Duplicates: 2  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span>------+</span><br><span class="line">| id | name   | class  | age  |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span>------+</span><br><span class="line">|  1 | 王二   | 二班   |   11 |</span><br><span class="line">|  2 | 李四   | 四班   | 2222 |</span><br><span class="line">|  3 | aaa    | 一班   | 3333 |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span>------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><p>方法2： <code>replace into</code> 语法</p><p><a href="http://docs.oracle.com/cd/E17952_01/refman-5.5-en/replace.html" target="_blank" rel="noopener" calss="LinkCard">replace into 语法的官方说明</a></p><p>replace和insert所作的工作完全相同，区别是当碰到有主键或唯一索引的列发生冲突时，对冲突的这一行，在insert前会先对这行数据执行delete操作。效果是这一行中没有被指定值的列会被更新成本列的默认值，如果所有的列都不冲突，此语法和简单的insert into语法效果一样。</p><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span>------+</span><br><span class="line">| id | name   | class  | age  |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span>------+</span><br><span class="line">|  1 | 王二   | 二班   |  687 |</span><br><span class="line">|  2 | 李四   | 四班   |  687 |</span><br><span class="line">|  3 | aaa    | 一班   |  687 |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span>------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; replace into two (id,name) values(1,<span class="emphasis">'aaa'</span>),(2,<span class="emphasis">'bbb'</span>);</span><br><span class="line">Query OK, 4 rows affected (0.07 sec)</span><br><span class="line">Records: 2  Duplicates: 2  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">| id | name | class  | age  |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">|  1 | aaa  | NULL   | NULL |</span><br><span class="line">|  2 | bbb  | NULL   | NULL |</span><br><span class="line">|  3 | aaa  | 一班   |  687 |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h2 id="5、修改一个单元格为空"><a href="#5、修改一个单元格为空" class="headerlink" title="5、修改一个单元格为空"></a>5、修改一个单元格为空</h2><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 列名=<span class="literal">null</span> <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><h2 id="6、修改列名"><a href="#6、修改列名" class="headerlink" title="6、修改列名"></a>6、修改列名</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">change</span> 旧列名 新列名 列类型;</span><br></pre></td></tr></table></figure></div><ul><li><p>列属性和原属性一致，则列中数据不变</p></li><li><p>列属性和原属性不同，则列中数据变为新类型的默认值</p></li><li><p>新列名和旧列名相同，即为修改列属性</p></li></ul><h2 id="7、修改列属性"><a href="#7、修改列属性" class="headerlink" title="7、修改列属性"></a>7、修改列属性</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> 列名 列属性;</span><br></pre></td></tr></table></figure></div><h2 id="8、修改表名"><a href="#8、修改表名" class="headerlink" title="8、修改表名"></a>8、修改表名</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> 旧表名 <span class="keyword">to</span> 新表名</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 旧表名 <span class="keyword">rename</span> <span class="keyword">to</span> 新表名</span><br></pre></td></tr></table></figure></div><h1 id="十、单表查询"><a href="#十、单表查询" class="headerlink" title="十、单表查询"></a>十、单表查询</h1><h2 id="1、MySQL-查询数据"><a href="#1、MySQL-查询数据" class="headerlink" title="1、MySQL 查询数据"></a>1、MySQL 查询数据</h2><p>MySQL 数据库使用SQL SELECT语句来查询数据。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">column_name</span>,<span class="built_in">column_name</span> <span class="keyword">FROM</span> <span class="built_in">table_name</span> [<span class="keyword">WHERE</span> Clause] [<span class="keyword">LIMIT</span> N] [ <span class="keyword">OFFSET</span> M]</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 查询内容 <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 查询内容 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 列=值（条件）;</span><br></pre></td></tr></table></figure></div><p>查询语句中可以使用一个或者多个列，列之间使用逗号(,)分割，并使用WHERE语句来设定查询条件。</p><p>SELECT 命令可以读取一条或者多条记录。</p><p>可以使用星号（*）来代替其他字段，SELECT语句会返回表的所有字段数据</p><p>可以使用 WHERE 语句来包含任何条件。</p><p>可以使用 LIMIT 属性来设定返回的记录数。</p><p>可以通过OFFSET指定SELECT语句开始查询的数据偏移量。默认情况下偏移量为0。</p><p>例1：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">| id | name   | class  |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">|  1 | 张三   | 三班   |</span><br><span class="line">|  2 | 李四   | 四班   |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br></pre></td></tr></table></figure></div><p>例2：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select name from two;</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">| name   |</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">| 张三   |</span><br><span class="line">| 李四   |</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><p>例3：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select name from two where id=1;</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">| name   |</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">| 张三   |</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><p>例4：</p><p>A表：</p><table><thead><tr><th>id</th><th>name</th><th>age</th><th>score</th></tr></thead><tbody><tr><td>1</td><td>王华</td><td>18</td><td>60.5</td></tr><tr><td>2</td><td>张小龙</td><td>22</td><td>100</td></tr><tr><td>3</td><td>小明</td><td>19</td><td>66</td></tr></tbody></table><p>查询A表所有信息</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Select</span>  *  <span class="keyword">from</span>  A;</span><br></pre></td></tr></table></figure><p>查询名字叫王华人的所有的信息</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Select</span>   *   <span class="keyword">from</span>   A  <span class="keyword">where</span>  <span class="keyword">name</span>=’王华’;</span><br></pre></td></tr></table></figure></div><p>查询名字叫王华的年龄，分数</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Select</span>   age,score  <span class="keyword">from</span>  A   <span class="keyword">where</span> <span class="keyword">name</span>=’王华’;</span><br></pre></td></tr></table></figure></div><p>查看前五行：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">SQLserver：	<span class="keyword">select</span> top <span class="number">5</span> * <span class="keyword">from</span> A；</span><br><span class="line">Mysql：    	<span class="keyword">Select</span> * <span class="keyword">from</span> A <span class="keyword">limit</span> <span class="number">5</span>；</span><br><span class="line"><span class="keyword">Oracle</span>：   	<span class="keyword">Select</span> * <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">rownum</span> &lt;=<span class="number">5</span>;</span><br></pre></td></tr></table></figure></div><h2 id="2、where-子句"><a href="#2、where-子句" class="headerlink" title="2、where 子句"></a>2、where 子句</h2><p>如需有条件地从表中选取数据，可将 WHERE 子句添加到 SELECT 语句中。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">select field1, field2,<span class="built_in">..</span>.fieldN <span class="keyword">from</span> table_name1, table_name2<span class="built_in">..</span>. [where condition1 [<span class="keyword">and</span> [<span class="keyword">or</span>]] condition2<span class="built_in">..</span><span class="built_in">..</span>.</span><br></pre></td></tr></table></figure></div><p>查询语句中可以使用一个或者多个表，表之间使用逗号, 分割，并使用where语句来设定查询条件。</p><p>可以在 WHERE 子句中指定任何条件。</p><p>可以使用 AND 或者 OR 指定一个或多个条件。</p><p>WHERE 子句也可以运用于 SQL 的 DELETE 或者 UPDATE 命令。</p><p>WHERE 子句类似于程序语言中的 if 条件，根据 MySQL 表中的字段值来读取指定的数据。</p><p>如果给定的条件在表中没有任何匹配的记录，那么查询不会返回任何数据。</p><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select name from two where id=1;</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">| name   |</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">| 张三   |</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><p>MySQL 的 where 子句的字符串比较是不区分大小写的。 可以使用 binary 关键字来设定 where 子句的字符串比较是区分大小写的。</p><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select name from two where id=1;</span><br><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">| id | name   | class  |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">|  1 | 张三   | 三班   |</span><br><span class="line">|  2 | 李四   | 四班   |</span><br><span class="line">|  3 | aaa    | 一班   |</span><br><span class="line"><span class="code">+----+</span>--------<span class="code">+--------+</span></span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two where name=<span class="emphasis">'AAA'</span>;</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span></span><br><span class="line">| id | name | class  |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span></span><br><span class="line">|  3 | aaa  | 一班   |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two where binary name=<span class="emphasis">'AAA'</span>;</span><br><span class="line">Empty set (0.05 sec)</span><br></pre></td></tr></table></figure></div><h2 id="3、like-模糊查询"><a href="#3、like-模糊查询" class="headerlink" title="3、like 模糊查询"></a>3、like 模糊查询</h2><p>如果没有使用百分号 %, like 子句与等号 = 的效果是一样的。</p><p>语法</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 查询内容 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 列名 <span class="keyword">like</span> ’%a’;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 查询内容 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 列名 <span class="keyword">not</span> <span class="keyword">like</span> ‘%a’;</span><br></pre></td></tr></table></figure><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BRAINFUCK"><figure class="iseeu highlight /brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">‘%a’		以a结尾的数据</span></span><br><span class="line"><span class="comment">‘a%’		以a开头的数据</span></span><br><span class="line"><span class="comment">‘%a%’	</span>        <span class="comment">包含a的数据</span></span><br><span class="line"><span class="comment">‘_a_’		三位且中间是a的数据</span></span><br><span class="line"><span class="comment">‘_a’		两位且结尾是a的数据</span></span><br><span class="line"><span class="comment">‘a_’		两位且开头是a的数据</span></span><br><span class="line"><span class="comment">‘a__b’	</span>        <span class="comment">四位以a开头且以b结尾的数据</span></span><br></pre></td></tr></table></figure></div><p>查询张姓开头的人的分数：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> score <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> ‘张%’;</span><br></pre></td></tr></table></figure></div><p>查询名字优三位数，且中间一个字为强的人的id：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> ‘_强_’;</span><br></pre></td></tr></table></figure></div><p>查询不以张姓开头的人的分数：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> score <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">not</span> <span class="keyword">like</span> ‘张%’;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from two;</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">| id | name | class  | age  |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">|  3 | bbb  | 二班   |   21 |</span><br><span class="line">|  1 | aaa  | 一班   |  687 |</span><br><span class="line">|  2 | aab  | 二班   |   22 |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from two where name like <span class="emphasis">'a%'</span>;</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">| id | name | class  | age  |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">|  1 | aaa  | 一班   |  687 |</span><br><span class="line">|  2 | aab  | 二班   |   22 |</span><br><span class="line"><span class="code">+----+</span>------<span class="code">+--------+</span>------+</span><br><span class="line">2 rows in set (0.05 sec)</span><br></pre></td></tr></table></figure></div><h2 id="4、限制条件的格式"><a href="#4、限制条件的格式" class="headerlink" title="4、限制条件的格式"></a>4、限制条件的格式</h2><ul><li>运算符：</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BNF"><figure class="iseeu highlight /bnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">&lt;	小于</span></span><br><span class="line"><span class="attribute">&gt;</span>	大于</span><br><span class="line">&gt;=	大于等于</span><br><span class="line"><span class="attribute">&lt;=	小于等于</span></span><br><span class="line"><span class="attribute">&lt;&gt;</span>	不等于</span><br><span class="line">!=	不等于</span><br></pre></td></tr></table></figure></div><p>运算符连接多条数据进行比较时，无法直接比较，可以在多条数据前添加any或all</p><ul><li>in 在范围之内</li></ul><p>在嵌套语句中，如果嵌套部分查询的结果为多条时，只能用 in；如果只有一条结果，可以用“in”或者“=”</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> A <span class="keyword">where</span> sal = (<span class="keyword">select</span> <span class="keyword">max</span>(sal) <span class="keyword">from</span> A);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> A <span class="keyword">where</span> sal <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">max</span>(sal) <span class="keyword">from</span> A <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">class</span>);</span><br></pre></td></tr></table></figure></div><p>注意：</p><p><strong>在嵌套语句中 in 和 嵌套语句中包含 limit的语句不能一起使用</strong></p><p>可以写为：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> goods <span class="keyword">where</span> click_count <span class="keyword">in</span> (<span class="keyword">select</span> click_count <span class="keyword">from</span> ( <span class="keyword">select</span> * <span class="keyword">from</span> goods <span class="keyword">group</span> <span class="keyword">by</span> click_count <span class="keyword">order</span> <span class="keyword">by</span> click_count <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">2</span>,<span class="number">3</span>) <span class="keyword">as</span> t);</span><br></pre></td></tr></table></figure><ul><li>not in 不在范围内</li></ul><p>连接符号：</p><ul><li><p>and 和，且</p></li><li><p>or 或</p></li></ul><p>and 和or 同时使用的时候，先运算and，再运算or</p><p>如果需要先运算or，需要加括号</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MIPSASM"><figure class="iseeu highlight /mipsasm"><table><tr><td class="code"><pre><span class="line">xxx <span class="keyword">and </span>xxx <span class="keyword">or </span>xxx <span class="keyword">and </span>xxx</span><br><span class="line"></span><br><span class="line">(xxx <span class="keyword">or </span>xxx) <span class="keyword">and </span>(xxx <span class="keyword">or </span>xxx)     也可以写为 a in (xxx,yyy) <span class="keyword">and </span><span class="keyword">b </span>in (xxx,yyy)</span><br></pre></td></tr></table></figure></div><ul><li><code>between ... and ...</code> 在…和…之间</li></ul><p>result 的值在50-60之间，用 <code>result &gt;=50 and result &lt;=60</code> 表示</p><p>或 <code>result between 50 and 60</code></p><ul><li><code>not between ... and ...</code> 不在…和…之间</li></ul><p>result 的值在50-60之外，用 <code>result &lt;50 or result &gt;60</code> 表示</p><p>或 <code>result not between 50 and 60</code></p><ul><li><p>is</p></li><li><p>is not</p></li></ul><p>设置name为null</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> <span class="keyword">name</span>=<span class="literal">null</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">1</span>;</span><br></pre></td></tr></table></figure></div><p>查询姓名为空的信息</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">is</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure></div><p><strong>null 不能用 ‘!=’，’=’，’&lt;&gt;’ 来判断 虽然不会报错，但数据不正确</strong>。</p><p>应该用，<strong>is not null 或 is null</strong></p><h2 id="5、as-取别名"><a href="#5、as-取别名" class="headerlink" title="5、as 取别名"></a>5、as 取别名</h2><p>取别名：as 对一个数据库表字段取别名</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 要查的列名 <span class="keyword">as</span> ‘别名’ <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 要查的列名 ‘别名’ <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><p>as可以不写，别名可以不带引号</p><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select name from AAA;</span><br><span class="line"><span class="code">+--------------+</span></span><br><span class="line">| name         |</span><br><span class="line"><span class="code">+--------------+</span></span><br><span class="line">| 小花龙       |</span><br><span class="line">| 小等待龙     |</span><br><span class="line">| 小李         |</span><br><span class="line"><span class="code">+--------------+</span></span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select name <span class="emphasis">'姓名'</span> from AAA;</span><br><span class="line"><span class="code">+--------------+</span></span><br><span class="line">| 姓名         |</span><br><span class="line"><span class="code">+--------------+</span></span><br><span class="line">| 小花龙       |</span><br><span class="line">| 小等待龙     |</span><br><span class="line">| 小李         |</span><br><span class="line"><span class="code">+--------------+</span></span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><p><strong>from型嵌套的表必须要取别名</strong></p><h2 id="6、group-by-分组"><a href="#6、group-by-分组" class="headerlink" title="6、group by 分组"></a>6、group by 分组</h2><p>group by 语法可以根据给定数据列的每个成员对查询结果进行分组统计，最终得到一个分组汇总表。</p><p>聚合函数中select字句中的列名必须为分组列或列函数。列函数对于group by子句定义的每个组各返回一个结果。</p><p>group by只取各分组中的第一个数据。</p><p>group by可以对多个列进行分组。</p><p>在分组的列上我们可以使用 COUNT, SUM, AVG,等函数。</p><p>在分组后可以直接跟 asc/desc 对分组的列进行排序，默认为asc，可以省略</p><p>GROUP BY 语法:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">column_name</span>, <span class="keyword">function</span>(<span class="built_in">column_name</span>)</span><br><span class="line"><span class="keyword">FROM</span> <span class="built_in">table_name</span></span><br><span class="line"><span class="keyword">WHERE</span> <span class="built_in">column_name</span> <span class="keyword">operator</span> <span class="keyword">value</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="built_in">column_name</span>;</span><br></pre></td></tr></table></figure></div><h3 id="6-1分组逻辑"><a href="#6-1分组逻辑" class="headerlink" title="6.1分组逻辑"></a>6.1分组逻辑</h3><p>对一个列进行分组：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">select * <span class="keyword">from</span> CCC <span class="built_in"> group </span>by class</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/19/UWkuyF.png" alt="UWkuyF.png"></p><p>对两个列进行分组：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">select * <span class="keyword">from</span> CCC <span class="built_in"> group </span>by sex,class</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/19/UWk1oR.png" alt="UWk1oR.png"></p><h2 id="6-2、添加演示实例"><a href="#6-2、添加演示实例" class="headerlink" title="6.2、添加演示实例"></a>6.2、添加演示实例</h2><p><a href="https://www.runoob.com/mysql/mysql-group-by-statement.html" target="_blank" rel="noopener" class="LinkCard">菜鸟教程MySQL GROUP BY 语句</a></p><p>本实例使用到了以下表结构及数据，使用前我们可以先将以下数据导入数据库中。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">NAMES</span> utf8;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS = <span class="number">0</span>;</span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">--  Table structure for `employee_tbl`</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`employee_tbl`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`employee_tbl`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">char</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  <span class="string">`date`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`singin`</span> <span class="built_in">tinyint</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'登录次数'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">--  Records of `employee_tbl`</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`employee_tbl`</span> <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'小明'</span>, <span class="string">'2016-04-22 15:25:33'</span>, <span class="string">'1'</span>), (<span class="string">'2'</span>, <span class="string">'小王'</span>, <span class="string">'2016-04-20 15:25:47'</span>, <span class="string">'3'</span>), (<span class="string">'3'</span>, <span class="string">'小丽'</span>, <span class="string">'2016-04-19 15:26:02'</span>, <span class="string">'2'</span>), (<span class="string">'4'</span>, <span class="string">'小王'</span>, <span class="string">'2016-04-07 15:26:14'</span>, <span class="string">'4'</span>), (<span class="string">'5'</span>, <span class="string">'小明'</span>, <span class="string">'2016-04-11 15:26:40'</span>, <span class="string">'4'</span>), (<span class="string">'6'</span>, <span class="string">'小明'</span>, <span class="string">'2016-04-04 15:26:54'</span>, <span class="string">'2'</span>);</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></div><p>导入成功后，执行以下 SQL 语句：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">set</span> names utf8;</span><br><span class="line">mysql&gt; select * <span class="keyword">from</span> employee_tbl;</span><br><span class="line">+----+--------+---------------------+--------+</span><br><span class="line">| id | name   | date                | singin |</span><br><span class="line">+----+--------+---------------------+--------+</span><br><span class="line">|  <span class="number">1</span> | 小明   | <span class="number">2016</span><span class="number">-04</span><span class="number">-22</span> <span class="number">15</span>:<span class="number">25</span>:<span class="number">33</span> |      <span class="number">1</span> |</span><br><span class="line">|  <span class="number">2</span> | 小王   | <span class="number">2016</span><span class="number">-04</span><span class="number">-20</span> <span class="number">15</span>:<span class="number">25</span>:<span class="number">47</span> |      <span class="number">3</span> |</span><br><span class="line">|  <span class="number">3</span> | 小丽   | <span class="number">2016</span><span class="number">-04</span><span class="number">-19</span> <span class="number">15</span>:<span class="number">26</span>:<span class="number">02</span> |      <span class="number">2</span> |</span><br><span class="line">|  <span class="number">4</span> | 小王   | <span class="number">2016</span><span class="number">-04</span><span class="number">-07</span> <span class="number">15</span>:<span class="number">26</span>:<span class="number">14</span> |      <span class="number">4</span> |</span><br><span class="line">|  <span class="number">5</span> | 小明   | <span class="number">2016</span><span class="number">-04</span><span class="number">-11</span> <span class="number">15</span>:<span class="number">26</span>:<span class="number">40</span> |      <span class="number">4</span> |</span><br><span class="line">|  <span class="number">6</span> | 小明   | <span class="number">2016</span><span class="number">-04</span><span class="number">-04</span> <span class="number">15</span>:<span class="number">26</span>:<span class="number">54</span> |      <span class="number">2</span> |</span><br><span class="line">+----+--------+---------------------+--------+</span><br><span class="line"><span class="number">6</span> rows <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></div><h3 id="6-3、使用group-by"><a href="#6-3、使用group-by" class="headerlink" title="6.3、使用group by"></a>6.3、使用group by</h3><p>接下来我们使用 GROUP BY 语句 将数据表按名字进行分组，并统计每个人有多少条记录：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select name, count(<span class="strong">*) from   employee_tbl group by name;</span></span><br><span class="line"><span class="strong">+--------+----------+</span></span><br><span class="line"><span class="strong">| name   | count(*</span>) |</span><br><span class="line"><span class="code">+--------+</span>----------+</span><br><span class="line">| 小明   |        3 |</span><br><span class="line">| 小王   |        2 |</span><br><span class="line">| 小丽   |        1 |</span><br><span class="line"><span class="code">+--------+</span>----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h3 id="6-4、使用with-rollup"><a href="#6-4、使用with-rollup" class="headerlink" title="6.4、使用with rollup"></a>6.4、使用with rollup</h3><p>with rollup 可以实现在分组统计数据基础上再进行相同的统计（SUM,AVG,COUNT…）。</p><p>例如我们将以上的数据表按名字进行分组，再统计每个人登录的次数：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT name, SUM(singin) as singin<span class="emphasis">_count FROM  employee_</span>tbl GROUP BY name WITH ROLLUP;</span><br><span class="line"><span class="code">+--------+</span>--------------+</span><br><span class="line">| name   | singin<span class="emphasis">_count |</span></span><br><span class="line"><span class="emphasis">+--------+--------------+</span></span><br><span class="line"><span class="emphasis">| 小丽   |            2 |</span></span><br><span class="line"><span class="emphasis">| 小明   |            7 |</span></span><br><span class="line"><span class="emphasis">| 小王   |            7 |</span></span><br><span class="line"><span class="emphasis">| NULL   |           16 |</span></span><br><span class="line"><span class="emphasis">+--------+--------------+</span></span><br><span class="line"><span class="emphasis">4 rows in set (0.02 sec)</span></span><br></pre></td></tr></table></figure></div><p>其中记录 NULL 表示所有人的登录次数。</p><h3 id="6-5、使用-coalesce"><a href="#6-5、使用-coalesce" class="headerlink" title="6.5、使用 coalesce"></a>6.5、使用 coalesce</h3><p>我们可以使用 coalesce 来设置一个可以取代 NUll 的名称，coalesce 语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">coalesce</span>(a,b,c);</span><br></pre></td></tr></table></figure></div><p>参数说明：</p><p>如果<code>a==null</code>,则选择b；如果<code>b==null</code>,则选择c；如果<code>a!=null</code>,则选择a；如果a b c 都为null ，则返回为null（没意义）。</p><p>以下实例中如果名字为空我们使用总数代替：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT coalesce(name, <span class="emphasis">'总数'</span>), SUM(singin) as singin<span class="emphasis">_count FROM  employee_</span>tbl GROUP BY name WITH ROLLUP;</span><br><span class="line"><span class="code">+--------------------------+</span>--------------+</span><br><span class="line">| coalesce(name, <span class="emphasis">'总数'</span>)   | singin<span class="emphasis">_count |</span></span><br><span class="line"><span class="emphasis">+--------------------------+--------------+</span></span><br><span class="line"><span class="emphasis">| 小丽                     |            2 |</span></span><br><span class="line"><span class="emphasis">| 小明                     |            7 |</span></span><br><span class="line"><span class="emphasis">| 小王                     |            7 |</span></span><br><span class="line"><span class="emphasis">| 总数                     |           16 |</span></span><br><span class="line"><span class="emphasis">+--------------------------+--------------+</span></span><br><span class="line"><span class="emphasis">4 rows in set (0.00 sec)</span></span><br></pre></td></tr></table></figure></div><h2 id="7、having-筛选"><a href="#7、having-筛选" class="headerlink" title="7、having    筛选"></a>7、having 筛选</h2><p>having语句通常与group by语句联合使用，用来过滤由group by语句返回的记录集。</p><p>having语句的存在弥补了where关键字不能与聚合函数联合使用的不足，当存在聚合函数为条件的sql中，需要把where换成having</p><p>查询（每个班级）平均分大于60的班级名字</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">select class <span class="keyword">from</span> A<span class="built_in"> group </span>by class having avg(score)&gt;60;</span><br></pre></td></tr></table></figure></div><h2 id="8、order-by-排序"><a href="#8、order-by-排序" class="headerlink" title="8、order by    排序"></a>8、order by 排序</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AXAPTA"><figure class="iseeu highlight /axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 列名 <span class="keyword">desc</span>/<span class="keyword">asc</span></span><br></pre></td></tr></table></figure></div><p>desc 代表倒序</p><p>asc 代表正序 不填写则默认为正序</p><p>可以对多列进行排序：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">class</span>，<span class="type">name</span> <span class="keyword">desc</span> 	 （对<span class="keyword">class</span>正序排列，再对<span class="type">name</span>倒序排列）</span><br></pre></td></tr></table></figure></div><p>例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from one order by name asc;</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">| id   | name      | class  | grade     |</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">|    3 | 孙一孙    | 一班   | 二年级    |</span><br><span class="line">|    4 | 李一李    | 二班   | 二年级    |</span><br><span class="line">|    1 | 赵一赵    | 一班   | 一年级    |</span><br><span class="line">|    2 | 钱一钱    | 二班   | 一年级    |</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from one order by name desc;</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">| id   | name      | class  | grade     |</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">|    2 | 钱一钱    | 二班   | 一年级    |</span><br><span class="line">|    1 | 赵一赵    | 一班   | 一年级    |</span><br><span class="line">|    4 | 李一李    | 二班   | 二年级    |</span><br><span class="line">|    3 | 孙一孙    | 一班   | 二年级    |</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h2 id="9、limit"><a href="#9、limit" class="headerlink" title="9、limit"></a>9、limit</h2><p>放在sql语句尾，用来决定展示前多少条的数据 limit x,y</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line">limit <span class="symbol">x</span> </span><br><span class="line">代表展示前<span class="symbol">x</span>行</span><br><span class="line"></span><br><span class="line">limit <span class="symbol">x</span>,<span class="symbol">y</span></span><br><span class="line"><span class="symbol">x</span>代表从第<span class="symbol">x</span>行开始</span><br><span class="line"><span class="symbol">y</span>代表展示<span class="symbol">y</span>行</span><br></pre></td></tr></table></figure></div><p>注意！若查询一个范围内的行，比如2-7行：</p><p>此时，x为2-1，y为7-x</p><p>查看前3行的数据：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">from</span> A <span class="keyword">limit</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>查看从第3行开始，往后5行的数据：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">Select * <span class="keyword">from</span> A limit <span class="number">2</span>,<span class="number">5</span>；</span><br></pre></td></tr></table></figure></div><p>查看后两行：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> CCC <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>查看前五行：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">SQLserver：	<span class="keyword">select</span> top <span class="number">5</span> * <span class="keyword">from</span> A；</span><br><span class="line">Mysql：    	<span class="keyword">Select</span> * <span class="keyword">from</span> A <span class="keyword">limit</span> <span class="number">5</span>；</span><br><span class="line"><span class="keyword">Oracle</span>：   	<span class="keyword">Select</span> * <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">rownum</span> &lt;=<span class="number">5</span>;</span><br></pre></td></tr></table></figure></div><p>注意：</p><p><strong>在嵌套语句中 in 和 嵌套语句中包含 limit的语句不能一起使用</strong></p><p>可以写为：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> goods <span class="keyword">where</span> click_count <span class="keyword">in</span> (<span class="keyword">select</span> click_count <span class="keyword">from</span> ( <span class="keyword">select</span> * <span class="keyword">from</span> goods <span class="keyword">group</span> <span class="keyword">by</span> click_count <span class="keyword">order</span> <span class="keyword">by</span> click_count <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">2</span>,<span class="number">3</span>) <span class="keyword">as</span> t);</span><br></pre></td></tr></table></figure><h2 id="10、去重-distinct"><a href="#10、去重-distinct" class="headerlink" title="10、去重 distinct"></a>10、去重 distinct</h2><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 列名 <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure><p>单列去重：</p><p>查询学生表里的学生字段并去重</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="keyword">name</span> <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure></div><p>多列去重：</p><p>查询学生表里的学生、班级、分数字段并对其去重</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="keyword">name</span>,<span class="keyword">class</span>,score <span class="keyword">from</span> A;</span><br><span class="line"></span><br><span class="line">对全部字段进行去重</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> * <span class="keyword">from</span> A;</span><br></pre></td></tr></table></figure></div><h2 id="11、union（全连接）"><a href="#11、union（全连接）" class="headerlink" title="11、union（全连接）"></a>11、union（全连接）</h2><p>MySQL UNION 操作符用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中。多个 SELECT 语句会删除重复的数据。</p><p>union必须满足取出的列数相同，列名称未必一致，默认以第一条sql的列名称为准。</p><p>语法:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> expression1, expression2, ... expression_n</span><br><span class="line">from tables</span><br><span class="line">[where conditions]</span><br><span class="line"><span class="class"><span class="keyword">union</span> [<span class="title">ALL</span> | <span class="title">DISTINCT</span>]</span></span><br><span class="line"><span class="keyword">select</span> expression1, expression2, ... expression_n</span><br><span class="line">from tables</span><br><span class="line">[where conditions];</span><br></pre></td></tr></table></figure></div><p>参数：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GROOVY"><figure class="iseeu highlight /groovy"><table><tr><td class="code"><pre><span class="line">expression1, expression2, ... <span class="string">expression_n:</span> 要检索的列。</span><br><span class="line"><span class="string">tables:</span> 要检索的数据表。</span><br><span class="line">where <span class="string">conditions:</span> 可选， 检索条件。</span><br><span class="line"><span class="string">distinct:</span> 可选，删除结果集中重复的数据。默认情况下 UNION 操作符已经删除了重复数据，所以 DISTINCT 修饰符对结果没啥影响。</span><br><span class="line"><span class="string">all:</span> 可选，返回所有结果集，包含重复数据。</span><br></pre></td></tr></table></figure></div><p>演示数据库：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select * from one;</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">| id   | name      | class  | grade     |</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">|    1 | 赵一赵    | 一班   | 一年级    |</span><br><span class="line">|    2 | 钱一钱    | 二班   | 一年级    |</span><br><span class="line">|    3 | 孙一孙    | 一班   | 二年级    |</span><br><span class="line">|    4 | 李一李    | 二班   | 二年级    |</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from four;</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">| id   | name      | class  | grade     |</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">|    1 | 周四周    | 一班   | 一年级    |</span><br><span class="line">|    2 | 吴四吴    | 二班   | 一年级    |</span><br><span class="line">|    3 | 郑四郑    | 一班   | 二年级    |</span><br><span class="line">|    4 | 王四王    | 二班   | 二年级    |</span><br><span class="line"><span class="code">+------+</span>-----------<span class="code">+--------+</span>-----------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h3 id="例1：SQL-union-实例"><a href="#例1：SQL-union-实例" class="headerlink" title="例1：SQL union 实例"></a>例1：SQL union 实例</h3><p>从 “one” 和 “four” 表中选取所有不同的class（只有不同的值）：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select class from one</span><br><span class="line"><span class="code">    -&gt; union</span></span><br><span class="line"><span class="code">    -&gt; select class from four</span></span><br><span class="line"><span class="code">    -&gt; order by class;</span></span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">| class  |</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">| 一班   |</span><br><span class="line">| 二班   |</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">2 rows in set (0.32 sec)</span><br></pre></td></tr></table></figure></div><h3 id="例2：SQL-union-all-实例"><a href="#例2：SQL-union-all-实例" class="headerlink" title="例2：SQL union all 实例"></a>例2：SQL union all 实例</h3><p>从 “one” 和 “four” 表中选取所有的class（也有重复的值）：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select class from one</span><br><span class="line"><span class="code">    -&gt; union all</span></span><br><span class="line"><span class="code">    -&gt; select class from four</span></span><br><span class="line"><span class="code">    -&gt; order by class;</span></span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">| class  |</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">| 一班   |</span><br><span class="line">| 一班   |</span><br><span class="line">| 一班   |</span><br><span class="line">| 一班   |</span><br><span class="line">| 二班   |</span><br><span class="line">| 二班   |</span><br><span class="line">| 二班   |</span><br><span class="line">| 二班   |</span><br><span class="line"><span class="code">+--------+</span></span><br><span class="line">8 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h3 id="例3：带有-where-的-SQL-union-all"><a href="#例3：带有-where-的-SQL-union-all" class="headerlink" title="例3：带有 where 的 SQL union all"></a>例3：带有 where 的 SQL union all</h3><p>从 “one” 和 “four” 表中选取所有的年级（一年级）（也有重复的值）：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; select grade,name from one where grade=<span class="emphasis">'一年级'</span></span><br><span class="line"><span class="code">    -&gt; union all</span></span><br><span class="line"><span class="code">    -&gt; select grade,name from four where grade='一年级'</span></span><br><span class="line"><span class="code">    -&gt; order by grade;</span></span><br><span class="line"><span class="code">+-----------+</span>-----------+</span><br><span class="line">| grade     | name      |</span><br><span class="line"><span class="code">+-----------+</span>-----------+</span><br><span class="line">| 一年级    | 赵一赵    |</span><br><span class="line">| 一年级    | 钱一钱    |</span><br><span class="line">| 一年级    | 周四周    |</span><br><span class="line">| 一年级    | 吴四吴    |</span><br><span class="line"><span class="code">+-----------+</span>-----------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h3 id="例4：查询每个班级中分数最高的人的信息"><a href="#例4：查询每个班级中分数最高的人的信息" class="headerlink" title="例4：查询每个班级中分数最高的人的信息"></a>例4：查询每个班级中分数最高的人的信息</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GHERKIN"><figure class="iseeu highlight /gherkin"><table><tr><td class="code"><pre><span class="line">mysql&gt; select <span class="symbol">*</span> from CCC;                                                               </span><br><span class="line">+----+-----------------------+-------+-------+------+</span><br><span class="line">|<span class="string"> id </span>|<span class="string"> name                  </span>|<span class="string"> class </span>|<span class="string"> score </span>|<span class="string"> sex  </span>|</span><br><span class="line">+----+-----------------------+-------+-------+------+</span><br><span class="line">|<span class="string">  1 </span>|<span class="string"> 小芳                  </span>|<span class="string"> 1班   </span>|<span class="string">    80 </span>|<span class="string"> 男   </span>|</span><br><span class="line">|<span class="string">  2 </span>|<span class="string"> 小这芳                </span>|<span class="string"> 2班   </span>|<span class="string">    90 </span>|<span class="string"> 女   </span>|</span><br><span class="line">|<span class="string">  3 </span>|<span class="string"> 小明                  </span>|<span class="string"> 1班   </span>|<span class="string">    50 </span>|<span class="string"> 女   </span>|</span><br><span class="line">|<span class="string">  4 </span>|<span class="string"> 小花                  </span>|<span class="string"> 1班   </span>|<span class="string">    90 </span>|<span class="string"> 女   </span>|</span><br><span class="line">|<span class="string">  5 </span>|<span class="string"> 张晓明山阿什顿        </span>|<span class="string"> 3班   </span>|<span class="string">    80 </span>|<span class="string"> 男   </span>|</span><br><span class="line">|<span class="string">  6 </span>|<span class="string"> 小明                  </span>|<span class="string"> 3班   </span>|<span class="string">    60 </span>|<span class="string"> 女   </span>|</span><br><span class="line">|<span class="string">  7 </span>|<span class="string"> 小龙                  </span>|<span class="string"> 3班   </span>|<span class="string">    75 </span>|<span class="string"> 男   </span>|</span><br><span class="line">|<span class="string">  8 </span>|<span class="string"> 小李                  </span>|<span class="string"> 1班   </span>|<span class="string">    90 </span>|<span class="string"> 男   </span>|</span><br><span class="line">|<span class="string">  9 </span>|<span class="string"> 小明                  </span>|<span class="string"> 2班   </span>|<span class="string">   100 </span>|<span class="string"> 女   </span>|</span><br><span class="line">+----+-----------------------+-------+-------+------+</span><br><span class="line">9 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select <span class="symbol">*</span> from CCC where class=’1班’ and score=(select max(score) from CCC where class='1班')</span><br><span class="line">    -&gt; union</span><br><span class="line">    -&gt; select <span class="symbol">*</span> from (select <span class="symbol">*</span> from CCC where class='2班' order by score desc) as A where score=(select max(score) from CCC where class='2班')</span><br><span class="line">    -&gt; union</span><br><span class="line">    -&gt; select <span class="symbol">*</span> from CCC where class=’3班’ and score=(select score from CCC where class='3班' order by score desc limit 1);</span><br><span class="line">+----+-----------------------+-------+-------+------+</span><br><span class="line">|<span class="string"> id </span>|<span class="string"> name                  </span>|<span class="string"> class </span>|<span class="string"> score </span>|<span class="string"> sex  </span>|</span><br><span class="line">+----+-----------------------+-------+-------+------+</span><br><span class="line">|<span class="string">  4 </span>|<span class="string"> 小花                  </span>|<span class="string"> 1班   </span>|<span class="string">    90 </span>|<span class="string"> 女   </span>|</span><br><span class="line">|<span class="string">  8 </span>|<span class="string"> 小李                  </span>|<span class="string"> 1班   </span>|<span class="string">    90 </span>|<span class="string"> 男   </span>|</span><br><span class="line">|<span class="string">  9 </span>|<span class="string"> 小明                  </span>|<span class="string"> 2班   </span>|<span class="string">   100 </span>|<span class="string"> 女   </span>|</span><br><span class="line">|<span class="string">  5 </span>|<span class="string"> 张晓明山阿什顿        </span>|<span class="string"> 3班   </span>|<span class="string">    80 </span>|<span class="string"> 男   </span>|</span><br><span class="line">+----+-----------------------+-------+-------+------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></div><h2 id="12、聚合函数"><a href="#12、聚合函数" class="headerlink" title="12、聚合函数"></a>12、聚合函数</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="Q"><figure class="iseeu highlight /q"><table><tr><td class="code"><pre><span class="line">统计函数关键字：	                <span class="built_in">count</span>（列名）统计一列非空数据的行数</span><br><span class="line">求和关键字;			<span class="built_in">sum</span>（列名）</span><br><span class="line">求平均数：			<span class="built_in">avg</span>（列名）</span><br><span class="line">求最大值：			<span class="built_in">max</span>（列名）</span><br><span class="line">求最小值：			<span class="built_in">min</span>（列名）</span><br></pre></td></tr></table></figure></div><p>例1：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">统计班级的人的个数：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">id</span>) <span class="keyword">from</span> A;</span><br><span class="line"></span><br><span class="line">统计班级分数的总和：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sum</span>(score) <span class="keyword">from</span> A;</span><br><span class="line"></span><br><span class="line">统计班级的人的平均年龄：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(age) <span class="keyword">from</span> A;</span><br><span class="line"></span><br><span class="line">统计班级的所有人的最大年龄：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(age) <span class="keyword">from</span> A;</span><br><span class="line"></span><br><span class="line">统计班级的所有人的最小年龄：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">min</span>(age) <span class="keyword">from</span> A;</span><br></pre></td></tr></table></figure></div><p>例2：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">查询最大的分数（两种方法）</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(score) 最大分数 <span class="keyword">from</span> A;</span><br><span class="line"><span class="keyword">select</span> score <span class="keyword">from</span> A <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">查询最小的分数（两种方法）</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">min</span>(score) 最小分数 <span class="keyword">from</span> A;</span><br><span class="line"><span class="keyword">select</span> score <span class="keyword">from</span> A <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">limit</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">查询平均工资</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(sal) 平均工资 <span class="keyword">from</span> A;</span><br><span class="line"></span><br><span class="line">统计A表中有多少条数据</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">id</span>) <span class="keyword">from</span> A;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> A;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">class</span>) <span class="keyword">from</span> A;</span><br><span class="line"></span><br><span class="line">查询所有人的薪资总和</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sum</span>(sal) <span class="keyword">from</span> A;</span><br><span class="line"></span><br><span class="line">查询工资加奖金的总和（两种方法）</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sum</span>(sal+comm) 总和 <span class="keyword">from</span> A;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sum</span>(sal)+<span class="keyword">sum</span>(comm) 总和 <span class="keyword">from</span> A;</span><br><span class="line"></span><br><span class="line">查询每个人的工资与奖金的和</span><br><span class="line"><span class="keyword">select</span> sal+comm 总和 <span class="keyword">from</span> A;</span><br></pre></td></tr></table></figure></div><h2 id="13、单表查询最终格式"><a href="#13、单表查询最终格式" class="headerlink" title="13、单表查询最终格式"></a>13、单表查询最终格式</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 查询内容</span><br><span class="line"><span class="keyword">from</span> 表</span><br><span class="line"><span class="keyword">where</span> 限制条件</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 列名		<span class="comment"># 分组</span></span><br><span class="line"><span class="keyword">having</span> 限制条件		<span class="comment"># 等同于where</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 列名 <span class="keyword">desc</span>/<span class="keyword">asc</span>		<span class="comment"># 排序</span></span><br><span class="line"><span class="keyword">limit</span> 行数				<span class="comment"># 查询前/后几行</span></span><br><span class="line"></span><br><span class="line">查看前五行： SQLserver：<span class="keyword">select</span> top5* <span class="keyword">from</span> A；</span><br><span class="line">           Mysql：    <span class="keyword">Select</span> <span class="keyword">from</span> A limit5；</span><br><span class="line">           <span class="keyword">Oracle</span>：   <span class="keyword">Select</span> <span class="keyword">from</span> A <span class="keyword">where</span> <span class="keyword">rownum</span>  &lt;=<span class="number">5</span>;</span><br></pre></td></tr></table></figure></div><p>几个关键字的使用顺序为：</p><blockquote><p>where、group by、having、order by、limit</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">as</span> ‘名字’ <span class="keyword">from</span> student <span class="keyword">where</span> age=<span class="number">15</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">class</span> <span class="keyword">having</span> <span class="keyword">avg</span>(score) <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span> <span class="keyword">limit</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure></div><h1 id="十一、多表查询"><a href="#十一、多表查询" class="headerlink" title="十一、多表查询"></a>十一、多表查询</h1><p>在多表查询时，先找查询内容，再看跟哪几个表，最后再找限制条件（查询内容和限制条件在哪几个表里面，就需要把这几个表关联到一起）</p><p>多表查询必须指定字段所在的表，只有一个表拥有的字段可以不加表名（一般都会加上）</p><p>关联多表后，如果后面需要跟限制条件，需要使用and链接，同时，如果该限制条件中存在or的用法，则需要把该限制条件用括号统一包起来</p><p>如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">select <span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>name from A,B where <span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>id=<span class="module-access"><span class="module"><span class="identifier">B</span>.</span></span>id <span class="keyword">and</span> (<span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>score&gt;<span class="number">90</span> <span class="keyword">or</span> <span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>score&lt;<span class="number">30</span>);</span><br></pre></td></tr></table></figure></div><h2 id="1、内连接"><a href="#1、内连接" class="headerlink" title="1、内连接"></a>1、内连接</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span>…… <span class="keyword">on</span>……</span><br></pre></td></tr></table></figure></div><p>查询两张表A，B中所有符合where条件限制的结果，如果这两张表中存在至少一个匹配项，就返回该匹配项的结果。</p><p>两表：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 内容 <span class="keyword">from</span> A <span class="keyword">inner</span> <span class="keyword">join</span> B <span class="keyword">on</span> A.主键=B.外键 <span class="keyword">where</span> 列=值（条件）;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 内容 <span class="keyword">from</span> A,B <span class="keyword">where</span> A.主键=B.外键 <span class="keyword">and</span> 列=值（条件）;</span><br></pre></td></tr></table></figure><p>三表：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 内容 <span class="keyword">from</span> A <span class="keyword">inner</span> <span class="keyword">join</span> B <span class="keyword">on</span> A.主键=B.外键 <span class="keyword">inner</span> <span class="keyword">join</span> C <span class="keyword">on</span> A.主键=C.外键 <span class="keyword">where</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 内容 <span class="keyword">from</span> A,B,C <span class="keyword">where</span> A.主键=B.外键 <span class="keyword">and</span> A.主键=C.外键 <span class="keyword">and</span> 列=值（条件）;</span><br></pre></td></tr></table></figure><p>查询名字为小明的人的年龄：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">select <span class="module-access"><span class="module"><span class="identifier">B</span>.</span></span>age from A inner join B on <span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>id=<span class="module-access"><span class="module"><span class="identifier">B</span>.</span></span>id where <span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>name=’小明’;</span><br><span class="line"></span><br><span class="line">select <span class="module-access"><span class="module"><span class="identifier">B</span>.</span></span>age from A,B where <span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>id=<span class="module-access"><span class="module"><span class="identifier">B</span>.</span></span>id <span class="keyword">and</span> <span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>name=’小明’;</span><br></pre></td></tr></table></figure></div><h2 id="2、左连接"><a href="#2、左连接" class="headerlink" title="2、左连接"></a>2、左连接</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VBSCRIPT"><figure class="iseeu highlight /vbscript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">left</span> <span class="built_in">join</span>…… <span class="keyword">on</span>……</span><br></pre></td></tr></table></figure></div><p>以左表为主，查询左表中的所有数据以及左表所有符合where条件的结果，即使右表中没有匹配项，也从左表中返回所有的数据行。</p><p>两表：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 内容 <span class="keyword">from</span> A <span class="keyword">left</span> <span class="keyword">join</span> B <span class="keyword">on</span> A.主键=B.外键 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><p>三表：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 内容 <span class="keyword">from</span> A <span class="keyword">left</span> <span class="keyword">join</span> B <span class="keyword">on</span> A.主键=B.外键 <span class="keyword">left</span> <span class="keyword">join</span> C <span class="keyword">on</span> A.主键=C.外键 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><h2 id="3、右连接"><a href="#3、右连接" class="headerlink" title="3、右连接"></a>3、右连接</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="literal">right</span> join…… <span class="keyword">on</span>……</span><br></pre></td></tr></table></figure></div><p>以右表为主，查询右表中的所有数据以及右表所有符合where条件的结果，即使左表中没有匹配项，也从右表中返回所有的数据行。</p><p>两表：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 内容 <span class="keyword">from</span> A <span class="keyword">right</span> <span class="keyword">join</span> B <span class="keyword">on</span> A.主键=B.外键 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><p>三表：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> 内容 <span class="keyword">from</span> A <span class="keyword">right</span> <span class="keyword">join</span> B <span class="keyword">on</span> A.主键=B.外键 <span class="keyword">right</span> <span class="keyword">join</span> C <span class="keyword">on</span> A.主键=C.外键 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><h1 id="十二、视图"><a href="#十二、视图" class="headerlink" title="十二、视图"></a>十二、视图</h1><p>对视图的增加删除和修改的操作会影响到基础的物理表，创建视图可以保证原表数据的安全性。</p><h2 id="1、创建视图"><a href="#1、创建视图" class="headerlink" title="1、创建视图"></a>1、创建视图</h2><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> 视图名 <span class="keyword">as</span> 后面跟<span class="keyword">select</span>语句</span><br></pre></td></tr></table></figure><p>单表：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> A <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> C;</span><br></pre></td></tr></table></figure><p>多表：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">create view A <span class="keyword">as</span> select <span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>name,<span class="module-access"><span class="module"><span class="identifier">B</span>.</span></span><span class="keyword">class</span> from A,B where <span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>id=<span class="module-access"><span class="module"><span class="identifier">B</span>.</span></span>id;</span><br><span class="line"></span><br><span class="line">create view A <span class="keyword">as</span> select <span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>name <span class="keyword">as</span> name1,<span class="module-access"><span class="module"><span class="identifier">B</span>.</span></span>name <span class="keyword">as</span> name2 from A,B where <span class="module-access"><span class="module"><span class="identifier">A</span>.</span></span>id=<span class="module-access"><span class="module"><span class="identifier">B</span>.</span></span>id;</span><br></pre></td></tr></table></figure></div><p>与多表联查不同的是，创建视图不会把第二个表相同的字段默认添加“<code>（）</code>”，所以需要起别名保证字段不重复，多表联查创建的视图也可以任意操作，原来表也会发生改变。</p><h2 id="2、操作"><a href="#2、操作" class="headerlink" title="2、操作"></a>2、操作</h2><p>对视图重命名：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> st <span class="keyword">to</span> stt;</span><br></pre></td></tr></table></figure></div><p>删除视图：</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> stt;</span><br></pre></td></tr></table></figure><p><strong>视图可以正常对数据进行增删改查，但是不能更改表结构</strong></p><h2 id="3、作用"><a href="#3、作用" class="headerlink" title="3、作用"></a>3、作用</h2><p>① 简化了操作，把经常使用的数据定义为视图</p><p>② 安全性，用户只能查询和修改能看到的数据</p><p>③ 逻辑上独立，屏蔽了真实表的结构带来的影响</p><h1 id="十三、alter-语句整理"><a href="#十三、alter-语句整理" class="headerlink" title="十三、alter 语句整理"></a>十三、alter 语句整理</h1><h2 id="1、删除主键约束"><a href="#1、删除主键约束" class="headerlink" title="1、删除主键约束"></a>1、删除主键约束</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SAS"><figure class="iseeu highlight /sas"><table><tr><td class="code"><pre><span class="line"><span class="meta">alter</span> <span class="meta">table</span> 表名 <span class="meta">drop</span> <span class="meta">primary</span> <span class="meta">key</span>;</span><br></pre></td></tr></table></figure></div><h2 id="2、删除外键约束"><a href="#2、删除外键约束" class="headerlink" title="2、删除外键约束"></a>2、删除外键约束</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">foreign</span> <span class="keyword">key</span> 外键（区分大小写）;</span><br></pre></td></tr></table></figure></div><h2 id="3、添加索引"><a href="#3、添加索引" class="headerlink" title="3、添加索引"></a>3、添加索引</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">创建普通索引</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> 索引名字 <span class="keyword">on</span> 表名（列名）</span><br><span class="line"></span><br><span class="line">修改表结构(添加索引)</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">table</span> tableName <span class="keyword">ADD</span> <span class="keyword">INDEX</span> indexName(columnName)</span><br></pre></td></tr></table></figure></div><h2 id="4、修改表名"><a href="#4、修改表名" class="headerlink" title="4、修改表名"></a>4、修改表名</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 旧表名 <span class="keyword">rename</span> <span class="keyword">to</span> 新表名</span><br><span class="line"></span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> 旧表名 <span class="keyword">to</span> 新表名</span><br></pre></td></tr></table></figure></div><h2 id="5、插入列"><a href="#5、插入列" class="headerlink" title="5、插入列"></a>5、插入列</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 列名 列类型;		(新增一列，列在新增时需要附带该列的类别）</span><br><span class="line"></span><br><span class="line">添加到指定列后面：</span><br><span class="line">        <span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> （<span class="keyword">column</span>） 列名 <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">after</span> 列名;</span><br><span class="line"></span><br><span class="line">添加到第一列：</span><br><span class="line">        <span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> （<span class="keyword">column</span>） 列名 <span class="built_in">varchar</span>(<span class="number">30</span>) <span class="keyword">first</span>;</span><br><span class="line"></span><br><span class="line">注：column可写可不写</span><br></pre></td></tr></table></figure></div><h2 id="6、删除列"><a href="#6、删除列" class="headerlink" title="6、删除列"></a>6、删除列</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> （<span class="keyword">column</span>） 列名;</span><br></pre></td></tr></table></figure></div><h2 id="7、修改列名"><a href="#7、修改列名" class="headerlink" title="7、修改列名"></a>7、修改列名</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">change</span> 旧列名 新列名 列类型;</span><br></pre></td></tr></table></figure></div><ul><li><p>列属性和原属性一致，则列中数据不变</p></li><li><p>列属性和原属性不同，则列中数据变为新类型的默认值</p></li><li><p>新列名和旧列名相同，即为修改列属性</p></li></ul><h2 id="8、修改列属性"><a href="#8、修改列属性" class="headerlink" title="8、修改列属性"></a>8、修改列属性</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">modify</span> 列名 列属性;</span><br></pre></td></tr></table></figure></div><h2 id="9、修改表名"><a href="#9、修改表名" class="headerlink" title="9、修改表名"></a>9、修改表名</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 旧表名 <span class="keyword">rename</span> <span class="keyword">to</span> 新表名</span><br><span class="line"></span><br><span class="line"><span class="keyword">rename</span> <span class="keyword">table</span> 旧表名 <span class="keyword">to</span> 新表名</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Postman教程</title>
    <url>/post/7143649.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="一、Postman下载安装"><a href="#一、Postman下载安装" class="headerlink" title="一、Postman下载安装"></a>一、Postman下载安装</h1><p><a href="https://www.postman.com/downloads/" target="_blank" rel="noopener" class="LinkCard">官网下载地址</a></p><p><img src="https://s1.ax1x.com/2020/07/20/UfRE2F.png" alt="UfRE2F.png"></p><p>记得选择下载的版本</p><p>这里我选择的是windows64位系统</p><p>下载完成后双击安装吧，安装过程极其简单，无需任何操作</p><h1 id="二、postman基础功能介绍"><a href="#二、postman基础功能介绍" class="headerlink" title="二、postman基础功能介绍"></a>二、postman基础功能介绍</h1><p>首先，看一下它的基础功能：</p><p><img src="https://s1.ax1x.com/2020/07/20/UfWSzD.png" alt="UfWSzD.png"></p><p>collection在postman里面相当于一个文件夹，可以把同一个项目的请求放在一个Collection里方便管理和分享，Collection里面也可以再建文件夹。这里我们做一个普通接口的简单的示例：</p><p>新建一个文件夹：</p><p><img src="https://s1.ax1x.com/2020/07/20/UfW40A.png" alt="UfW40A.png"></p><p>创建一个文件集：</p><p><img src="https://s1.ax1x.com/2020/07/20/UfWTtP.png" alt="UfWTtP.png"></p><p>新建一个请求：</p><p><img src="https://s1.ax1x.com/2020/07/20/UffPpT.png" alt="UffPpT.png"></p><p>给这接口命名为查询上海天气并保存：</p><p><img src="https://s1.ax1x.com/2020/07/20/UffZ7R.png" alt="UffZ7R.png"></p><p>点击该请求，现在是空白的：</p><p><img src="https://s1.ax1x.com/2020/07/20/Uffuh6.png" alt="Uffuh6.png"></p><p>输入一个get请求，params里会自动显示参数：</p><p><img src="https://s1.ax1x.com/2020/07/20/UffQ1O.png" alt="UffQ1O.png"></p><p>点击send，查询成功：</p><p><img src="https://s1.ax1x.com/2020/07/20/UfftAI.png" alt="UfftAI.png"></p><p>成功查询到上海天气</p><p>这样就完成了一次简单的天气查询接口的请求</p><h1 id="三、请求区域介绍"><a href="#三、请求区域介绍" class="headerlink" title="三、请求区域介绍"></a>三、请求区域介绍</h1><p>1、Authorization：</p><p>身份验证，主要用来填写用户名密码，以及一些验签字段,postman有一个helpers可以帮助我们简化一些重复和复杂的任务。当前的一套helpers可以帮助你解决一些authentication protocols的问题。</p><p>2 、 Headers：</p><p>请求的头部信息</p><p>3、Body：</p><p>post请求时必须要带的参数，里面放一些key-value键值对</p><p>4、Pre-requerst Script:</p><p>可以让你在 请求之前自定义请求数据，这个运行在请求之前，语法使用JavaScript语句。</p><p>5、tests：</p><p>tests标签功能比较强大，通常用来写测试，它是运行在请求之后。支持JavaScript语法。postman每次执行request的时候，会执行tests。测试结果会在tests的tab上面显示一个通过的数量以及对错情况。这个后面会进行详解，它也可以用来设计用例，比如要测试返回结果是否含有某一字符串</p><p>6、form-data：</p><p>它将表单数据处理为一条消息，以标签为单元，用分隔符分开。既可以单独上传键值对，也可以直接上传文件（当上传字段是文件时，会有Content-Type来说明文件类型,但该文件不会作为历史保存，只能在每次需要发送请求的时候，重新添加文件。）；post请求里较常用的一种</p><p>上传文件：</p><p><a href="https://imgchr.com/i/aEcho6" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/07/28/aEcho6.png" alt="aEcho6.png"></a></p><p>7、x-www-form-urlencoded：</p><p>对应信息头-application/x-www-from-urlencoded，会将表单内的数据转换为键值对；</p><p>8 、 raw：</p><p>可以上传任意类型的文本，比如text、json、xml等,所有填写的text都会随着请求发送；</p><p>9 、 binary：</p><p>对应信息头-Content-Type:application/octet-stream，只能上传二进制文件，且没有键值对，一次只能上传一个文件, 也不能保存历史，每次选择文件，提交；</p><h1 id="四、导出和导入接口集"><a href="#四、导出和导入接口集" class="headerlink" title="四、导出和导入接口集"></a>四、导出和导入接口集</h1><p>postman支持非常方便的导入和导出接口集，继续操作如下：</p><p>1、导出：</p><p><img src="https://s1.ax1x.com/2020/07/28/aEg6tf.png" alt="aEg6tf.png"></p><p>数据一般以postman_collection.json结尾</p><p>2、导入：</p><p><img src="https://s1.ax1x.com/2020/07/28/aEgTA0.png" alt="aEgTA0.png"></p><p>为了区分，我把他们名称改了</p><p>ok，这样就是简单的导入导出collection集合</p><h1 id="五、关于设置环境变量"><a href="#五、关于设置环境变量" class="headerlink" title="五、关于设置环境变量"></a>五、关于设置环境变量</h1><h2 id="1、Global—全局"><a href="#1、Global—全局" class="headerlink" title="1、Global—全局"></a>1、Global—全局</h2><h2 id="2、-Enviroment-—-环境变量"><a href="#2、-Enviroment-—-环境变量" class="headerlink" title="2、 Enviroment — 环境变量"></a>2、 Enviroment — 环境变量</h2><h2 id="3、-Local-—-局部"><a href="#3、-Local-—-局部" class="headerlink" title="3、 Local — 局部"></a>3、 Local — 局部</h2><h2 id="4、Data-—-数据"><a href="#4、Data-—-数据" class="headerlink" title="4、Data —- 数据"></a>4、Data —- 数据</h2><p>优先级从高到底 Data —- &gt; Local —- &gt; Enviroment —- &gt; Global</p><p>postman支持很方便的设置环境变量以及全局变量，并可以一键切换不同环境</p><p><img src="https://s1.ax1x.com/2020/07/28/aE2xxg.png" alt="aE2xxg.png"></p><p>①：可以一键切换环境，选择No Environment则不使用环境变量，仅适用全局变量</p><p>②：可以查看当前环境中的变量和全局变量（Globals）的值</p><p><img src="https://s1.ax1x.com/2020/07/28/aER8JK.png" alt="aER8JK.png"></p><p>③：进入设置页面</p><p><img src="https://s1.ax1x.com/2020/07/28/aERULd.png" alt="aERULd.png"></p><p>比如新建一套环境dome</p><p><img src="https://s1.ax1x.com/2020/07/28/aEf5xU.png" alt="aEf5xU.png"></p><p>选择我们刚才创建的环境，点击眼睛可以看到我们设置的变量值</p><p><img src="https://s1.ax1x.com/2020/07/28/aEf7qJ.png" alt="aEf7qJ.png"></p><p>创建环境变量能够很方便的调取我们所需的数据</p><h2 id="5、将返回值的某个数据设置为环境变量"><a href="#5、将返回值的某个数据设置为环境变量" class="headerlink" title="5、将返回值的某个数据设置为环境变量"></a>5、将返回值的某个数据设置为环境变量</h2><p>在某些时候，我们需要获取到一个变量，并保存下来，因为在后面我们会使用到。比如token，sign等信息</p><p>这时候就需要用到tests区域了，使用其强大的js语法</p><p>下面是一个简单的将返回值的某个数据设置为环境变量或者全局变量的介绍：</p><p>定义一个xxx，获取body中返回的所有参数,并转化为JSON格式</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HASKELL"><figure class="iseeu highlight /haskell"><table><tr><td class="code"><pre><span class="line"><span class="title">var</span> xxx = <span class="type">JSON</span>.parse(responseBody);</span><br><span class="line"></span><br><span class="line">//把json字符串转化为对象。parse()会进行json格式的检查是一个安全的函数， 如：检查json中某个数组元素的个数(这里检测programs的长度)</span><br><span class="line"><span class="title">var</span> <span class="class"><span class="keyword">data</span> = <span class="type">JSON</span>.parse(<span class="title">responseBody</span>);</span></span><br><span class="line"><span class="title">tests</span>[<span class="string">"program's lenght"</span>] = <span class="class"><span class="keyword">data</span>.programs.length === 5;</span></span><br></pre></td></tr></table></figure></div><p>将返回中的值设置为一个环境变量：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CS"><figure class="iseeu highlight /cs"><table><tr><td class="code"><pre><span class="line">pm.environment.<span class="keyword">set</span>(<span class="string">"key"</span>,xxx.data.<span class="keyword">value</span>);</span><br><span class="line">或者postman.setEnvironmentVariable(<span class="string">"key"</span>, <span class="string">"value"</span>);</span><br></pre></td></tr></table></figure></div><p>将返回中的值设置为一个全局变量：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">pm.globals.<span class="keyword">set</span>("key",xxx.data.<span class="keyword">value</span>);</span><br><span class="line"></span><br><span class="line">或者postman.setGlobalVariable("key", "value");</span><br><span class="line">//注意：<span class="keyword">Global</span>后面不能加S，<span class="keyword">value</span>值一定要指定到某个具体节点</span><br></pre></td></tr></table></figure></div><h1 id="六、其他的常用tests方法"><a href="#六、其他的常用tests方法" class="headerlink" title="六、其他的常用tests方法"></a>六、其他的常用tests方法</h1><h2 id="1、postman内置了一些常用的方法"><a href="#1、postman内置了一些常用的方法" class="headerlink" title="1、postman内置了一些常用的方法"></a>1、postman内置了一些常用的方法</h2><p><img src="https://s1.ax1x.com/2020/07/28/aEh6SK.png" alt="aEh6SK.png"></p><h2 id="2、另外整理了一些常用的tests方法"><a href="#2、另外整理了一些常用的tests方法" class="headerlink" title="2、另外整理了一些常用的tests方法"></a>2、另外整理了一些常用的tests方法</h2><h3 id="2-1、测试response-Headers中的某个元素是否存在"><a href="#2-1、测试response-Headers中的某个元素是否存在" class="headerlink" title="2.1、测试response Headers中的某个元素是否存在"></a>2.1、测试response Headers中的某个元素是否存在</h3><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">tests[<span class="string">"元素Content-Type是否存在"</span>] = postman.getResponseHeader(<span class="string">"Content-Type"</span>);</span><br><span class="line"><span class="comment">//getResponseHeader()方法会返回header的值；</span></span><br></pre></td></tr></table></figure><h3 id="2-2、定义一个xxx，获取headers值"><a href="#2-2、定义一个xxx，获取headers值" class="headerlink" title="2.2、定义一个xxx，获取headers值"></a>2.2、定义一个xxx，获取headers值</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">var.xxx = postman.get<span class="constructor">ResponseHeader(<span class="string">"key"</span>)</span>;</span><br><span class="line">将Headers中的值设置为一个环境变量 </span><br><span class="line"></span><br><span class="line">postman.set<span class="constructor">EnvironmentVariable(<span class="string">"key"</span>,<span class="params">xxx</span>)</span>;</span><br><span class="line">或者pm.environment.set(<span class="string">"key"</span>,xxx);</span><br></pre></td></tr></table></figure></div><h3 id="2-3、检查response的code值是否为200"><a href="#2-3、检查response的code值是否为200" class="headerlink" title="2.3、检查response的code值是否为200"></a>2.3、检查response的code值是否为200</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CLEAN"><figure class="iseeu highlight /clean"><table><tr><td class="code"><pre><span class="line">tests[<span class="string">"Status code is 200"</span>] = responseCode.<span class="keyword">code</span> === <span class="number">200</span>;</span><br><span class="line"><span class="comment">// tests["Status code is 200"]中的tests是一个内置对象</span></span><br><span class="line"></span><br><span class="line">tests[<span class="string">"Status code is 200"</span>]是指为这个断言起个名称叫”Status <span class="keyword">code</span> is <span class="number">200</span>”，这个名称可以自行修改。</span><br><span class="line"></span><br><span class="line">responseCode.<span class="keyword">code</span> === <span class="number">200</span>中的responseCode是内置对象，responseCode对象中有个属性是<span class="keyword">code</span>，是指HTTP状态码的<span class="keyword">code</span>，判断<span class="keyword">code</span>是否为<span class="number">200.</span></span><br><span class="line"></span><br><span class="line">综合起来，这句代码的意思是：名称为”Status <span class="keyword">code</span> is <span class="number">200</span>”的断言中，判断responseCode对象的<span class="keyword">code</span>属性值（HTTP状态码）是否为<span class="number">200</span>。</span><br></pre></td></tr></table></figure></div><h3 id="2-4、检查response的body中是否包含某字符串"><a href="#2-4、检查response的body中是否包含某字符串" class="headerlink" title="2.4、检查response的body中是否包含某字符串"></a>2.4、检查response的body中是否包含某字符串</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="Q"><figure class="iseeu highlight /q"><table><tr><td class="code"><pre><span class="line">tests[<span class="string">"Body matches string"</span>] = responseBody.has(<span class="string">"type"</span>);</span><br><span class="line"><span class="comment">// tests["Body matches string"]中的tests是一个内置对象</span></span><br><span class="line"></span><br><span class="line">tests[<span class="string">"Body matches string"</span>]是指为这个断言起个名称叫”Body matches <span class="built_in">string</span>”，这个名称可以自行修改</span><br><span class="line"></span><br><span class="line">这句代码的意思是：名称为”Body matches <span class="built_in">string</span>”的断言中判断响应正文中是否包含：<span class="built_in">type</span>这个字段。<span class="built_in">type</span>无论是<span class="built_in">key</span>或者<span class="built_in">value</span>，只要匹配就可以。多个类型可用“，”分割。</span><br></pre></td></tr></table></figure></div><h3 id="2-5、检查Response-Body是否等于字符串"><a href="#2-5、检查Response-Body是否等于字符串" class="headerlink" title="2.5、检查Response Body是否等于字符串"></a>2.5、检查Response Body是否等于字符串</h3><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">tests[<span class="string">"测试点"</span>] = responseBody === <span class="string">"Response Body返回的内容"</span>;</span><br><span class="line"><span class="comment">//这个可以用在接口返回内容为纯字符串时，直接检查整个返回结果的正确性</span></span><br></pre></td></tr></table></figure><h3 id="2-6、检查Response-time-是否小于200ms"><a href="#2-6、检查Response-time-是否小于200ms" class="headerlink" title="2.6、检查Response time 是否小于200ms"></a>2.6、检查Response time 是否小于200ms</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">tests[<span class="string">"Response time 小于200毫秒"</span>] = responseTime &lt; <span class="number">200</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></div><h3 id="2-7、检查Response-time-是否大于200ms"><a href="#2-7、检查Response-time-是否大于200ms" class="headerlink" title="2.7、检查Response time 是否大于200ms"></a>2.7、检查Response time 是否大于200ms</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">tests[<span class="string">"Response time 大于200毫秒"</span>] = responseTime &gt; <span class="number">200</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></div><h3 id="2-8、postman-setNextRequest-‘Request-4’"><a href="#2-8、postman-setNextRequest-‘Request-4’" class="headerlink" title="2.8、postman.setNextRequest(‘Request 4’)"></a>2.8、postman.setNextRequest(‘Request 4’)</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">postman.<span class="keyword">set</span>NextRequest<span class="params">('Request 4')</span></span><br><span class="line"><span class="string">//</span> postman.<span class="keyword">set</span>NextRequest<span class="params">()</span>是一个带有一个参数的函数，它是接下来要运行的请求的名称或ID。往往用来跳转至某个接口，只在运行该集合时有用，单独运行无效</span><br></pre></td></tr></table></figure><h3 id="2-9、-var-jsonObject-xml2Json-responseBody"><a href="#2-9、-var-jsonObject-xml2Json-responseBody" class="headerlink" title="2.9、 var jsonObject = xml2Json(responseBody);"></a>2.9、 var jsonObject = xml2Json(responseBody);</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRMSH"><figure class="iseeu highlight /crmsh"><table><tr><td class="code"><pre><span class="line">var jsonObject = xml2Json(responseBody);</span><br><span class="line">//转换<span class="keyword">XML</span> <span class="title">body</span>为JSON对象</span><br></pre></td></tr></table></figure></div><h3 id="2-10、设置一个随机数变量"><a href="#2-10、设置一个随机数变量" class="headerlink" title="2.10、设置一个随机数变量"></a>2.10、设置一个随机数变量</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line">pm.globals.<span class="built_in">set</span>(<span class="string">"type"</span>,<span class="built_in">parseInt</span>(<span class="number">4</span>*Math.<span class="built_in">random</span>())+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//针对不同类型的课程类型，设置一个1到4的随机整数，字段名是type,parselnt 是强制转换为整数</span></span><br></pre></td></tr></table></figure></div><h3 id="2-11、校验接口返回是否有数据"><a href="#2-11、校验接口返回是否有数据" class="headerlink" title="2.11、校验接口返回是否有数据"></a>2.11、校验接口返回是否有数据</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">tests[<span class="string">"获取第一个结果"</span>] = xxx.<span class="built_in">content</span>.jieguo[<span class="number">0</span>];</span><br><span class="line">//我的程序设置的是如果当前没有数据，则只返回<span class="built_in">content</span>[]，所以这句断言可以校验，如果<span class="built_in">content</span>里还有数据，则视为返回不为空</span><br></pre></td></tr></table></figure></div><h3 id="2-12、-在当前环境下添加一个新的环境变量"><a href="#2-12、-在当前环境下添加一个新的环境变量" class="headerlink" title="2.12、 在当前环境下添加一个新的环境变量"></a>2.12、 在当前环境下添加一个新的环境变量</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">pm.environment.<span class="builtin-name">set</span>(<span class="string">"aaa"</span>,<span class="string">"010101001"</span>)</span><br></pre></td></tr></table></figure></div><h3 id="2-13、添加一个全局变量"><a href="#2-13、添加一个全局变量" class="headerlink" title="2.13、添加一个全局变量"></a>2.13、添加一个全局变量</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">pm.<span class="built_in">globals</span>.<span class="built_in">set</span>(<span class="string">"bbb"</span>,<span class="string">"020202002020"</span>)</span><br></pre></td></tr></table></figure></div><h3 id="2-14、返回的报文转化为json格式"><a href="#2-14、返回的报文转化为json格式" class="headerlink" title="2.14、返回的报文转化为json格式"></a>2.14、返回的报文转化为json格式</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ccc = <span class="built_in">JSON</span>.parse(responseBody)</span><br></pre></td></tr></table></figure></div><h3 id="2-15、-将指定的value值设置成环境变量"><a href="#2-15、-将指定的value值设置成环境变量" class="headerlink" title="2.15、 将指定的value值设置成环境变量"></a>2.15、 将指定的value值设置成环境变量</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">pm</span><span class="selector-class">.environment</span><span class="selector-class">.set</span>("状态",<span class="selector-tag">ccc</span><span class="selector-class">.reason</span>)</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">pm</span><span class="selector-class">.environment</span><span class="selector-class">.set</span>("城市",<span class="selector-tag">ccc</span><span class="selector-class">.result</span><span class="selector-attr">[0]</span><span class="selector-class">.city</span>)</span><br></pre></td></tr></table></figure></div><h3 id="2-16、测试是否是json报文格式"><a href="#2-16、测试是否是json报文格式" class="headerlink" title="2.16、测试是否是json报文格式"></a>2.16、测试是否是json报文格式</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GRADLE"><figure class="iseeu highlight /gradle"><table><tr><td class="code"><pre><span class="line">tests[<span class="string">"content-type中是否包含json字符"</span>] = postman.getResponseHeader(<span class="string">"Content-Type"</span>).<span class="keyword">includes</span>(<span class="string">"json"</span>) === <span class="keyword">true</span></span><br></pre></td></tr></table></figure></div><h1 id="七、使用postman进行接口自动化测试（批跑）"><a href="#七、使用postman进行接口自动化测试（批跑）" class="headerlink" title="七、使用postman进行接口自动化测试（批跑）"></a>七、使用postman进行接口自动化测试（批跑）</h1><p>首先，既然是自动化测试，那么我们肯定需要工具 (Postman) 或者代码能帮我们直接判断结果是否符合预期。那么在接口测试上，大体就两个思路：</p><ul><li><p>判断请求返回的 code 是否符合预期</p></li><li><p>判断请求返回的内容中是否包含预期的内容（关键字）</p></li></ul><p>这是三个模拟天气的接口集合，点击扩展按钮，找到RUN，进入</p><p><img src="https://s1.ax1x.com/2020/07/28/aE5K5n.png" alt="aE5K5n.png"></p><p>这里我们先简单运行一次：</p><p><img src="https://s1.ax1x.com/2020/07/28/aE512V.png" alt="aE512V.png"></p><p>发现，运行成功。里面我每个接口都写了两个tests进行校验字段，所以上面一共有6条tests测试点被测试到，并且是成功的</p><p>每个接口里的tests数据如下：</p><p><img src="https://s1.ax1x.com/2020/07/28/aE53vT.png" alt="aE53vT.png"></p><p>当然，如果想要每次运行不一样的数据，我们需要其他的方法，比如，使用pre-requestScprit功能，导入或者生成随机数据进行测试。</p><h1 id="八、postman参数化"><a href="#八、postman参数化" class="headerlink" title="八、postman参数化"></a>八、postman参数化</h1><p>首先我们针对于某一个接口，有大量的的测试数据需要批量验证，此时一个一个的更改请求参数肯定不太现实，能否有一种方式可以批量的来处理数据。这就要用到数据的参数化了。</p><p>首先针对于这样一个查询接口（百度免费提供的）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//m</span>obsec-dianhua.baidu.com<span class="regexp">/dianhua_api/</span>open<span class="regexp">/location?tel=电话</span></span><br></pre></td></tr></table></figure></div><p>现在，我们有批量的手机号需要查询</p><h2 id="1、创建一个data-txt格式的文件"><a href="#1、创建一个data-txt格式的文件" class="headerlink" title="1、创建一个data.txt格式的文件"></a>1、创建一个data.txt格式的文件</h2><p>首先创建一个data.txt格式的文件(文件名可以随便取，不要是汉字就可以，最好字母)</p><p>里面放置的第一行是变量名，后面每一行都是该变量的一个数据（如果有多个变量和数据使用“,”分割）</p><p><img src="https://s1.ax1x.com/2020/07/28/aE5qaj.png" alt="aE5qaj.png"></p><h2 id="2、在postman里面创建一个环境变量"><a href="#2、在postman里面创建一个环境变量" class="headerlink" title="2、在postman里面创建一个环境变量"></a>2、在postman里面创建一个环境变量</h2><p>在postman里面创建一个环境变量，名字和上面那个变量名保持一致即可，postman里面的环境变量的值，可以随便填（因为，等会我们调用的时候会调用那个txt文本里面的数据，而不会用到postman里面设置的数据）</p><p><img src="https://s1.ax1x.com/2020/07/28/aE5jGq.png" alt="aE5jGq.png"></p><h2 id="3、在tests里面写一个检测脚本"><a href="#3、在tests里面写一个检测脚本" class="headerlink" title="3、在tests里面写一个检测脚本"></a>3、在tests里面写一个检测脚本</h2><p>在tests里面写一个检测脚本，检测该手机号是否为联通手机号</p><p><img src="https://s1.ax1x.com/2020/07/28/aEIAiR.png" alt="aEIAiR.png"></p><h2 id="4、以集合的形式运行该接口"><a href="#4、以集合的形式运行该接口" class="headerlink" title="4、以集合的形式运行该接口"></a>4、以集合的形式运行该接口</h2><p><img src="https://s1.ax1x.com/2020/07/28/aEIMee.png" alt="aEIMee.png"></p><h2 id="5、查看运行结果，完成参数化设置"><a href="#5、查看运行结果，完成参数化设置" class="headerlink" title="5、查看运行结果，完成参数化设置"></a>5、查看运行结果，完成参数化设置</h2><p>文本中的10个电话，有6个电话是联通的，1个不是联通的</p><p><img src="https://s1.ax1x.com/2020/07/28/aEI3FA.png" alt="aEI3FA.png"></p><p>并且，每个接口的访问地址都一样，只不过是里面的请求参数一栏不同。举例如下：</p><p><img src="https://s1.ax1x.com/2020/07/28/aEoMcV.png" alt="aEoMcV.png"></p><p>后面不一一列举了</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>软件测试</tag>
        <tag>接口</tag>
        <tag>Postman</tag>
      </tags>
  </entry>
  <entry>
    <title>Jmeter教程</title>
    <url>/post/ea16244c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="一、jmeter环境要求"><a href="#一、jmeter环境要求" class="headerlink" title="一、jmeter环境要求"></a>一、jmeter环境要求</h1><p>Jmeter的安装需要用到java环境，而java环境的配置就是jdk的配置</p><p><a href="https://www.oracle.com/java/technologies/javase-jdk14-downloads.html" target="_blank" rel="noopener" class="LinkCard">jdk官网下载地址</a></p><p>下载安装完jdk之后</p><p>在系统变量中添加三个变量：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">JAVA_HOME   ：  D:\Java\jdk1<span class="number">.8</span><span class="number">.0</span>_191  </span><br><span class="line">（参数值为jdk的安装路径）</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAGGERSCRIPT"><figure class="iseeu highlight /taggerscript"><table><tr><td class="code"><pre><span class="line">Path  ：   <span class="variable">%JAVA_HOME%</span><span class="symbol">\b</span>in;<span class="variable">%JAVA_HOME%</span><span class="symbol">\j</span>re<span class="symbol">\b</span>in;</span><br><span class="line">（一般系统中自带Path变量名，只需要将该变量值追加进去即可）</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">CLASSPATH   ：   .;%JAVA_HOME%\<span class="class"><span class="keyword">lib</span>;</span>%JAVA_HOME%\<span class="class"><span class="keyword">lib</span>\<span class="title">tools</span>.<span class="title">jar</span> （最前面的  .  也要带）</span></span><br></pre></td></tr></table></figure></div><p>添加完环境变量之后必须点击全部的确定</p><p>之后，在命令行输入 <code>java -version</code></p><p>提示：</p><p><img src="https://s1.ax1x.com/2020/07/28/aETGKf.png" alt="aETGKf.png"></p><p>即为成功！！</p><h1 id="二、jmeter的下载"><a href="#二、jmeter的下载" class="headerlink" title="二、jmeter的下载"></a>二、jmeter的下载</h1><p>下载的时候可以在jmeter官网上直接下载</p><p><a href="https://jmeter.apache.org/download_jmeter.cgi" target="_blank" rel="noopener" class="LinkCard">jmeter官网下载地址</a></p><p>解压后，得到文件夹<br>打开文件夹，找到里面的bin目录</p><p>要想启动jmeter的话，直接双击第一个jar文件即可</p><p>打开后的页面如下：</p><p><img src="https://s1.ax1x.com/2020/07/28/aEHK1I.png" alt="aEHK1I.png"></p><p>当然，jmeter这里我使用了一个非常友好的汉化版本，可以调整为简体中文</p><h1 id="三、使用jmeter"><a href="#三、使用jmeter" class="headerlink" title="三、使用jmeter"></a>三、使用jmeter</h1><h2 id="1-创建一个线程组，一个线程组就代表一个接口或多个接口（里面postman里面集合）"><a href="#1-创建一个线程组，一个线程组就代表一个接口或多个接口（里面postman里面集合）" class="headerlink" title="1. 创建一个线程组，一个线程组就代表一个接口或多个接口（里面postman里面集合）"></a>1. 创建一个线程组，一个线程组就代表一个接口或多个接口（里面postman里面集合）</h2><p><img src="https://s1.ax1x.com/2020/07/28/aEHU9s.png" alt="aEHU9s.png"></p><h2 id="2-添加一个http请求，并填入请求方法、地址和参数"><a href="#2-添加一个http请求，并填入请求方法、地址和参数" class="headerlink" title="2. 添加一个http请求，并填入请求方法、地址和参数"></a>2. 添加一个http请求，并填入请求方法、地址和参数</h2><p><img src="https://s1.ax1x.com/2020/07/28/aEHDBT.png" alt="aEHDBT.png"></p><p>填写请求的url时候，有两种填写方式，无论使用哪一种都可以的：</p><p><img src="https://s1.ax1x.com/2020/07/28/aEH7Ue.png" alt="aEH7Ue.png"></p><p>在请求的时候，有两种常见的请求方式，get和post。填写参数时需要注意：</p><p><img src="https://s1.ax1x.com/2020/07/28/aEbuaF.png" alt="aEbuaF.png"></p><h2 id="3-在jmeter里，无法直接看到响应内容，需要手动的填写监听器。"><a href="#3-在jmeter里，无法直接看到响应内容，需要手动的填写监听器。" class="headerlink" title="3. 在jmeter里，无法直接看到响应内容，需要手动的填写监听器。"></a>3. 在jmeter里，无法直接看到响应内容，需要手动的填写监听器。</h2><p>常见的需要添加的监听器有：查看结果树和聚合报告</p><p>Jmeter的响应内容，需要再查看结果树里面看到，而响应统计在聚合报告里可以看到</p><p><img src="https://s1.ax1x.com/2020/07/28/aEb12R.png" alt="aEb12R.png"></p><h2 id="4-运行jmeter，点击启动即可"><a href="#4-运行jmeter，点击启动即可" class="headerlink" title="4.运行jmeter，点击启动即可"></a>4.运行jmeter，点击启动即可</h2><p><img src="https://s1.ax1x.com/2020/07/28/aEbaIe.png" alt="aEbaIe.png"></p><h2 id="5-可以再查看查看结果树里看到对应的结果请求"><a href="#5-可以再查看查看结果树里看到对应的结果请求" class="headerlink" title="5.可以再查看查看结果树里看到对应的结果请求"></a>5.可以再查看查看结果树里看到对应的结果请求</h2><p><img src="https://s1.ax1x.com/2020/07/28/aEbgZ8.png" alt="aEbgZ8.png"></p><h2 id="6-解决jmeter数据乱码"><a href="#6-解决jmeter数据乱码" class="headerlink" title="6.解决jmeter数据乱码"></a>6.解决jmeter数据乱码</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">prev.setDataEncoding(<span class="string">"utf-8"</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/28/aEbxzR.png" alt="aEbxzR.png"></p><h2 id="7-如果想清空请求记录，点击清除按钮"><a href="#7-如果想清空请求记录，点击清除按钮" class="headerlink" title="7. 如果想清空请求记录，点击清除按钮"></a>7. 如果想清空请求记录，点击清除按钮</h2><p><img src="https://s1.ax1x.com/2020/07/28/aEquOP.png" alt="aEquOP.png"></p><h2 id="8-可以在聚合报告里查看到所有结果的统计情况"><a href="#8-可以在聚合报告里查看到所有结果的统计情况" class="headerlink" title="8.可以在聚合报告里查看到所有结果的统计情况"></a>8.可以在聚合报告里查看到所有结果的统计情况</h2><p>聚合报告的内容如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">Label：         请求的名字</span><br><span class="line">Samples：       请求数量</span><br><span class="line">Average：       平均响应时间（单位：ms）</span><br><span class="line">Median：        中位数响应时间</span><br><span class="line"><span class="number">90</span>% Line：      <span class="number">90</span>%用户响应时间</span><br><span class="line"><span class="number">95</span>%line：       <span class="number">95</span>%用户响应时间</span><br><span class="line"><span class="number">99</span>%line：       <span class="number">99</span>%用户响应时间</span><br><span class="line">Min：           用户最小响应时间</span><br><span class="line">Max：           用户最大响应时间</span><br><span class="line">Error%：        错误率</span><br><span class="line">Throughput：    吞吐量。默认情况下每秒完成的请求数</span><br><span class="line">Received KB/S： 每秒从服务器接收的速度</span><br><span class="line">Sent KB/S：     每秒向服务器发送的速度</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/28/aEq2Ox.png" alt="aEq2Ox.png"></p><h2 id="9-设置线程组和循环次数"><a href="#9-设置线程组和循环次数" class="headerlink" title="9. 设置线程组和循环次数"></a>9. 设置线程组和循环次数</h2><p>线程组设置为几相当于同时有几个请求一起发送</p><p>循环次数设置为几相当于一个请求发送了几遍</p><p><img src="https://s1.ax1x.com/2020/07/28/aEqX0f.png" alt="aEqX0f.png"></p><p>可以在聚合报告里看到运行情况</p><h2 id="10-添加断言"><a href="#10-添加断言" class="headerlink" title="10.添加断言"></a>10.添加断言</h2><p><img src="https://s1.ax1x.com/2020/07/28/aELwjI.png" alt="aELwjI.png"></p><h2 id="11-接口的参数化"><a href="#11-接口的参数化" class="headerlink" title="11.接口的参数化"></a>11.接口的参数化</h2><p>使用不同的请求参数，来访问同一个接口地址</p><p>Jmeter参数化，需要添加一个CSV数据文件设置：</p><p><img src="https://s1.ax1x.com/2020/07/28/aELc4g.png" alt="aELc4g.png"></p><p>然后再创建一个文件</p><p>里面写上要传入的参数，不同的参数之间换一下行</p><p>找到选择所导入的文件</p><p><img src="https://s1.ax1x.com/2020/07/28/aELTET.png" alt="aELTET.png"></p><p>变量名称就是参数值</p><p><img src="https://s1.ax1x.com/2020/07/28/aELqC4.png" alt="aELqC4.png"></p><p>设置线程组中的循环次数（测试多少个情况下的接口就用设置多少个）</p><p><img src="https://s1.ax1x.com/2020/07/28/aELzb6.png" alt="aELzb6.png"></p><h2 id="12-Jmeter的环境变量设置"><a href="#12-Jmeter的环境变量设置" class="headerlink" title="12.Jmeter的环境变量设置"></a>12.Jmeter的环境变量设置</h2><p>在jmeter里也是可以跟postman一样，设置环境变量，并且非常的简单，首先在配置元件里添加一个用户定义的变量</p><p><img src="https://s1.ax1x.com/2020/07/28/aEOnVf.png" alt="aEOnVf.png"></p><p>然后就可以自定义一些变量名和变量值，然后引用，引用的话是<code>${xxx}</code>的形式，如下：</p><p><img src="https://s1.ax1x.com/2020/07/28/aEOGMn.png" alt="aEOGMn.png"></p><h2 id="13-正则表达式"><a href="#13-正则表达式" class="headerlink" title="13.正则表达式"></a>13.正则表达式</h2><h3 id="13-1、解释"><a href="#13-1、解释" class="headerlink" title="13.1、解释"></a>13.1、解释</h3><p>（1）引用名称：下一个请求要引用的参数名称，如填写activityID，则可用<code>${activityID}</code>引用它。</p><p>（2）正则表达式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">()括起来的部分就是要提取的。</span><br><span class="line">.匹配任何字符串。</span><br><span class="line">+：一次或多次。</span><br><span class="line">?：在找到第一个匹配项后停止。</span><br><span class="line"></span><br><span class="line">注：(.+?)<span class="selector-attr">[.\n]</span>+可以匹配换行符在内的所有字符。</span><br></pre></td></tr></table></figure></div><p>（3）模板：用$$引用起来，如果在正则表达式中有多个正则表达式（多个括号括起来的东东），则可以是<code>$2$$3$</code>等等，表示解析到的第几个值给title。如：<code>$1$</code>表示解析到的第1个值</p><p>（4）匹配数字：<code>0</code>代表随机取值，<code>1</code>代表全部取值，通常情况下填0，如果在LR中，取出的值是一个数组，还得处理一下，LR11版本用一个随机的函数就可以不用写大段的代码来处理数组。</p><p>（5）缺省值：如果参数没有取得到值，那默认给一个值让它取。</p><h3 id="13-2、关于正则表达式的举例说明"><a href="#13-2、关于正则表达式的举例说明" class="headerlink" title="13.2、关于正则表达式的举例说明"></a>13.2、关于正则表达式的举例说明</h3><h4 id="（1）提取单个字符串"><a href="#（1）提取单个字符串" class="headerlink" title="（1）提取单个字符串"></a>（1）提取单个字符串</h4><p>例1：假设测试人员期望匹配Web页面的如下部分：<code>name = &quot;file&quot; value = &quot;readme.txt&quot;&gt;</code>并提取<code>readme.txt</code>。</p><p>一个符合要求的正则表达式：<code>name = &quot;file&quot; value = &quot;(.+?)&quot;&gt;</code>。</p><p>例2：将第一个接口的城市代码，作为第二个请求的参数传入</p><p>① 获取城市代码接口</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VIM"><figure class="iseeu highlight /vim"><table><tr><td class="code"><pre><span class="line">http://toy1.weather.<span class="keyword">com</span>.<span class="keyword">cn</span>/<span class="built_in">search</span>?cityname=nanjing</span><br></pre></td></tr></table></figure></div><p>② 根据城市代码获取天气接口</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span>www.weather.com.cn<span class="regexp">/data/</span>cityinfo<span class="regexp">/101190101.html</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/28/aEXVW4.png" alt="aEXVW4.png"></p><p><img src="https://s1.ax1x.com/2020/07/28/aEvvWD.png" alt="aEvvWD.png"></p><h4 id="（2）提取多个字符串"><a href="#（2）提取多个字符串" class="headerlink" title="（2）提取多个字符串"></a>（2）提取多个字符串</h4><p>假设测试人员期望匹配Web页面的如下部分：<code>name = &quot;file&quot; value = &quot;readme.txt&quot;&gt;</code>并提取<code>file</code>和<code>readme.txt</code>。</p><p>一个符合要求的正则表达式：<code>name = &quot;(.+?)&quot; value = &quot;(.+?)&quot;</code>。</p><p>引用名称：<code>MYREF</code></p><p>模板：<code>$1$$2$</code></p><h2 id="14-json提取器"><a href="#14-json提取器" class="headerlink" title="14.json提取器"></a>14.json提取器</h2><p>下一个请求要引用的参数通过json提取器提取出来</p><p><img src="https://s1.ax1x.com/2020/07/28/aExDk6.png" alt="aExDk6.png"></p><p><img src="https://s1.ax1x.com/2020/07/28/aExzNV.png" alt="aExzNV.png"></p><h2 id="15-参数化-json提取器"><a href="#15-参数化-json提取器" class="headerlink" title="15.参数化+json提取器"></a>15.参数化+json提取器</h2><p><img src="https://s1.ax1x.com/2020/07/28/aVSiPf.png" alt="aVSiPf.png"></p><p><img src="https://s1.ax1x.com/2020/07/28/aVS6Ld.png" alt="aVS6Ld.png"></p><h2 id="16-跨线程组-json提取器"><a href="#16-跨线程组-json提取器" class="headerlink" title="16.跨线程组+json提取器"></a>16.跨线程组+json提取器</h2><p><img src="https://s1.ax1x.com/2020/07/28/aVSqwn.png" alt="aVSqwn.png"></p><p><img src="https://s1.ax1x.com/2020/07/28/aVph7R.png" alt="aVph7R.png"></p><p><img src="https://s1.ax1x.com/2020/07/28/aVpItx.png" alt="aVpItx.png"></p><p><img src="https://s1.ax1x.com/2020/07/28/aVpqje.png" alt="aVpqje.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>软件测试</tag>
        <tag>Jmeter</tag>
        <tag>接口</tag>
        <tag>jdk</tag>
      </tags>
  </entry>
  <entry>
    <title>自动化之Selenium+Python</title>
    <url>/post/f24ef6b7.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="一、安装导入库"><a href="#一、安装导入库" class="headerlink" title="一、安装导入库"></a>一、安装导入库</h1><h2 id="1、从selenium里面导入webdriver模块"><a href="#1、从selenium里面导入webdriver模块" class="headerlink" title="1、从selenium里面导入webdriver模块"></a>1、从selenium里面导入webdriver模块</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br></pre></td></tr></table></figure></div><h2 id="2、导入time模块，time模块是Python自带的，所以无需下载"><a href="#2、导入time模块，time模块是Python自带的，所以无需下载" class="headerlink" title="2、导入time模块，time模块是Python自带的，所以无需下载"></a>2、导入time模块，time模块是Python自带的，所以无需下载</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XL"><figure class="iseeu highlight /xl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="built_in">time</span></span><br></pre></td></tr></table></figure></div><h2 id="3、导入time模块下的ctime、sleep函数"><a href="#3、导入time模块下的ctime、sleep函数" class="headerlink" title="3、导入time模块下的ctime、sleep函数"></a>3、导入time模块下的ctime、sleep函数</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> <span class="type">time</span> <span class="keyword">import</span> ctime,sleep</span><br></pre></td></tr></table></figure></div><h2 id="4、导入随机模块"><a href="#4、导入随机模块" class="headerlink" title="4、导入随机模块"></a>4、导入随机模块</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="built_in">random</span>  #随机数模块</span><br></pre></td></tr></table></figure></div><h1 id="二、定位方式"><a href="#二、定位方式" class="headerlink" title="二、定位方式"></a>二、定位方式</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;input <span class="attribute">id</span>=<span class="string">"kw"</span> <span class="attribute">class</span>=<span class="string">"s_ipt"</span> <span class="attribute">type</span>=<span class="string">"text"</span> <span class="attribute">autocomplete</span>=<span class="string">"off"</span> <span class="attribute">maxlength</span>=<span class="string">"100"</span> <span class="attribute">name</span>=<span class="string">"wd"</span>&gt;</span><br></pre></td></tr></table></figure></div><h2 id="1、id定位"><a href="#1、id定位" class="headerlink" title="1、id定位"></a>1、id定位</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CEYLON"><figure class="iseeu highlight /ceylon"><table><tr><td class="code"><pre><span class="line">driver.find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_</span>id(<span class="string">'kw'</span>)</span><br></pre></td></tr></table></figure></div><h2 id="2、name定位"><a href="#2、name定位" class="headerlink" title="2、name定位"></a>2、name定位</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">find_element_by_name</span><span class="params">(‘wd’)</span></span></span><br></pre></td></tr></table></figure></div><h2 id="3、class定位"><a href="#3、class定位" class="headerlink" title="3、class定位"></a>3、class定位</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">find_element_by_class_name</span><span class="params">(‘s_ipt’)</span></span></span><br></pre></td></tr></table></figure></div><h2 id="4、标签定位"><a href="#4、标签定位" class="headerlink" title="4、标签定位"></a>4、标签定位</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">find_element_by_tag_name</span><span class="params">(‘input’)</span></span></span><br></pre></td></tr></table></figure></div><ol><li><p>从上面定位到的元素属性中，可以看到每个元素都有tag（标签）属性，如搜索框的标签属性，就是最前面的input</p></li><li><p>很明显，在一个页面中，相同的标签有很多，所以一般不用标签来定位。</p></li></ol><h2 id="5、link定位"><a href="#5、link定位" class="headerlink" title="5、link定位"></a>5、link定位</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">find_element_by_link_text</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></div><ol><li>定位百度页面上”hao123”这个按钮 查看页面元素：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;a <span class="attribute">class</span>=<span class="string">"mnav"</span> <span class="attribute">target</span>=<span class="string">"_blank"</span> <span class="attribute">href</span>=<span class="string">"http://www.hao123.com"</span>&gt;hao123&lt;/a&gt;</span><br></pre></td></tr></table></figure></div><ol start="2"><li>从元素属性可以分析出，有个<code>href = &quot;http://www.hao123.com</code></li></ol><p>说明它是个超链接，对于这种元素，可以用link定位：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">find_element_by_partial_link_text</span><span class="params">(“hao123”)</span></span></span><br></pre></td></tr></table></figure></div><ol start="3"><li>有时候一个超链接它的字符串可能比较长，如果输入全称的话，会显示很长，这时候可以用一模糊匹配方式，截取其中一部分字符串就可以了：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CEYLON"><figure class="iseeu highlight /ceylon"><table><tr><td class="code"><pre><span class="line">driver.find<span class="number">_</span>element<span class="number">_</span><span class="meta">by</span><span class="number">_p</span>artial<span class="number">_</span>link<span class="number">_</span>text(<span class="string">'ao123'</span>)</span><br></pre></td></tr></table></figure></div><h2 id="6、xpath定位"><a href="#6、xpath定位" class="headerlink" title="6、xpath定位"></a>6、xpath定位</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">driver.find<span class="constructor">_element_by_xpath('<span class="operator">/</span><span class="operator">/</span><span class="params">input</span>[@<span class="params">id</span>=<span class="string">"s_tab"</span>]')</span></span><br><span class="line">driver.find<span class="constructor">_element_by_xpath('<span class="operator">/</span><span class="operator">/</span><span class="operator">*</span>[@<span class="params">id</span>=<span class="string">"s_tab"</span>]]')</span></span><br><span class="line">driver.find<span class="constructor">_element_by_xpath('<span class="operator">/</span><span class="operator">/</span><span class="operator">*</span>[@<span class="params">id</span>=<span class="string">"s_tab"</span>]<span class="operator">/</span><span class="params">div</span><span class="operator">/</span><span class="params">span</span>')</span></span><br><span class="line">driver.find<span class="constructor">_element_by_xpath('<span class="operator">/</span><span class="operator">/</span><span class="operator">*</span>[@<span class="params">id</span>=<span class="string">"s_tab"</span>]<span class="operator">/</span><span class="params">div</span><span class="operator">/</span><span class="params">a</span>[2]')</span></span><br><span class="line">driver.find<span class="constructor">_element_by_xpath('<span class="operator">/</span><span class="params">html</span><span class="operator">/</span><span class="params">body</span><span class="operator">/</span><span class="params">div</span><span class="operator">/</span><span class="params">div</span>[2]<span class="operator">/</span><span class="params">div</span>[5]<span class="operator">/</span><span class="params">div</span>[1]<span class="operator">/</span><span class="params">span</span>[1]<span class="operator">/</span><span class="params">input</span>')</span></span><br></pre></td></tr></table></figure></div><h2 id="7、xpath-逻辑运算"><a href="#7、xpath-逻辑运算" class="headerlink" title="7、xpath:逻辑运算"></a>7、xpath:逻辑运算</h2><ol><li><p>xpath还有一个比较强的功能，是可以多个属性逻辑运算的，可以支持与（and）、或（or）、非（not）</p></li><li><p>一般用的比较多的是and运算，同时满足两个属性</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">driver.find<span class="constructor">_element_by_xpath('<span class="operator">/</span><span class="operator">/</span><span class="operator">*</span>[@<span class="params">id</span>=<span class="string">"s_tab"</span> <span class="params">and</span> @<span class="params">type</span>=”<span class="params">text</span>”]')</span></span><br></pre></td></tr></table></figure></div><h2 id="8、CSS定位"><a href="#8、CSS定位" class="headerlink" title="8、CSS定位"></a>8、CSS定位</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;input <span class="attribute">id</span>=<span class="string">"kw"</span> <span class="attribute">class</span>=<span class="string">"s_ipt"</span> <span class="attribute">type</span>=<span class="string">"text"</span> <span class="attribute">autocomplete</span>=<span class="string">"off"</span> <span class="attribute">maxlength</span>=<span class="string">"100"</span> <span class="attribute">name</span>=<span class="string">"wd"</span>/&gt;</span><br></pre></td></tr></table></figure></div><ol><li><p>css可以通过元素的id、class、标签这三个常规属性直接定位到</p></li><li><p>css用<code>#</code>号表示<code>id</code>属性,如：<code>#kw</code></p></li><li><p>css用<code>.</code>表示<code>class</code>属性，如：<code>.s_ipt</code></p></li><li><p>css除了可以通过标签、class、id这三个常规属性定位外，也可以通过其它属性定位</p></li><li><p>css也可以通过标签与属性的组合来定位元素</p></li><li><p>css层级关系定位</p></li><li><p>css也可以通过索引<code>option：nth-child(1)</code>来定位子元素</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">driver.find<span class="constructor">_element_by_css_selector(‘#<span class="params">kw</span>’)</span>			# CSS通过id属性定位</span><br><span class="line">driver.find<span class="constructor">_element_by_css_selector(‘.<span class="params">s_ipt</span>’)</span>		# CSS通过<span class="keyword">class</span>属性定位</span><br><span class="line">driver.find<span class="constructor">_element_by_css_selector(‘<span class="params">input</span>’)</span>		# CSS通过标签定位</span><br><span class="line">driver.find<span class="constructor">_element_by_css_selector(‘[<span class="params">autocomplete</span>=<span class="string">"off"</span>]’)</span>	# CSS通过其他属性定位</span><br><span class="line">driver.find<span class="constructor">_element_by_css_selector(‘<span class="params">input</span>#<span class="params">kw</span>’)</span>			# CSS标签和id属性组合定位</span><br><span class="line">driver.find<span class="constructor">_element_by_css_selector(‘<span class="params">form</span>#<span class="params">form</span>&gt;<span class="params">span</span>&gt;<span class="params">input</span>’)</span>	# CSS通过层级关系定位</span><br><span class="line">driver.find<span class="constructor">_element_by_css_selector(‘<span class="params">select</span>#<span class="params">nr</span>&gt;<span class="params">option</span>:<span class="params">nth</span>-<span class="params">child</span>(2)</span>’)	# CSS通过索引定位到第二个option标签</span><br></pre></td></tr></table></figure></div><h1 id="三、简单操作"><a href="#三、简单操作" class="headerlink" title="三、简单操作"></a>三、简单操作</h1><h2 id="1、打开浏览器-赋值给一个变量"><a href="#1、打开浏览器-赋值给一个变量" class="headerlink" title="1、打开浏览器 赋值给一个变量"></a>1、打开浏览器 赋值给一个变量</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">driver</span> = webdriver.Chrome()		<span class="comment"># 打开谷歌浏览器</span></span><br><span class="line"><span class="attr">driver</span> = webdriver.Ie()			<span class="comment"># 打开IE浏览器</span></span><br><span class="line"><span class="attr">driver</span> = webdriver.Firefox()		<span class="comment"># 打开火狐浏览器</span></span><br></pre></td></tr></table></figure></div><h2 id="2、打开网页"><a href="#2、打开网页" class="headerlink" title="2、打开网页"></a>2、打开网页</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CS"><figure class="iseeu highlight /cs"><table><tr><td class="code"><pre><span class="line">driver.<span class="keyword">get</span>(<span class="string">'https://www.baidu.com'</span>)	<span class="meta"># 打开百度</span></span><br></pre></td></tr></table></figure></div><h2 id="3、查看时间"><a href="#3、查看时间" class="headerlink" title="3、查看时间"></a>3、查看时间</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span>(<span class="built_in">time</span>.<span class="built_in">ctime</span>())   <span class="meta"># 输出当前时间</span></span><br></pre></td></tr></table></figure></div><h2 id="4、等待sleep"><a href="#4、等待sleep" class="headerlink" title="4、等待sleep"></a>4、等待sleep</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">time</span>.sleep(<span class="number">3</span>)        <span class="comment"># 等待多少秒，再执行后续代码。单位是秒（s）,时间值可以是小数也可以是整数</span></span><br></pre></td></tr></table></figure></div><h2 id="5、导入time模块下的ctime、sleep函数，查看时间、等待"><a href="#5、导入time模块下的ctime、sleep函数，查看时间、等待" class="headerlink" title="5、导入time模块下的ctime、sleep函数，查看时间、等待"></a>5、导入time模块下的ctime、sleep函数，查看时间、等待</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">from <span class="selector-tag">time</span> import ctime,sleep</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(ctime()</span></span>)</span><br><span class="line"><span class="function"><span class="title">sleep</span><span class="params">(<span class="number">3</span>)</span></span></span><br></pre></td></tr></table></figure></div><h2 id="6、随机数"><a href="#6、随机数" class="headerlink" title="6、随机数"></a>6、随机数</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random  #随机数模块</span><br><span class="line"></span><br><span class="line">print(random.randint(<span class="number">0</span>,<span class="number">100</span>))    #randint随机的取规定范围中的数</span><br><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">321</span>,<span class="number">31</span>,<span class="number">3</span>,<span class="number">12</span>,<span class="number">132</span>]</span><br><span class="line">print(random.choice(a))   #choice随机的取容器中的数据</span><br></pre></td></tr></table></figure></div><h2 id="7、刷新页面"><a href="#7、刷新页面" class="headerlink" title="7、刷新页面"></a>7、刷新页面</h2><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">driver.refresh()	<span class="meta"># 刷新页面</span></span><br></pre></td></tr></table></figure><ol><li><p>有时候页面操作后，数据可能没及时同步，需要重新刷新</p></li><li><p>这里可以模拟刷新页面操作，相当于浏览器输入框后面的刷新按钮</p></li></ol><h2 id="8、前进和后退"><a href="#8、前进和后退" class="headerlink" title="8、前进和后退"></a>8、前进和后退</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">driver.<span class="keyword">back</span>()		<span class="comment"># 回退到上个页面</span></span><br><span class="line">driver.forward()		<span class="comment"># 切换到下个页面</span></span><br></pre></td></tr></table></figure></div><ol><li><p>当在一个浏览器打开两个页面后，想返回上一页面，相当于浏览器左上角的左箭头按钮</p></li><li><p>返回到上一页面后，也可以切换到下一页，相当于浏览器左上角的右箭头按钮</p></li></ol><h2 id="9、设置窗口大小"><a href="#9、设置窗口大小" class="headerlink" title="9、设置窗口大小"></a>9、设置窗口大小</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">driver.set_window_size(<span class="number">540</span>,<span class="number">960</span>)	# 设置窗口大小为手机分辨率<span class="number">540</span>*<span class="number">960</span></span><br><span class="line">driver.maximize_window()	# 窗口最大化</span><br></pre></td></tr></table></figure></div><ol><li><p>可以设置浏览器窗口大小，如设置窗口大小为手机分辨率540*960</p></li><li><p>也可以最大化窗口</p></li></ol><h2 id="10、截屏"><a href="#10、截屏" class="headerlink" title="10、截屏"></a>10、截屏</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TAGGERSCRIPT"><figure class="iseeu highlight /taggerscript"><table><tr><td class="code"><pre><span class="line">driver.get_screenshot_as_file('C:<span class="symbol">\\</span>Users<span class="symbol">\\</span>Administrator<span class="symbol">\\</span>Desktop<span class="symbol">\\</span>test<span class="symbol">\\</span>a01.jpg')</span><br></pre></td></tr></table></figure></div><ol><li><p>打开网站之后，也可以对屏幕截屏</p></li><li><p>截屏后设置制定的保存路径+文件名称+后缀</p></li></ol><h2 id="11、退出"><a href="#11、退出" class="headerlink" title="11、退出"></a>11、退出</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COS"><figure class="iseeu highlight /cos"><table><tr><td class="code"><pre><span class="line">driver.<span class="keyword">close</span>()</span><br><span class="line">driver.<span class="keyword">quit</span>()</span><br></pre></td></tr></table></figure></div><ol><li><p>退出有两种方式，一种是close;另外一种是quit</p></li><li><p>close用于关闭当前窗口，当打开的窗口较多时，就可以用close关闭部分窗口</p></li><li><p>quit用于结束进程，关闭所有的窗口</p></li></ol><h2 id="12、点击（鼠标左键）页面按钮：click"><a href="#12、点击（鼠标左键）页面按钮：click" class="headerlink" title="12、点击（鼠标左键）页面按钮：click()"></a>12、点击（鼠标左键）页面按钮：<code>click()</code></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">driver</span><span class="selector-class">.find_element_by_id</span>(<span class="string">'su'</span>)<span class="selector-class">.click</span>()</span><br></pre></td></tr></table></figure></div><h2 id="13、清空输入框：clear"><a href="#13、清空输入框：clear" class="headerlink" title="13、清空输入框：clear()"></a>13、清空输入框：<code>clear()</code></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">driver</span><span class="selector-class">.find_element_by_id</span>(<span class="string">'su'</span>)<span class="selector-class">.clear</span>()</span><br></pre></td></tr></table></figure></div><h2 id="14、输入字符串：send-keys"><a href="#14、输入字符串：send-keys" class="headerlink" title="14、输入字符串：send_keys()"></a>14、输入字符串：<code>send_keys()</code></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">driver</span><span class="selector-class">.find_element_by_id</span>(<span class="string">'su'</span>)<span class="selector-class">.send_keys</span>(‘我是字符串’)</span><br></pre></td></tr></table></figure></div><h2 id="15、submit提交表单"><a href="#15、submit提交表单" class="headerlink" title="15、submit提交表单"></a>15、submit提交表单</h2><ol><li><p>在百度搜索案例中，输入关键字后，可以直接按回车键搜索，也可以点搜索按钮搜索。</p></li><li><p><code>submit()</code>一般用来模拟回车键</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">driver</span><span class="selector-class">.find_element_by_id</span>(<span class="string">'su'</span>)<span class="selector-class">.submit</span>()</span><br></pre></td></tr></table></figure></div><h2 id="16、键盘操作"><a href="#16、键盘操作" class="headerlink" title="16、键盘操作"></a>16、键盘操作</h2><ol><li><p>selenium提供了一整套的模拟键盘操作事件，前面<code>submit()</code>方法如果不行的话，可以试试模拟键盘事件</p></li><li><p>模拟键盘的操作需要先导入键盘模块：<code>from selenium.webdriver.common.keys import Keys</code></p></li><li><p>模拟enter键，可以用<code>send_keys(Keys.ENTER)</code></p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">driver</span><span class="selector-class">.find_element_by_id</span>(<span class="string">'su'</span>)<span class="selector-class">.send_keys</span>(Keys.ENTER)</span><br></pre></td></tr></table></figure></div><ol start="4"><li>其他常见键盘操作：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">键盘 F1到F12：	send<span class="constructor">_keys(Keys.F1)</span>  把F1改成对应的快捷键</span><br><span class="line">复制 ctrl+C：	send<span class="constructor">_keys(Keys.CONTROL，‘<span class="params">c</span>’)</span>  </span><br><span class="line">粘贴 ctrl+V：	send<span class="constructor">_keys(Keys.CONTROL，‘<span class="params">v</span>’)</span>  </span><br><span class="line">复制 ctrl+A：	send<span class="constructor">_keys(Keys.CONTROL，‘<span class="params">a</span>’)</span>  </span><br><span class="line">复制 ctrl+X：	send<span class="constructor">_keys(Keys.CONTROL，‘<span class="params">x</span>’)</span></span><br></pre></td></tr></table></figure></div><h2 id="17、鼠标悬停、右击、双击事件"><a href="#17、鼠标悬停、右击、双击事件" class="headerlink" title="17、鼠标悬停、右击、双击事件"></a>17、鼠标悬停、右击、双击事件</h2><ol><li><p>鼠标不仅仅可以点击(click),鼠标还有其它的操作，如：鼠标悬停在某个元素上，鼠标右击，鼠标按住某个按钮拖到</p></li><li><p>鼠标事件需要先导入模块：</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">from</span> <span class="selector-tag">selenium</span><span class="selector-class">.webdriver</span><span class="selector-class">.common</span><span class="selector-class">.action_chains</span> <span class="selector-tag">import</span> <span class="selector-tag">ActionChains</span></span><br></pre></td></tr></table></figure></div><p><code>perform()</code> 执行所有ActionChains中的行为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">move_to_element</span><span class="params">()</span></span> 鼠标悬停</span><br></pre></td></tr></table></figure></div><p>这里以百度页面设置按钮为例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"># 鼠标悬停在搜索设置按钮上</span><br><span class="line">mouse = driver.find_element_by_link_text(‘设置’)</span><br><span class="line">ActionChains(driver).move_to_element(mouse).<span class="keyword">perform</span>()</span><br><span class="line">首先导入鼠标操作的模块 调用Actionchains()类 把浏览器也就是driver当做参数传入，后面是进行鼠标悬停，最后<span class="keyword">perform</span>用来提交前面的操作</span><br></pre></td></tr></table></figure></div><p>除了常用的鼠标悬停事件外，还有：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ISBL"><figure class="iseeu highlight /isbl"><table><tr><td class="code"><pre><span class="line">右击鼠标：<span class="function"><span class="title">context_click</span>()</span></span><br><span class="line">双击鼠标：<span class="function"><span class="title">double_click</span>()</span></span><br></pre></td></tr></table></figure></div><p>照葫芦画瓢，替换上面案例中对应的鼠标事件就可以了</p><h2 id="18、获取当前窗口句柄"><a href="#18、获取当前窗口句柄" class="headerlink" title="18、获取当前窗口句柄"></a>18、获取当前窗口句柄</h2><ol><li><p>元素有属性，浏览器的窗口其实也有属性的，只是你看不到，浏览器窗口的属性用句柄（handle）来识别。</p></li><li><p>人为操作的话，可以通过眼睛看，识别不同的窗口点击切换。但是脚本没长眼睛，它不知道你要操作哪个窗口，这时候只能句柄来判断了。</p></li><li><p>获取当前页面的句柄：</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAKEFILE"><figure class="iseeu highlight /makefile"><table><tr><td class="code"><pre><span class="line">driver.current_window_handle</span><br><span class="line">h = driver.current_window_handle <span class="comment"># 将获取的句柄赋值给一个变量，方便后续调用</span></span><br></pre></td></tr></table></figure></div><h2 id="19、获取所有句柄"><a href="#19、获取所有句柄" class="headerlink" title="19、获取所有句柄"></a>19、获取所有句柄</h2><ol><li><p>点击打开跳转到一个新的窗口</p></li><li><p>点击后，获取当前的句柄：<code>window_handles</code></p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">h</span> = driver.current_window_handle</span><br></pre></td></tr></table></figure></div><ol start="3"><li>获取所有句柄：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">all_h</span> = driver.window_handles</span><br></pre></td></tr></table></figure></div><h2 id="20、切换句柄"><a href="#20、切换句柄" class="headerlink" title="20、切换句柄"></a>20、切换句柄</h2><p>直接获取<code>all_h</code>这个<code>list</code>数据里面第二个<code>handles</code>的值，使用索引<code>all_h[1]</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">driver</span><span class="selector-class">.switch_to</span><span class="selector-class">.window</span>(<span class="selector-tag">all_h</span><span class="selector-attr">[1]</span>)</span><br></pre></td></tr></table></figure></div><h2 id="21、关闭新窗口，切回主页"><a href="#21、关闭新窗口，切回主页" class="headerlink" title="21、关闭新窗口，切回主页"></a>21、关闭新窗口，切回主页</h2><ol><li>打开新页面后，其实只想验证新页面跳转对不对，这里可以做个简单的验证，获取当前页面的title验证</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASH"><figure class="iseeu highlight /bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> driver.title	<span class="comment"># 打印当前窗口页面标题</span></span><br></pre></td></tr></table></figure></div><ol start="2"><li>验证完后切关闭新窗口</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line">driver.<span class="built_in">close</span>()</span><br></pre></td></tr></table></figure></div><ol start="3"><li>切回句柄到首页</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">driver.switch<span class="constructor">_window(<span class="params">h</span>)</span></span><br></pre></td></tr></table></figure></div><ol start="4"><li>打印当前页面的句柄，看是否切换到首页</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DOS"><figure class="iseeu highlight /dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> driver.<span class="built_in">title</span></span><br></pre></td></tr></table></figure></div><h2 id="22、frame和iframe的区别"><a href="#22、frame和iframe的区别" class="headerlink" title="22、frame和iframe的区别"></a>22、<code>frame</code>和<code>iframe</code>的区别</h2><p><code>frame</code>与<code>iframe</code>两者可以实现的功能基本相同，不过<code>iframe</code>比<code>frame</code>具有更多的灵活性。 <code>frame</code>是整个页面的框架，<code>iframe</code>是内嵌的网页元素，也可以说是内嵌的框架</p><p><code>iframe</code>标记又叫浮动帧标记，可以用它将一个HTML文档嵌入在一个HTML中显示。 它和<code>frame</code>标记的最大区别是在网页中嵌入 的<code>&lt;iframe&gt;&lt;/iframe&gt;</code>所包含的内容与整个页面是一个整体，而<code>&lt;frame&gt;&lt;/frame&gt;</code>所包含的内容是一个独立的个体，是可以独立显示的。另外，应用<code>iframe</code>还可以在同一个页面中多次显示同一内容，而不必重复这段内容的代码。</p><h2 id="23、切换iframe"><a href="#23、切换iframe" class="headerlink" title="23、切换iframe"></a>23、切换<code>iframe</code></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;iframe <span class="attribute">id</span>=<span class="string">"x-URS-iframe"</span> <span class="attribute">frameborder</span>=<span class="string">"0"</span> <span class="attribute">name</span>=<span class="string">""</span>&gt;</span><br></pre></td></tr></table></figure></div><ol><li>用<code>switch_to_frame(driver.switch_to.frame())</code>方法切换，此处有<code>id</code>属性，可以直接用<code>id</code>定位切换：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">driver</span><span class="selector-class">.switch_to</span><span class="selector-class">.frame</span>(<span class="selector-tag">x-URS-iframe</span>)</span><br></pre></td></tr></table></figure></div><ol start="2"><li>如果<code>iframe</code>没有<code>id</code>怎么办？</li></ol><p>① 这里<code>iframe</code>的切换是默认支持<code>id</code>和<code>name</code>的方法的，当然实际情况中会遇到没有<code>id</code>属性和<code>name</code>属性为空的情况，这时候就需要先定位<code>iframe</code></p><p>② 定位元素还是之前的方法同样适用，这里我可以通过<code>tag</code>先定位到，也能达到同样效果</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">iframe = driver.find<span class="constructor">_element_by_tag_name(‘<span class="params">iframe</span>’)</span></span><br><span class="line">driver.switch<span class="constructor">_to_frame(<span class="params">iframe</span>)</span></span><br></pre></td></tr></table></figure></div><h2 id="24、释放iframe"><a href="#24、释放iframe" class="headerlink" title="24、释放iframe"></a>24、释放<code>iframe</code></h2><p>当<code>iframe</code>上的操作完后，想重新回到主页面上操作元素，这时候，就可以用<code>switch_to_default_content()</code>方法返回到主页面</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CEYLON"><figure class="iseeu highlight /ceylon"><table><tr><td class="code"><pre><span class="line">driver.<span class="keyword">switch</span><span class="number">_</span>to<span class="number">_</span><span class="keyword">default</span><span class="number">_</span>content()</span><br></pre></td></tr></table></figure></div><h1 id="四、select"><a href="#四、select" class="headerlink" title="四、select"></a>四、select</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;select <span class="attribute">id</span>=<span class="string">"nr"</span> <span class="attribute">name</span>=<span class="string">"NR"</span>&gt;</span><br></pre></td></tr></table></figure></div><p>选项有三个：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">option</span> selected="" <span class="keyword">value</span>="10"&gt;每页显示<span class="number">10</span>条&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">&lt;<span class="keyword">option</span> <span class="keyword">value</span>="20"&gt;每页显示<span class="number">20</span>条&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">&lt;<span class="keyword">option</span> <span class="keyword">value</span>="50"&gt;每页显示<span class="number">50</span>条&lt;/<span class="keyword">option</span>&gt;</span><br></pre></td></tr></table></figure></div><p>1、二次定位</p><p>基本思路：先定位select框，再定位select里的选项</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">s = driver.find<span class="constructor">_element_by_id(‘<span class="params">nr</span>’)</span></span><br><span class="line">s.find<span class="constructor">_element_by_xpath(‘<span class="operator">/</span><span class="operator">/</span><span class="params">option</span>[@<span class="params">value</span>=’50’]’)</span>.click<span class="literal">()</span></span><br></pre></td></tr></table></figure></div><p>还可以直接把两步合并成为一步：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">driver</span><span class="selector-class">.find_element_by_id</span>(<span class="string">"nr"</span>)<span class="selector-class">.find_element_by_xpath</span>(<span class="string">"//option[@value='50']"</span>)<span class="selector-class">.click</span>()</span><br></pre></td></tr></table></figure></div><p>2、直接定位</p><p>自己写xpath定位或者css,一次性直接定位到option上的内容：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">driver</span><span class="selector-class">.find_element_by_xpath</span>(<span class="string">"//*[@id=’nr’]/option[2]"</span>)<span class="selector-class">.click</span>()</span><br></pre></td></tr></table></figure></div><p>3、Select模块(index)</p><ol><li><p>除了上面介绍的两种简单的方法定位到select选项，selenium还提供了更高级的玩法，导入Select模块。直接根据属性或索引定位。</p></li><li><p>先要导入select方法：</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.support.<span class="keyword">select</span> <span class="keyword">import</span> <span class="keyword">Select</span></span><br></pre></td></tr></table></figure></div><p>然后通过select选项的索引来定位选择对应选项（从<code>0</code>开始计数），如选择第三个选项:<code>select_by_index(2)</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">s = driver.find<span class="constructor">_element_by_id(‘<span class="params">nr</span>’)</span></span><br><span class="line"><span class="constructor">Select(<span class="params">s</span>)</span>.select<span class="constructor">_by_index(2)</span></span><br></pre></td></tr></table></figure></div><p>4、Select模块(value)</p><ol><li>Select模块里面除了index的方法，还有一个方法，通过选项的value值来定位。每个选项，都有对应的value值：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">select</span> id="nr" <span class="type">name</span>="NR"&gt;</span><br><span class="line">&lt;<span class="keyword">option</span> selected="" <span class="keyword">value</span>="10"&gt;每页显示<span class="number">10</span>条&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">&lt;<span class="keyword">option</span> <span class="keyword">value</span>="20"&gt;每页显示<span class="number">20</span>条&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">&lt;<span class="keyword">option</span> <span class="keyword">value</span>="50"&gt;每页显示<span class="number">50</span>条&lt;/<span class="keyword">option</span>&gt;</span><br></pre></td></tr></table></figure></div><p>第二个选项对应的value值就是<code>&quot;20&quot;</code>：<code>select_by_value(&quot;20&quot;)</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">s = driver.find<span class="constructor">_element_by_id(‘<span class="params">nr</span>’)</span></span><br><span class="line"><span class="constructor">Select(<span class="params">s</span>)</span>.select<span class="constructor">_by_value(‘20’)</span></span><br></pre></td></tr></table></figure></div><p>5、Select模块(text)</p><ol><li><p>Select模块里面还有一个更加高级的功能，可以直接通过选项的文本内容来定位。</p></li><li><p>定位“每页显示50条”：<code>select_by_visible_text(&quot;每页显示50条&quot;)</code></p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">s = driver.find<span class="constructor">_element_by_id(‘<span class="params">nr</span>’)</span></span><br><span class="line"><span class="constructor">Select(<span class="params">s</span>)</span>.select<span class="constructor">_by_visible_text(‘每页显示50条’)</span></span><br></pre></td></tr></table></figure></div><h1 id="五、弹窗alert-confirm-prompt"><a href="#五、弹窗alert-confirm-prompt" class="headerlink" title="五、弹窗alert\confirm\prompt"></a>五、弹窗alert\confirm\prompt</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">alert：</span><br><span class="line"><span class="function"><span class="title">alert</span><span class="params">(<span class="string">'我是alert'</span>)</span></span></span><br><span class="line"></span><br><span class="line">confirm：</span><br><span class="line"><span class="function"><span class="title">confirm</span><span class="params">(<span class="string">'我是confirm'</span>)</span></span></span><br><span class="line"></span><br><span class="line">prompt：</span><br><span class="line"><span class="function"><span class="title">prompt</span><span class="params">(<span class="string">'我是prompt'</span>)</span></span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/15/UwGBnJ.png" alt="UwGBnJ.png"></p><p>1、alert操作</p><ol><li>先用<code>switch_to_alert()</code>方法切换到alert弹出框上</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">t</span> = driver.switch_to_alert()</span><br></pre></td></tr></table></figure></div><ol start="2"><li>可以用text方法获取弹出的文本 信息</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span>(t.text)	<span class="meta"># 打印警告框文本内容</span></span><br></pre></td></tr></table></figure></div><ol start="3"><li><code>accept()</code>点击确认按钮</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">t.<span class="keyword">accept</span>()</span><br></pre></td></tr></table></figure></div><ol start="4"><li><code>dismiss()</code>相当于点右上角x，取消弹出框</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">t</span><span class="selector-class">.dismiss</span>()</span><br></pre></td></tr></table></figure></div><p>2、confirm操作</p><ol><li>先用<code>switch_to_alert()</code>方法切换到confirm弹出框上</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">t</span> = driver.switch_to_alert()</span><br></pre></td></tr></table></figure></div><ol start="2"><li>可以用text方法获取弹出的文本 信息</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span>(t.text)	<span class="meta"># 打印警告框文本内容</span></span><br></pre></td></tr></table></figure></div><ol start="3"><li><code>accept()</code>点击确认按钮</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">t.<span class="keyword">accept</span>()</span><br></pre></td></tr></table></figure></div><ol start="4"><li><code>dismiss()</code>点击取消弹按钮</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">t</span><span class="selector-class">.dismiss</span>()</span><br></pre></td></tr></table></figure></div><p>3、prompt操作</p><ol><li>先用<code>switch_to_alert()</code>方法切换到prompt弹出框上</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">t</span> = driver.switch_to_alert()</span><br></pre></td></tr></table></figure></div><ol start="2"><li>可以用text方法获取弹出的文本 信息</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">print</span>(t.text)	<span class="meta"># 打印警告框文本内容</span></span><br></pre></td></tr></table></figure></div><ol start="3"><li><code>send_keys()</code> 这里多个输入框，可以用<code>send_keys()</code>方法输入文本内容</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">t.send<span class="constructor">_keys(‘<span class="params">hello</span> <span class="params">selenium</span>’)</span></span><br></pre></td></tr></table></figure></div><ol start="4"><li><code>accept()</code>点击确认按钮</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">t.<span class="keyword">accept</span>()</span><br></pre></td></tr></table></figure></div><ol start="5"><li><code>dismiss()</code>相当于点右上角x，取消弹出框</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">t</span><span class="selector-class">.dismiss</span>()</span><br></pre></td></tr></table></figure></div><h1 id="六、单选框和复选框"><a href="#六、单选框和复选框" class="headerlink" title="六、单选框和复选框"></a>六、单选框和复选框</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 单选框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>性别:</span><br><span class="line">	<span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"男生"</span>&gt;</span>男生<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"女生"</span>&gt;</span>女生<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 复选框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">	爱好：</span><br><span class="line">	<span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"like"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span>音乐<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"like"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>旅游<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>其中在input标签外面加上lable标签的作用是在点击文字的时候也会选中或者取消，提高用户体验度<br>单选框是圆的；复选框是方的，这个是业界的标准</p><p>1、单选：radio</p><ol><li><p>首先是定位选择框的位置</p></li><li><p>定位id，点击图标就可以了</p></li></ol><p>2、复选框：checkbox</p><ol><li><p>勾选单个框，可以根据它的id直接定位到点击就可以了</p></li><li><p>全部勾选</p></li></ol><p>全部勾选，可以用到定位一组元素，复选框的<code>type=checkbox</code>,这里可以用xpath语法：<code>//*[@type=&#39;checkbox&#39;]</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NGINX"><figure class="iseeu highlight /nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">checkboxs</span> = driver.find_elements_by_xpath(‘//*[<span class="variable">@type</span>=<span class="string">'checkbox'</span>]’)</span><br><span class="line">for i in checkboxs:</span><br><span class="line">	i.click()</span><br></pre></td></tr></table></figure></div><p>注意：</p><p><code>find_elements</code>是不能直接点击的，它是复数的，所以只能先获取到所有的checkbox对象，然后通过for循环去一个个点击操作</p><p>3、判断是否选中：<code>is_selected()</code></p><p>没点击操作前，判断选项框状态：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line">s = driver.find_element_by_id(‘boy’).<span class="built_in">is_selected</span>()</span><br><span class="line"><span class="keyword">print</span>(s)	<span class="meta"># 结果为False</span></span><br></pre></td></tr></table></figure></div><p>点击后，判断选项框状态：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">driver.find<span class="constructor">_element_by_id(‘<span class="params">boy</span>’)</span>.click<span class="literal">()</span></span><br><span class="line"></span><br><span class="line">r = driver.find<span class="constructor">_element_by_id(‘<span class="params">boy</span>’)</span>.is<span class="constructor">_selected()</span></span><br><span class="line">print(r)	# 结果为True</span><br></pre></td></tr></table></figure></div><h1 id="七、调用JS处理滚动条"><a href="#七、调用JS处理滚动条" class="headerlink" title="七、调用JS处理滚动条"></a>七、调用JS处理滚动条</h1><p>当页面上的元素超过一屏后，想操作屏幕下方的元素，是不能直接定位到，会报元素不可见的。</p><p>这时候需要借助滚动条来拖动屏幕，使被操作的元素显示在当前的屏幕上，这时候只能借助JS了。</p><p><code>execute_script()</code>，可以直接执行js的脚本。</p><p>1、如果是一个页面自带的滚动条（即网页的的滚动条）</p><p>可直接用js</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LSL"><figure class="iseeu highlight /lsl"><table><tr><td class="code"><pre><span class="line">js = 'window.scrollTo(<span class="number">200</span>,<span class="number">800</span>)'</span><br><span class="line">driver.execute_script(js)</span><br><span class="line"></span><br><span class="line"># 同时向右移动<span class="number">200</span>px，向下移动<span class="number">800</span>px</span><br></pre></td></tr></table></figure></div><p>或：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MIPSASM"><figure class="iseeu highlight /mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">js="var </span>q=document.documentElement.<span class="keyword">scrollLeft=200"</span></span><br><span class="line"><span class="keyword">driver.execute_script(js)</span></span><br><span class="line"><span class="keyword"># </span>向右移动<span class="number">200</span>px</span><br></pre></td></tr></table></figure></div><p>或：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MIPSASM"><figure class="iseeu highlight /mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">js="var </span>q=document.documentElement.<span class="keyword">scrollTop=200"</span></span><br><span class="line"><span class="keyword">driver.execute_script(js)</span></span><br><span class="line"><span class="keyword"># </span>向下移动<span class="number">200</span>px</span><br></pre></td></tr></table></figure></div><p>2、元素聚焦、如果不是window滚动条，是内嵌滚动条</p><p>例如是在一个表单中的</p><p>我们可以先定位一个元素，这个元素是需要拖动滚动条的（就是这个元素是要在拖动滚动条之后才能显示的），把滚动条拖动到这个元素的位置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CMAKE"><figure class="iseeu highlight /cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">target</span> = driver.find_element_by_id(<span class="string">"元素的id"</span>)   <span class="comment">#这里定位方式只要能定位到元素就行，用那种方式都行</span></span><br><span class="line">driver.execute_script(<span class="string">"arguments[0].scrollIntoView();"</span>, <span class="keyword">target</span>)</span><br></pre></td></tr></table></figure></div><h1 id="八、cookie"><a href="#八、cookie" class="headerlink" title="八、cookie"></a>八、cookie</h1><p>虽然cookie相关操作在平常ui自动化中用得少，偶尔也会用到，比如登录有图形验证码，可以通过绕过验证码方式，添加cookie方法登录。</p><p>登录后换账号登录时候，也可作为后置条件去删除cookie然后下个账号登录</p><p>1、获取cookies：<code>get_cookies()</code></p><ol><li><p>获取cookies方法直接用：<code>get_cookies()</code></p></li><li><p>先启动浏览器，获取cookies，打印出来发现是空：<code>[]</code></p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LISP"><figure class="iseeu highlight /lisp"><table><tr><td class="code"><pre><span class="line">print(<span class="name">driver</span>.get_cookies())</span><br></pre></td></tr></table></figure></div><ol start="3"><li>打开百度首页后，重新获取cookies,打印出来，就有值了</li></ol><p>2、获取指定name的cookie:<code>driver.get_cookie（name）</code></p><ol><li><p>获取cookies发现里面有多个cookie,有时候我们只需要其中的一个，把重要的提出来，比如登录的cookie</p></li><li><p>这里用<code>get_cookie(name)</code>，指定对应的cookie的name值就行了，比如博客园的：<code>.CNBlogsCookie</code></p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LISP"><figure class="iseeu highlight /lisp"><table><tr><td class="code"><pre><span class="line">print(<span class="name">driver</span>.get_cookie(<span class="name">name=</span>’.CNBlogsCookie’))</span><br></pre></td></tr></table></figure></div><p>3、清除指定cookie：<code>delete_cookie()</code></p><ol><li>为了进一步验证上一步获取到的就是登录的cookie，可以删除它看看页面什么变化</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">driver.delete<span class="constructor">_cookie(<span class="params">name</span>=’.CNBlogsCookie’)</span></span><br></pre></td></tr></table></figure></div><ol start="2"><li>删除这个cookie后刷新页面，发现刚才的登录已经失效了，变成未登录状态了</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">driver.<span class="built_in">ref</span>resh()</span><br></pre></td></tr></table></figure></div><p>4、清除所有cookies：<code>delete_all_cookies()</code></p><p>清除所有cookies后登录状态也失效了，cookies为空<code>[]</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">driver.delete_all_cookies()</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(driver.get_cookies()</span></span>)</span><br></pre></td></tr></table></figure></div><p>5、<code>add_cookie(cookie_dict)</code>:添加cookie的值</p><p>用于绕过验证码登录</p><p>验证码这种问题是比较头疼的，对于验证码的处理，不要去想破解方法，这个验证码本来就是为了防止别人自动化登录的。</p><p>对于验证码，要么是让开发在测试环境弄个万能的验证码，如：1234，要么就是尽量绕过去</p><p>5.1、fiddler抓包</p><ol><li><p>登录后会生成一个已登录状态的cookie，那么只需要直接把这个值添加到cookies里面就可以了。</p></li><li><p>可以先手动登录一次，然后抓取这个cookie，这里就需要用抓包工具fiddler了</p></li><li><p>先打开登录界面，手动输入账号和密码（不要点登录按钮）</p></li><li><p>勾选记住密码，自动登录</p></li><li><p>打开fiddler抓包工具，此时再点登录按钮</p></li><li><p>登录成功后，再查看cookie变化，发现多了两组参数，多的这两组参数就是我们想要的，copy出来</p></li></ol><p><img src="https://s1.ax1x.com/2020/07/15/UwvfzQ.png" alt="UwvfzQ.png"></p><p>5.2、添加cookie方法：<code>driver.add_cookie()</code></p><ol><li><p><code>add_cookie(cookie_dict)</code>方法里面参数是<code>cookie_dict</code>，说明里面参数是字典类型。</p></li><li><p>源码官方文档介绍：</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">add_cookie(self, cookie_dict)</span><br><span class="line"><span class="type">Adds</span> a cookie to your current session.</span><br><span class="line">:<span class="type">Args</span>:</span><br><span class="line">- cookie_dict: <span class="type">A</span> dictionary <span class="class"><span class="keyword">object</span>, <span class="keyword">with</span> <span class="title">required</span> <span class="title">keys</span> <span class="title">-</span> "<span class="title">name</span>" <span class="title">and</span> "<span class="title">value</span>"</span>;</span><br><span class="line">optional keys - <span class="string">"path"</span>, <span class="string">"domain"</span>, <span class="string">"secure"</span>, <span class="string">"expiry"</span></span><br><span class="line"><span class="type">Usage</span>:</span><br><span class="line">driver.add_cookie(&#123;<span class="symbol">'nam</span>e' : <span class="symbol">'fo</span>o', <span class="symbol">'valu</span>e' : <span class="symbol">'ba</span>r'&#125;)</span><br><span class="line">driver.add_cookie(&#123;<span class="symbol">'nam</span>e' : <span class="symbol">'fo</span>o', <span class="symbol">'valu</span>e' : <span class="symbol">'ba</span>r', <span class="symbol">'pat</span>h' : '/'&#125;)</span><br><span class="line">driver.add_cookie(&#123;<span class="symbol">'nam</span>e' : <span class="symbol">'fo</span>o', <span class="symbol">'valu</span>e' : <span class="symbol">'ba</span>r', <span class="symbol">'pat</span>h' : '/', <span class="symbol">'secur</span>e':<span class="type">True</span>&#125;)</span><br></pre></td></tr></table></figure></div><ol start="3"><li><p>从官方的文档里面可以看出，添加cookie时候传入字典类型就可以了，等号左边的是name，等号左边的是value。</p></li><li><p>把前面抓到的两组数据（参数不仅仅只有name和value），写成字典类型</p></li></ol><p>5.3、添加cookie</p><ol><li><p>这里需要添加两个cookie，一个是<code>.CNBlogsCookie</code>，另外一个是<code>.Cnblogs.AspNetCore.Cookies</code>。</p></li><li><p>我这里打开的网页是博客的主页：<code>http://www.cnblogs.com</code>，没进入登录页。</p></li><li><p>添加cookie后刷新页面,接下来就是见证奇迹的时刻了。</p></li></ol><p><img src="https://s1.ax1x.com/2020/07/15/UwxNmn.png" alt="UwxNmn.png"></p><ol start="4"><li>最后用<code>driver.refresh()</code>刷新页面就可以了</li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>软件测试</tag>
        <tag>Selenium</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>七、融合</title>
    <url>/post/10c4f7b5.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="七、融合"><a href="#七、融合" class="headerlink" title="七、融合"></a>七、融合</h1><p><a href="https://www.w3school.com.cn/tags/canvas_globalcompositeoperation.asp" target="_blank" rel="noopener" class="LinkCard">HTML 5 canvas globalCompositeOperation 属性</a></p><p><img src="https://s1.ax1x.com/2020/07/13/UtSTxI.png" alt="UtSTxI.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">var canvas = document.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line">var ctx = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制矩形</span></span><br><span class="line">ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变填充色</span></span><br><span class="line">ctx.fillStyle = <span class="string">"orange"</span>;</span><br><span class="line"><span class="comment">// 绘制矩形</span></span><br><span class="line">ctx.fillRect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">200</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UtSjIg.png" alt="UtSjIg.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 绘制矩形</span></span><br><span class="line">ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在 canvas 中有一个属性可以改变新老图形的覆盖方式</span></span><br><span class="line">console.log(ctx.globalCompositeOperation);</span><br><span class="line">ctx.globalCompositeOperation = <span class="string">"destination-over"</span>;</span><br><span class="line">console.log(ctx.globalCompositeOperation);</span><br><span class="line"><span class="comment">// 改变填充色</span></span><br><span class="line">ctx.fillStyle = <span class="string">"orange"</span>;</span><br><span class="line"><span class="comment">// 绘制矩形</span></span><br><span class="line">ctx.fillRect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">200</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UtpAdU.png" alt="UtpAdU.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>Canvas</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>六、获取canvas上的像素</title>
    <url>/post/c839cdc0.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="六、获取canvas上的像素"><a href="#六、获取canvas上的像素" class="headerlink" title="六、获取canvas上的像素"></a>六、获取canvas上的像素</h1><h2 id="6-1-getImageData"><a href="#6-1-getImageData" class="headerlink" title="6.1  getImageData"></a>6.1 <code>getImageData</code></h2><p>该方法用于获取<code>canvas</code>上的像素信息，返回一个对象</p><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line">ctx.getImageData(<span class="symbol">x</span>, <span class="symbol">y</span>, w, h)</span><br><span class="line">    <span class="symbol">x</span>：要获取的矩形区域的 <span class="symbol">x</span> 点</span><br><span class="line">    <span class="symbol">y</span>：要获取的矩形区域的 <span class="symbol">y</span> 点</span><br><span class="line">    w：矩形的宽</span><br><span class="line">    h：矩形的高</span><br></pre></td></tr></table></figure></div><p>特点：<strong>需要服务器环境</strong></p><h2 id="6-2-putImageData"><a href="#6-2-putImageData" class="headerlink" title="6.2  putImageData"></a>6.2 <code>putImageData</code></h2><p>将像素信息放回：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line">ctx.putImageData(imgData, <span class="symbol">x</span>, <span class="symbol">y</span>);</span><br><span class="line">    imgData：像素对象</span><br><span class="line">    <span class="symbol">x</span>：需要放回到canvas的 <span class="symbol">x</span> 点</span><br><span class="line">    <span class="symbol">y</span>：需要放回到canvas的 <span class="symbol">y</span> 点</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"btns"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"getPX"</span>&gt;</span>获取像素<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"red"</span>&gt;</span>去掉红色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"green"</span>&gt;</span>去掉绿色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"blue"</span>&gt;</span>去掉蓝色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"gray"</span>&gt;</span>灰度<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="keyword">var</span> getPX = <span class="built_in">document</span>.getElementById(<span class="string">"getPX"</span>);</span><br><span class="line"><span class="keyword">var</span> red = <span class="built_in">document</span>.getElementById(<span class="string">"red"</span>);</span><br><span class="line"><span class="keyword">var</span> green = <span class="built_in">document</span>.getElementById(<span class="string">"green"</span>);</span><br><span class="line"><span class="keyword">var</span> blue = <span class="built_in">document</span>.getElementById(<span class="string">"blue"</span>);</span><br><span class="line"><span class="keyword">var</span> gray = <span class="built_in">document</span>.getElementById(<span class="string">"gray"</span>);</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line"><span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建图片元素</span></span><br><span class="line"><span class="keyword">var</span> img = <span class="keyword">new</span> Image();</span><br><span class="line"><span class="comment">// 设置路径</span></span><br><span class="line">img.src = <span class="string">"images/head_pic.jpg"</span>;</span><br><span class="line"><span class="comment">// 添加 load事件</span></span><br><span class="line">img.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 绘制图片</span></span><br><span class="line">    ctx.drawImage(<span class="keyword">this</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1024</span>, <span class="number">680</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加事件</span></span><br><span class="line">getPX.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取像素信息</span></span><br><span class="line">    <span class="keyword">var</span> imgData = ctx.getImageData(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1024</span>, <span class="number">680</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(imgData);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">red.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取像素信息</span></span><br><span class="line">    <span class="keyword">var</span> imgData = ctx.getImageData(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1024</span>, <span class="number">680</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; imgData.data.length; i += <span class="number">4</span>)&#123;</span><br><span class="line">        imgData.data[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将修正之后的像素对象，重新放回canvas上，否则不会有效果</span></span><br><span class="line">    ctx.putImageData(imgData, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">green.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取像素信息</span></span><br><span class="line">    <span class="keyword">var</span> imgData = ctx.getImageData(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1024</span>, <span class="number">680</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; imgData.data.length; i += <span class="number">4</span>)&#123;</span><br><span class="line">        imgData.data[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将修正之后的像素对象，重新放回canvas上，否则不会有效果</span></span><br><span class="line">    ctx.putImageData(imgData, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">blue.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取像素信息</span></span><br><span class="line">    <span class="keyword">var</span> imgData = ctx.getImageData(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1024</span>, <span class="number">680</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">2</span>; i &lt; imgData.data.length; i += <span class="number">4</span>)&#123;</span><br><span class="line">        imgData.data[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将修正之后的像素对象，重新放回canvas上，否则不会有效果</span></span><br><span class="line">    ctx.putImageData(imgData, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gray.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取像素信息</span></span><br><span class="line">    <span class="keyword">var</span> imgData = ctx.getImageData(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1024</span>, <span class="number">680</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; imgData.data.length; i += <span class="number">4</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> r = imgData.data[i];</span><br><span class="line">        <span class="keyword">var</span> g = imgData.data[i + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">var</span> b = imgData.data[i + <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取平均值</span></span><br><span class="line">        <span class="keyword">var</span> avg = (r + g + b) / <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重新设置</span></span><br><span class="line">        imgData.data[i] = avg;</span><br><span class="line">        imgData.data[i + <span class="number">1</span>] = avg;</span><br><span class="line">        imgData.data[i + <span class="number">2</span>] = avg;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 将修正之后的像素对象，重新放回canvas上，否则不会有效果</span></span><br><span class="line">    ctx.putImageData(imgData, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UY2JjP.png" alt="UY2JjP.png"></p><p><img src="https://s1.ax1x.com/2020/07/13/UY2NB8.png" alt="UY2NB8.png"></p><p><img src="https://s1.ax1x.com/2020/07/13/UY2scq.png" alt="UY2scq.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>Canvas</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>五、状态的保存与恢复</title>
    <url>/post/564881cb.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="五、状态的保存与恢复"><a href="#五、状态的保存与恢复" class="headerlink" title="五、状态的保存与恢复"></a>五、状态的保存与恢复</h1><p>在操作图像的时候，很可能会用到 ctx之前的状态，<code>canvas</code>提供了相应的<code>API</code>，用于保存状态</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">var canvas = document.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line">var ctx = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//改变填充色</span></span><br><span class="line">ctx.fillStyle = <span class="string">"blue"</span>;</span><br><span class="line"><span class="comment">// 绘制矩形</span></span><br><span class="line">ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存状态</span></span><br><span class="line">ctx.save();</span><br><span class="line"></span><br><span class="line"><span class="comment">//改变填充色</span></span><br><span class="line">ctx.fillStyle = <span class="string">"orange"</span>;</span><br><span class="line"><span class="comment">// 绘制矩形</span></span><br><span class="line">ctx.fillRect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 恢复状态</span></span><br><span class="line">ctx.restore();</span><br><span class="line"><span class="comment">// 绘制矩形</span></span><br><span class="line">ctx.fillRect(<span class="number">200</span>, <span class="number">200</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYg0Qx.png" alt="UYg0Qx.png"></p><p><code>save</code>方法可以使用多次，每<code>save</code>一次，就把当前的<code>canvas</code>上的状态复制一份，每<code>restore</code>一次就用掉一次<code>save</code></p><p>每<code>save</code>一次相当于往子弹夹中装一颗子弹</p><p>每<code>restore</code>一次相当于将弹夹中的子弹发射一颗</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//改变填充色</span></span><br><span class="line">ctx.fillStyle = <span class="string">"blue"</span>;</span><br><span class="line"><span class="comment">// 保存状态</span></span><br><span class="line">ctx.save();</span><br><span class="line"></span><br><span class="line"><span class="comment">//改变填充色</span></span><br><span class="line">ctx.fillStyle = <span class="string">"orange"</span>;</span><br><span class="line"><span class="comment">// 保存状态</span></span><br><span class="line">ctx.save();</span><br><span class="line"></span><br><span class="line"><span class="comment">//改变填充色</span></span><br><span class="line">ctx.fillStyle = <span class="string">"pink"</span>;</span><br><span class="line"><span class="comment">// 保存状态</span></span><br><span class="line">ctx.save();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制矩形</span></span><br><span class="line">ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 恢复一次</span></span><br><span class="line">ctx.restore();</span><br><span class="line">ctx.fillRect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 再恢复两次</span></span><br><span class="line">ctx.restore();</span><br><span class="line">ctx.restore();</span><br><span class="line">ctx.fillRect(<span class="number">200</span>, <span class="number">200</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYg6Te.png" alt="UYg6Te.png"></p><h2 id="5-1-应用：一个旋转一个静止"><a href="#5-1-应用：一个旋转一个静止" class="headerlink" title="5.1  应用：一个旋转一个静止"></a>5.1 应用：一个旋转一个静止</h2><p><code>ctx.save();</code> 和 <code>ctx.restore();</code> 之间的内容相当于一个封闭的盒子，对其他部分没有影响</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">var canvas = document.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line">var ctx = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制矩形</span></span><br><span class="line"><span class="comment">// ctx.fillRect(100, 100, 400, 400);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 平移坐标系</span></span><br><span class="line">ctx.translate(canvas.width / <span class="number">2</span>, canvas.height / <span class="number">2</span>);</span><br><span class="line"><span class="comment">// 绘制矩形</span></span><br><span class="line">ctx.fillRect(<span class="number">-200</span>, <span class="number">-200</span>, <span class="number">400</span>, <span class="number">400</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义角度</span></span><br><span class="line">var deg = Math.PI / <span class="number">180</span>;</span><br><span class="line"><span class="comment">// 定义信号量</span></span><br><span class="line">var i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义定时器</span></span><br><span class="line">var timer = setInterval(function()&#123;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="comment">// 清屏</span></span><br><span class="line">    ctx.clearRect(<span class="number">-3000</span>, <span class="number">-3000</span>, <span class="number">30000</span>, <span class="number">30000</span>);</span><br><span class="line">    <span class="comment">// 保存初始状态 黑色填充 不旋转</span></span><br><span class="line">    ctx.save();</span><br><span class="line">    <span class="comment">// 旋转</span></span><br><span class="line">    ctx.rotate(deg * i);</span><br><span class="line">    <span class="comment">// 绘制矩形</span></span><br><span class="line">    ctx.fillRect(<span class="number">-200</span>, <span class="number">-200</span>, <span class="number">400</span>, <span class="number">400</span>);</span><br><span class="line">    <span class="comment">// 恢复到初始状态 黑色填充 不旋转</span></span><br><span class="line">    ctx.restore();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 保存初始状态 黑色填充 不旋转</span></span><br><span class="line">    ctx.save();</span><br><span class="line">    <span class="comment">//改变填充颜色</span></span><br><span class="line">    ctx.fillStyle = <span class="string">"orange"</span>;</span><br><span class="line">    <span class="comment">// 绘制矩形</span></span><br><span class="line">    ctx.fillRect(<span class="number">100</span>, <span class="number">-100</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">    <span class="comment">// 恢复到初始状态 黑色填充 不旋转</span></span><br><span class="line">    ctx.restore();</span><br><span class="line">&#125;, <span class="number">200</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYgfSI.png" alt="UYgfSI.png"></p><h2 id="5-2-应用：时钟"><a href="#5-2-应用：时钟" class="headerlink" title="5.2  应用：时钟"></a>5.2 应用：时钟</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">var canvas = document.get<span class="constructor">ElementById(<span class="string">"myCanvas"</span>)</span>;</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line">var ctx = canvas.get<span class="constructor">Context(<span class="string">"2d"</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 平移坐标系</span></span><br><span class="line">ctx.translate(canvas.width<span class="operator"> / </span><span class="number">2</span>, canvas.height<span class="operator"> / </span><span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变线宽</span></span><br><span class="line">ctx.lineWidth = <span class="number">4</span>;</span><br><span class="line"><span class="comment">// 绘制秒针</span></span><br><span class="line">line(<span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, -<span class="number">180</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变线宽</span></span><br><span class="line">ctx.lineWidth = <span class="number">6</span>;</span><br><span class="line"><span class="comment">// 绘制分针</span></span><br><span class="line">line(<span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, -<span class="number">150</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变线宽</span></span><br><span class="line">ctx.lineWidth = <span class="number">8</span>;</span><br><span class="line"><span class="comment">// 绘制时针</span></span><br><span class="line">line(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span>, -<span class="number">120</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制圆</span></span><br><span class="line">draw<span class="constructor">Circle(0, 0, 5)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取当前时间</span></span><br><span class="line">var date = <span class="keyword">new</span> <span class="constructor">Date()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义角度</span></span><br><span class="line">var deg = Math.PI<span class="operator"> / </span><span class="number">180</span>;</span><br><span class="line"><span class="comment">// 信号量</span></span><br><span class="line">var i = date.get<span class="constructor">Hours()</span><span class="operator"> * </span><span class="number">3600</span> + date.get<span class="constructor">Minutes()</span><span class="operator"> * </span><span class="number">60</span> + date.get<span class="constructor">Seconds()</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启定时器</span></span><br><span class="line">var timer = set<span class="constructor">Interval(<span class="params">function</span>()</span>&#123;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="comment">// 清屏</span></span><br><span class="line">    ctx.clear<span class="constructor">Rect(-600, -600, 3000, 3000)</span>;</span><br><span class="line">    <span class="comment">// 渲染</span></span><br><span class="line">    <span class="comment">// 保存状态 指针不旋转</span></span><br><span class="line">    ctx.save<span class="literal">()</span>;</span><br><span class="line">    <span class="comment">// 旋转</span></span><br><span class="line">    ctx.rotate(deg<span class="operator"> * </span>i<span class="operator"> * </span><span class="number">6</span>);</span><br><span class="line">    <span class="comment">// 改变线宽</span></span><br><span class="line">    ctx.lineWidth = <span class="number">4</span>;</span><br><span class="line">    <span class="comment">// 绘制秒针</span></span><br><span class="line">    line(<span class="number">0</span>, <span class="number">20</span>, <span class="number">0</span>, -<span class="number">180</span>);</span><br><span class="line">    <span class="comment">// 恢复  指针不旋转</span></span><br><span class="line">    ctx.restore<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存状态 指针不旋转</span></span><br><span class="line">    ctx.save<span class="literal">()</span>;</span><br><span class="line">    <span class="comment">// 旋转</span></span><br><span class="line">    ctx.rotate(deg<span class="operator"> * </span>i<span class="operator"> / </span><span class="number">10</span>);</span><br><span class="line">    <span class="comment">// 改变线宽</span></span><br><span class="line">    ctx.lineWidth = <span class="number">6</span>;</span><br><span class="line">    <span class="comment">// 绘制分针</span></span><br><span class="line">    line(<span class="number">0</span>, <span class="number">15</span>, <span class="number">0</span>, -<span class="number">150</span>);</span><br><span class="line">    <span class="comment">// 恢复  指针不旋转</span></span><br><span class="line">    ctx.restore<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存状态 指针不旋转</span></span><br><span class="line">    ctx.save<span class="literal">()</span>;</span><br><span class="line">    <span class="comment">// 旋转</span></span><br><span class="line">    ctx.rotate(deg<span class="operator"> * </span>i<span class="operator"> / </span><span class="number">120</span>);</span><br><span class="line">    <span class="comment">// 改变线宽</span></span><br><span class="line">    ctx.lineWidth = <span class="number">8</span>;</span><br><span class="line">    <span class="comment">// 绘制时针</span></span><br><span class="line">    line(<span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span>, -<span class="number">120</span>);</span><br><span class="line">    <span class="comment">// 恢复  指针不旋转</span></span><br><span class="line">    ctx.restore<span class="literal">()</span>;</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装函数，传递两个点，绘制两个点之间的线段</span></span><br><span class="line"><span class="keyword">function</span> line(x1, y1, x2, y2)&#123;</span><br><span class="line">    <span class="comment">// 开启路径</span></span><br><span class="line">    ctx.<span class="keyword">begin</span><span class="constructor">Path()</span>;</span><br><span class="line">    <span class="comment">// 移动画笔到某个位置</span></span><br><span class="line">    ctx.move<span class="constructor">To(<span class="params">x1</span>, <span class="params">y1</span>)</span>;</span><br><span class="line">    <span class="comment">// 绘制路径</span></span><br><span class="line">    ctx.line<span class="constructor">To(<span class="params">x2</span>, <span class="params">y2</span>)</span>;</span><br><span class="line">    <span class="comment">// 关闭路径</span></span><br><span class="line">    ctx.close<span class="constructor">Path()</span>;</span><br><span class="line">    <span class="comment">// 描边</span></span><br><span class="line">    ctx. stroke<span class="literal">()</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装一个函数，用于绘制圆</span></span><br><span class="line"><span class="keyword">function</span> draw<span class="constructor">Circle(<span class="params">x</span>, <span class="params">y</span>, <span class="params">r</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 开启路径</span></span><br><span class="line">    ctx.<span class="keyword">begin</span><span class="constructor">Path()</span>;</span><br><span class="line">    <span class="comment">// 绘制圆</span></span><br><span class="line">    ctx.arc(x, y, r, <span class="number">0</span>, Math.PI<span class="operator"> * </span><span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 闭合路径</span></span><br><span class="line">    ctx.close<span class="constructor">Path()</span>;</span><br><span class="line">    <span class="comment">// 描边</span></span><br><span class="line">    ctx.stroke<span class="literal">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYgT0S.png" alt="UYgT0S.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>Canvas</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>四、星星连线</title>
    <url>/post/550f7848.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="四、星星连线"><a href="#四、星星连线" class="headerlink" title="四、星星连线"></a>四、星星连线</h1><h2 id="4-1-一个星星"><a href="#4-1-一个星星" class="headerlink" title="4.1  一个星星"></a>4.1 一个星星</h2><h3 id="4-1-1-dom"><a href="#4-1-1-dom" class="headerlink" title="4.1.1  dom"></a>4.1.1 dom</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"myCanvas"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="4-1-2-CSS"><a href="#4-1-2-CSS" class="headerlink" title="4.1.2  CSS"></a>4.1.2 CSS</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span>, <span class="selector-tag">html</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">canvas</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="4-1-3-js"><a href="#4-1-3-js" class="headerlink" title="4.1.3  js"></a>4.1.3 js</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取视口的宽</span></span><br><span class="line"><span class="keyword">var</span> width = <span class="built_in">document</span>.documentElement.clientWidth;</span><br><span class="line"><span class="comment">// 获取视口的高</span></span><br><span class="line"><span class="keyword">var</span> height = <span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line"><span class="comment">// 获取 canvas</span></span><br><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line"><span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"><span class="comment">// 赋值 canvas的宽</span></span><br><span class="line">canvas.width = width;</span><br><span class="line"><span class="comment">// 赋值 canvas的高</span></span><br><span class="line">canvas.height = height;</span><br><span class="line"><span class="comment">// 改变填充色</span></span><br><span class="line">ctx.fillStyle = <span class="string">"white"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义星星的 x 值</span></span><br><span class="line"><span class="comment">// parseInt() 函数可解析一个字符串,并返回一个整数</span></span><br><span class="line"><span class="comment">// Math.random()是令系统随机选取大于等于 0.0 且小于 1.0 的伪随机值</span></span><br><span class="line"><span class="keyword">var</span> x = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * width);  </span><br><span class="line"><span class="comment">// 定义星星的 y 值</span></span><br><span class="line"><span class="keyword">var</span> y = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * height);  </span><br><span class="line"><span class="comment">// 星星移动速度的 x 方向</span></span><br><span class="line"><span class="keyword">var</span> x_speed = <span class="number">.6</span>;</span><br><span class="line"><span class="comment">// 星星移动速度的 y 方向</span></span><br><span class="line"><span class="keyword">var</span> y_speed = <span class="number">.7</span>;</span><br><span class="line"><span class="comment">// 定义星星的半径</span></span><br><span class="line"><span class="keyword">var</span> r = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(x, y, r);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制星星</span></span><br><span class="line"><span class="comment">// 开启路径</span></span><br><span class="line">ctx.beginPath();</span><br><span class="line"><span class="comment">// 绘制圆</span></span><br><span class="line">ctx.arc(x, y, r, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>);</span><br><span class="line"><span class="comment">// 闭合路径</span></span><br><span class="line">ctx.closePath();</span><br><span class="line"><span class="comment">// 填充</span></span><br><span class="line">ctx.fill();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启定时器</span></span><br><span class="line"><span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 清屏</span></span><br><span class="line">    ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">    <span class="comment">// 移动</span></span><br><span class="line">    x -= x_speed;</span><br><span class="line">    y -= y_speed;</span><br><span class="line">    <span class="comment">// 渲染</span></span><br><span class="line">    <span class="comment">// 开启路径</span></span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    <span class="comment">// 绘制圆</span></span><br><span class="line">    ctx.arc(x, y, r, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 闭合路径</span></span><br><span class="line">    ctx.closePath();</span><br><span class="line">    <span class="comment">// 填充</span></span><br><span class="line">    ctx.fill();</span><br><span class="line">&#125;, <span class="number">20</span>);</span><br></pre></td></tr></table></figure></div><h2 id="4-2-使用面向对象的方式"><a href="#4-2-使用面向对象的方式" class="headerlink" title="4.2  使用面向对象的方式"></a>4.2 使用面向对象的方式</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取视口的宽</span></span><br><span class="line"><span class="keyword">var</span> width = <span class="built_in">document</span>.documentElement.clientWidth;</span><br><span class="line"><span class="comment">// 获取视口的高</span></span><br><span class="line"><span class="keyword">var</span> height = <span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line"><span class="comment">// 获取 canvas</span></span><br><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line"><span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"><span class="comment">// 赋值 canvas的宽</span></span><br><span class="line">canvas.width = width;</span><br><span class="line"><span class="comment">// 赋值 canvas的高</span></span><br><span class="line">canvas.height = height;</span><br><span class="line"><span class="comment">// 改变填充色</span></span><br><span class="line">ctx.fillStyle = <span class="string">"white"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 Star 类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Star</span>(<span class="params">ctx, x, y, r</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.ctx = ctx;</span><br><span class="line">    <span class="keyword">this</span>.x = x;</span><br><span class="line">    <span class="keyword">this</span>.y = y;</span><br><span class="line">    <span class="keyword">this</span>.r = r;</span><br><span class="line">    <span class="comment">// parseInt(Math.random() * 3) + 1  === 1, 2, 3</span></span><br><span class="line">    <span class="comment">// parseInt(Math.random() * 10) + 1 === 1, 2, 3, 4, 5, 6, 7, 8, 9, 10</span></span><br><span class="line">    <span class="comment">// Math.pow(-1, 1~10)   -1 的 1~10 次幂</span></span><br><span class="line">    <span class="keyword">this</span>.x_speed = (<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">3</span>) + <span class="number">1</span>) * <span class="built_in">Math</span>.pow(<span class="number">-1</span>, <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">10</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">this</span>.y_speed = (<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">3</span>) + <span class="number">1</span>) * <span class="built_in">Math</span>.pow(<span class="number">-1</span>, <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">10</span>) + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法要写在原型上</span></span><br><span class="line"><span class="comment">// 移动方法</span></span><br><span class="line">Star.prototype.move = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x -= <span class="keyword">this</span>.x_speed;</span><br><span class="line">    <span class="keyword">this</span>.y -= <span class="keyword">this</span>.y_speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转向 x 方法</span></span><br><span class="line">Star.prototype.changeX = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x_speed = - <span class="keyword">this</span>.x_speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转向 y 方法</span></span><br><span class="line">Star.prototype.changeY = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.y_speed = - <span class="keyword">this</span>.y_speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染方法</span></span><br><span class="line">Star.prototype.render = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 开启路径</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">    <span class="comment">// 绘制圆</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.arc(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y, <span class="keyword">this</span>.r, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 闭合路径</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.closePath();</span><br><span class="line">    <span class="comment">// 填充</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化星星对象</span></span><br><span class="line"><span class="keyword">var</span> star = <span class="keyword">new</span> Star(ctx, <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * width), <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * height), <span class="number">2</span>);</span><br><span class="line">star.render();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启定时器</span></span><br><span class="line"><span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 清屏</span></span><br><span class="line">    ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">    <span class="comment">// 移动</span></span><br><span class="line">    star.move();</span><br><span class="line">    <span class="comment">// 判断边界</span></span><br><span class="line">    <span class="keyword">if</span> (star.x &lt; <span class="number">0</span> || star.x &gt; width)&#123;</span><br><span class="line">        star.changeX();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (star.y &lt; <span class="number">0</span> || star.y &gt; height)&#123;</span><br><span class="line">        star.changeY();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 渲染</span></span><br><span class="line">    star.render();</span><br><span class="line">&#125;, <span class="number">20</span>);</span><br></pre></td></tr></table></figure></div><h2 id="4-3-多个星星"><a href="#4-3-多个星星" class="headerlink" title="4.3  多个星星"></a>4.3 多个星星</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取视口的宽</span></span><br><span class="line"><span class="keyword">var</span> width = <span class="built_in">document</span>.documentElement.clientWidth;</span><br><span class="line"><span class="comment">// 获取视口的高</span></span><br><span class="line"><span class="keyword">var</span> height = <span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line"><span class="comment">// 获取 canvas</span></span><br><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line"><span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"><span class="comment">// 赋值 canvas的宽</span></span><br><span class="line">canvas.width = width;</span><br><span class="line"><span class="comment">// 赋值 canvas的高</span></span><br><span class="line">canvas.height = height;</span><br><span class="line"><span class="comment">// 改变填充色</span></span><br><span class="line">ctx.fillStyle = <span class="string">"white"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 Star 类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Star</span>(<span class="params">ctx, x, y, r</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.ctx = ctx;</span><br><span class="line">    <span class="keyword">this</span>.x = x;</span><br><span class="line">    <span class="keyword">this</span>.y = y;</span><br><span class="line">    <span class="keyword">this</span>.r = r;</span><br><span class="line">    <span class="comment">// parseInt(Math.random() * 3) + 1  === 1, 2, 3</span></span><br><span class="line">    <span class="comment">// parseInt(Math.random() * 10) + 1 === 1, 2, 3, 4, 5, 6, 7, 8, 9, 10</span></span><br><span class="line">    <span class="comment">// Math.pow(-1, 1~10)   -1 的 1~10 次幂</span></span><br><span class="line">    <span class="keyword">this</span>.x_speed = (<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">3</span>) + <span class="number">1</span>) * <span class="built_in">Math</span>.pow(<span class="number">-1</span>, <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">10</span>) + <span class="number">1</span>) / <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">this</span>.y_speed = (<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">3</span>) + <span class="number">1</span>) * <span class="built_in">Math</span>.pow(<span class="number">-1</span>, <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">10</span>) + <span class="number">1</span>) / <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法要写在原型上</span></span><br><span class="line"><span class="comment">// 移动方法</span></span><br><span class="line">Star.prototype.move = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x -= <span class="keyword">this</span>.x_speed;</span><br><span class="line">    <span class="keyword">this</span>.y -= <span class="keyword">this</span>.y_speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转向 x 方法</span></span><br><span class="line">Star.prototype.changeX = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x_speed = - <span class="keyword">this</span>.x_speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转向 y 方法</span></span><br><span class="line">Star.prototype.changeY = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.y_speed = - <span class="keyword">this</span>.y_speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染方法</span></span><br><span class="line">Star.prototype.render = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 开启路径</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">    <span class="comment">// 绘制圆</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.arc(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y, <span class="keyword">this</span>.r, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 闭合路径</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.closePath();</span><br><span class="line">    <span class="comment">// 填充</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义数组 用于存放每一个星星对象</span></span><br><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="comment">// 初始化星星对象</span></span><br><span class="line"><span class="comment">// var star = new Star(ctx, parseInt(Math.random() * width), parseInt(Math.random() * height), 2);</span></span><br><span class="line"><span class="comment">// star.render();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 100 个星星</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)&#123;</span><br><span class="line">    arr.push(<span class="keyword">new</span> Star(ctx, <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * width), <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * height), <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启定时器</span></span><br><span class="line"><span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 清屏</span></span><br><span class="line">    ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">    arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value, index</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 移动</span></span><br><span class="line">        value.move();</span><br><span class="line">        <span class="comment">// 判断边界</span></span><br><span class="line">        <span class="keyword">if</span> (value.x &lt; <span class="number">0</span> || value.x &gt; width)&#123;</span><br><span class="line">            value.changeX();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (value.y &lt; <span class="number">0</span> || value.y &gt; height)&#123;</span><br><span class="line">            value.changeY();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 渲染</span></span><br><span class="line">        value.render();</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;, <span class="number">20</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYglQ0.png" alt="UYglQ0.png"></p><h2 id="4-4-星星连线"><a href="#4-4-星星连线" class="headerlink" title="4.4  星星连线"></a>4.4 星星连线</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="QML"><figure class="iseeu highlight /qml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取视口的宽</span></span><br><span class="line"><span class="keyword">var</span> width = <span class="built_in">document</span>.documentElement.clientWidth;</span><br><span class="line"><span class="comment">// 获取视口的高</span></span><br><span class="line"><span class="keyword">var</span> height = <span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line"><span class="comment">// 获取 canvas</span></span><br><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line"><span class="keyword">var</span> ctx = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"><span class="comment">// 赋值 canvas的宽</span></span><br><span class="line">canvas.width = width;</span><br><span class="line"><span class="comment">// 赋值 canvas的高</span></span><br><span class="line">canvas.height = height;</span><br><span class="line"><span class="comment">// 改变填充色</span></span><br><span class="line">ctx.fillStyle = <span class="string">"white"</span>;</span><br><span class="line"><span class="comment">// 改变线条颜色</span></span><br><span class="line">ctx.strokeStyle = <span class="string">"rgba(255, 255, 123, .4)"</span>;</span><br><span class="line"><span class="comment">// 改变线宽</span></span><br><span class="line">ctx.lineWidth = <span class="string">".3"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 Star 类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Star</span>(<span class="params">ctx, x, y, r</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.ctx = ctx;</span><br><span class="line">    <span class="keyword">this</span>.x = x;</span><br><span class="line">    <span class="keyword">this</span>.y = y;</span><br><span class="line">    <span class="keyword">this</span>.r = r;</span><br><span class="line">    <span class="comment">// parseInt(Math.random() * 3) + 1  === 1, 2, 3</span></span><br><span class="line">    <span class="comment">// parseInt(Math.random() * 10) + 1 === 1, 2, 3, 4, 5, 6, 7, 8, 9, 10</span></span><br><span class="line">    <span class="comment">// Math.pow(-1, 1~10)   -1 的 1~10 次幂</span></span><br><span class="line">    <span class="keyword">this</span>.x_speed = (<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">3</span>) + <span class="number">1</span>) * <span class="built_in">Math</span>.pow(<span class="number">-1</span>, <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">10</span>) + <span class="number">1</span>) / <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">this</span>.y_speed = (<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">3</span>) + <span class="number">1</span>) * <span class="built_in">Math</span>.pow(<span class="number">-1</span>, <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">10</span>) + <span class="number">1</span>) / <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法要写在原型上</span></span><br><span class="line"><span class="comment">// 移动方法</span></span><br><span class="line">Star.prototype.move = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x -= <span class="keyword">this</span>.x_speed;</span><br><span class="line">    <span class="keyword">this</span>.y -= <span class="keyword">this</span>.y_speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转向 x 方法</span></span><br><span class="line">Star.prototype.changeX = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.x_speed = - <span class="keyword">this</span>.x_speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转向 y 方法</span></span><br><span class="line">Star.prototype.changeY = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.y_speed = - <span class="keyword">this</span>.y_speed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 渲染方法</span></span><br><span class="line">Star.prototype.render = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 开启路径</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.beginPath();</span><br><span class="line">    <span class="comment">// 绘制圆</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.arc(<span class="keyword">this</span>.x, <span class="keyword">this</span>.y, <span class="keyword">this</span>.r, <span class="number">0</span>, <span class="built_in">Math</span>.PI * <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 闭合路径</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.closePath();</span><br><span class="line">    <span class="comment">// 填充</span></span><br><span class="line">    <span class="keyword">this</span>.ctx.fill();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义数组 用于存放每一个星星对象</span></span><br><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="comment">// 初始化星星对象</span></span><br><span class="line"><span class="comment">// var star = new Star(ctx, parseInt(Math.random() * width), parseInt(Math.random() * height), 2);</span></span><br><span class="line"><span class="comment">// star.render();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 100 个星星</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)&#123;</span><br><span class="line">    arr.push(<span class="keyword">new</span> Star(ctx, <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * width), <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * height), <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建鼠标星星对象</span></span><br><span class="line"><span class="keyword">var</span> mouse_star = <span class="keyword">new</span> Star(ctx, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取鼠标的位置</span></span><br><span class="line">    <span class="keyword">var</span> x = e.clientX;</span><br><span class="line">    <span class="keyword">var</span> y = e.clientY;</span><br><span class="line">    <span class="comment">// 赋值 mouse_star 对象中的 x 和 y 值</span></span><br><span class="line">    mouse_star.x = x;</span><br><span class="line">    mouse_star.y = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启定时器</span></span><br><span class="line"><span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 清屏</span></span><br><span class="line">    ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 渲染鼠标星星</span></span><br><span class="line">    mouse_star.render();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 渲染每一个星星</span></span><br><span class="line">    arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value, index</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 移动</span></span><br><span class="line">        value.move();</span><br><span class="line">        <span class="comment">// 判断边界</span></span><br><span class="line">        <span class="keyword">if</span> (value.x &lt; <span class="number">0</span> || value.x &gt; width)&#123;</span><br><span class="line">            value.changeX();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (value.y &lt; <span class="number">0</span> || value.y &gt; height)&#123;</span><br><span class="line">            value.changeY();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 渲染</span></span><br><span class="line">        value.render();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环判断</span></span><br><span class="line">    arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value, index</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// value 表示每一个星星，我们应该拿着这个星星与其它所有星星作比较</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = index + <span class="number">1</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">            <span class="comment">// Math.abs(value.x - arr[i].x)  绝对值</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(value.x - arr[i].x) &lt; <span class="number">50</span> &amp;&amp; <span class="built_in">Math</span>.abs(value.y - arr[i].y) &lt; <span class="number">50</span>)&#123;</span><br><span class="line">                <span class="comment">// 连线</span></span><br><span class="line">                line(value.x, value.y, arr[i].x, arr[i].y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断鼠标星星与其他所有星星之间的关系</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(value.x - mouse_star.x) &lt; <span class="number">150</span> &amp;&amp; <span class="built_in">Math</span>.abs(value.y - mouse_star.y) &lt; <span class="number">150</span>)&#123;</span><br><span class="line">            <span class="comment">// 连线</span></span><br><span class="line">            line(value.x, value.y, mouse_star.x, mouse_star.y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给 document 添加点击事件</span></span><br><span class="line"><span class="comment">// 当点击的时候出现 5 个星星</span></span><br><span class="line"><span class="built_in">document</span>.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">        arr.push(<span class="keyword">new</span> Star(ctx, e.clientX, e.clientY, <span class="number">1</span>));</span><br><span class="line">        <span class="comment">// 同时去除数组头部的星星</span></span><br><span class="line">        arr.shift();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装函数，传递两个点，绘制两个点之间的线段</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">line</span>(<span class="params">x1, y1, x2, y2</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 开启路径</span></span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    <span class="comment">// 移动画笔到某个位置</span></span><br><span class="line">    ctx.moveTo(x1, y1);</span><br><span class="line">    <span class="comment">// 绘制路径</span></span><br><span class="line">    ctx.lineTo(x2, y2);</span><br><span class="line">    <span class="comment">// 关闭路径</span></span><br><span class="line">    ctx.closePath();</span><br><span class="line">    <span class="comment">// 描边</span></span><br><span class="line">    ctx. stroke();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">canvas</span> &#123;</span><br><span class="line">    <span class="comment">/* background-color: #000; */</span></span><br><span class="line">    background-<span class="attribute">image</span>: <span class="built_in">url</span>(imgs/sf.jpg);</span><br><span class="line">    background-<span class="attribute">size</span>: cover;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYgYo4.png" alt="UYgYo4.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>Canvas</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>三、平移</title>
    <url>/post/f43e1d68.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="三、平移"><a href="#三、平移" class="headerlink" title="三、平移"></a>三、平移</h1><h2 id="3-1-translate"><a href="#3-1-translate" class="headerlink" title="3.1  translate"></a>3.1 <code>translate</code></h2><p>使用方式：</p><blockquote><p><code>ctx.translate(x, y)</code></p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将坐标系原点平移到canvas的中心</span></span><br><span class="line">ctx.<span class="built_in">translate</span>(canvas.<span class="built_in">width</span> / <span class="number">2</span>, canvas.<span class="built_in">height</span> / <span class="number">2</span>);</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">var canvas = document.get<span class="constructor">ElementById(<span class="string">"myCanvas"</span>)</span>;</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line">var ctx = canvas.get<span class="constructor">Context(<span class="string">"2d"</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在canvas中心绘制圆</span></span><br><span class="line">draw<span class="constructor">Circle(<span class="params">canvas</span>.<span class="params">width</span> <span class="operator">/</span> 2, <span class="params">canvas</span>.<span class="params">height</span> <span class="operator">/</span> 2, 50)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 平移坐标系 将原点改为canvas的中心</span></span><br><span class="line">ctx.translate(canvas.width<span class="operator"> / </span><span class="number">2</span>, canvas.height<span class="operator"> / </span><span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 再次绘制圆</span></span><br><span class="line">draw<span class="constructor">Circle(0, 0, 20)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在平移坐标系之前绘制了一个圆，在平移坐标系之后又绘制了一个圆</span></span><br><span class="line"><span class="comment">// 在平移坐标系之前绘制的图形不会因该坐标系的改变而改变</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装一个函数，用于绘制圆</span></span><br><span class="line"><span class="keyword">function</span> draw<span class="constructor">Circle(<span class="params">x</span>, <span class="params">y</span>, <span class="params">r</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 开启路径</span></span><br><span class="line">    ctx.<span class="keyword">begin</span><span class="constructor">Path()</span>;</span><br><span class="line">    <span class="comment">// 绘制圆</span></span><br><span class="line">    ctx.arc(x, y, r, <span class="number">0</span>, Math.PI<span class="operator"> * </span><span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 闭合路径</span></span><br><span class="line">    ctx.close<span class="constructor">Path()</span>;</span><br><span class="line">    <span class="comment">// 描边</span></span><br><span class="line">    ctx.stroke<span class="literal">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYcXqO.png" alt="UYcXqO.png"></p><h2 id="3-2-平移坐标系"><a href="#3-2-平移坐标系" class="headerlink" title="3.2  平移坐标系"></a>3.2 平移坐标系</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LSL"><figure class="iseeu highlight /lsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">var canvas = document.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line">var ctx = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 平移坐标系之前绘制坐标轴</span></span><br><span class="line">drawXY();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 平移坐标系</span></span><br><span class="line">ctx.translate(canvas.width / <span class="number">2</span>, canvas.height / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 再次绘制坐标轴</span></span><br><span class="line">drawXY();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装函数，传递两个点，绘制两个点之间的线段</span></span><br><span class="line">function line(x1, y1, x2, y2)&#123;</span><br><span class="line">    <span class="comment">// 开启路径</span></span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    <span class="comment">// 移动画笔到某个位置</span></span><br><span class="line">    ctx.moveTo(x1, y1);</span><br><span class="line">    <span class="comment">// 绘制路径</span></span><br><span class="line">    ctx.lineTo(x2, y2);</span><br><span class="line">    <span class="comment">// 关闭路径</span></span><br><span class="line">    ctx.closePath();</span><br><span class="line">    <span class="comment">// 描边</span></span><br><span class="line">    ctx. stroke();</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装函数，绘制坐标系</span></span><br><span class="line">function drawXY()&#123;</span><br><span class="line">    <span class="comment">// 绘制 x 轴</span></span><br><span class="line">    line(<span class="number">5</span>, <span class="number">5</span>, <span class="number">590</span>, <span class="number">5</span>);</span><br><span class="line">    line(<span class="number">585</span>, <span class="number">0</span>, <span class="number">590</span>, <span class="number">5</span>);</span><br><span class="line">    line(<span class="number">585</span>, <span class="number">10</span>, <span class="number">590</span>, <span class="number">5</span>);</span><br><span class="line">    line(<span class="number">100</span>, <span class="number">0</span>, <span class="number">110</span>, <span class="number">5</span>);</span><br><span class="line">    line(<span class="number">100</span>, <span class="number">10</span>, <span class="number">110</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="comment">// 绘制 y 轴</span></span><br><span class="line">    line(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">390</span>);</span><br><span class="line">    line(<span class="number">0</span>, <span class="number">385</span>, <span class="number">5</span>, <span class="number">390</span>);</span><br><span class="line">    line(<span class="number">10</span>, <span class="number">385</span>, <span class="number">5</span>, <span class="number">390</span>);</span><br><span class="line">    line(<span class="number">0</span>, <span class="number">100</span>, <span class="number">5</span>, <span class="number">110</span>);</span><br><span class="line">    line(<span class="number">10</span>, <span class="number">100</span>, <span class="number">5</span>, <span class="number">110</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYczIH.png" alt="UYczIH.png"></p><h2 id="3-3-rotate-旋转"><a href="#3-3-rotate-旋转" class="headerlink" title="3.3  rotate  旋转"></a>3.3 <code>rotate</code> 旋转</h2><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LUA"><figure class="iseeu highlight /lua"><table><tr><td class="code"><pre><span class="line">ctx.rotate(<span class="built_in">deg</span>)</span><br><span class="line">    <span class="built_in">deg</span>：角度</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LSL"><figure class="iseeu highlight /lsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">var canvas = document.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line">var ctx = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 平移坐标系之前绘制坐标轴</span></span><br><span class="line"><span class="comment">// drawXY();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 平移坐标系</span></span><br><span class="line">ctx.translate(canvas.width / <span class="number">2</span>, canvas.height / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 再次绘制坐标轴</span></span><br><span class="line">drawXY();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义角度</span></span><br><span class="line">var deg = Math.<span class="literal">PI</span> / <span class="number">180</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启定时器</span></span><br><span class="line">var <span class="section">timer</span> = setInterval(function()&#123;</span><br><span class="line">    <span class="comment">// 清屏 坐标轴原点现在是在中心 要覆盖整个canvas，需要时负值</span></span><br><span class="line">    ctx.clearRect(-canvas.width, -canvas.height, <span class="number">3000</span>, <span class="number">3000</span>);</span><br><span class="line">    ctx.rotate(deg);</span><br><span class="line">    drawXY();</span><br><span class="line">&#125;, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装函数，传递两个点，绘制两个点之间的线段</span></span><br><span class="line">function line(x1, y1, x2, y2)&#123;</span><br><span class="line">    <span class="comment">// 开启路径</span></span><br><span class="line">    ctx.beginPath();</span><br><span class="line">    <span class="comment">// 移动画笔到某个位置</span></span><br><span class="line">    ctx.moveTo(x1, y1);</span><br><span class="line">    <span class="comment">// 绘制路径</span></span><br><span class="line">    ctx.lineTo(x2, y2);</span><br><span class="line">    <span class="comment">// 关闭路径</span></span><br><span class="line">    ctx.closePath();</span><br><span class="line">    <span class="comment">// 描边</span></span><br><span class="line">    ctx. stroke();</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装函数，绘制坐标系</span></span><br><span class="line">function drawXY()&#123;</span><br><span class="line">    <span class="comment">// 绘制 x 轴</span></span><br><span class="line">    line(<span class="number">5</span>, <span class="number">5</span>, <span class="number">590</span>, <span class="number">5</span>);</span><br><span class="line">    line(<span class="number">585</span>, <span class="number">0</span>, <span class="number">590</span>, <span class="number">5</span>);</span><br><span class="line">    line(<span class="number">585</span>, <span class="number">10</span>, <span class="number">590</span>, <span class="number">5</span>);</span><br><span class="line">    line(<span class="number">100</span>, <span class="number">0</span>, <span class="number">110</span>, <span class="number">5</span>);</span><br><span class="line">    line(<span class="number">100</span>, <span class="number">10</span>, <span class="number">110</span>, <span class="number">5</span>);</span><br><span class="line">    <span class="comment">// 绘制 y 轴</span></span><br><span class="line">    line(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">390</span>);</span><br><span class="line">    line(<span class="number">0</span>, <span class="number">385</span>, <span class="number">5</span>, <span class="number">390</span>);</span><br><span class="line">    line(<span class="number">10</span>, <span class="number">385</span>, <span class="number">5</span>, <span class="number">390</span>);</span><br><span class="line">    line(<span class="number">0</span>, <span class="number">100</span>, <span class="number">5</span>, <span class="number">110</span>);</span><br><span class="line">    line(<span class="number">10</span>, <span class="number">100</span>, <span class="number">5</span>, <span class="number">110</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYgPzt.png" alt="UYgPzt.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>Canvas</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>二、绘制图片</title>
    <url>/post/8516d610.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="二、绘制图片"><a href="#二、绘制图片" class="headerlink" title="二、绘制图片"></a>二、绘制图片</h1><p>将一张图片放在<code>canvas</code>上，可以通过：</p><p>① 插入图片</p><p>② 设置背景图</p><p><img src="https://s1.ax1x.com/2020/07/13/UYce81.png" alt="UYce81.png"></p><p>③ <code>drawImage</code></p><h2 id="2-1-drawImage"><a href="#2-1-drawImage" class="headerlink" title="2.1  drawImage"></a>2.1 <code>drawImage</code></h2><p>绘制图片可以分为三种方式</p><h3 id="2-1-1-以原尺寸绘制图片"><a href="#2-1-1-以原尺寸绘制图片" class="headerlink" title="2.1.1 以原尺寸绘制图片"></a>2.1.1 以原尺寸绘制图片</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line">ctx.drawImage(img, <span class="symbol">x</span>, <span class="symbol">y</span>)</span><br><span class="line">    img：要绘制的图片</span><br><span class="line">    <span class="symbol">x</span>：当前canvas上的<span class="symbol">x</span>点</span><br><span class="line">    <span class="symbol">y</span>：当前canvas上的<span class="symbol">y</span>点</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 绘制图片</span></span><br><span class="line"><span class="comment">// ctx.drawImage(img, 0, 0);  // 存在但是无法正常显示</span></span><br><span class="line"><span class="comment">// 添加 load 事件</span></span><br><span class="line">img.onload = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 当图片加载完毕之后绘制图片</span></span><br><span class="line">    ctx.drawImage(img, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYc1Ve.png" alt="UYc1Ve.png"></p><h3 id="2-1-2-缩放图片"><a href="#2-1-2-缩放图片" class="headerlink" title="2.1.2 缩放图片"></a>2.1.2 缩放图片</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line">ctx.drawImage(img, <span class="symbol">x</span>, <span class="symbol">y</span>, w, h)</span><br><span class="line">    img：要绘制的图片</span><br><span class="line">    <span class="symbol">x</span>：缩放后的图片放在当前canvas上的<span class="symbol">x</span>点</span><br><span class="line">    <span class="symbol">y</span>：缩放后的图片放在当前canvas上的<span class="symbol">y</span>点</span><br><span class="line">    w：缩放后的图片宽</span><br><span class="line">    h：缩放后的图片高</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">ctx.drawImage(img, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1024</span>, <span class="number">682.5</span>);  <span class="comment">// 原图为 2048*1365</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYct2t.png" alt="UYct2t.png"></p><h3 id="2-1-3-截取图片并缩放图片"><a href="#2-1-3-截取图片并缩放图片" class="headerlink" title="2.1.3 截取图片并缩放图片"></a>2.1.3 截取图片并缩放图片</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">ctx.draw<span class="constructor">Image(<span class="params">img</span>, <span class="params">img_x</span>, <span class="params">img_y</span>, <span class="params">img_w</span>, <span class="params">img_h</span>, <span class="params">canvas_x</span>, <span class="params">canvas_y</span>, <span class="params">canvas_w</span>,<span class="params">canvas_h</span>)</span></span><br><span class="line">    img：要绘制的图片</span><br><span class="line">    img_x：要截取的图片的x点</span><br><span class="line">    img_y：要截取的图片的y点</span><br><span class="line">    img_w：要截取的图片宽</span><br><span class="line">    img_h：要截取的图片高</span><br><span class="line">    canvas_x：将截取后的图片放在canvas上的x点</span><br><span class="line">    canvas_y：将截取后的图片放在canvas上的y点</span><br><span class="line">    canvas_w：已缩放后的图片宽放在canvas上</span><br><span class="line">    canvas_h：已缩放后的图片高放在canvas上</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">ctx.drawImage(img, <span class="number">581</span>, <span class="number">249</span>, <span class="number">1364</span>, <span class="number">1154</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">450</span>, <span class="number">577</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYcBVg.png" alt="UYcBVg.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>Canvas</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>一、canvas</title>
    <url>/post/59b77c36.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="一、canvas"><a href="#一、canvas" class="headerlink" title="一、canvas"></a>一、canvas</h1><p><code>canvas</code>是<code>HTML5</code>新增的标签，用于提供“画布”</p><p>可以通过<code>canvas</code>元素获取对应的“上下文”（可以理解为画笔）来操作显示内容</p><p><code>canvas</code>的标准属性有 <code>width</code>和 <code>height</code> （例如 id， class 这些都属于通用标准属性）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">width</span>：表示canvas的宽</span><br><span class="line"><span class="built_in">height</span>：表示canvas的高</span><br></pre></td></tr></table></figure></div><p><code>canvas</code> 有一个默认宽高 在上面更改相当于是拉扯了画布，会影响画笔绘图。 <strong>要在标签上直接写宽高</strong></p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">&lt;canvas id=<span class="string">"myCanvas"</span> <span class="built_in">width</span>=<span class="string">"600"</span> <span class="built_in">height</span>=<span class="string">"400"</span>&gt;&lt;/canvas&gt;</span><br><span class="line">canvas &#123;</span><br><span class="line">    <span class="built_in">background</span>-<span class="built_in">color</span>: <span class="built_in">red</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>样式：</p><p><img src="https://s1.ax1x.com/2020/07/13/UY6wN9.png" alt="UY6wN9.png"></p><p>获取画笔的方式：</p><p>①获取对应的<code>canvas</code>元素</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DART"><figure class="iseeu highlight /dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">"myCanvas"</span>);</span><br></pre></td></tr></table></figure></div><p>②通过<code>canvas</code>元素获取画笔</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">var ctx = canvas.getContext(<span class="string">"2d"</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure></div><p>查看画笔：</p><p>属性：</p><p><img src="https://s1.ax1x.com/2020/07/13/UY62He.png" alt="UY62He.png"></p><p>方法：</p><p><img src="https://s1.ax1x.com/2020/07/13/UY6fNd.png" alt="UY6fNd.png"></p><p>小案例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 改变画笔默认颜色</span></span><br><span class="line"><span class="comment">// ctx.fillStyle = "white";</span></span><br><span class="line"><span class="comment">// 还可以改变透明度</span></span><br><span class="line"><span class="comment">// ctx.fillStyle = "rgba(255, 255, 123, .5)";</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 画圆</span></span><br><span class="line">ctx.beginPath();  <span class="comment">// beginPath 开辟路径</span></span><br><span class="line"><span class="comment">// 绘制弧  没有直接画圆的方法，而是通过画弧，一圈弧形成一个圆</span></span><br><span class="line">ctx.arc(<span class="number">100</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">0</span>, Math.PI * <span class="number">2</span>, <span class="literal">true</span>);  <span class="comment">// arc 弧    </span></span><br><span class="line"><span class="comment">// ctx.arc(100, 100, 50, Math.PI / 2, Math.PI * 2, false);</span></span><br><span class="line"><span class="comment">// 关闭路径</span></span><br><span class="line">ctx.closePath(); </span><br><span class="line"><span class="comment">// 调用填充 </span></span><br><span class="line">ctx.fill();</span><br></pre></td></tr></table></figure></div><p>结果：</p><p><img src="https://s1.ax1x.com/2020/07/13/UY6I3t.png" alt="UY6I3t.png"></p><h2 id="1-1-坐标系"><a href="#1-1-坐标系" class="headerlink" title="1.1  坐标系"></a>1.1 坐标系</h2><p><code>canvas</code>已经是最底层元素，没有子元素</p><p>所以定位坐标系对于<code>canvas</code>是没有意义的，但是<code>canvas</code>是用来显示图像的，所以自带了一个坐标系</p><p>默认与元素的定位坐标系方向一致</p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// canvas 是一块区域，可以用来绘制内容，自带了一个坐标系</span></span><br><span class="line"><span class="comment">// x 轴： 正方向向右</span></span><br><span class="line"><span class="comment">// y 轴： 正方向向下</span></span><br><span class="line"><span class="comment">// 原点： 左上角</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">var canvas = document.get<span class="constructor">ElementById(<span class="string">"myCanvas"</span>)</span>;</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line">var ctx = canvas.get<span class="constructor">Context(<span class="string">"2d"</span>)</span>;</span><br><span class="line"><span class="comment">// 改变字体样式</span></span><br><span class="line">ctx.font = <span class="string">"50px 宋体"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制 x 轴</span></span><br><span class="line">line(<span class="number">5</span>, <span class="number">5</span>, <span class="number">590</span>, <span class="number">5</span>);</span><br><span class="line">line(<span class="number">585</span>, <span class="number">0</span>, <span class="number">590</span>, <span class="number">5</span>);</span><br><span class="line">line(<span class="number">585</span>, <span class="number">10</span>, <span class="number">590</span>, <span class="number">5</span>);</span><br><span class="line"><span class="comment">// 绘制 y 轴</span></span><br><span class="line">line(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>, <span class="number">390</span>);</span><br><span class="line">line(<span class="number">0</span>, <span class="number">385</span>, <span class="number">5</span>, <span class="number">390</span>);</span><br><span class="line">line(<span class="number">10</span>, <span class="number">385</span>, <span class="number">5</span>, <span class="number">390</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 填充文字 文字起点位置在左下角</span></span><br><span class="line">ctx.fill<span class="constructor">Text(<span class="string">"x轴"</span>, 500, 60)</span>;</span><br><span class="line">ctx.fill<span class="constructor">Text(<span class="string">"y轴"</span>, 10, 350)</span>;</span><br><span class="line">ctx.fill<span class="constructor">Text(<span class="string">"原点"</span>, 10, 60)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装函数，传递两个点，绘制两个点之间的线段</span></span><br><span class="line"><span class="keyword">function</span> line(x1, y1, x2, y2)&#123;</span><br><span class="line">    <span class="comment">// 开启路径</span></span><br><span class="line">    ctx.<span class="keyword">begin</span><span class="constructor">Path()</span>;</span><br><span class="line">    <span class="comment">// 移动画笔到某个位置</span></span><br><span class="line">    ctx.move<span class="constructor">To(<span class="params">x1</span>, <span class="params">y1</span>)</span>;</span><br><span class="line">    <span class="comment">// 绘制路径</span></span><br><span class="line">    ctx.line<span class="constructor">To(<span class="params">x2</span>, <span class="params">y2</span>)</span>;</span><br><span class="line">    <span class="comment">// 关闭路径</span></span><br><span class="line">    ctx.close<span class="constructor">Path()</span>;</span><br><span class="line">    <span class="comment">// 描边</span></span><br><span class="line">    ctx. stroke<span class="literal">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UY6xCn.png" alt="UY6xCn.png"></p><h2 id="1-2-绘制矩形"><a href="#1-2-绘制矩形" class="headerlink" title="1.2  绘制矩形"></a>1.2 绘制矩形</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line">var canvas = document.getElementById(<span class="string">"myCanvas"</span>);</span><br><span class="line"><span class="comment">// 获取画笔</span></span><br><span class="line">var ctx = canvas.getContext(<span class="string">"2d"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绘制矩形 canvas提供一个 API，可以实现一条代码绘制出图形，其他都是在操作路径</span></span><br><span class="line"><span class="comment">// 填充矩形</span></span><br><span class="line">ctx.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"><span class="comment">// 描边矩形</span></span><br><span class="line">ctx.strokeRect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">ctx.fillRect(<span class="number">200</span>, <span class="number">200</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">ctx.strokeRect(<span class="number">300</span>, <span class="number">300</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">ctx.fillRect(<span class="number">400</span>, <span class="number">200</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">ctx.strokeRect(<span class="number">500</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">ctx.fillRect(<span class="number">600</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYcCuT.png" alt="UYcCuT.png"></p><h2 id="1-3-API"><a href="#1-3-API" class="headerlink" title="1.3  API"></a>1.3 API</h2><blockquote><p><code>beginPath();</code> 开启路径</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOHOTKEY"><figure class="iseeu highlight /autohotkey"><table><tr><td class="code"><pre><span class="line">`canvas`上大部分都是在操作路径，所以在绘制图形之前要开启路径</span><br><span class="line">```		</span><br><span class="line"></span><br><span class="line">&gt;`closePath()<span class="comment">;`  关闭路径</span></span><br></pre></td></tr></table></figure></div><p>关闭路径的时候，会在关闭时候的点和最开始时候的点之间形成一条线段</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&gt;`arc(<span class="symbol">x</span>, <span class="symbol">y</span>, start, <span class="keyword">end</span>, dir);`  绘制圆弧</span><br></pre></td></tr></table></figure></div><p>x：圆弧所在的圆心的 x 点<br>y：圆弧所在的圆心的 y 点<br>start：圆弧起始的位置<br>end：圆弧结束的位置<br>dir：绘制方向 不书写时默认为false<br>false：顺时针绘制<br>true：逆时针绘制</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">&gt;`ctx.move<span class="constructor">To(<span class="params">x1</span>, <span class="params">y1</span>)</span>; ` 移动画笔到某个位置</span><br><span class="line"></span><br><span class="line">&gt;`ctx.line<span class="constructor">To(<span class="params">x2</span>, <span class="params">y2</span>)</span>; ` 绘制路径</span><br></pre></td></tr></table></figure></div><p>从 (x1, y1)绘制到(x2, y2)</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&gt;`fill<span class="constructor">Text(<span class="params">value</span>, <span class="params">x</span>, <span class="params">y</span>)</span>; ` 填充文字 文字起点位置在左下角</span><br></pre></td></tr></table></figure></div><p>如：ctx.fillText(“x轴”, 500, 60);</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOHOTKEY"><figure class="iseeu highlight /autohotkey"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&gt;`fill()<span class="comment">;`  用于填充路径</span></span><br><span class="line"></span><br><span class="line">&gt;`stroke()<span class="comment">;`  描边路径</span></span><br><span class="line"></span><br><span class="line">&gt;`font` 改变文字样式</span><br></pre></td></tr></table></figure></div><p>如：ctx.font = “50px 宋体”;</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOHOTKEY"><figure class="iseeu highlight /autohotkey"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&gt;`lineWidth`  改变线宽</span><br></pre></td></tr></table></figure></div><p>如：ctx.lineWidth = 3; 默认为 1</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOHOTKEY"><figure class="iseeu highlight /autohotkey"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&gt;`strokeStyle`  改变描边颜色</span><br></pre></td></tr></table></figure></div><p>如：ctx.strokeStyle = “red”; 默认为 #000000</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOHOTKEY"><figure class="iseeu highlight /autohotkey"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&gt;`fillStyle`  改变填充颜色</span><br></pre></td></tr></table></figure></div><p>如：ctx.fillStyle = “white”;</p><p>ctx.fillStyle = “rgba(255, 255, 123, .5)”; 还可以改变透明度</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AUTOHOTKEY"><figure class="iseeu highlight /autohotkey"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">绘制矩形 `canvas`提供一个 `API`，可以实现一条代码绘制出图形，不用开启、关闭路径</span><br><span class="line"></span><br><span class="line">&gt;`fillRext(x, y, w, h)<span class="comment">;`  绘制填充矩形</span></span><br><span class="line"></span><br><span class="line">```		</span><br><span class="line">x：当前坐标系中的 x 点</span><br><span class="line">y：当前坐标系中的 y 点</span><br><span class="line">w：要填充的矩形的宽</span><br><span class="line">h：要填充的矩形的高</span><br></pre></td></tr></table></figure></div><blockquote><p><code>strokeRext(x, y, w, h);</code> 绘制描边矩形</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line"><span class="symbol">x</span>：当前坐标系中的 <span class="symbol">x</span> 点</span><br><span class="line"><span class="symbol">y</span>：当前坐标系中的 <span class="symbol">y</span> 点</span><br><span class="line">w：要绘制的矩形的宽</span><br><span class="line">h：要绘制的矩形的高</span><br></pre></td></tr></table></figure></div><blockquote><p><code>clearRext(x, y, w, h);</code> 清除矩形区域</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line"><span class="symbol">x</span>：区域的 <span class="symbol">x</span> 点（左上角）</span><br><span class="line"><span class="symbol">y</span>：区域的 <span class="symbol">y</span> 点（左上角）</span><br><span class="line">w：区域的宽</span><br><span class="line">h：区域的高</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>Canvas</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>十二、音频 用js控制播放</title>
    <url>/post/c87b9329.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="十二、音频-用js控制播放"><a href="#十二、音频-用js控制播放" class="headerlink" title="十二、音频 用js控制播放"></a>十二、音频 用js控制播放</h1><p><img src="https://s1.ax1x.com/2020/07/13/UYdr5V.png" alt="UYdr5V.png"></p><p>方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AVRASM"><figure class="iseeu highlight /avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">play:</span> 播放</span><br><span class="line"><span class="symbol">pause:</span>暂停</span><br></pre></td></tr></table></figure></div><p>属性：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AVRASM"><figure class="iseeu highlight /avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">volume:</span>音量 <span class="number">0</span>~<span class="number">1</span></span><br><span class="line"><span class="symbol">muted:</span>值是布尔类型  是否静音</span><br><span class="line"><span class="symbol">duration:</span>总播放时长</span><br><span class="line"><span class="symbol">currentTime:</span>当前的播放时间</span><br></pre></td></tr></table></figure></div><h2 id="12-1-dom结构"><a href="#12-1-dom结构" class="headerlink" title="12.1  dom结构"></a>12.1 dom结构</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"audio/冯小威 - 郑州.mp3"</span> <span class="attr">controls</span> <span class="attr">id</span>=<span class="string">"audio"</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"btn"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"play"</span>&gt;</span>播放<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"pause"</span>&gt;</span>暂停<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"up"</span>&gt;</span>音量+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"down"</span>&gt;</span>音量-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"shutup"</span>&gt;</span>静音<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"process"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"bar"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"block"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="12-2-CSS样式"><a href="#12-2-CSS样式" class="headerlink" title="12.2  CSS样式"></a>12.2 CSS样式</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#btn</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#process</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">420px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#process</span> <span class="selector-id">#bar</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">25px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#block</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="12-3-js"><a href="#12-3-js" class="headerlink" title="12.3  js"></a>12.3 js</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> audio = <span class="built_in">document</span>.getElementById(<span class="string">"audio"</span>);</span><br><span class="line"><span class="keyword">var</span> play = <span class="built_in">document</span>.getElementById(<span class="string">"play"</span>);</span><br><span class="line"><span class="keyword">var</span> pause = <span class="built_in">document</span>.getElementById(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">var</span> bar = <span class="built_in">document</span>.getElementById(<span class="string">"bar"</span>);</span><br><span class="line"><span class="keyword">var</span> block = <span class="built_in">document</span>.getElementById(<span class="string">"block"</span>);</span><br><span class="line"><span class="keyword">var</span> content = <span class="built_in">document</span>.getElementById(<span class="string">"content"</span>);</span><br><span class="line"><span class="keyword">var</span> up = <span class="built_in">document</span>.getElementById(<span class="string">"up"</span>);</span><br><span class="line"><span class="keyword">var</span> down = <span class="built_in">document</span>.getElementById(<span class="string">"down"</span>);</span><br><span class="line"><span class="keyword">var</span> shutup = <span class="built_in">document</span>.getElementById(<span class="string">"shutup"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加点击事件</span></span><br><span class="line">play.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    audio.play();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pause.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    audio.pause();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">up.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( audio.volume === <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> volume = audio.volume * <span class="number">10</span>;</span><br><span class="line">    volume ++;</span><br><span class="line">    audio.volume = volume / <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// console.log(audio.volume);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">down.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( audio.volume === <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> volume = audio.volume * <span class="number">10</span>;</span><br><span class="line">    volume --;</span><br><span class="line">    audio.volume = volume / <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// console.log(audio.volume);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">shutup.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(audio.muted)&#123;</span><br><span class="line">        shutup.innerHTML = <span class="string">"静音"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        shutup.innerHTML = <span class="string">"恢复"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// audio.muted = true;</span></span><br><span class="line">    audio.muted = !audio.muted;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加 onmousedown事件</span></span><br><span class="line">block.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取鼠标的位置</span></span><br><span class="line">    <span class="keyword">var</span> x = e.clientX;</span><br><span class="line">    <span class="comment">// 获取block的定位值</span></span><br><span class="line">    <span class="keyword">var</span> left = <span class="keyword">this</span>.offsetLeft;</span><br><span class="line">    <span class="comment">// 添加 mousemove事件</span></span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 获取鼠标移动后的位置</span></span><br><span class="line">        <span class="keyword">var</span> m_x = e.clientX;</span><br><span class="line">        <span class="keyword">var</span> result = m_x + left;</span><br><span class="line">        <span class="comment">// 边界判定</span></span><br><span class="line">        <span class="keyword">if</span> (result &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            result = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (result &gt; bar.clientWidth - block.clientWidth)&#123;</span><br><span class="line">            result = bar.clientWidth - block.clientWidth;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取进度比例</span></span><br><span class="line">        <span class="keyword">var</span> r = result / (bar.clientWidth - block.clientWidth);</span><br><span class="line">        <span class="comment">// console.log(r);</span></span><br><span class="line">        audio.currentTime = r * audio.duration;</span><br><span class="line">        <span class="comment">// 赋值 block 的定位值</span></span><br><span class="line">        block.style.left = result + <span class="string">"px"</span>;</span><br><span class="line">        <span class="comment">// 改变 content 的宽度</span></span><br><span class="line">        content.style.width = result + <span class="string">"px"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取消mousemove事件</span></span><br><span class="line"><span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
        <tag>音频</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>十一、拖拽</title>
    <url>/post/c96ff93a.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="十一、拖拽"><a href="#十一、拖拽" class="headerlink" title="十一、拖拽"></a>十一、拖拽</h1><p>拖拽是<code>html5</code>新增的事件</p><p>拖拽时候的样式，有一个虚影：</p><p><img src="https://s1.ax1x.com/2020/07/13/UYUYIf.png" alt="UYUYIf.png"></p><h2 id="11-1-拖拽事件"><a href="#11-1-拖拽事件" class="headerlink" title="11.1  拖拽事件"></a>11.1 拖拽事件</h2><p>ondrag：拖拽事件</p><p>绑定方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"imgs/1.png"</span> <span class="attr">id</span>=<span class="string">"first"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">"first"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 添加拖拽事件</span></span></span><br><span class="line"><span class="actionscript">    img.ondrag = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"拖拽"</span>);</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p>当拖拽图片的时候，会触发该事件，并且拖拽图片移动的时候，加快该事件的触发频率</p><p><img src="https://s1.ax1x.com/2020/07/13/UYUsZq.png" alt="UYUsZq.png"></p><h2 id="11-2-ondragstart-拖拽开始"><a href="#11-2-ondragstart-拖拽开始" class="headerlink" title="11.2  ondragstart  拖拽开始"></a>11.2 ondragstart 拖拽开始</h2><p>绑定方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 拖拽开始</span></span><br><span class="line">img.ondragstart = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"拖拽开始"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>当开始拖拽图片的时候，触发<code>ondragstart</code>事件，并且只触发一次</p><p><img src="https://s1.ax1x.com/2020/07/13/UYU2JU.png" alt="UYU2JU.png"></p><h2 id="11-3-ondragend-拖拽结束"><a href="#11-3-ondragend-拖拽结束" class="headerlink" title="11.3  ondragend  拖拽结束"></a>11.3 ondragend 拖拽结束</h2><p>绑定方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 拖拽结束</span></span><br><span class="line">img.ondragend = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"拖拽结束"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYU7o6.png" alt="UYU7o6.png"></p><h2 id="11-4-ondragenter-拖拽进入"><a href="#11-4-ondragenter-拖拽进入" class="headerlink" title="11.4  ondragenter  拖拽进入"></a>11.4 ondragenter 拖拽进入</h2><p>绑定方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">&lt;img src=<span class="string">"imgs/trash.jpg"</span> id=<span class="string">"trash"</span>&gt;</span><br><span class="line"><span class="keyword">var</span> trash = <span class="built_in">document</span>.getElementById(<span class="string">"trash"</span>);</span><br><span class="line"><span class="comment">// 拖拽进入</span></span><br><span class="line">trash.ondragenter = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"拖拽进入"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYauT0.png" alt="UYauT0.png"></p><h2 id="11-5-ondragleave-拖拽离开"><a href="#11-5-ondragleave-拖拽离开" class="headerlink" title="11.5  ondragleave  拖拽离开"></a>11.5 ondragleave 拖拽离开</h2><p>绑定方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 拖拽离开</span></span><br><span class="line">trash.ondragleave = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"拖拽离开"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYawtK.png" alt="UYawtK.png"></p><h2 id="11-6-ondragover-悬浮事件"><a href="#11-6-ondragover-悬浮事件" class="headerlink" title="11.6  ondragover  悬浮事件"></a>11.6 ondragover 悬浮事件</h2><p>绑定方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 悬浮</span></span><br><span class="line">trash.ondragover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"悬浮中"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>当拖拽时鼠标的位置进入到绑定元素“垃圾桶”时，触发<code>ondragover</code>事件，并且一直在触发</p><p><img src="https://s1.ax1x.com/2020/07/13/UYa59S.png" alt="UYa59S.png"></p><h2 id="11-7-ondrop-丢弃事件"><a href="#11-7-ondrop-丢弃事件" class="headerlink" title="11.7  ondrop  丢弃事件"></a>11.7 ondrop 丢弃事件</h2><p>该事件有一个<code>bug</code>，想要给一个元素添加<code>drop</code>事件，必须给该事件添加<code>ondragover</code>事件，并且<code>ondragover</code>的默认事件，才可以执行<code>drop</code>事件</p><p>绑定方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 悬浮</span></span><br><span class="line">trash.ondragover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"悬浮中"</span>);</span><br><span class="line">    <span class="comment">// 要想执行丢弃事件，需要打开悬浮事件，同时阻止悬浮的默认事件发生</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 丢弃事件</span></span><br><span class="line">trash.ondrop = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"丢弃"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYax9U.png" alt="UYax9U.png"></p><h2 id="11-8-案例-拖拽删除"><a href="#11-8-案例-拖拽删除" class="headerlink" title="11.8  案例 拖拽删除"></a>11.8 案例 拖拽删除</h2><h3 id="11-8-1-一张图片拖拽删除"><a href="#11-8-1-一张图片拖拽删除" class="headerlink" title="11.8.1  一张图片拖拽删除"></a>11.8.1 一张图片拖拽删除</h3><p>第一种方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第一种方案</span></span><br><span class="line"><span class="keyword">var</span> temp = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加 ondragstart 事件</span></span><br><span class="line">img.ondragstart = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);  <span class="comment">// this 指向 img</span></span><br><span class="line">    temp = <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加 ondragover 事件并阻止默认事件</span></span><br><span class="line">trash.ondragover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加 ondrop 事件</span></span><br><span class="line">trash.ondrop = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 删除图片元素  下树 temp的父节点 删除它自己</span></span><br><span class="line">    temp.parentNode.removeChild(temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>第二种方式：</p><p>应用<code>dataTansfer</code>原型上的方法：<code>setData()</code>, <code>getData()</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="FORTRAN"><figure class="iseeu highlight /fortran"><table><tr><td class="code"><pre><span class="line">img.ondragstart = <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span><br><span class="line">    console.<span class="built_in">log</span>(e);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYdZ9O.png" alt="UYdZ9O.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第二种方案</span></span><br><span class="line"><span class="comment">// 添加 ondragstart 事件</span></span><br><span class="line">img.ondragstart = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// console.log(e);  </span></span><br><span class="line">    e.dataTransfer.setData(<span class="string">"nnn"</span>, <span class="keyword">this</span>.id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加 ondragover 事件并阻止默认事件</span></span><br><span class="line">trash.ondragover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加 ondrop 事件</span></span><br><span class="line">trash.ondrop = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// console.log(e);</span></span><br><span class="line">    <span class="keyword">var</span> nnn = e.dataTransfer.getData(<span class="string">"nnn"</span>);</span><br><span class="line">    <span class="comment">// console.log(nnn);  // 拖拽元素的id名</span></span><br><span class="line">    <span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(nnn);  <span class="comment">// element 设为 img 元素</span></span><br><span class="line">    <span class="comment">// 删除图片元素  下树 temp的父节点 删除它自己</span></span><br><span class="line">    element.parentNode.removeChild(element);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYd3UP.png" alt="UYd3UP.png"></p><h3 id="11-8-2-多张图片拖拽删除"><a href="#11-8-2-多张图片拖拽删除" class="headerlink" title="11.8.2  多张图片拖拽删除"></a>11.8.2 多张图片拖拽删除</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"imgs/1.png"</span> <span class="attr">id</span>=<span class="string">"first"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"imgs/2.png"</span> <span class="attr">id</span>=<span class="string">"second"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"imgs/3.png"</span> <span class="attr">id</span>=<span class="string">"third"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"imgs/erweima.jpg"</span> <span class="attr">id</span>=<span class="string">"erweima"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"imgs/sf.jpg"</span> <span class="attr">id</span>=<span class="string">"sf"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"imgs/thanks.png"</span> <span class="attr">id</span>=<span class="string">"thanks"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"imgs/trash.jpg"</span> <span class="attr">id</span>=<span class="string">"trash"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取所有图片 并转为数组</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> imgs = [].slice.call(<span class="built_in">document</span>.getElementsByTagName(<span class="string">"img"</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 删除数组最后一项，并将其设为 trash</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> trash = imgs.pop();</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    imgs.forEach(<span class="function"><span class="keyword">function</span><span class="params">(value, index)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 添加 ondragstart 事件</span></span></span><br><span class="line"><span class="actionscript">        value.ondragstart = <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log(e);  </span></span></span><br><span class="line"><span class="actionscript">            e.dataTransfer.setData(<span class="string">"nnn"</span>, <span class="keyword">this</span>.id);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 添加 ondragover 事件并阻止默认事件</span></span></span><br><span class="line"><span class="actionscript">    trash.ondragover = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 添加 ondrop 事件</span></span></span><br><span class="line"><span class="actionscript">    trash.ondrop = <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(e);</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> nnn = e.dataTransfer.getData(<span class="string">"nnn"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(nnn);  // 拖拽元素的 id 名</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 推拽垃圾桶并丢弃会报错</span></span></span><br><span class="line">        if (nnn)&#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 有 id 的执行下树删除  而 nnn 没有垃圾桶的 id </span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> element = <span class="built_in">document</span>.getElementById(nnn);  <span class="comment">// element 设为 img 元素</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 删除图片元素  下树 temp的父节点 删除它自己</span></span></span><br><span class="line">            element.parentNode.removeChild(element);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
        <tag>拖拽</tag>
      </tags>
  </entry>
  <entry>
    <title>十、history</title>
    <url>/post/6b0212c5.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="十、history"><a href="#十、history" class="headerlink" title="十、history"></a>十、<code>history</code></h1><h2 id="10-1-history-forward"><a href="#10-1-history-forward" class="headerlink" title="10.1  history.forward"></a>10.1 <code>history.forward</code></h2><p>该方法会加载历史记录列表中的下一个URL</p><p>调用该方法等价于点击了前进按钮获取<code>history.go(1)</code></p><h2 id="10-2-history-back"><a href="#10-2-history-back" class="headerlink" title="10.2  history.back"></a>10.2 <code>history.back</code></h2><p>该方法会加载历史记录列表中的前一个URL</p><p>调用该方法等价于点击了后退按钮获取<code>history.go(-1)</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"third.html"</span>&gt;</span>third.html<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"pre"</span>&gt;</span>后退<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"next"</span>&gt;</span>前进<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> pre = <span class="built_in">document</span>.getElementById(<span class="string">"pre"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> next = <span class="built_in">document</span>.getElementById(<span class="string">"next"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 添加点击事件</span></span></span><br><span class="line"><span class="actionscript">    pre.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 调用 back</span></span></span><br><span class="line">        history.back();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    next.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 调用 forward</span></span></span><br><span class="line">        history.forward();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYUVVx.png" alt="UYUVVx.png"></p><h2 id="10-3-pushState"><a href="#10-3-pushState" class="headerlink" title="10.3  pushState"></a>10.3 <code>pushState</code></h2><p>作用：用于添加新的历史记录</p><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">history.push<span class="constructor">State(<span class="params">obj</span>, <span class="params">title</span>, <span class="params">url</span>)</span></span><br><span class="line">    obj：数据对象</span><br><span class="line">    title：新的网页标题（一般省略）</span><br><span class="line">    url：新的网页url</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">history</span><span class="selector-class">.pushState</span>(&#123;<span class="attribute">username</span>: <span class="string">"老王"</span>&#125;, <span class="selector-tag">null</span>, "<span class="selector-tag">index</span><span class="selector-class">.html</span><span class="selector-id">#aaa</span>");</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYUeIK.png" alt="UYUeIK.png"></p><h2 id="10-4-replaceState"><a href="#10-4-replaceState" class="headerlink" title="10.4  replaceState"></a>10.4 <code>replaceState</code></h2><p>作用：替换当前历史记录</p><p>使用方式:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">history.replace<span class="constructor">State(<span class="params">obj</span>, <span class="params">title</span>, <span class="params">url</span>)</span></span><br><span class="line">    obj：数据对象</span><br><span class="line">    title：网页标题（一般省略）</span><br><span class="line">    url：新的url</span><br></pre></td></tr></table></figure></div><p><code>pushState</code>和<code>replaceState</code>的区别：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARMASM"><figure class="iseeu highlight /armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">pushState是添加新的历史记录</span></span><br><span class="line"><span class="keyword">replaceState是替换当前历史记录</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 替换当前历史记录</span></span><br><span class="line">history.push<span class="constructor">State(&#123;<span class="params">username</span>: <span class="string">"老王"</span>&#125;, <span class="params">null</span>, <span class="string">"index.html#aaa"</span>)</span>;</span><br><span class="line">history.push<span class="constructor">State(&#123;<span class="params">username</span>: <span class="string">"老李"</span>&#125;, <span class="params">null</span>, <span class="string">"index.html#bbb"</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 替换当前历史记录</span></span><br><span class="line">history.replace<span class="constructor">State(&#123;<span class="params">username</span>: <span class="string">"老张"</span>&#125;, <span class="params">null</span>, <span class="string">"index.html#ccc"</span>)</span>;</span><br></pre></td></tr></table></figure></div><p>原本打开页面应该显示<code>bbb</code>，然后替换当前历史记录，变为<code>ccc</code>，每次刷新都会增加一条历史记录</p><p><img src="https://s1.ax1x.com/2020/07/13/UYUKRe.png" alt="UYUKRe.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
        <tag>history</tag>
      </tags>
  </entry>
  <entry>
    <title>九、事件推送</title>
    <url>/post/91aa04f4.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="九、事件推送"><a href="#九、事件推送" class="headerlink" title="九、事件推送"></a>九、事件推送</h1><p>正常情况下，只能够从浏览器端发送消息到服务器端，服务器接收并返回数据，然后关闭连接</p><p>服务器想要主动发送信息到浏览器端，无法实现，于是 <code>HTML5</code> 提供了一个叫做 <code>EventSource</code> 的函数，用于主动向前端推送消息</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">console.<span class="built_in">log</span>(EventSource);</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/13/UYNtgJ.png" alt="UYNtgJ.png"></p><h2 id="9-1-初始化"><a href="#9-1-初始化" class="headerlink" title="9.1  初始化"></a>9.1 初始化</h2><p>和<code>worker</code>一样，需要初始化</p><p>并且也需要服务器环境支持</p><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> es = <span class="keyword">new</span> <span class="type">EventSource</span>(path);</span><br><span class="line">    path：接口</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 实例化 EventSource</span></span><br><span class="line"><span class="keyword">var</span> es =<span class="keyword">new</span> <span class="type">EventSource</span>(<span class="string">"/hehe"</span>);  <span class="comment">// 自己写的nodejs文件 server.js中的接口为 /hehe</span></span><br></pre></td></tr></table></figure></div><p>非服务器环境下：</p><p><img src="https://s1.ax1x.com/2020/07/13/UYNr4O.png" alt="UYNr4O.png"></p><p>服务器环境下：</p><p>在没有传递参数的时候：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> es =<span class="keyword">new</span> <span class="type">EventSource</span>();</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYN68e.png" alt="UYN68e.png"></p><p>传递参数后：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> es =<span class="keyword">new</span> <span class="type">EventSource</span>(<span class="string">"/hehe"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYNI58.png" alt="UYNI58.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="FORTRAN"><figure class="iseeu highlight /fortran"><table><tr><td class="code"><pre><span class="line">// 接收信息</span><br><span class="line">es.onmessage = <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span><br><span class="line">    console.<span class="built_in">log</span>(e.<span class="keyword">data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYN78g.png" alt="UYN78g.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line">&lt;ul id=<span class="string">"list"</span>&gt;&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 ul</span></span><br><span class="line"><span class="keyword">var</span> ul = document.getElementById(<span class="string">"list"</span>);</span><br><span class="line"><span class="comment">// 接收信息</span></span><br><span class="line">es.onmessage = <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span><br><span class="line">    <span class="comment">// console.log(e.data);  // 每隔 3s 输出一个“呵呵”</span></span><br><span class="line">    <span class="comment">// 创建元素</span></span><br><span class="line">    <span class="keyword">var</span> li = document.createElement(<span class="string">"li"</span>);</span><br><span class="line">    <span class="comment">// 设置内部文本</span></span><br><span class="line">    li.innerHTML = e.data;</span><br><span class="line">    <span class="comment">// 追加元素</span></span><br><span class="line">    ul.appendChild(li);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYNvV0.png" alt="UYNvV0.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
        <tag>事件推送</tag>
      </tags>
  </entry>
  <entry>
    <title>八、webSql</title>
    <url>/post/480c0c3f.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="八、webSql"><a href="#八、webSql" class="headerlink" title="八、webSql"></a>八、webSql</h1><p>前端数据库，本来属于HTML5规范，后来被取消了（数据库保存在后端比前端靠谱）</p><h2 id="8-1-openDatabase"><a href="#8-1-openDatabase" class="headerlink" title="8.1  openDatabase"></a>8.1 openDatabase</h2><p>观察数据库：</p><p><img src="https://s1.ax1x.com/2020/07/13/UYt5p4.png" alt="UYt5p4.png"></p><p>它是一个函数，是window的属性</p><p>作用：打开或者创建数据库</p><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">open</span><span class="constructor">Database(<span class="params">dbname</span>, <span class="params">version</span>, <span class="params">descript</span>, <span class="params">size</span>)</span>;</span><br><span class="line">	dbname：数据库名称</span><br><span class="line">    version：版本号</span><br><span class="line">    descript：描述</span><br><span class="line">    size：大小</span><br></pre></td></tr></table></figure></div><p>创建数据库：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LSL"><figure class="iseeu highlight /lsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建数据库</span></span><br><span class="line">openDatabase(<span class="string">"17期数据库"</span>, <span class="number">1</span>, <span class="string">"这是17期数据库"</span>, <span class="number">1024</span>*<span class="number">1024</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYtTXR.png" alt="UYtTXR.png"></p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查看数据库</span></span><br><span class="line">console.<span class="built_in">log</span>(openDatabase);</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/13/UYtb0x.png" alt="UYtb0x.png"></p><p>执行<code>openDatabase</code>方法之后，会返回一个数据库对象：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">db</span> = openDatabase(<span class="string">"17期数据库"</span>, 1, <span class="string">"这是17期数据库"</span>, 1024*1024);</span><br><span class="line">console.<span class="built_in">log</span>(<span class="keyword">db</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYtz1H.png" alt="UYtz1H.png"></p><h2 id="8-2-transaction"><a href="#8-2-transaction" class="headerlink" title="8.2  transaction"></a>8.2 <code>transaction</code></h2><p>该方法接受一个参数是回调函数，回调函数中的参数就是事物对象</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">db.transaction(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYNCnI.png" alt="UYNCnI.png"></p><h2 id="8-3-SQLTransaction"><a href="#8-3-SQLTransaction" class="headerlink" title="8.3  SQLTransaction"></a>8.3 <code>SQLTransaction</code></h2><p>通过<code>ta</code>调用<code>SQLTransaction</code>原型上的方法：<code>executeSql来执行SQL语句</code></p><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ta</span><span class="selector-class">.executeSql</span>(<span class="selector-tag">sql</span>, <span class="selector-attr">[]</span>, <span class="selector-tag">successcallback</span>, <span class="selector-tag">failedcallback0</span></span><br><span class="line">    <span class="selector-tag">sql</span>：<span class="selector-tag">sql</span>语句</span><br><span class="line">    <span class="selector-attr">[]</span>：数组，替代数组</span><br><span class="line">    <span class="selector-tag">successcallback</span>：成功时候的回调函数</span><br><span class="line">    <span class="selector-tag">failedcallback</span>：失败时候的回调函数</span><br></pre></td></tr></table></figure></div><p>创建表：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">db.transaction(<span class="function"><span class="keyword">function</span>(<span class="params">ta</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// console.log(arguments);</span></span><br><span class="line">    ta.executeSql(<span class="string">"create table student (name vachar(20), age int(10))"</span>, [], <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"创建成功"</span>);</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"创建失败"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYNPBt.png" alt="UYNPBt.png"></p><p>插入数据：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCILAB"><figure class="iseeu highlight /scilab"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 插入数据</span></span><br><span class="line">db.transaction(<span class="function"><span class="keyword">function</span><span class="params">(ta)</span>&#123;</span></span><br><span class="line">    ta.executeSql(<span class="string">"insert into student values('</span>小明<span class="string">', 12)"</span>, [], <span class="function"><span class="keyword">function</span><span class="params">()</span>&#123;</span></span><br><span class="line">        console.<span class="built_in">log</span>(<span class="string">"插入成功"</span>);</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span><span class="params">()</span>&#123;</span></span><br><span class="line">        console.<span class="built_in">log</span>(<span class="string">"插入失败"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYNQH0.png" alt="UYNQH0.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
        <tag>webSql</tag>
      </tags>
  </entry>
  <entry>
    <title>七、多线程</title>
    <url>/post/a7476252.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="七、多线程"><a href="#七、多线程" class="headerlink" title="七、多线程"></a>七、多线程</h1><h2 id="7-1-线程阻塞"><a href="#7-1-线程阻塞" class="headerlink" title="7.1  线程阻塞"></a>7.1 线程阻塞</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 斐波那契函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> fibonacci =<span class="function"><span class="keyword">function</span><span class="params">(n)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> n &lt;<span class="number">2</span> ? n : <span class="built_in">arguments</span>.callee(n <span class="number">-1</span>) +<span class="built_in">arguments</span>.callee(n <span class="number">-2</span>);</span></span><br><span class="line">    &#125;; </span><br><span class="line"></span><br><span class="line">    fibonacci(40);</span><br><span class="line"><span class="actionscript">    <span class="comment">// js 是单线程，当 js 在执行的时候，页面是停止渲染的</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 当上面的函数在执行的时候（在大量计算），此时用户点击页面将得不到响应（假死状态）</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8htYj.png" alt="U8htYj.png"></p><h2 id="7-2-Worker函数"><a href="#7-2-Worker函数" class="headerlink" title="7.2  Worker函数"></a>7.2 <code>Worker</code>函数</h2><p>我们希望当 <code>js</code> 在大量计算的时候，不要阻塞线程</p><p><code>H5</code> 提供了一个 <code>Worker</code> 函数，可以开辟一个新的线程，用于计算</p><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MIPSASM"><figure class="iseeu highlight /mipsasm"><table><tr><td class="code"><pre><span class="line">将要计算的代码提取出来放入一个 <span class="keyword">js文件中</span></span><br><span class="line"><span class="keyword">初始化 </span>Worker 函数</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> worker = <span class="keyword">new</span> <span class="type">Worker</span>(<span class="string">"comouted.js"</span>);  <span class="comment">// 会报错  需要服务器环境</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U843g1.png" alt="U843g1.png"></p><h2 id="7-3-证明是多线程"><a href="#7-3-证明是多线程" class="headerlink" title="7.3  证明是多线程"></a>7.3 证明是多线程</h2><p>初始情况下，在定时器中不断的输出</p><p>当上面的延时器执行之后，下面的输出语句就会被阻塞</p><p>当点击掉弹出框的时候，定时其中的输出语句会接着上一次的结果继续输出</p><p>说明 <code>alert</code>阻塞了当前线程</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启延时器</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="number">1</span>);  <span class="comment">// alert弹出框会阻塞线程</span></span><br><span class="line">&#125;,<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 开启定时器</span></span><br><span class="line">setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i++);</span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U842VS.png" alt="U842VS.png"></p><p>后来，我们将要计算的代码放入到另一个 js 文件中，并初始化 Worker函数用于开辟新的线程<br>当 3s 之后，弹出框出现，定时器中的输出语句虽然被阻塞了，但是仍会多出很多输出语句<br>说明主线程被阻塞了，但是有另外一个线程在计算</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> worker = <span class="keyword">new</span> <span class="type">Worker</span>(<span class="string">"out.js"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8bBo6.png" alt="U8bBo6.png"></p><h2 id="7-4-postMessage"><a href="#7-4-postMessage" class="headerlink" title="7.4  postMessage"></a>7.4 <code>postMessage</code></h2><p>开辟的额外的线程用于计算，计算的结果可以通过<code>postMessage</code>向主线程推送</p><p><img src="https://s1.ax1x.com/2020/07/12/U8bgQH.png" alt="U8bgQH.png"></p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">console.<span class="built_in">log</span>(worker);</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/13/UYYdz9.png" alt="UYYdz9.png"></p><h2 id="7-5-onmessage"><a href="#7-5-onmessage" class="headerlink" title="7.5  onmessage"></a>7.5 <code>onmessage</code></h2><p>额外的线程向主线程推送的消息，可以通过 <code>onmessage</code>来获取</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="FORTRAN"><figure class="iseeu highlight /fortran"><table><tr><td class="code"><pre><span class="line">// <span class="keyword">out</span>.js 向主线程推送的消息，可以通过 onmessage来获取</span><br><span class="line">worker.onmessage = <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span><br><span class="line">    console.<span class="built_in">log</span>(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYt0fg.png" alt="UYt0fg.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="FORTRAN"><figure class="iseeu highlight /fortran"><table><tr><td class="code"><pre><span class="line">worker.onmessage = <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span><br><span class="line">    // console.<span class="built_in">log</span>(e);</span><br><span class="line">    // 具体的数据在 e.<span class="keyword">data</span> 中</span><br><span class="line">    console.<span class="built_in">log</span>(e.<span class="keyword">data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/13/UYthhF.png" alt="UYthhF.png"></p><p>举例（斐波那契函数）：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fibonacci =<span class="function"><span class="keyword">function</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &lt;<span class="number">2</span> ? n : <span class="built_in">arguments</span>.callee(n <span class="number">-1</span>) +<span class="built_in">arguments</span>.callee(n <span class="number">-2</span>);</span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = fibonacci(<span class="number">30</span>);</span><br><span class="line"><span class="comment">// console.log(result);  // 832040</span></span><br><span class="line"><span class="comment">// 将结果推送到主线程</span></span><br><span class="line">postMessage(result);</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="FORTRAN"><figure class="iseeu highlight /fortran"><table><tr><td class="code"><pre><span class="line">worker.onmessage = <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span><br><span class="line">    // console.<span class="built_in">log</span>(e);</span><br><span class="line">    // 具体的数据在 e.<span class="keyword">data</span> 中</span><br><span class="line">    console.<span class="built_in">log</span>(e.<span class="keyword">data</span>);        // <span class="number">832040</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
        <tag>多线程</tag>
      </tags>
  </entry>
  <entry>
    <title>六、服务器</title>
    <url>/post/bd4587d2.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="六、服务器"><a href="#六、服务器" class="headerlink" title="六、服务器"></a>六、服务器</h1><p>简单来说就是可提供的机器</p><p>这个服务器可以租，可以买，可以下载一个模拟的软件</p><p>我们选择自己写的<code>nodejs</code></p><p>如果想要使用<code>nodejs</code>，必须先安装<code>node.exe</code>程序</p><p>平时我们在浏览器的输入栏中查看的地址栏：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LLVM"><figure class="iseeu highlight /llvm"><table><tr><td class="code"><pre><span class="line">file:///C:/Users/Administrator/Desktop/web/<span class="number">04</span><span class="symbol">%20</span>HTML<span class="number">5</span>/<span class="number">04</span><span class="number">-01</span>-HTML<span class="number">5</span>/<span class="number">04</span>-<span class="symbol">%E6</span><span class="symbol">%9</span>C<span class="symbol">%8</span>D<span class="symbol">%E5</span><span class="symbol">%8</span>A<span class="symbol">%A1</span><span class="symbol">%E5</span><span class="symbol">%99</span><span class="symbol">%A8.html</span></span><br></pre></td></tr></table></figure></div><p>有了服务器之后的地址栏：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LLVM"><figure class="iseeu highlight /llvm"><table><tr><td class="code"><pre><span class="line">http://localhost:<span class="number">3000</span>/<span class="number">03</span>-<span class="symbol">%E6</span><span class="symbol">%9</span>F<span class="symbol">%90</span><span class="symbol">%E9</span><span class="symbol">%85</span><span class="symbol">%92</span><span class="symbol">%E5</span><span class="symbol">%BA</span><span class="symbol">%97</span><span class="symbol">%E8</span><span class="symbol">%AF</span><span class="symbol">%84</span><span class="symbol">%E6</span><span class="symbol">%B5</span><span class="symbol">%8</span>B<span class="symbol">%E7</span><span class="symbol">%B3</span><span class="symbol">%BB</span><span class="symbol">%E7</span><span class="symbol">%BB</span><span class="symbol">%9</span>F.html</span><br></pre></td></tr></table></figure></div><h2 id="6-1-使用node-js"><a href="#6-1-使用node-js" class="headerlink" title="6.1  使用node.js"></a>6.1 使用<code>node.js</code></h2><p>（1）在需要使用<code>nodejs</code>文件夹下放入写好的<code>nodejs</code>文件</p><p><img src="https://s1.ax1x.com/2020/07/12/U8RRpt.png" alt="U8RRpt.png"></p><p><a href="https://pan.baidu.com/s/16gkcz4G2BA5h-WeYFJulkw" target="_blank" rel="noopener" class="LinkCard">sever.js 提取码：pxk0</a></p><p>（2）执行<code>server.js</code></p><p>方法一：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8fEPs.png" alt="U8fEPs.png"></p><p>方法二：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8fJR1.png" alt="U8fJR1.png"></p><h2 id="6-2-http协议"><a href="#6-2-http协议" class="headerlink" title="6.2  http协议"></a>6.2 http协议</h2><p>超文本传输协议：里面规定了前端发送请求后端如何解析，后段返回数据前端如何接收</p><p>有了服务器之后，我们就可以通过http来发送请求，请求服务器中的资源</p><p>在很久以前，浏览器的目的只是为了渲染页面，并且是静态页面</p><p>此时面临一个问题，前端发送一个请求，后端如何解析，后端返回数据，前端如何接收<br>于是http协议就出现了</p><p>比如：前端想要从服务器上请求一张图片，前段就必须按照http协议的规定发送请求，后端解析并返回数据的时候也要按照http协议，按照正确格式返回数据</p><p>还有另外一个问题：服务器的承载（连接）是有限的，假如服务器的承载上限是10，此时前端发送过来一个请求，并且是有状态（持久连接），服务器最多可以服务的连接数量是10，在当时浏览器只是为了渲染静态页面，所以没有必要时持久连接，所以特意给http协议设定为无连接（没有持久连接）</p><p>连接过程：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">浏览器发送<span class="keyword">http</span>请求，请求到服务器，服务器接受响应，返回数据，断开连接</span><br><span class="line">浏览器接收数据，并渲染页面</span><br></pre></td></tr></table></figure></div><p>由于断开了连接，所以此时服务器可服务的连接数据远大于有连接（持久连接）</p><p>服务器比较重要的一方面就是提供服务器环境，前端某些时候是需要服务器环境支持</p><p>比如：事件推送， ajax， canvas的相关功能</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>五、HTML5存储</title>
    <url>/post/3d1dad2a.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="五、HTML5存储"><a href="#五、HTML5存储" class="headerlink" title="五、HTML5存储"></a>五、HTML5存储</h1><h2 id="5-1-存储"><a href="#5-1-存储" class="headerlink" title="5.1  存储"></a>5.1 存储</h2><p>存储是前端仓库的意思</p><p>HTML5新增了一个存储对象用于存储数据</p><p>每一个网站分配一个</p><p>只要浏览器不卸载，电脑不崩溃，就永远存在</p><p>它的生命周期是永久的</p><p>存储容量： <code>5M</code></p><p>存储数据</p><blockquote><p>localStorage.setItem(key, value);</p></blockquote><p>获取数据</p><blockquote><p>localStorage.getItem(key);</p></blockquote><p>删除某一项</p><blockquote><p>localStorage.removeItem();</p></blockquote><p>删除全部</p><blockquote><p>localStorage.clear();</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">// 全局变量 a 的生命周期是从页面开启到关闭</span></span><br><span class="line"><span class="comment">// 虽然刷新之后仍然能看到 a ，但是与上一个 a 不是同一个，而是重新定义出来的</span></span><br><span class="line"><span class="comment">// HTML5新增了一个存储对象 localStorage 用来存储内容</span></span><br><span class="line"><span class="comment">// 查看</span></span><br><span class="line"><span class="built_in">console</span>.log(localStorage);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8geBQ.png" alt="U8geBQ.png"></p><p>现在该对象中没有任何内容</p><p>既然是一个对象，可以使用对象的语法添加内容</p><p>比如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">localStorage.a =<span class="number">10</span><span class="comment">;</span></span><br><span class="line">localStorage[“b”] = <span class="number">20</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8g8jU.png" alt="U8g8jU.png"></p><p>因为该对象中的原型上提供了相应的API，所以建议我们使用原型上的方法：</p><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="Q"><figure class="iseeu highlight /q"><table><tr><td class="code"><pre><span class="line">localStorage.setItem(<span class="built_in">key</span>, <span class="built_in">value</span>)</span><br><span class="line">        <span class="built_in">key</span>：表示数据名称</span><br><span class="line">        <span class="built_in">value</span>：存储的数据（该方法会默认转为字符串）</span><br></pre></td></tr></table></figure></div><p>比如：</p><p>存储数字：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">localStorage.set<span class="constructor">Item(“<span class="params">age</span>”, 11)</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8gW4I.png" alt="U8gW4I.png"></p><p>存储数组：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LSL"><figure class="iseeu highlight /lsl"><table><tr><td class="code"><pre><span class="line">localStorage.arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">localStorage.setItem(<span class="string">"arr"</span>, [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8g7Dg.png" alt="U8g7Dg.png"></p><p>存储对象：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">localStorage.obj</span> = &#123;&#125;</span><br><span class="line"><span class="attr">localStorage.obj</span> = &#123;c: <span class="number">1</span>, d: <span class="number">2</span>&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U82urD.png" alt="U82urD.png"></p><p>解决方案：</p><blockquote><p><strong>在存储的时候先转为字符串，提取的时候再转为原类型</strong></p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span> 定义一个对象</span><br><span class="line">var obj = &#123;</span><br><span class="line">    name: <span class="string">"老王"</span>,</span><br><span class="line">    age: <span class="number">11</span>,</span><br><span class="line">    sex: <span class="string">"男"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="regexp">//</span> 因为我们知道要存储数据了，所以先转为字符串</span><br><span class="line"><span class="regexp">//</span> var str = JSON.stringify(obj);</span><br><span class="line"><span class="regexp">//</span> console.log(str);  <span class="regexp">//</span> <span class="string">"&#123;"</span>name<span class="string">":"</span>老王<span class="string">","</span>age<span class="string">":11,"</span>sex<span class="string">":"</span>男<span class="string">"&#125;"</span></span><br><span class="line">localStorage.setItem(<span class="string">"obj"</span>, JSON.stringify(obj));</span><br><span class="line"><span class="regexp">//</span> 提取,转为对象</span><br><span class="line">var obj1 = JSON.parse(localStorage.getItem(<span class="string">"obj"</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U821IA.png" alt="U821IA.png"></p><h2 id="5-2-本地存储API"><a href="#5-2-本地存储API" class="headerlink" title="5.2  本地存储API"></a>5.2 本地存储API</h2><p>存储数据</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="Q"><figure class="iseeu highlight /q"><table><tr><td class="code"><pre><span class="line">localStorage.setItem(<span class="built_in">key</span>, <span class="built_in">value</span>);</span><br><span class="line">        <span class="built_in">key</span>：存储的数据名称</span><br><span class="line">        <span class="built_in">value</span>：要存储的数据</span><br><span class="line">        该方法会默认转为字符串</span><br></pre></td></tr></table></figure></div><p>获取数据</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line">localStorage.getItem(<span class="built_in">key</span>);</span><br><span class="line">        <span class="built_in">key</span>：要获取的数据名称</span><br><span class="line">        返回值：字符串</span><br></pre></td></tr></table></figure></div><p>删除某一项</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line">localStorage.removeItem(<span class="built_in">key</span>);</span><br><span class="line">	<span class="built_in">key</span>：要删除的数据名称</span><br></pre></td></tr></table></figure></div><p>删除全部</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">localStorage.clear()<span class="comment">;</span></span><br></pre></td></tr></table></figure></div><h2 id="5-3-会话存储"><a href="#5-3-会话存储" class="headerlink" title="5.3  会话存储"></a>5.3 会话存储</h2><p>除了本地存储，还有一个对象叫做会话存储</p><p>对象名称：<code>sessionStorage</code></p><p>与本地存储的区别就是生命周期</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">本地存储的生命周期：永久</span><br><span class="line">会话存储的生命周期：页面打开到页面关闭</span><br></pre></td></tr></table></figure></div><p>其他的API是一样的</p><p>查看：</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">console.<span class="built_in">log</span>(sessionStorage);</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/12/U82zFA.png" alt="U82zFA.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
        <tag>存储</tag>
      </tags>
  </entry>
  <entry>
    <title>十二、3D相册</title>
    <url>/post/7935021a.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="十二、3D相册"><a href="#十二、3D相册" class="headerlink" title="十二、3D相册"></a>十二、3D相册</h1><p><img src="https://s1.ax1x.com/2020/07/12/U83wsU.gif" alt="U83wsU.gif"></p><p>鼠标移到上面的效果：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8lWfx.png" alt="U8lWfx.png"></p><p>鼠标离开的效果：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8lD6U.png" alt="U8lD6U.png"></p><p>附上源码下载地址（提取码：fkxu）：</p><p><a href="https://pan.baidu.com/s/1K7zjT29q1MWWNvtdKq5tdA" target="_blank" rel="noopener" class="LinkCard">3D相册</a></p><blockquote><p><code>index.html</code></p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>3D相册<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css/index.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"minbox"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/01.jpg"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/02.jpg"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/03.jpg"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/04.jpg"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/05.jpg"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/06.jpg"</span> <span class="attr">width</span>=<span class="string">"100"</span> <span class="attr">height</span>=<span class="string">"100"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">"maxbox"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/1.jpg"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/2.jpg"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/3.jpg"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/4.jpg"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/5.jpg"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/6.jpg"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"400"</span> /&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p><code>index.css</code></p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@charset</span> <span class="string">"utf-8"</span>;</span><br><span class="line">*&#123;</span><br><span class="line">	<span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">	<span class="attribute">padding</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">	<span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">	<span class="attribute">min-width</span>: <span class="number">100%</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">	<span class="attribute">background-size</span>: cover;</span><br><span class="line">	<span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">	<span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">	<span class="attribute">background-size</span>:<span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">margin-left</span>: auto;</span><br><span class="line">	<span class="attribute">margin-right</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span>&#123;</span><br><span class="line">	<span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">	<span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">	<span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">	<span class="attribute">background-size</span>: cover;</span><br><span class="line">	<span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">	<span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">	<span class="attribute">background-size</span>:<span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">margin-left</span>: <span class="number">42%</span>;</span><br><span class="line">	<span class="attribute">margin-top</span>: <span class="number">22%</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform-style</span>:preserve-<span class="number">3</span>d;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(<span class="number">13deg</span>);</span><br><span class="line">	<span class="attribute">-webkit-animation</span>:move <span class="number">5s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.minbox</span>&#123;</span><br><span class="line">	<span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">	<span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">left</span>:<span class="number">50px</span>;</span><br><span class="line">	<span class="attribute">top</span>:<span class="number">30px</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform-style</span>:preserve-<span class="number">3</span>d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.minbox</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">	<span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">	<span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">	<span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.minbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">01</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.minbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">02</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(<span class="number">180deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.minbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">03</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.minbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">04</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.minbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">05</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.minbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(6)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">06</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">1</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">2</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">3</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">4</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">5</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(6)</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>: <span class="built_in">url</span>(../img/<span class="number">6</span>.jpg) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">50px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span>&#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">top</span>: -<span class="number">20px</span>;</span><br><span class="line">	<span class="attribute">-webkit-transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">	<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">opacity</span>: <span class="number">0.2</span>;</span><br><span class="line">	<span class="attribute">-webkit-transition</span>:all <span class="number">1s</span> ease;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(<span class="number">180deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.maxbox</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(6)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(1)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">	<span class="attribute">left</span>: -<span class="number">100px</span>;</span><br><span class="line">	<span class="attribute">top</span>: -<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(<span class="number">180deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">	<span class="attribute">left</span>: -<span class="number">100px</span>;</span><br><span class="line">	<span class="attribute">top</span>: -<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(3)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">	<span class="attribute">left</span>: -<span class="number">100px</span>;</span><br><span class="line">	<span class="attribute">top</span>: -<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(4)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">	<span class="attribute">left</span>: -<span class="number">100px</span>;</span><br><span class="line">	<span class="attribute">top</span>: -<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(5)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateY</span>(-<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">	<span class="attribute">left</span>: -<span class="number">100px</span>;</span><br><span class="line">	<span class="attribute">top</span>: -<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(6)</span>&#123;</span><br><span class="line">	<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">300px</span>);</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">	<span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line">	<span class="attribute">left</span>: -<span class="number">100px</span>;</span><br><span class="line">	<span class="attribute">top</span>: -<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> move&#123;</span><br><span class="line">	0%&#123;</span><br><span class="line">		<span class="attribute">-webkit-transform</span>: <span class="built_in">rotateX</span>(<span class="number">13deg</span>) <span class="built_in">rotateY</span>(<span class="number">0deg</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	100%&#123;</span><br><span class="line">		<span class="attribute">-webkit-transform</span>:<span class="built_in">rotateX</span>(<span class="number">13deg</span>) <span class="built_in">rotateY</span>(<span class="number">360deg</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>动画</tag>
        <tag>3D</tag>
        <tag>相册</tag>
      </tags>
  </entry>
  <entry>
    <title>十一、实现碎片轮播图</title>
    <url>/post/46e37f8c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="十一、实现碎片轮播图"><a href="#十一、实现碎片轮播图" class="headerlink" title="十一、实现碎片轮播图"></a>十一、实现碎片轮播图</h1><h2 id="11-1-构建动画"><a href="#11-1-构建动画" class="headerlink" title="11.1  构建动画"></a>11.1 构建动画</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"front"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"back"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"left"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"right"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"top"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"down"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">625px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="comment">/* border: 1px solid red; */</span></span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">    <span class="comment">/* transform: rotateX(30deg) rotateY(30deg); */</span></span><br><span class="line">    <span class="attribute">animation</span>: donghua <span class="number">2s</span> linear <span class="number">2s</span> forwards;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> donghua &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">0</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    30% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">30deg</span>) <span class="built_in">rotateY</span>(-<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">30deg</span>) <span class="built_in">rotateY</span>(-<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">180deg</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.front</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">625px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.back</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">625px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>, .<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(-<span class="number">5px</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">620px</span>);    </span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.top</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">625px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.down</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">625px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(-<span class="number">85px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8Q8aR.png" alt="U8Q8aR.png"></p><h2 id="11-2-添加事件"><a href="#11-2-添加事件" class="headerlink" title="11.2  添加事件"></a>11.2 添加事件</h2><h3 id="11-2-1-dom结构"><a href="#11-2-1-dom结构" class="headerlink" title="11.2.1  dom结构"></a>11.2.1 <code>dom</code>结构</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">"carousel"</span>&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>="<span class="symbol">leftbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">rightbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">&lt;<span class="symbol">button</span> <span class="symbol">id</span>="<span class="symbol">prev</span>"&gt;上一张&lt;/<span class="symbol">button</span>&gt;</span><br><span class="line">&lt;<span class="symbol">button</span> <span class="symbol">id</span>="<span class="symbol">next</span>"&gt;下一张&lt;/<span class="symbol">button</span>&gt;</span><br></pre></td></tr></table></figure></div><h3 id="11-2-2-CSS样式"><a href="#11-2-2-CSS样式" class="headerlink" title="11.2.2  CSS样式"></a>11.2.2 CSS样式</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#carousel</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.leftbox</span>, <span class="selector-class">.rightbox</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.leftbox</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/* animation: left1 2s linear 2s forwards; */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.rightbox</span> &#123;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* animation: right1 2s linear 2s forwards; */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> left1 &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">0</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    30% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">30deg</span>) <span class="built_in">rotateY</span>(-<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">30deg</span>) <span class="built_in">rotateY</span>(-<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">180deg</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> right1 &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">0</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    30% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">30deg</span>) <span class="built_in">rotateY</span>(<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">30deg</span>) <span class="built_in">rotateY</span>(<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">180deg</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.leftbox</span> <span class="selector-tag">div</span>, <span class="selector-class">.rightbox</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.front</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.back</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(-<span class="number">5px</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">445px</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.top</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.down</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(-<span class="number">55px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="11-2-3-js代码"><a href="#11-2-3-js代码" class="headerlink" title="11.2.3  js代码"></a>11.2.3 js代码</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 封装一个类jquery的选择器</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">selector</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> <span class="built_in">document</span>.querySelectorAll(selector);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript"><span class="comment">// 获得所有的图片</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> imgarr = [].slice.call($(<span class="string">'#imgs img'</span>));</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 获得前面的元素</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> fronts = [].slice.call($(<span class="string">'.front'</span>));</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 获得背面的元素</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> backs = [].slice.call($(<span class="string">'.back'</span>));</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 声明一个信号量</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> idx = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 设置图片</span></span></span><br><span class="line"><span class="actionscript">fronts.forEach(<span class="function"><span class="keyword">function</span><span class="params">(value, index)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设置背景图</span></span></span><br><span class="line"><span class="actionscript">        value.style.backgroundImage = <span class="string">'url(imgs/'</span> + idx + <span class="string">'.jpg)'</span>;</span></span><br><span class="line">        if (index % 2 == 0) &#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 左边的</span></span></span><br><span class="line"><span class="actionscript">            value.style.backgroundPosition = <span class="string">'0 0'</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 右边的</span></span></span><br><span class="line"><span class="actionscript">            value.style.backgroundPosition = <span class="string">'-450px 0'</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript"><span class="comment">// 绑定下一张</span></span></span><br><span class="line"><span class="javascript">$(<span class="string">'#next'</span>)[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 更改信号量</span></span></span><br><span class="line">    idx++;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 进行边界判断</span></span></span><br><span class="line">    idx = idx &gt; 7 ? 0: idx;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 设置背面的图片</span></span></span><br><span class="line"><span class="actionscript">    backs.forEach(<span class="function"><span class="keyword">function</span><span class="params">(value, index)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设置背景图</span></span></span><br><span class="line"><span class="actionscript">        value.style.backgroundImage = <span class="string">'url(imgs/'</span> + idx + <span class="string">'.jpg)'</span>;</span></span><br><span class="line"><span class="actionscript">        value.style.transform = <span class="string">'rotateX(180deg)'</span>;</span></span><br><span class="line">        if (index % 2 == 0) &#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 左边的</span></span></span><br><span class="line"><span class="actionscript">            value.style.backgroundPosition = <span class="string">'0 0'</span>;</span></span><br><span class="line"><span class="actionscript">            value.parentNode.style.animation = <span class="string">'left1 2s linear 0s forwards'</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 右边的</span></span></span><br><span class="line"><span class="actionscript">            value.style.backgroundPosition = <span class="string">'-450px 0'</span>;</span></span><br><span class="line"><span class="actionscript">            value.parentNode.style.animation = <span class="string">'right1 2s linear 0s forwards'</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="11-3-最终效果"><a href="#11-3-最终效果" class="headerlink" title="11.3  最终效果"></a>11.3 最终效果</h2><h3 id="11-3-1-dom结构"><a href="#11-3-1-dom结构" class="headerlink" title="11.3.1  dom结构"></a>11.3.1 dom结构</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">"carousel"</span>&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>="<span class="symbol">leftbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">rightbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">leftbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">rightbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">leftbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">rightbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">leftbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">rightbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">leftbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">rightbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">leftbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">rightbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">leftbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">rightbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">leftbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">rightbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">leftbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">rightbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">leftbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">rightbox</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">front</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">back</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">left</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">right</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">top</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">down</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">&lt;<span class="symbol">div</span> <span class="symbol">id</span>="<span class="symbol">btns</span>"&gt;</span><br><span class="line">    &lt;<span class="symbol">button</span> <span class="symbol">id</span>="<span class="symbol">prev</span>"&gt;上一张&lt;/<span class="symbol">button</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">button</span> <span class="symbol">id</span>="<span class="symbol">next</span>"&gt;下一张&lt;/<span class="symbol">button</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure></div><h3 id="11-3-2-CSS样式"><a href="#11-3-2-CSS样式" class="headerlink" title="11.3.2  CSS样式"></a>11.3.2 CSS样式</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#carousel</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">900px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.leftbox</span>,</span><br><span class="line"><span class="selector-class">.rightbox</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.leftbox</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.rightbox</span> &#123;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> left1 &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">0</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    30% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">30deg</span>) <span class="built_in">rotateY</span>(-<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">30deg</span>) <span class="built_in">rotateY</span>(-<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">180deg</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> left0 &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">180deg</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    30% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">210deg</span>) <span class="built_in">rotateY</span>(<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">210deg</span>) <span class="built_in">rotateY</span>(<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">360deg</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@keyframes</span> right1 &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">0</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    30% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">30deg</span>) <span class="built_in">rotateY</span>(<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">30deg</span>) <span class="built_in">rotateY</span>(<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">180deg</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> right0 &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">180deg</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    30% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">210deg</span>) <span class="built_in">rotateY</span>(-<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">210deg</span>) <span class="built_in">rotateY</span>(-<span class="number">70deg</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">360deg</span>) <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.leftbox</span> <span class="selector-tag">div</span>,</span><br><span class="line"><span class="selector-class">.rightbox</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.front</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.back</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(-<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(-<span class="number">5px</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">445px</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.top</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(<span class="number">5px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.down</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">90deg</span>) <span class="built_in">translateZ</span>(-<span class="number">55px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#btns</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">    <span class="comment">/* border: 1px solid red; */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="11-3-3-js代码"><a href="#11-3-3-js代码" class="headerlink" title="11.3.3  js代码"></a>11.3.3 js代码</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 封装一个类jquery的选择器</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params">selector</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="built_in">document</span>.querySelectorAll(selector);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 获得左边的盒子</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> leftarr = [].slice.call($(<span class="string">'.leftbox'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获得右边的盒子</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> rightarr = [].slice.call($(<span class="string">'.rightbox'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获得所有的图片</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> imgarr = [].slice.call($(<span class="string">'#imgs img'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获得前面的元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> fronts = [].slice.call($(<span class="string">'.front'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获得背面的元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> backs = [].slice.call($(<span class="string">'.back'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 声明一个信号量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> idx = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 声明一个点击的信号量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> click = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 声明锁</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> lock = <span class="literal">true</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 设置左边盒子的定位置</span></span></span><br><span class="line"><span class="actionscript">    leftarr.forEach(<span class="function"><span class="keyword">function</span><span class="params">(value, index)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        value.style.top = index * <span class="number">60</span> + <span class="string">'px'</span>;</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 设置右边盒子的定位置</span></span></span><br><span class="line"><span class="actionscript">    rightarr.forEach(<span class="function"><span class="keyword">function</span><span class="params">(value, index)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        value.style.top = index * <span class="number">60</span> + <span class="string">'px'</span>;</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 设置图片</span></span></span><br><span class="line"><span class="actionscript">    fronts.forEach(<span class="function"><span class="keyword">function</span> <span class="params">(value, index)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设置背景图</span></span></span><br><span class="line"><span class="actionscript">        value.style.backgroundImage = <span class="string">'url(imgs/'</span> + idx + <span class="string">'.jpg)'</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设置背景图片的Y值</span></span></span><br><span class="line"><span class="javascript">        value.style.backgroundPositionY = -(<span class="built_in">parseInt</span>(index / <span class="number">2</span>)) * <span class="number">60</span> + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设置背景图片的X值</span></span></span><br><span class="line">        if (index % 2 === 0) &#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 左边</span></span></span><br><span class="line"><span class="actionscript">            value.style.backgroundPositionX =  <span class="string">'0px'</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 右边</span></span></span><br><span class="line"><span class="actionscript">            value.style.backgroundPositionX =  <span class="string">'-450px'</span>;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 绑定下一张</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#next'</span>)[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 函数节流</span></span></span><br><span class="line">        if (!lock) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 更改锁</span></span></span><br><span class="line"><span class="actionscript">        lock = <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 更改信号量</span></span></span><br><span class="line">        idx++;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 进行边界判断</span></span></span><br><span class="line">        idx = idx &gt; 8 ? 0 : idx;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 调用change</span></span></span><br><span class="line">        change();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 绑定上一张</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">'#prev'</span>)[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 函数节流</span></span></span><br><span class="line">        if (!lock) &#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 更改锁</span></span></span><br><span class="line"><span class="actionscript">        lock = <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 更改信号量</span></span></span><br><span class="line">        idx--;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 进行边界判断</span></span></span><br><span class="line">        idx = idx &lt; 0 ? 8: idx;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 调用change</span></span></span><br><span class="line">        change();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 封装一个函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 更改点击的信号量</span></span></span><br><span class="line">        click++;</span><br><span class="line">        </span><br><span class="line"><span class="actionscript">        <span class="comment">// 设置背面的图片(相对于我们而言的，该数组应该是切换的)</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> arr = [fronts, backs];</span></span><br><span class="line"><span class="actionscript">        arr[click % <span class="number">2</span>].forEach(<span class="function"><span class="keyword">function</span> <span class="params">(value, index)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 设置背景图</span></span></span><br><span class="line"><span class="actionscript">            value.style.backgroundImage = <span class="string">'url(imgs/'</span> + idx + <span class="string">'.jpg)'</span>;</span></span><br><span class="line"><span class="actionscript">            value.style.transform = <span class="string">'rotateX('</span>+ <span class="number">180</span> * (click % <span class="number">2</span>)+<span class="string">'deg)'</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 设置背景图片的Y值</span></span></span><br><span class="line"><span class="javascript">            value.style.backgroundPositionY = -(<span class="built_in">parseInt</span>(index / <span class="number">2</span>)) * <span class="number">60</span> + <span class="string">'px'</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 延迟的设置</span></span></span><br><span class="line"><span class="actionscript">            setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line">                if (index % 2 == 0) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 左边的</span></span></span><br><span class="line"><span class="actionscript">                    value.style.backgroundPositionX = <span class="string">'0'</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="string">'left'</span> + (click % <span class="number">2</span>) + <span class="string">' 2s linear 0s forwards'</span>);</span></span><br><span class="line"><span class="actionscript">                    value.parentNode.style.animation = <span class="string">'left'</span> + (click % <span class="number">2</span>) + <span class="string">' 2s linear 0s forwards'</span>;</span></span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                    <span class="comment">// 右边的</span></span></span><br><span class="line"><span class="actionscript">                    value.style.backgroundPositionX = <span class="string">'-450px'</span>;</span></span><br><span class="line"><span class="actionscript">                    value.parentNode.style.animation = <span class="string">'right'</span> + (click % <span class="number">2</span>) + <span class="string">' 2s linear 0s forwards'</span>;</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">            &#125;,(<span class="built_in">parseInt</span>(index / <span class="number">2</span>)) * <span class="number">1000</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 设置一个开锁的</span></span></span><br><span class="line"><span class="actionscript">            setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 重置锁</span></span></span><br><span class="line"><span class="actionscript">                lock = <span class="literal">true</span>;</span></span><br><span class="line">            &#125;,11000);</span><br><span class="line">            </span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="11-3-4-显示效果"><a href="#11-3-4-显示效果" class="headerlink" title="11.3.4  显示效果"></a>11.3.4 显示效果</h3><p><img src="https://s1.ax1x.com/2020/07/12/U8QgRf.png" alt="U8QgRf.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>动画</tag>
        <tag>轮播图</tag>
        <tag>3D</tag>
        <tag>碎片</tag>
      </tags>
  </entry>
  <entry>
    <title>十、3D</title>
    <url>/post/753f2219.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="十、-3D"><a href="#十、-3D" class="headerlink" title="十、 3D"></a>十、 3D</h1><p>2d是平面</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span>d的坐标系： <span class="symbol">x</span> + <span class="symbol">y</span></span><br><span class="line"><span class="symbol">x</span>: 正方向向右  </span><br><span class="line"><span class="symbol">y</span>: 正方向向下</span><br></pre></td></tr></table></figure></div><p>3d是立体</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span>d的坐标系: <span class="symbol">x</span> + <span class="symbol">y</span> + z</span><br><span class="line"><span class="symbol">x</span>: 正方向向右</span><br><span class="line"><span class="symbol">y</span>: 正方向向下</span><br><span class="line">z: 垂直于屏幕</span><br></pre></td></tr></table></figure></div><h2 id="10-1-translateZ"><a href="#10-1-translateZ" class="headerlink" title="10.1 translateZ"></a>10.1 <code>translateZ</code></h2><p>该属性是<code>transform</code>的一个子属性，表示元素沿着自身坐标系<code>z</code>轴移动多少像素</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;img src=<span class="string">"./碎片轮播图/imgs/0.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="comment">/* 图片在Z轴上移动的距离 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>但是只有该条语句的时候， 将没有任何效果</p><p><img src="https://s1.ax1x.com/2020/07/12/U8A90K.png" alt="U8A90K.png"></p><p>要给父元素添加<code>perspective: xxpx</code></p><p>表示，此时<code>元素距离屏幕的距离</code></p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 父元素 */</span></span><br><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="comment">/* 父元素里屏幕的距离1000px */</span></span><br><span class="line">    <span class="attribute">perspective</span>: <span class="number">1000px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 子元素 */</span></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="comment">/* 表示子元素从距离屏幕1000px的位置移动到距离屏幕900px的位置 相当于放大图片 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8AeXt.png" alt="U8AeXt.png"></p><p>所以，当只有一个<code>translateZ</code>属性的时候， 浏览器不知道该以什么样的形式变化<br>所以，必须给父元素添加<code>perspective</code>属性，使父元素和子元素之间有一个相对距离的比值</p><h2 id="10-2-perspective"><a href="#10-2-perspective" class="headerlink" title="10.2 perspective"></a>10.2 <code>perspective</code></h2><p>景深：</p><blockquote><p>决定元素到屏幕的距离</p></blockquote><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/* 父元素 */</span></span><br><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="comment">/* 确定舞台的距离 */</span></span><br><span class="line">    <span class="attribute">perspective</span>: <span class="number">1000px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="10-3-transform-style-perserve-3d"><a href="#10-3-transform-style-perserve-3d" class="headerlink" title="10.3 transform-style: perserve-3d"></a>10.3 <code>transform-style: perserve-3d</code></h2><p><img src="https://s1.ax1x.com/2020/07/12/U8AhND.png" alt="U8AhND.png"></p><p>作用：</p><blockquote><p>让子元素保留3d效果</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"div1"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"div2"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"div3"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div3</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8A7jI.png" alt="U8A7jI.png"></p><p>给<code>div2</code>添加 <code>transform: rotateY(60deg);</code></p><p>给<code>div3</code>添加 <code>transform: rotateX(-60deg);</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">60deg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div3</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateX</span>(-<span class="number">60deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8Av4g.png" alt="U8Av4g.png"></p><p>给<code>div2</code>添加<code>transform-style: preserve-3d;</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#div2</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">60deg</span>);</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8EEUU.png" alt="U8EEUU.png"></p><h2 id="10-4-scaleZ"><a href="#10-4-scaleZ" class="headerlink" title="10.4 scaleZ"></a>10.4 <code>scaleZ</code></h2><p><img src="https://s1.ax1x.com/2020/07/12/U8uDZn.png" alt="U8uDZn.png"></p><p><code>scale</code>是缩放的意思，一个元素只有高度和宽度没有厚度的概念，所以给一个元素添加<code>scaleZ</code>是没有意义的</p><p>给一个具备立体样式容器元素添加<code>scaleZ</code>，将<strong>体现在该元素的子元素身上</strong></p><p>举例：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8ujLd.png" alt="U8ujLd.png"></p><p>接下来， 我们把该元素变为具备立体样式的容器元素：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APACHE"><figure class="iseeu highlight /apache"><table><tr><td class="code"><pre><span class="line"><span class="section">&lt;div&gt;</span>   </span><br><span class="line">    <span class="section">&lt;div&gt;</span><span class="section">&lt;/div&gt;</span></span><br><span class="line">    <span class="section">&lt;div&gt;</span><span class="section">&lt;/div&gt;</span></span><br><span class="line">    <span class="section">&lt;div&gt;</span><span class="section">&lt;/div&gt;</span></span><br><span class="line">    <span class="section">&lt;div&gt;</span><span class="section">&lt;/div&gt;</span></span><br><span class="line">    <span class="section">&lt;div&gt;</span><span class="section">&lt;/div&gt;</span></span><br><span class="line">    <span class="section">&lt;div&gt;</span><span class="section">&lt;/div&gt;</span></span><br><span class="line"><span class="section">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8Kymd.png" alt="U8Kymd.png"></p><p>综合结论：</p><blockquote><p>当给一个元素添加<code>scaleZ</code>是没有意义的， 只有当一个元素成为有立体样式的容器元素的时候，此时添加<code>scaleZ</code>，将体现在子元素身上</p></blockquote><h2 id="10-5-backface-visibility"><a href="#10-5-backface-visibility" class="headerlink" title="10.5 backface-visibility"></a>10.5 <code>backface-visibility</code></h2><p><img src="https://s1.ax1x.com/2020/07/12/U8KWff.png" alt="U8KWff.png"></p><p>默认情况下图片背面是可见状态</p><blockquote><p><code>backface-visibility:visible;</code> (默认值)</p></blockquote><p><img src="https://s1.ax1x.com/2020/07/12/U8MC7R.png" alt="U8MC7R.png"></p><p>加上<code>backface-visibility: hidden</code></p><p>图片的背面被隐藏</p><h2 id="10-6-改变旋转轴中心"><a href="#10-6-改变旋转轴中心" class="headerlink" title="10.6 改变旋转轴中心"></a>10.6 改变旋转轴中心</h2><p><img src="https://s1.ax1x.com/2020/07/12/U8Meje.png" alt="U8Meje.png"></p><ul><li><p><code>transform-origin</code>: 接受两个参数</p><ul><li><p>可以是单词法</p></li><li><p>可以是像素法</p></li><li><p>可以百分比</p></li><li><p>默认是 <code>50% 50%</code></p></li></ul></li></ul><p><img src="https://s1.ax1x.com/2020/07/12/U8MQAI.png" alt="U8MQAI.png"></p><p>改变旋转轴中心为<code>左上角</code>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="comment">/*改变旋转中心为左上角*/</span></span><br><span class="line">    <span class="attribute">transform-origin</span>: left top;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8M14P.png" alt="U8M14P.png"></p><p>改变旋转轴中心到 <code>50px 50px</code>的位置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="comment">/*transform-origin: 50px 50px;*/</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8M89f.png" alt="U8M89f.png"></p><p>改变旋转轴中心到右侧中间部分：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="comment">/*改变旋转轴中心*/</span></span><br><span class="line">    <span class="attribute">transform-origin</span>: <span class="number">100%</span> <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(<span class="number">45deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8MjUI.png" alt="U8MjUI.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>动画</tag>
        <tag>3D</tag>
      </tags>
  </entry>
  <entry>
    <title>三、zepto</title>
    <url>/post/862c4429.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="三、zepto"><a href="#三、zepto" class="headerlink" title="三、zepto"></a>三、zepto</h1><p><a href="https://www.html.cn/doc/zeptojs_api/" target="_blank" rel="noopener" class="LinkCard">zepto</a></p><p><code>Zepto</code>是一个轻量级的针对现代高级浏览器的<code>JavaScript</code>库， 它与<code>jquery</code>有着类似的<code>api</code>。 如果你会用jquery，那么你也会用zepto。</p><p>Zepto的设计目的是提供 jQuery 的类似的API，但并不是<code>100%</code>覆盖 jQuery 。Zepto设计的目的是有一个<code>5-10k</code>的通用库、下载并快速执行、有一个熟悉通用的API，所以你能把你主要的精力放到应用开发上。</p><ul><li><p>浏览器支持:</p><ul><li><p>初级 (100% 支持)</p><ul><li><p>Safari 6+ (Mac)</p></li><li><p>Chrome 30+ (Windows, Mac, Android, iOS, Linux, Chrome OS)</p></li><li><p>Firefox 24+ (Windows, Mac, Android, Linux, Firefox OS)</p></li><li><p>iOS 5+ Safari</p></li><li><p>Android 2.3+ Browser</p></li><li><p>Internet Explorer 10+ (Windows, Windows Phone)</p></li></ul></li><li><p>次要目标（完全或大部分支持）</p><ul><li><p>iOS 3+ Safari</p></li><li><p>Chrome &lt;30</p></li><li><p>Firefox 4+</p></li><li><p>Safari &lt;6</p></li><li><p>Android Browser 2.2</p></li><li><p>Opera 10+</p></li><li><p>webOS 1.4.5+ Browser</p></li><li><p>BlackBerry Tablet OS 1.0.7+ Browser</p></li><li><p>Amazon Silk 1.0+</p></li><li><p>Other WebKit-based browsers/runtimes</p></li></ul></li></ul></li></ul><p>需要注意的是Zepto的<strong>一些可选功能是专门针对移动端浏览器</strong>的；因为它的最初目标在移动端提供一个精简的类似jquery的js库。</p><p>在浏览器上<code>(Safari、Chrome和Firefox)</code>上开发页面应用或者构建基于<code>html</code>的<code>web-view</code>本地应用，比如<code>PhoneGap</code>，使用Zepto是一个不错的选择。</p><p>总之，Zepto希望在所有的现代浏览器中作为一种基础环境来使用。Zepto<strong>不支持旧版本的Internet Explorer浏览器(&lt;10)</strong>。</p><p>Zepto 是模块化：</p><figure class="highlight irpf90"><table><tr><td class="code"><pre><span class="line">如果想要使用animate函数，必须下载fx模块</span><br><span class="line">如果想要使用移动端事件，必须下载<span class="keyword">touch</span>模块</span><br></pre></td></tr></table></figure><table><thead><tr><th>module</th><th>default</th><th>description</th></tr></thead><tbody><tr><td>zepto</td><td>✔</td><td>核心模块；包含许多方法</td></tr><tr><td>event</td><td>✔</td><td>通过<code>on()</code>&amp; <code>off()</code>处理事件</td></tr><tr><td>ajax</td><td>✔</td><td><code>XMLHttpRequest</code> 和 <code>JSONP</code> 实用功能</td></tr><tr><td>form</td><td>✔</td><td>序列化 &amp; 提交web表单</td></tr><tr><td>ie</td><td>✔</td><td>增加支持桌面的<code>Internet Explorer 10+</code>和<code>Windows Phone 8</code>。</td></tr><tr><td>detect</td><td></td><td>提供 <code>$.os</code>和<code>$.browser</code>消息</td></tr><tr><td>fx</td><td></td><td><code>The animate()</code>方法</td></tr><tr><td>fx_methods</td><td></td><td>以动画形式的 <code>show</code>, <code>hide</code>, <code>toggle</code>, 和 <code>fade*()</code>方法.</td></tr><tr><td>assets</td><td></td><td>实验性支持从<code>DOM</code>中移除<code>image</code>元素后清理<code>iOS</code>的内存。</td></tr><tr><td>data</td><td></td><td>一个全面的 <code>data()</code>方法, 能够在内存中存储任意对象。</td></tr><tr><td>deferred</td><td></td><td>提供 <code>$.Deferredpromises API</code>. 依赖”<code>callbacks</code>“ 模块.当包含这个模块时候, <code>$.ajax()</code> 支持<code>promise</code>接口链式的回调。</td></tr><tr><td>callbacks</td><td></td><td>为”<code>deferred</code>“模块提供 <code>$.Callbacks</code>。</td></tr><tr><td>selector</td><td></td><td>实验性的支持 <code>jQuery</code> <code>CSS</code> 表达式 实用功能，比如 <code>$(&#39;div:first&#39;)</code>和 <code>el.is(&#39;:visible&#39;)</code>。</td></tr><tr><td>touch</td><td></td><td>在触摸设备上触发<code>tap–</code> 和 <code>swipe–</code> 相关事件。这适用于所有的`touch(iOS,</td></tr><tr><td>gesture</td><td></td><td>在触摸设备上触发 <code>pinch</code> 手势事件。</td></tr><tr><td>stack</td><td></td><td>提供 <code>andSelf</code>&amp; <code>end()</code>链式调用方法</td></tr><tr><td>ios3</td><td></td><td><code>String.prototype.trim</code> 和 <code>Array.prototype.reduce</code> 方法 (如果他们不存在) ，以兼容 <code>iOS 3.x</code>.</td></tr></tbody></table><h2 id="3-1-模块化"><a href="#3-1-模块化" class="headerlink" title="3.1  模块化"></a>3.1 模块化</h2><p><code>zepto</code>天生不具备<code>animate</code>函数，如果想要使用需要下载<code>fx</code>模块</p><p>在没有下载之前：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8PSIJ.png" alt="U8PSIJ.png"></p><p>下载fx模块：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8PPR1.png" alt="U8PPR1.png"></p><h2 id="3-2-touch模块"><a href="#3-2-touch模块" class="headerlink" title="3.2  touch模块"></a>3.2 <code>touch</code>模块</h2><p><code>touch</code>模块添加了一些自定义的事件</p><p><img src="https://s1.ax1x.com/2020/07/12/U8PMRI.png" alt="U8PMRI.png"></p><h3 id="3-2-1-tap-触碰"><a href="#3-2-1-tap-触碰" class="headerlink" title="3.2.1  tap 触碰"></a>3.2.1 <code>tap</code> 触碰</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="QML"><figure class="iseeu highlight /qml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// jquery中添加了click事件，用来代替原生中的onclick</span></span><br><span class="line"><span class="comment">// tap可以理解为类似的功能</span></span><br><span class="line"><span class="keyword">var</span> <span class="built_in">date</span> = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">$(<span class="string">"#box"</span>).tap(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"tap 触碰事件"</span> + (<span class="keyword">new</span> <span class="built_in">Date</span>() - <span class="built_in">date</span>));</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#box"</span>)[<span class="number">0</span>].addEventListener(<span class="string">"touchstart"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"touchstart 触摸开始"</span> + (<span class="keyword">new</span> <span class="built_in">Date</span>() - <span class="built_in">date</span>))</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#box"</span>)[<span class="number">0</span>].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"onclick 点击事件"</span> + (<span class="keyword">new</span> <span class="built_in">Date</span>() - <span class="built_in">date</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8PdWn.png" alt="U8PdWn.png"></p><h3 id="3-2-2-doubleTap-双击"><a href="#3-2-2-doubleTap-双击" class="headerlink" title="3.2.2  doubleTap 双击"></a>3.2.2 <code>doubleTap</code> 双击</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).doubleTap(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"doubleTap"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8PRY9.png" alt="U8PRY9.png"></p><h3 id="3-2-3-singleTap-单击"><a href="#3-2-3-singleTap-单击" class="headerlink" title="3.2.3  singleTap  单击"></a>3.2.3 <code>singleTap</code> 单击</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).singleTap(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"singleTap"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8Pvlt.png" alt="U8Pvlt.png"></p><h3 id="3-2-4-longTap-长按"><a href="#3-2-4-longTap-长按" class="headerlink" title="3.2.4  longTap  长按"></a>3.2.4 <code>longTap</code> 长按</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).longTap(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"longTap"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>长按<code>750ms</code>之后才会执行，同时也会执行<code>touchstart</code>事件：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8iJ6x.png" alt="U8iJ6x.png"></p><h3 id="3-2-5-swipe-滑动"><a href="#3-2-5-swipe-滑动" class="headerlink" title="3.2.5  swipe  滑动"></a>3.2.5 <code>swipe</code> 滑动</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).swipe(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"swipe"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>触摸并滑动会触发<code>touchstart</code>和<code>swipe</code>事件，不会触发<code>longTap</code>事件</p><p>触摸并长按后再滑动会触发<code>touchstart</code>和<code>longTap</code>事件，不会触发<code>swipe</code>事件</p><p><img src="https://s1.ax1x.com/2020/07/12/U8FPu6.png" alt="U8FPu6.png"></p><h3 id="3-2-6-swipeLeft-swipeRight-swipeUp-swipeDown-左右上下滑动"><a href="#3-2-6-swipeLeft-swipeRight-swipeUp-swipeDown-左右上下滑动" class="headerlink" title="3.2.6  swipeLeft  swipeRight  swipeUp  swipeDown 左右上下滑动"></a>3.2.6 <code>swipeLeft</code> <code>swipeRight</code> <code>swipeUp</code> <code>swipeDown</code> 左右上下滑动</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).swipeLeft(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"swipeLeft"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8iLHU.png" alt="U8iLHU.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>移动端</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>移动端</tag>
        <tag>zepto</tag>
      </tags>
  </entry>
  <entry>
    <title>二、过渡事件和动画事件</title>
    <url>/post/c8eb6eeb.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="二、过渡事件和动画事件"><a href="#二、过渡事件和动画事件" class="headerlink" title="二、过渡事件和动画事件"></a>二、过渡事件和动画事件</h1><h2 id="2-1-过渡事件"><a href="#2-1-过渡事件" class="headerlink" title="2.1  过渡事件"></a>2.1 过渡事件</h2><p>当一个元素过渡事件的开始、经过、结束，会触发一个事件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EBNF"><figure class="iseeu highlight /ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transitionstart</span></span><br><span class="line"><span class="attribute">transitionrun</span></span><br><span class="line"><span class="attribute">transitionend</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="comment">// 2s 之后让box加cur</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// box.className = "cur";</span></span><br><span class="line">    <span class="comment">// 也可以使用setAttribute添加类名</span></span><br><span class="line">    box.setAttribute(<span class="string">"class"</span>, <span class="string">"cur"</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 过渡事件</span></span><br><span class="line">box.addEventListener(<span class="string">"transitionstart"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"过渡开始"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">box.addEventListener(<span class="string">"transitionrun"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"过渡中"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">box.addEventListener(<span class="string">"transitionend"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"过渡完成"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">2s</span> ease <span class="number">0s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box</span><span class="selector-class">.cur</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U89Z6K.png" alt="U89Z6K.png"></p><h2 id="2-2-动画事件"><a href="#2-2-动画事件" class="headerlink" title="2.2  动画事件"></a>2.2 动画事件</h2><p>当一个动画执行的时候会触发两个事件（重复执行会再触发一个事件）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">animationstart：事件在 CSS 动画开始播放时触发。</span><br><span class="line">animationiteration：事件在 CSS 动画重复播放时触发。</span><br><span class="line">animationend：事件在 CSS 动画结束播放时触发。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/* 执行动画 */</span></span><br><span class="line">    <span class="attribute">animation</span>: go <span class="number">1s</span> linear <span class="number">0s</span> <span class="number">5</span> alternate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 添加动画事件 */</span></span><br><span class="line"><span class="keyword">@keyframes</span> go &#123;</span><br><span class="line">    <span class="selector-tag">from</span>&#123;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 动画开始</span></span><br><span class="line">box.addEventListener(<span class="string">"animationstart"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"动画开始"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 动画重复播放</span></span><br><span class="line">box.addEventListener(<span class="string">"animationiteration"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"动画重复播放"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 动画结束</span></span><br><span class="line">box.addEventListener(<span class="string">"animationend"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"动画结束"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U89KTH.png" alt="U89KTH.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>移动端</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>移动端</tag>
        <tag>过渡事件</tag>
        <tag>动画事件</tag>
      </tags>
  </entry>
  <entry>
    <title>一、移动端的事件</title>
    <url>/post/94abbcc9.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="一、移动端的事件"><a href="#一、移动端的事件" class="headerlink" title="一、移动端的事件"></a>一、移动端的事件</h1><p>移动端新增了“touch”触摸事件，因为手指的行为叫“触摸”，而鼠标的行为叫“点击”</p><p>依然支持点击事件，只是有<code>300ms</code>的延迟</p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="QML"><figure class="iseeu highlight /qml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="comment">// 获取当前时间</span></span><br><span class="line"><span class="keyword">var</span> <span class="built_in">date</span> = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="comment">// 绑定click事件</span></span><br><span class="line">box.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 改变文字颜色</span></span><br><span class="line">    <span class="keyword">this</span>.style.color = <span class="string">"white"</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"onclick"</span>, <span class="keyword">new</span> <span class="built_in">Date</span>() - <span class="built_in">date</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// touchstart事件</span></span><br><span class="line"><span class="comment">// 使用dom2级绑定方式</span></span><br><span class="line">box.addEventListener(<span class="string">"touchstart"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 改变文字颜色</span></span><br><span class="line">    <span class="keyword">this</span>.style.color = <span class="string">"blue"</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"touchstart"</span>, <span class="keyword">new</span> <span class="built_in">Date</span>() - <span class="built_in">date</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>这两个数值就是两个事件执行的毫秒值差：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8p6dH.png" alt="U8p6dH.png"></p><h2 id="1-1-移动端的三个事件"><a href="#1-1-移动端的三个事件" class="headerlink" title="1.1  移动端的三个事件"></a>1.1 移动端的三个事件</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">触摸开始事件：touchstart</span><br><span class="line">触摸移动事件：touchmove</span><br><span class="line">触摸结束事件：touchend</span><br></pre></td></tr></table></figure></div><p>绑定方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// touchstart</span></span><br><span class="line">box.addEventListener(<span class="string">"touchstart"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"触摸开始"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// touchmove</span></span><br><span class="line">box.addEventListener(<span class="string">"touchmove"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"触摸中"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// touchend</span></span><br><span class="line">box.addEventListener(<span class="string">"touchend"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"触摸结束"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8phSP.png" alt="U8phSP.png"></p><h2 id="1-2-事件对象"><a href="#1-2-事件对象" class="headerlink" title="1.2  事件对象"></a>1.2 事件对象</h2><p><code>touchstart</code>和<code>touchmove</code>可以通过<code>e.touches</code>来获取手指的相关信息：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// touchstart</span></span><br><span class="line">box.addEventListener(<span class="string">"touchstart"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e);</span><br><span class="line">    <span class="comment">// 查看手指相关信息</span></span><br><span class="line">    <span class="built_in">console</span>.log(e.touches[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// 查看手指位置</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"X:"</span>, e.touches[<span class="number">0</span>].clientX);</span><br><span class="line">    <span class="comment">// 查看手指位置</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Y"</span>, e.touches[<span class="number">0</span>].clientY);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// touchmove</span></span><br><span class="line">box.addEventListener(<span class="string">"touchmove"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e);</span><br><span class="line">    <span class="comment">// 查看手指相关信息</span></span><br><span class="line">    <span class="built_in">console</span>.log(e.touches[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// 查看手指位置</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"X:"</span>, e.touches[<span class="number">0</span>].clientX);</span><br><span class="line">    <span class="comment">// 查看手指位置</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Y"</span>, e.touches[<span class="number">0</span>].clientY);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8pzOU.png" alt="U8pzOU.png"></p><p><code>touchend</code>通过<code>e.changedTouches</code>来获取手指的相关信息</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// touchend</span></span><br><span class="line">box.addEventListener(<span class="string">"touchend"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e);</span><br><span class="line">    <span class="comment">// 查看手指相关信息</span></span><br><span class="line">    <span class="built_in">console</span>.log(e.changedTouches[<span class="number">0</span>]);</span><br><span class="line">    <span class="comment">// 查看手指位置</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"X:"</span>, e.changedTouches[<span class="number">0</span>].clientX);</span><br><span class="line">    <span class="comment">// 查看手指位置</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Y"</span>, e.changedTouches[<span class="number">0</span>].clientY);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// touchend事件中，获取手指信息的属性不是通过 e.touches 来获取，而是通过 e.changedTouches来获取</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U899w4.png" alt="U899w4.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>移动端</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>移动端</tag>
        <tag>事件</tag>
      </tags>
  </entry>
  <entry>
    <title>六、requirejs配置</title>
    <url>/post/8c44889.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h2 id="六、-requirejs配置"><a href="#六、-requirejs配置" class="headerlink" title="六、 requirejs配置"></a>六、 requirejs配置</h2><p>配置：</p><blockquote><p>本身具有这种功能，需要开启， 所以要进行配置</p></blockquote><p><code>requirejs</code>提供了<code>config</code>方法用于配置模块的</p><h2 id="6-1-paths"><a href="#6-1-paths" class="headerlink" title="6.1 paths"></a>6.1 paths</h2><p>作用：</p><blockquote><p>简化路径</p></blockquote><p>值是一个对象</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AVRASM"><figure class="iseeu highlight /avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">key:</span> 新的路径</span><br><span class="line"><span class="symbol">value:</span> 原始路径</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用config配置</span></span><br><span class="line">requirejs.config(&#123;</span><br><span class="line">    <span class="comment">// 配置paths</span></span><br><span class="line">    paths: &#123;</span><br><span class="line">        <span class="string">"module"</span>: <span class="string">"module/header"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">define([<span class="string">"module/header"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">header</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(header);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><h2 id="6-2-shim"><a href="#6-2-shim" class="headerlink" title="6.2 shim"></a>6.2 shim</h2><p>作用:</p><blockquote><p>将文件转为模块</p></blockquote><p>值是一个对象</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="Q"><figure class="iseeu highlight /q"><table><tr><td class="code"><pre><span class="line"><span class="built_in">key</span>: 模块路径</span><br><span class="line"><span class="built_in">value</span> 是一个配置对象</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DELPHI"><figure class="iseeu highlight /delphi"><table><tr><td class="code"><pre><span class="line">配置接口 <span class="keyword">exports</span></span><br><span class="line">配置依赖集合 deps</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用config配置</span></span><br><span class="line"><span class="selector-tag">requirejs</span><span class="selector-class">.config</span>(&#123;</span><br><span class="line">    <span class="comment">// 配置shim</span></span><br><span class="line">    <span class="attribute">shim</span>: &#123;</span><br><span class="line">        <span class="string">"lib/jquery-1.12.2"</span>: &#123;</span><br><span class="line">            <span class="comment">// 配置接口</span></span><br><span class="line">            <span class="attribute">exports</span>: <span class="string">"$"</span>,</span><br><span class="line">            <span class="attribute">deps</span>: []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">define</span>([<span class="string">"module/header/header"</span>]);</span><br></pre></td></tr></table></figure></div><h2 id="6-3-map"><a href="#6-3-map" class="headerlink" title="6.3 map"></a>6.3 map</h2><p>作用：</p><blockquote><p>配置模块文件</p></blockquote><p>属性是一个路径</p><p>value 是一个对象</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AVRASM"><figure class="iseeu highlight /avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">key:</span> 引入的模块文件</span><br><span class="line"><span class="symbol">value:</span> 修改的模块文件</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用config配置</span></span><br><span class="line">requirejs.config(&#123;</span><br><span class="line">    <span class="comment">// 配置shim</span></span><br><span class="line"><span class="symbol">    shim:</span> &#123;</span><br><span class="line">        <span class="string">"lib/jquery-1.12.2"</span>: &#123;</span><br><span class="line">            <span class="comment">// 配置接口</span></span><br><span class="line"><span class="symbol">            exports:</span> <span class="string">"$"</span>,</span><br><span class="line">            <span class="comment">// 配置依赖集合</span></span><br><span class="line"><span class="symbol">            deps:</span> []</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"lib/jquery100"</span>: &#123;</span><br><span class="line">            <span class="comment">// 配置接口</span></span><br><span class="line"><span class="symbol">            exports:</span> <span class="string">"$"</span>,</span><br><span class="line">            <span class="comment">// 配置依赖集合</span></span><br><span class="line"><span class="symbol">            deps:</span> []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 配置map</span></span><br><span class="line"><span class="symbol">    map:</span> &#123;</span><br><span class="line">        <span class="string">"module/header"</span>: &#123;</span><br><span class="line">            <span class="string">"lib/jquery"</span>: <span class="string">"lib/jquery-1.12.2"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"module/footer"</span>: &#123;</span><br><span class="line">            <span class="string">"lib/jquery"</span>: <span class="string">"lib/jquery100"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">define([<span class="string">"module/header/header"</span>, <span class="string">"module/footer/footer"</span>]);</span><br></pre></td></tr></table></figure></div><h2 id="6-4-baseUrl"><a href="#6-4-baseUrl" class="headerlink" title="6.4 baseUrl"></a>6.4 baseUrl</h2><p>作用：</p><blockquote><p>更改根目录的</p></blockquote><p>优先级关系：</p><blockquote><p>baseUrl &gt; data-main &gt; require</p></blockquote><h2 id="6-5-css插件"><a href="#6-5-css插件" class="headerlink" title="6.5 css插件"></a>6.5 <code>css插件</code></h2><p><code>requirejs</code>不能直接引入<code>css</code>文件</p><p>在<code>requirejs</code>中引入<code>css</code>要当做模块来引入，需要配置</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在模块文件中要加上css!前缀</span></span><br><span class="line"><span class="class">map </span>&#123;</span><br><span class="line">    “*”： &#123;</span><br><span class="line"><span class="symbol">        css:</span> 文件目录</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>模块化</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>模块化</tag>
        <tag>SeaJs</tag>
        <tag>配置</tag>
        <tag>requirejs</tag>
      </tags>
  </entry>
  <entry>
    <title>五、requirejs</title>
    <url>/post/24c518d8.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h2 id="五、-requirejs"><a href="#五、-requirejs" class="headerlink" title="五、 requirejs"></a>五、 <code>requirejs</code></h2><h2 id="5-1-体验requirejs"><a href="#5-1-体验requirejs" class="headerlink" title="5.1 体验requirejs"></a>5.1 体验<code>requirejs</code></h2><p><code>requirejs</code>是第一个模块化开发框架，提出了<code>module transports</code>规范， 基于前段模型的规范（加载时都是异步的），又借鉴于<code>nodejs</code>，也支持<code>comminjs</code>规范，建议我们使用<code>module transports</code> 规范</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">requirejs</span>是基于<span class="selector-tag">AMD</span>规定</span><br><span class="line"><span class="selector-tag">require</span><span class="selector-class">.js</span>官网</span><br><span class="line"><span class="selector-tag">requirejs</span><span class="selector-class">.org</span></span><br><span class="line"><span class="selector-tag">requirejs</span><span class="selector-class">.cn</span></span><br><span class="line">使用<span class="selector-tag">requirejs</span>跟<span class="selector-tag">seajs</span>一样要在页面中引入文件才可以使用</span><br></pre></td></tr></table></figure></div><p>根目录：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HASKELL"><figure class="iseeu highlight /haskell"><table><tr><td class="code"><pre><span class="line">如果没有<span class="class"><span class="keyword">data</span>-main属性， 默认是以html文件为根目录</span></span><br><span class="line">如果使用<span class="class"><span class="keyword">data</span>-main属性， 默认是以<span class="keyword">data</span>-main属性值为根目录</span></span><br><span class="line"><span class="title">seajs</span>是以seajs所在的文件目录为根目录</span><br><span class="line"><span class="title">requirejs</span>是以引入html文件的目录为根目录</span><br></pre></td></tr></table></figure></div><p>引入<code>requirejs</code>会向全局暴露3个变量</p><p><img src="https://s1.ax1x.com/2020/07/12/U8Sb26.png" alt="U8Sb26.png"></p><p><code>require</code>和<code>requirejs</code>是一样的</p><p>这里的<code>require</code>方法和<code>seajs</code>中<code>seajs</code>对象一样</p><p>引入<code>requirejs</code>的<code>script</code>标签上有一个<code>data-main</code>属性，它可以引入项目的入口文件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;script <span class="attribute">type</span>=<span class="string">"text/javascript"</span> <span class="attribute">data-main</span>=<span class="string">"js/main.js"</span> <span class="attribute">src</span>=<span class="string">"js/require.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p>除了以上方式还有另外一种方式可以引入项目的入口文件</p><p><code>require</code>方法和<code>seajs.use</code>方法一样的，它也可以引入入口文件</p><p>接受两个参数:</p><ul><li><p>第一个参数是模块的依赖集合</p><ul><li>必须是数组</li></ul></li><li><p>第二个参数是回调函数</p><ul><li><p>回调函数中的参数就是前面模块向外暴露的功能 （一一对应的）</p></li><li><p>作用域是<code>window</code></p></li></ul></li></ul><p><code>requirejs</code>对<code>js</code>文件敏感，因此可以省略<code>.js</code>后缀</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="comment">// 引入入口文件</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">require</span>([<span class="string">"js/main.js"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">main</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(main);</span></span><br><span class="line">&#125;);</span><br><span class="line">7 <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="5-2-定义模块"><a href="#5-2-定义模块" class="headerlink" title="5.2 定义模块"></a>5.2 定义模块</h2><p><code>requirejs</code>和<code>seajs</code>一样, 都有一个<code>define</code>方法，用来定义模块</p><ul><li><p>可以传递一个参数：</p><ul><li><p>值类型 不能字符串</p></li><li><p>对象 require也支持</p></li><li><p>函数</p><ul><li><p>此时函数遵循commonjs规范，requirejs提供了参数注入的技术，想要使用哪个模块就要注入哪个模块</p></li><li><p>向外暴露功能一定是基于commonjs规范</p></li><li><p>如果没有注入参数</p><ul><li>作用域是window</li></ul></li><li><p>如果注入参数</p><ul><li>作用域是向外暴露功能的对象</li></ul></li></ul></li></ul></li><li><p>可以传递两个参数：</p><ul><li><p>第一个参数是一个字符串</p></li><li><p>第一个参数还可以是数组</p></li><li><p>第二个参数加载模块的函数</p></li><li><p>如果第一个参数是字符串，表示模块的id，此时函数遵循commonjs规范（与上面传递函数的表现形式一致）</p></li><li><p>如果第一个参数是数组， 表示模块的依赖集合， 此时函数遵循的是module transports规范</p></li><li><p>如果想要使用哪个模块，就必须在依赖集合中注入哪个模块，包括内置模块（require, exports, module），此时函数中的参数是和前面模块向外暴露的接口是一一对应。</p></li><li><p>如果注入exports和module</p><ul><li>作用域指向向外暴露功能的对象</li></ul></li><li><p>如果没有注入exports和module</p><ul><li>作用域是window</li></ul></li></ul></li><li><p>可以传递三个参数：</p><ul><li><p>第一个参数是字符串，表示模块的id</p></li><li><p>第二个参数是数组，表示模块的依赖集合</p></li><li><p>第三个参数是回调函数，此时的函数遵循module transports 规范</p></li><li><p>在module transports规范中，定义的任何模块文件，都不要与内置模块的名称相同（require, exports, module）</p></li></ul></li></ul><p>在工作中，最后一种方式是最常用的（id一定要与模块路径统一）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TYPESCRIPT"><figure class="iseeu highlight /typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义模块</span></span><br><span class="line"><span class="comment">// 值类型</span></span><br><span class="line">define(<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 这种方式是不允许的</span></span><br><span class="line">define(<span class="string">"abc"</span>);</span><br><span class="line">define(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入对象</span></span><br><span class="line">define(&#123;</span><br><span class="line">    color: <span class="string">"red"</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传递函数</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, exports, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">this</span>.color = <span class="string">"red"</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传递两个参数，第一参数是字符串</span></span><br><span class="line">define(<span class="string">"dom"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, exports, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传递两个参数，第一个参数是数组</span></span><br><span class="line">define([<span class="string">"color"</span>, <span class="string">"require"</span>, <span class="string">"exports"</span>, <span class="string">"module"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">color, <span class="built_in">require</span>, exportsm, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">this</span>.color = <span class="string">"blue"</span>;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传递三个参数</span></span><br><span class="line">define(<span class="string">"dom"</span>, [<span class="string">"color"</span>, <span class="string">"require"</span>, <span class="string">"exports"</span>, <span class="string">"module"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">color, <span class="built_in">require</span>, exports, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><h2 id="5-3-引入具有id的模块"><a href="#5-3-引入具有id的模块" class="headerlink" title="5.3 引入具有id的模块"></a>5.3 引入具有id的模块</h2><p>当一个模块没有id的时候可以直接引入</p><p>当一个模块有id，此时无法直接引入</p><p>第一步要在模块依赖集合中加载模块文件</p><p>第二步通过require方法指定id（require是异步方法）</p><p>comminjs规范不能加载具有id的模块</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 加载具有id的模块</span></span><br><span class="line">define([<span class="string">"dom"</span>, <span class="string">"require"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">dom, require</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>([<span class="string">"myId"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">dom</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(dom)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><p>dom.js</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">define</span>("<span class="selector-tag">myId</span>", &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="string">"red"</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><h2 id="5-4-模块的覆盖关系"><a href="#5-4-模块的覆盖关系" class="headerlink" title="5.4 模块的覆盖关系"></a>5.4 模块的覆盖关系</h2><p>如果一个模块文件中有两个没有id的模块，前面的覆盖后面的模块</p><p>如果模块文件中有两个相同id的模块， 前面的覆盖后面的模块</p><p>如果一个模块文件中有两个不同id的模块，是可以同时存在的</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LASSO"><figure class="iseeu highlight /lasso"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 两个没有id的模块</span></span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(&#123;</span><br><span class="line">    a: <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(&#123;</span><br><span class="line">    a: <span class="number">1</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 有两个相同id的模块</span></span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">"myId"</span>, &#123;</span><br><span class="line">    a: <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">"myId"</span>, &#123;</span><br><span class="line">    a: <span class="number">1</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 两个不同id的模块</span></span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">"myId1"</span>, &#123;</span><br><span class="line">    a: <span class="number">1</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">define</span></span>(<span class="string">"myId2"</span>, &#123;</span><br><span class="line">    a: <span class="number">2</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><h2 id="5-5-接口定义"><a href="#5-5-接口定义" class="headerlink" title="5.5 接口定义"></a>5.5 接口定义</h2><p>在seajs中定义接口的方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">exports</span>.接口</span><br><span class="line"><span class="keyword">module</span>.<span class="keyword">exports</span>.接口</span><br><span class="line"><span class="keyword">module</span>.<span class="keyword">exports</span> = 值类型</span><br><span class="line"><span class="keyword">module</span>.<span class="keyword">exports</span> = 对象</span><br><span class="line"><span class="keyword">module</span>.<span class="keyword">exports</span> = 函数</span><br></pre></td></tr></table></figure></div><p>以上方式都是基于commonjs规范， requirejs同样适用</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> 值类型</span><br><span class="line"><span class="keyword">return</span> 对象</span><br><span class="line"><span class="keyword">return</span> 函数</span><br></pre></td></tr></table></figure></div><p>以上三种方式，是基于（<code>module transports</code>)规范的，因为不依赖于 <code>require</code>, <code>exports</code>, <code>module</code></p><p>开发更灵活</p><p><code>define</code> 可以接受值类型，不能接受字符串</p><p>除了以上十种方式，当模块函数中注入<code>exports</code>和<code>module</code>的时候，作用域是向外暴露功能的对象</p><p>因为可以通过<code>this</code>向外暴露接口</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义模块</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// console.log(this);</span></span><br><span class="line">    <span class="comment">// console.log(arguments);</span></span><br><span class="line">    <span class="comment">// 这种方式绝对不允许</span></span><br><span class="line">    exports = &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// // commonjs</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 第1种</span></span><br><span class="line">    exports.a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2</span></span><br><span class="line">    <span class="built_in">module</span>.exports.a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3</span></span><br><span class="line">    <span class="built_in">module</span>.exports = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4</span></span><br><span class="line">    <span class="built_in">module</span>.exports = &#123;</span><br><span class="line">        a: <span class="number">1</span>,</span><br><span class="line">        b: <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5</span></span><br><span class="line">    <span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// module transports</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 6</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        a: <span class="number">1</span>,</span><br><span class="line">        b: <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 8</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 9</span></span><br><span class="line">define(<span class="number">1</span>);</span><br><span class="line">define(<span class="literal">true</span>);</span><br><span class="line">define(<span class="string">"abc"</span>); <span class="comment">// 这种方式不允许</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 10</span></span><br><span class="line">define(&#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">    b: <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// this</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">this</span>.color = <span class="string">"red"</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><h2 id="5-6-模块对象"><a href="#5-6-模块对象" class="headerlink" title="5.6 模块对象"></a>5.6 模块对象</h2><ul><li><p>id: 表示的是模块的id， 默认值与uri不一致</p></li><li><p>uri: 模块的文件地址， 是相对于html文件目录</p></li><li><p><strong>如果没有data-main属性， 路径的前面会多一个<code>./</code></strong></p></li><li><p>config: 配置模块信息的</p></li><li><p>exports: 暴露功能的接口对象</p></li></ul><p><img src="https://s1.ax1x.com/2020/07/12/U8pixf.png" alt="U8pixf.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>模块化</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>模块化</tag>
        <tag>SeaJs</tag>
        <tag>requirejs</tag>
      </tags>
  </entry>
  <entry>
    <title>四、加载css插件</title>
    <url>/post/c508e3af.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h2 id="四、-加载css插件"><a href="#四、-加载css插件" class="headerlink" title="四、 加载css插件"></a>四、 加载<code>css插件</code></h2><p><code>seajs.css</code>文件</p><p>使用<code>css插件</code>非常简单</p><p>第一步在<code>sea.js</code>之后引入<code>css文件</code></p><p>第二步直接在<code>模块</code>中引入<code>css文件</code></p><p>注意：在引入<code>css文件</code>的时候一定<strong>不能省略<code>.css</code>后缀， 因为<code>seajs</code>对<code>js</code>敏感， 对<code>css</code>不敏感</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"sea.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"seajs-css.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 引入css文件</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 第一步在seajs之后引入css文件</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 第二步直接引入css文件</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 需要注意： 不能省略.css后缀</span></span></span><br><span class="line"><span class="actionscript">            seajs.use(<span class="string">"css.css"</span>);</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="4-1-预加载文件"><a href="#4-1-预加载文件" class="headerlink" title="4.1 预加载文件"></a>4.1 预加载文件</h2><p><code>seajs-preload.js</code></p><p>第一步在<code>seajs</code>文件之后加载<code>preload.js</code>文件</p><p>第二步在配置中，定义<code>preload配置</code></p><p>值是一个数组</p><p>数组中的每一项就是预加载的文件</p><p>我们就可以使用预加载的文件了</p><p>加载预加载文件的时间点:</p><blockquote><p>在seajs.use方法之后，模块加载之前</p></blockquote><p>所以在工作中我们尽量将预加载的配置写在最前面</p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LUA"><figure class="iseeu highlight /lua"><table><tr><td class="code"><pre><span class="line">seajs.<span class="built_in">config</span>(&#123;</span><br><span class="line">    // 配置<span class="built_in">preload</span></span><br><span class="line">    <span class="built_in">preload</span>: [<span class="string">"jquery-1.7.2.js"</span>]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 引入main.js</span><br><span class="line">seajs.use(<span class="string">"main"</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    console.<span class="built_in">log</span>($);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>模块化</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>模块化</tag>
        <tag>SeaJs</tag>
        <tag>css插件</tag>
      </tags>
  </entry>
  <entry>
    <title>三、seajs配置</title>
    <url>/post/a1214205.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h2 id="三、-seajs配置"><a href="#三、-seajs配置" class="headerlink" title="三、 seajs配置"></a>三、 seajs配置</h2><p>seajs提供了config方法用来进行配置</p><p>配置：</p><blockquote><p>本身这个框架就有的功能，需要开启，就要进行配置</p></blockquote><p>插件：</p><blockquote><p>本身这个框架没有这些功能，被别人实现了，如果需要使用引入该文件即可</p></blockquote><h2 id="3-1-alias"><a href="#3-1-alias" class="headerlink" title="3.1 alias"></a>3.1 alias</h2><p>作用：</p><blockquote><p>简化文件的引用</p></blockquote><p>例如文件名过长，我们可以简化它</p><p>值是一个对象：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AVRASM"><figure class="iseeu highlight /avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">key:</span> 新的文件名</span><br><span class="line"><span class="symbol">value:</span> 原始路径</span><br></pre></td></tr></table></figure></div><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="OPENSCAD"><figure class="iseeu highlight /openscad"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 配置alias</span></span><br><span class="line">seajs.config(&#123;</span><br><span class="line">    alias: &#123;</span><br><span class="line">        <span class="string">"jquery"</span>: <span class="string">"./modules/jquery/jquery/1.10.1/jquery-debug"</span>  <span class="comment">// jquery-debug.js</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 引入jquery-debug.js</span></span><br><span class="line">seajs.<span class="keyword">use</span>([<span class="string">"jquery"</span>], <span class="function"><span class="keyword">function</span> <span class="params">(jq)</span> &#123;</span></span><br><span class="line">    console.<span class="built_in">log</span>(jq);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>输出：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8S0bQ.png" alt="U8S0bQ.png"></p><h2 id="3-2-paths"><a href="#3-2-paths" class="headerlink" title="3.2 paths"></a>3.2 paths</h2><p>作用：</p><blockquote><p>简化路径</p></blockquote><p>例如文件路径太长，我们可以简化它</p><p>值是一个对象</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="Q"><figure class="iseeu highlight /q"><table><tr><td class="code"><pre><span class="line"><span class="built_in">key</span>： 新的文件路径</span><br><span class="line"><span class="built_in">value</span>: 原始路径</span><br></pre></td></tr></table></figure></div><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="OPENSCAD"><figure class="iseeu highlight /openscad"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 配置paths</span></span><br><span class="line">seajs.config(&#123;</span><br><span class="line">    paths: &#123;</span><br><span class="line">        <span class="string">"module"</span>: <span class="string">"./modules/jquery"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 引入jquery-debug.js</span></span><br><span class="line">seajs.<span class="keyword">use</span>(<span class="string">"module/jquery/1.10.1/jquery-debug"</span>, <span class="function"><span class="keyword">function</span> <span class="params">(jq)</span> &#123;</span></span><br><span class="line">    console.<span class="built_in">log</span>(jq);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>输出：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8SDEj.png" alt="U8SDEj.png"></p><h2 id="3-3-map"><a href="#3-3-map" class="headerlink" title="3.3 map"></a>3.3 map</h2><p>作用：</p><blockquote><p>用于批量处理文件</p></blockquote><p>值是一个二维数组</p><p>数组中的每一项都是一个数组， 代表一组处理的文件:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">数组中第一项表示匹配到的文件</span><br><span class="line">数组中的第二项表示要修改的文件</span><br></pre></td></tr></table></figure></div><p>比如，压缩之后的文件<code>.min.js</code>，在我们书写的时候不想写<code>.min.js</code>，此时可以通过<code>map</code>进行配置，决定哪些文件可以带<code>.min.js</code>，哪些文件可以不需要带<code>.min.js</code></p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="OPENSCAD"><figure class="iseeu highlight /openscad"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用config方法进行配置</span></span><br><span class="line">seajs.config(&#123;</span><br><span class="line">    <span class="comment">// 配置map</span></span><br><span class="line">    map: [<span class="string">"jquery.js"</span>, <span class="string">"jquery.min.js"</span>]</span><br><span class="line">    <span class="comment">// [".js", ".min.js"]</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入main.js</span></span><br><span class="line">seajs.<span class="keyword">use</span>([<span class="string">"modules/js/main"</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> &#123;</span>&#125;);</span><br></pre></td></tr></table></figure></div><p>main.js</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TYPESCRIPT"><figure class="iseeu highlight /typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义模块</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, exports, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> jq = <span class="built_in">require</span>(<span class="string">"modules/js/jquery"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(jq);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>输出：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8S6Cq.png" alt="U8S6Cq.png"></p><h2 id="3-4-vars"><a href="#3-4-vars" class="headerlink" title="3.4 vars"></a>3.4 vars</h2><p>作用：</p><blockquote><p>解决路径不能拼接问题</p></blockquote><p>值是一个对象</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AVRASM"><figure class="iseeu highlight /avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">key:</span> 模板变量名</span><br><span class="line"><span class="symbol">value:</span> 变量名称对应的值</span><br></pre></td></tr></table></figure></div><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 进行配置</span></span><br><span class="line"><span class="selector-tag">seajs</span><span class="selector-class">.config</span>(&#123;</span><br><span class="line">    <span class="comment">// 配置vars</span></span><br><span class="line">    <span class="attribute">vars</span>: &#123;</span><br><span class="line">        <span class="string">"q"</span>: <span class="string">"query"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 引入入口文件</span></span><br><span class="line"><span class="selector-tag">seajs</span><span class="selector-class">.use</span>([<span class="string">"modules/js/main"</span>], function() &#123;&#125;);</span><br></pre></td></tr></table></figure></div><p>main.js</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TYPESCRIPT"><figure class="iseeu highlight /typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义模块</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, exports, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 引入jquery</span></span><br><span class="line">    <span class="comment">// var jq = require("modules/js/j" + "query" + "-1.7.2");</span></span><br><span class="line">    <span class="keyword">var</span> jq = <span class="built_in">require</span>(<span class="string">"modules/js/j&#123;q&#125;-1.7.2"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(jq);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>输出：</p><p><img src="https://s1.ax1x.com/2020/07/12/U8S6Cq.png" alt="U8S6Cq.png"></p><h2 id="3-5-base"><a href="#3-5-base" class="headerlink" title="3.5 base"></a>3.5 base</h2><p>作用:</p><blockquote><p>更改根目录</p></blockquote><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="OPENSCAD"><figure class="iseeu highlight /openscad"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 进行配置</span></span><br><span class="line">seajs.config(&#123;</span><br><span class="line">    <span class="comment">// 配置base</span></span><br><span class="line">    base: <span class="string">"modules/js"</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 引入入口文件</span></span><br><span class="line">seajs.<span class="keyword">use</span>([<span class="string">"main"</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> &#123;</span>&#125;);</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>模块化</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>模块化</tag>
        <tag>SeaJs</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>二、异步加载模块 require.async方法</title>
    <url>/post/3fee3dde.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h2 id="二、-异步加载模块-require-async方法"><a href="#二、-异步加载模块-require-async方法" class="headerlink" title="二、 异步加载模块 require.async方法"></a>二、 异步加载模块 require.async方法</h2><p>在浏览器端使用一个文件的时候要到服务器端加载， 这个加载的过程是异步行为， <code>seajs</code>为了实现这样的功能， 在模块内部提供了<code>require.async</code>，可以实现异步的加载模块文件</p><ul><li><p>require.async方法:</p><ul><li><p>第一个参数 是模块的依赖集合</p><ul><li><p>可以是一个字符串, 表示的是一个模块文件</p></li><li><p>可以是一个数组， 表示多个模块文件</p></li></ul></li><li><p>第二个参数是回调函数</p><ul><li>回调函数中的参数，就是前面加载模块向外暴露的功能（一一对应）</li></ul></li></ul></li><li><p>require.async方法与seajs.use方法一样，但是seajs建议:</p><ul><li><p>在模块外部使用seajs.use方法</p></li><li><p>在模块的内部使用require.async方法</p></li></ul></li><li><p><strong>require.async方法只能在模块中使用，在模块外是不能被访问的</strong></p></li><li><p>require.async方法与seajs.use方法一样<strong>不能加载具有id的模块</strong></p></li><li><p><strong>可以通过模块依赖集合加载模块文件从而成功实现async方法加载具有id的模块</strong></p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">define([<span class="string">"js/dom"</span>], <span class="function"><span class="keyword">function</span> (<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// var dom = require("js/dom");</span></span><br><span class="line">    <span class="comment">// console.log(dom);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 异步加载</span></span><br><span class="line">    <span class="keyword">var</span> dom = <span class="built_in">require</span>.async(<span class="string">"myId"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">dom</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// var dom = require.async("myId", function(dom) &#123;</span></span><br><span class="line">        <span class="comment">//    </span></span><br><span class="line">        <span class="comment">// &#125;);</span></span><br><span class="line">        <span class="keyword">var</span> dom = <span class="built_in">require</span>.async([<span class="string">"js/dom"</span>, <span class="string">"js/color"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">dom, color</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>require.async与require方法：</p><ul><li><p>在条件语句中：</p><ul><li><p>对于require：</p><ul><li><p>在if执行块中</p></li><li><p>加载并执行模块</p></li><li><p>在if不执行块中</p></li><li><p>加载文件，没有执行加载模块</p></li><li><p>Require方法尽量放在最前面，不要写在代码块中</p></li></ul></li><li><p>对于require.async：</p><ul><li><p>在if执行快中</p></li><li><p>加载并执行模块</p></li><li><p>在if不执行块中</p></li><li><p>没有加载文件，也没有执行模块</p></li></ul></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="QML"><figure class="iseeu highlight /qml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="comment">// 这里会执行</span></span><br><span class="line">    <span class="keyword">var</span> dom = <span class="built_in">require</span>(<span class="string">'js/dom'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(dom);  <span class="comment">// 加载文件并执行模块</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">require</span>.async(<span class="string">'js/dom'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">dom</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(dom);  <span class="comment">// 加载文件并执行模块</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125; <span class="title">else</span> &#123;</span><br><span class="line">    <span class="comment">// 这里不会执行</span></span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">color</span> = <span class="built_in">require</span>(<span class="string">'js/color'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">color</span>);  <span class="comment">// 加载文件，但不执行模块</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">require</span>.async(<span class="string">'js/color'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">color</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">color</span>);  <span class="comment">// 不加载文件，也不执行模块</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>在异步操作中：</p><p>对于require</p><blockquote><p>立即加载文件，但是会在异步语句执行之后去执行加载require</p></blockquote><p>对于async</p><blockquote><p>没有立即加载文件，会在异步语句执行之后执行加载require.async</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LISP"><figure class="iseeu highlight /lisp"><table><tr><td class="code"><pre><span class="line">setTimeout(<span class="name">function</span> () &#123;</span><br><span class="line">    // var dom = require(<span class="string">"js/dom"</span>)<span class="comment">;</span></span><br><span class="line">    // console.log(<span class="name">dom</span>)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">    require.async(<span class="string">"js/dom"</span>, function (<span class="name">dom</span>) &#123;</span><br><span class="line">        console.log(<span class="name">dom</span>)<span class="comment">;</span></span><br><span class="line">    &#125;)<span class="comment">;</span></span><br><span class="line">&#125;, <span class="number">1000</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>模块化</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>模块化</tag>
        <tag>SeaJs</tag>
        <tag>异步加载</tag>
        <tag>require</tag>
        <tag>async</tag>
      </tags>
  </entry>
  <entry>
    <title>一、SeaJs</title>
    <url>/post/ae7e3172.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h2 id="一、SeaJs"><a href="#一、SeaJs" class="headerlink" title="一、SeaJs"></a>一、SeaJs</h2><p>seajs是国内的一套<strong>模块化开发框架</strong>，由淘宝工程师王伯写的，有中文文档，学习简单</p><p><a href="https://github.com/seajs/seajs" target="_blank" rel="noopener" class="LinkCard">开源代码库</a></p><p><a href="https://seajs.github.io/seajs/docs/#intro" target="_blank" rel="noopener" class="LinkCard">中文文档</a></p><p>Seajs出现的比较晚，因此借鉴了，nodejs的commonjs规范（加载时同步的），但是前端使用文件是要异步加载文件的，加载完成之后才能使用，又借鉴了前端的AMD规范，seajs的规范称之为cmd规范，这套框架在使用的时候，建议我们使用commonjs规范</p><h2 id="1-1-体验seajs"><a href="#1-1-体验seajs" class="headerlink" title="1.1 体验seajs"></a>1.1 体验seajs</h2><p>引入seaja之后会向全局暴露两个变量: seajs, define</p><p>在模块外部引入其它模块要是用use方法</p><ul><li><p>第一个参数是模块文件的地址，是一个数组，数组中的每一项都是一个模块地址（如果引入的只有一个文件，可以省略数组）</p></li><li><p>第二个参数是回调函数</p></li><li><p>函数中的参数就是前面模块向外暴露的功能</p></li><li><p>作用域是window</p></li></ul><p>seajs引入文件的路径是相对于seajs所在的文件目录（seajs所在的目录就是根目录）</p><p>通常我们<strong>将seajs放在最外面</strong>（<strong>与index.html文件在同一目录</strong>）为了引入seajs方便</p><p>seajs对js文件敏感， 因此可以省略js后缀名称</p><p><img src="https://s1.ax1x.com/2020/07/12/U3HFJg.png" alt="U3HFJg.png"></p><h2 id="1-2-配置模块"><a href="#1-2-配置模块" class="headerlink" title="1.2 配置模块"></a>1.2 配置模块</h2><p>所有源码都存放在 GitHub 上：<code>seajs/examples</code>，目录结构为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">examples/</span><br><span class="line">  |<span class="comment">-- sea-modules      存放 seajs、jquery 等文件，这也是模块的部署目录</span></span><br><span class="line">  |<span class="comment">-- static           存放各个项目的 js、css 文件</span></span><br><span class="line">  |     |<span class="comment">-- hello</span></span><br><span class="line">  |     |<span class="comment">-- lucky</span></span><br><span class="line">  |     `<span class="comment">-- todo</span></span><br><span class="line">  `<span class="comment">-- app              存放 html 等文件</span></span><br><span class="line">        |<span class="comment">-- hello.html</span></span><br><span class="line">        |<span class="comment">-- lucky.html</span></span><br><span class="line">        `<span class="comment">-- todo.html</span></span><br></pre></td></tr></table></figure></div><p>我们从 <code>hello.html</code> 入手，来瞧瞧使用 <code>Sea.js</code> 如何组织代码。</p><p>引入sea.js文件：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"examples-master/sea-modules/seajs/seajs/2.2.0/sea.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>使用<code>seajs.config</code> 配置模块：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 配置模块</span></span><br><span class="line"><span class="selector-tag">seajs</span><span class="selector-class">.config</span>(&#123;</span><br><span class="line">    <span class="comment">// 1、./是当前目录</span></span><br><span class="line">    <span class="comment">// 2、../是父级目录</span></span><br><span class="line">    <span class="comment">// 3、/是根目录</span></span><br><span class="line">    <span class="attribute">base</span>: <span class="string">"./examples-master/sea-modules/"</span>,</span><br><span class="line">    <span class="attribute">alias</span>: &#123;</span><br><span class="line">        <span class="string">"jquery"</span>: <span class="string">"jquery/jquery/1.10.1/jquery.js"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>通过seajs.use 使用模块：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COS"><figure class="iseeu highlight /cos"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (location.href.indexOf(<span class="string">"?dev"</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// 加载入口模块</span></span><br><span class="line">    seajs.<span class="keyword">use</span>(<span class="string">"../static/hello/src/main"</span>)<span class="comment">;</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 加载入口模块</span></span><br><span class="line">    seajs.<span class="keyword">use</span>(<span class="string">"examples/hello/1.0.0/main"</span>)<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>sea.js 在下载完成后，会自动加载入口模块。</p><p><img src="https://s1.ax1x.com/2020/07/12/U3zvhq.png" alt="U3zvhq.png"></p><p>seajs:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">seajs.use([<span class="string">"jquery"</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U8SAE9.png" alt="U8SAE9.png"></p><ul><li><p>seajs本身是一个对象， 对象中包含各种功能函数以及相关信息</p></li><li><p>seajs.config 是规定如何配置模块的</p></li><li><p>seajs.use 是规定如何使用模块的</p></li></ul><p>define:</p><p><img src="https://s1.ax1x.com/2020/07/12/U8Se9x.png" alt="U8Se9x.png"></p><ul><li>define: 规定如何定义模块</li></ul><h2 id="1-3-定义模块"><a href="#1-3-定义模块" class="headerlink" title="1.3 定义模块"></a>1.3 定义模块</h2><p>define函数用来定于模块，可以接受3个参数，因此提供了六种定义模块的方式：</p><ul><li><p>传递一个参数：</p><ul><li><p>当传递的是值类型的时候（数字， 字符串， boolean）</p><ul><li>这种传递数据的方式会直接作为接口暴露出来</li></ul></li><li><p>当传递的是引用类型的时候（arr, obj）</p><ul><li>这种方式会作为接口暴露</li></ul></li><li><p>当传递一个函数的时候（90%以上都是使用这种方式，因为它是基于comminjs规范）</p><ul><li><p>此时有三个参数，分别是：</p><ul><li><p>require 用来引入其它模块的</p></li><li><p>exports 向外暴露功能的</p></li><li><p>module 模块信息</p></li></ul></li><li><p>作用域是全局作用域，所以不要使用this添加属性或者方法</p><ul><li>如果使用this 将会污染全局作用域</li></ul></li><li><p>暴漏的接口是由exports或者module定义的</p></li></ul></li></ul></li><li><p>传递两个参数：</p><ul><li><p>第一个参数如果是一个字符串</p><ul><li><p>表示模块的id</p></li><li><p>此时，不能直接在use方法中使用这个模块的（要配合require方法使用）</p></li></ul></li><li><p>第一个参数如果是一个数组</p><ul><li>表示模块的依赖集合 （数组中的每一项，不管有没有使用，都会被加载）</li></ul></li><li><p>第二个参数是回调函数 （同第三种定义模块方式中的函数表现一致）</p></li></ul></li><li><p>传递三个参数：</p><ul><li><p>第一个参数是一个字符串</p><ul><li>表示模块的id</li></ul></li><li><p>第二个参数是一个数组</p><ul><li>表示模块的依赖集合</li></ul></li><li><p>第三个参数是回调函数（同第三种定义模块方式中的函数表现一致）</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义模块的第一种方式</span></span><br><span class="line"><span class="comment">// 传递数字</span></span><br><span class="line">define(<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 传递字符串</span></span><br><span class="line">define(<span class="string">"abc"</span>);</span><br><span class="line"><span class="comment">// 传递布尔值</span></span><br><span class="line">define(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第二种方式</span></span><br><span class="line"><span class="comment">// 传递数组</span></span><br><span class="line">define([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</span><br><span class="line"><span class="comment">// 传递对象</span></span><br><span class="line">define(&#123;</span><br><span class="line">    color: <span class="string">"red"</span>,</span><br><span class="line">    width: <span class="number">100</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第三种方式</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第四种方式</span></span><br><span class="line">define(<span class="string">"abc"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    define(<span class="string">"modules/main"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第五种方式</span></span><br><span class="line">define([<span class="string">"modules/dom"</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第六种方式</span></span><br><span class="line">define(<span class="string">"abc"</span>, [<span class="string">"modules/dom"</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    define(<span class="string">"modules/main"</span>, [<span class="string">"modules/dom"</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h2 id="1-4-require模块"><a href="#1-4-require模块" class="headerlink" title="1.4 require模块"></a>1.4 require模块</h2><p>在一个模块中想要引入其它模块要分为两步：</p><ul><li><p>第一步 找到这个模块的对应的文件</p></li><li><p>第二步 在这个文件中读取这个模块</p></li><li><p>Require是根据模块的id加载这个模块的</p></li></ul><p>1） require 不能简写</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DELPHI"><figure class="iseeu highlight /delphi"><table><tr><td class="code"><pre><span class="line"><span class="comment">// require不能被简写</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span><span class="params">(req, <span class="keyword">exports</span>, module)</span> </span></span><br><span class="line"><span class="function">    <span class="comment">// 引入color.j</span></span></span><br><span class="line"><span class="function">    <span class="title">var</span> <span class="title">color</span> = <span class="title">req</span><span class="params">("js/color")</span>;</span></span><br><span class="line">    console.log(color);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>2） require 不能被修改</p><ul><li><p>require不能被赋值</p></li><li><p>require不能赋值给其它变量</p></li><li><p>require不能作为子函数的参数传递</p></li><li><p>require不能在子函数中修改（上面的三点）</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="QML"><figure class="iseeu highlight /qml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// require不能被修改</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span> (<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 1 require不能被赋值</span></span><br><span class="line">    <span class="comment">// require = 123;</span></span><br><span class="line">    <span class="comment">// 2 requier不能赋值其它变量</span></span><br><span class="line">    <span class="comment">// var a = require;</span></span><br><span class="line">    <span class="comment">// 3 不能在子函数中作为参数传递</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">demo</span>(<span class="params">require</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 4 require在子函数中不能被赋值</span></span><br><span class="line">        <span class="built_in">require</span> = <span class="number">123</span>;</span><br><span class="line">        <span class="keyword">var</span> <span class="built_in">color</span> = <span class="built_in">require</span>(<span class="string">"js/color"</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="built_in">color</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    demo(<span class="built_in">require</span>);</span><br><span class="line">    <span class="comment">// 引入color.js</span></span><br><span class="line">    <span class="comment">// var color = a("js/color");</span></span><br><span class="line">    <span class="comment">// console.log(color);</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>3） require参数只能是一个字符串，不能拼接</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="QML"><figure class="iseeu highlight /qml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 不能拼接</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 引入color.js</span></span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">color</span> = <span class="built_in">require</span>(<span class="string">"js"</span> + <span class="string">"/"</span> + <span class="string">"color.js"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">color</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h2 id="1-5-加载具有id的模块"><a href="#1-5-加载具有id的模块" class="headerlink" title="1.5 加载具有id的模块"></a>1.5 加载具有id的模块</h2><ul><li><p>加载具有id的模块需要分为两步走：</p><ul><li><p>第一步在依赖集合中加载该模块文件</p></li><li><p>第二步通过require去加载指定id模块</p></li></ul></li><li><p>如果一个模块文件中有两个相同id的模块，前面的会覆盖后面</p></li><li><p>如果一个模块文件中有两个没有id的模块， 后面的会覆盖前面的</p></li><li><p>一个模块文件可以存在多个具有id的模块，引入的模块是以指定的id模块为准</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TYPESCRIPT"><figure class="iseeu highlight /typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 两个相同id的模块</span></span><br><span class="line">define(<span class="string">"myid"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, exports, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    exports.a = <span class="number">11</span>;</span><br><span class="line">&#125;);</span><br><span class="line">define(<span class="string">"myid"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, exports, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    exports.a = <span class="number">10</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 两个没有id的模块</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, exports, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    exports.a = <span class="number">11</span>;</span><br><span class="line">&#125;);</span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, exports, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    exports.a = <span class="number">10</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 两个不同id的模块</span></span><br><span class="line">define(<span class="string">"myId"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, exports, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    exports.a = <span class="number">10</span>;</span><br><span class="line">&#125;);</span><br><span class="line">define(<span class="string">"myId1"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"><span class="built_in">require</span>, exports, <span class="built_in">module</span></span>) </span>&#123;</span><br><span class="line">    exports.a = <span class="number">11</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h2 id="1-6-暴露接口"><a href="#1-6-暴露接口" class="headerlink" title="1.6 暴露接口"></a>1.6 暴露接口</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">arguments</span>)</span><br><span class="line"><span class="comment">//第一种向外暴露接口的方式</span></span><br><span class="line">exports.a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//这种方式是绝对不允许的</span></span><br><span class="line">exports = &#123;</span><br><span class="line">    b: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第二种向外暴露接口的方式</span></span><br><span class="line"><span class="built_in">module</span>.exports.a = <span class="number">11</span>; </span><br><span class="line"><span class="comment">//第 3 种向外暴露接口的方式</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="number">123</span>; </span><br><span class="line"><span class="comment">//第 4 种向外暴露接口的方式</span></span><br><span class="line"><span class="comment">//这种方式会覆盖上面的方式</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">    b: <span class="number">2</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//第 5 种向外暴露接口的方式</span></span><br><span class="line"><span class="comment">//外部使用的时候，要作为方法来使用</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">123</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//第 6 种向外暴露接口的方式</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"abc"</span> </span><br><span class="line"><span class="comment">//第 7 种向外暴露接口的方式</span></span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">    b: <span class="number">2</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//第 8 种向外暴露接口的方式</span></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"><span class="comment">//第 9 种向外暴露接口的方式</span></span><br><span class="line">define(<span class="number">1</span>);</span><br><span class="line">define(<span class="string">"1"</span>); </span><br><span class="line"><span class="comment">//第 10 种向外暴露接口的方式</span></span><br><span class="line">define(&#123;</span><br><span class="line">    a: <span class="number">1</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h2 id="1-7-暴露接口优先级"><a href="#1-7-暴露接口优先级" class="headerlink" title="1.7 暴露接口优先级"></a>1.7 暴露接口优先级</h2><blockquote><p>return &gt; module.exports &gt; exports</p></blockquote><h2 id="1-8-模块信息"><a href="#1-8-模块信息" class="headerlink" title="1.8 模块信息"></a>1.8 模块信息</h2><p>每一个模块，都有一个对象来存储模块的信息</p><ul><li><p>id: 表示模块的id</p></li><li><p>uri: 模块的文件路径</p><ul><li>默认情况下（如果一个模块没有显示的id）id与模块文件路径相统一</li></ul></li><li><p>exports: 向外暴露内容的对象</p></li><li><p>dependencies: 模块依赖集合，是一个数组，数值中每一个文件就是依赖集合中的成员。</p></li><li><p>deps: 根据依赖集合产生的</p></li><li><p>status: 模块的状态</p></li></ul><p><img src="https://s1.ax1x.com/2020/07/12/U8SujO.png" alt="U8SujO.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>模块化</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>模块化</tag>
        <tag>SeaJs</tag>
      </tags>
  </entry>
  <entry>
    <title>git介绍与基本使用</title>
    <url>/post/4eeeef62.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h2 id="git介绍与基本使用"><a href="#git介绍与基本使用" class="headerlink" title="git介绍与基本使用"></a>git介绍与基本使用</h2><p>linux将代码发布到了网站了，开源了，因此很多开发者不断的贡献代码，这样代码越来越多了，就有了管理代码的问题，所以创建git，就是用来管理linux代码的，后来发现很好用，所以越来越多的项目放在git上了，后来项目越来越多了，其他系统也就开始支持git了（windows， mac）</p><p>我们要使用git就要安装客户端</p><p><img src="https://s1.ax1x.com/2020/07/12/U3dJAO.png" alt="U3dJAO.png"></p><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener" class="LinkCard">Git官网</a></p><p>安装完成，提供了控制台</p><p>打开开始菜单 （也可以在当前文件夹下空白处点击右键，打开后自动定位到当前文件夹）</p><ul><li><p>Git Bash 为linux家族（Unix， mac等）使用的</p></li><li><p>Git CMD 为windows使用的</p></li></ul><p><img src="https://s1.ax1x.com/2020/07/12/U3dO29.png" alt="U3dO29.png"></p><ul><li>由于git为linux提供的，所以建议使用linux指令</li></ul><h2 id="1-Git、GitHub、GitLab三者之间的联系以及区别"><a href="#1-Git、GitHub、GitLab三者之间的联系以及区别" class="headerlink" title="1  Git、GitHub、GitLab三者之间的联系以及区别"></a>1 Git、GitHub、GitLab三者之间的联系以及区别</h2><p>在讲区别以及联系之前先简要的介绍一下，这三者都是什么(本篇文章适合刚入门的新手，大佬请出门左转)</p><h3 id="1-什么是-Git"><a href="#1-什么是-Git" class="headerlink" title="1.什么是 Git?"></a>1.什么是 Git?</h3><p>Git 是一个版本控制系统。</p><p>版本控制是一种用于记录一个或多个文件内容变化，方便我们查阅特定版本修订情况的系统。</p><p>以前在没有使用版本控制的时候，我们通常在我们的项目根目录下这样命名项目：</p><blockquote><p>project_v1、project_v1.1、project_v2等等</p></blockquote><p>通过这种方式记录我们项目的不同版本的修改，有的时候我们还会在不同版本的文件中写一个说明，记录此版本项目新增、修改，删除等操作。</p><p>这样的操作是很繁杂的，有的时候还可能因为一些非人为因素导致文件丢失这样的事故。</p><p>有了版本控制系统，我们就不用再手动进行一些繁杂的操作，并且对于文件丢失这种事故我们也不用再担心，你可以随便回到历史记录的某个时刻。</p><p>早期出现的版本控制系统有：SVN、CVS等，它们是集中式版本控制系统，都有一个单一的集中管理的服务器，保存所有文件的修订版本，而协同合作的开发人员都通过客户端连接到这台服务器，取出最新的文件或者提交更新。</p><p>而我们的主角 Git 是分布式版本控制系统。Git 已经成为越来越多开发者的青睐，因为分布式的优势是很显著的。</p><h3 id="2-说一下集中式和分布式版本控制系统的区别"><a href="#2-说一下集中式和分布式版本控制系统的区别" class="headerlink" title="2.说一下集中式和分布式版本控制系统的区别"></a>2.说一下集中式和分布式版本控制系统的区别</h3><p>集中式版本控制系统，版本库是集中存放在中央服务器的，工作的时候，用的是自己的电脑，所以，我们首先需要从中央服务器上拉取最新的版本，然后开始工作，等工作完了，再把自己的工作提交到中央服务器。在这里借用廖雪峰老师的一个比喻，中央服务器好比是一个图书馆，你要改其中的一本书，必须先要从图书馆里把书借出来，然后更改，改完之后，再放回图书馆。</p><p>集中式版本控制系统的一个最大毛病就是必须联网才能工作，所以对于网络环境比较差的情况使用集中式版本控制系统是一件比较让人头疼的事情。</p><p>分布式版本控制系统没有中央服务器的概念，我们使用相关的客户端提取的不只是最新的文件，而是把代码仓库完整地镜像下来，相当于每个人的电脑都是一个完整的版本库，这样的话，任何一处协同工作的服务器出现故障，都可以用任何一个镜像出来的本地仓库恢复。并且，即便在网络环境比较差的情况下也不用担心，因为版本库就在本地电脑上。</p><p>总结：</p><ul><li><p>(1).分布式版本控制系统下的本地仓库包含代码库还有历史库，在本地就可以查看版本历史</p></li><li><p>(2).而集中式版本控制系统下的历史仓库是存在于中央仓库，每次对比与提交代码都必须连接到中央仓库</p></li><li><p>(3).多人开发时，如果充当中央仓库的Git仓库挂掉了，任何一个开发者都可以随时创建一个新的中央仓库然后同步就可以恢复中央仓库</p></li></ul><h3 id="3-GitHub-和-GitLab"><a href="#3-GitHub-和-GitLab" class="headerlink" title="3.GitHub 和  GitLab"></a>3.GitHub 和 GitLab</h3><p>GitHub 和 GitLab 都是基于 web 的 Git 仓库，使用起来二者差不多，它们都提供了分享开源项目的平台，为开发团队提供了存储、分享、发布和合作开发项目的中心化云存储的场所。</p><p>GitHub 作为开源代码库，拥有超过 900 万的开发者用户，目前仍然是最火的开源项目托管平台</p><p>GitHub 同时提供公共仓库和私有仓库，但如果使用私有仓库，是需要付费的。</p><p>GitLab 解决了这个问题，你可以在上面创建私人的免费仓库。</p><p>GitLab 让开发团队对他们的代码仓库拥有更多的控制，相比较 GitHub , 它有不少特色：</p><ul><li><p>(1) 允许免费设置仓库权限；</p></li><li><p>(2) 允许用户选择分享一个 project 的部分代码；</p></li><li><p>(3) 允许用户设置 project 的获取权限，进一步提升安全性；</p></li><li><p>(4) 可以设置获取到团队整体的改进进度；</p></li><li><p>(5) 通过 innersourcing 让不在权限范围内的人访问不到该资源；</p></li></ul><p>所以，从代码的私有性上来看，GitLab 是一个更好的选择。但是对于开源项目而言，GitHub 依然是代码托管的首选。</p><h2 id="2-git在linux中的指令"><a href="#2-git在linux中的指令" class="headerlink" title="2  git在linux中的指令"></a>2 git在linux中的指令</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">cd</span> <span class="string">目录 打开目录</span></span><br><span class="line"><span class="attr">ls</span> <span class="string">查看当前目录的文件</span></span><br><span class="line"><span class="attr">pwd</span> <span class="string">查看当前目录所在的系统文件路径</span></span><br><span class="line"><span class="attr">mkdir</span> <span class="string">创建文件夹</span></span><br><span class="line"><span class="attr">touch</span> <span class="string">文件 创建文件</span></span><br><span class="line"><span class="attr">echo</span> <span class="string">内容 &gt;&gt;　将内容写入文件中</span></span><br></pre></td></tr></table></figure></div><p>git bash 下操作文件及文件夹命令：</p><ul><li>1， cd : change directory的简写，改变目录的意思，就是切换到哪个目录下， 如 cd e:\fff 切换 E 盘下面的fff 目录。</li></ul><p>当我们用cd 进入文件夹时,我们可以使用 通配符<em>, cd f</em>, 如果E盘下只有一个f开头的文件夹,它就会进入到这个文件夹.</p><ul><li><p>2， cd .. 回退到上一个目录。我们在写js，引入文件时，.. 表示的就是上一个目录, 所以 cd .. 回退到上一个目录就很好理解了。注意，cd 和两个点点..之间有一个空格</p></li><li><p>3， pwd : print working directory, 打印工作目录，它会显示我们当前所在的目录路径。</p></li><li><p>4， ls: list, 列出当前目录中的所有文件， 只不过ll(两个l)列出的内容更为详细。</p></li></ul><p></p><ul><li><p>5， touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。</p></li><li><p>6，rm: remove，删除一个文件, rm index.js 就会把index.js文件删除.</p></li><li><p>7, mkdir: make directory 新建一个目录,就是新建一个文件夹. 如mkdir src 新建src 文件夹.</p></li><li><p>8, rm -r : 删除一个文件夹， r (recusive 是递归的意思)， 删除用的就是递归，先删除文件夹里面的内容，再删除文件夹。 rm -r src 删除src目录。</p></li><li><p>9, mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下.</p></li><li><p>10, reset 清屏，把git bash命令窗口中的所有内容清空。</p></li><li><p>11，exit 可以直接退出窗口，就不会再鼠标按窗口上的来关闭窗口了。</p></li><li><p>12，cat 查看文件内容， cat 后面 加要查看的文件名</p></li></ul><p>命令行的快捷操作：</p><ul><li><p>1、我们可以使用上下箭头来查找我们以前输入的命令。这个尤其适合npm 命令。当我们输入npm run dev的时候，开启开发模式。但在开发过程中要安装一个组件，如axios, 这时我们就要按ctrl+ c 停止服务器。npm install axios –save.安装完成后，我们要重新启动dev 服务器进行开发，输入npm run dev. 其实这时候，可以不用输入命令，直接按两次向上箭头，命令行中就会npm run dev 命令。当我们打开git bash 窗口后，它就会记录我们输过的命令，按上下箭头，就可以查询历史，找到我们已前输出的命令。</p></li><li><p>2、左右箭头移动光标修改命令。当我们输入命令的时候，突然发现某个单词拼错了，这时可以按左右箭头来移动光标到拼错的单词或字母上，再Delete 或Backspace 来删除该字母。其实这里有好多的快捷键来快速修改命令。<br><br>移动光标： 按左右键头只能一个一个移动光标，如果我们能一个单词一个单词来移动就快多了。Alt + B 和 Alt + F 来解决问题， 一个是向左移动，一个是向右移动。Ctrl + A 则是移动光标到整条命令的起始位置。Ctrl + E 则是移动光标到整条命令的结束位置。<br><br>对于编辑或删除来说，有几个快捷键也可以同样完成任务。 Ctr+D, 相当于Delete， Ctrl + H 相当于Backspace。 Ctrl + U 删除光标左侧的所有内容， Ctrl + K删除光标右侧的所有内容。Ctrl + W 删除光标左侧的单词， Alt + D 删除光标右侧的单词。</p></li><li><p>3、 Tab 键的使用。 当我们想进入到一个目录或文件夹时，如果文件名很长，要一个一个输入，那是一件很麻烦的事情。这时tab 的作用就来了，当我们输入文件名的前几个字母时，按tab， 如果有文件名可以匹配，它就会显示出完整的文件名，如果有多个文件名匹配到，它会显示最先找到的一个。再按一次tab，它就会匹配的下一个，我们可以不停地按 tab键在匹配的文件名中来回切换，直到找到我们文件名为止。</p></li></ul><p>例：</p><blockquote><p>在C:\Users\Administrator\Desktop\web\03 大数据可视化与Git\03-01\git 创建demo文件夹，并创建readme.txt文件，写入 Hello World</p></blockquote><p><img src="https://s1.ax1x.com/2020/07/12/U3weqP.png" alt="U3weqP.png"></p><h2 id="3-介绍git"><a href="#3-介绍git" class="headerlink" title="3  介绍git"></a>3 介绍git</h2><p>git文件分为三类文件：</p><ul><li><p>第一类：未纳入缓存的文件</p><ul><li>这类文件，一旦删除，就再也无法找到</li></ul></li><li><p>第二类：纳入缓存的文件</p><ul><li>一旦删除，可以通过git来查找</li></ul></li><li><p>第三类：纳入版本库的文件</p><ul><li>这类文件，可以通过计算机的各个位置找到</li></ul></li></ul><h2 id="4-使用git"><a href="#4-使用git" class="headerlink" title="4  使用git"></a>4 使用git</h2><p>通过<code>git init</code>来初始化一个项目文件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">objects就是用来存储纳入缓存的文件（第二类文件）</span><br><span class="line"></span><br><span class="line"><span class="built_in">ref</span>s存储纳入版本库的文件（第三类文件）</span><br><span class="line"></span><br><span class="line">可以通过git指令实现三类文件的切换</span><br></pre></td></tr></table></figure></div><p>git add文件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">可以是将未纳入缓存的文件，变为第二类文件</span><br></pre></td></tr></table></figure></div><p>git add *</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DOCKERFILE"><figure class="iseeu highlight /dockerfile"><table><tr><td class="code"><pre><span class="line">实现将所有文件都纳入缓存，<span class="keyword">add</span><span class="bash">后有空格</span></span><br></pre></td></tr></table></figure></div><p>git status</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">查看当前文件的状态</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3wKIS.png" alt="U3wKIS.png"></p><p>git rm –cached 文件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVECODESERVER"><figure class="iseeu highlight /livecodeserver"><table><tr><td class="code"><pre><span class="line">	实现将第二类文件转为一类文件（未纳入缓存）</span><br><span class="line">```	</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![U3RJEj.png](<span class="keyword">https</span>://s1.ax1x.com/<span class="number">2020</span>/<span class="number">07</span>/<span class="number">12</span>/U3RJEj.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* rm 、git rm 、git rm <span class="comment">--cached的区别：</span></span><br><span class="line"></span><br><span class="line">    * rm 删除文件</span><br><span class="line"></span><br><span class="line">    * git rm</span><br><span class="line"></span><br><span class="line">        * 当我们需要删除暂存区或分支上的文件, 同时工作区也不需要这个文件了, 可以使用git rm</span><br><span class="line"></span><br><span class="line">        * git rm <span class="built_in">file</span> = rm <span class="built_in">file</span>+ git <span class="built_in">add</span> <span class="built_in">file</span></span><br><span class="line"></span><br><span class="line">        * rm <span class="built_in">file</span>删除本地文件</span><br><span class="line"></span><br><span class="line">        * git <span class="built_in">add</span> <span class="built_in">file</span> 提交删除的步骤同步到git仓库</span><br><span class="line"></span><br><span class="line">    * git rm <span class="comment">--cached file</span></span><br><span class="line"></span><br><span class="line">        * 当我们需要删除暂存区或分支上的文件, 但本地又需要使用, 只是不希望这个文件被版本控制,可以使用 git rm <span class="comment">--cached</span></span><br><span class="line"></span><br><span class="line">        * git rm <span class="comment">--cached 会从index里面删除该文件，下次commit的时候会修改git仓库，但是本地的文件还是保留</span></span><br><span class="line"></span><br><span class="line">            * Untrack <span class="keyword">and</span> <span class="built_in">stop</span> tracking <span class="built_in">files</span> <span class="keyword">in</span> git</span><br><span class="line"></span><br><span class="line">            * 有一些文件我们不想提交到git上去了，但是又被检测到有变化，显示Untracked <span class="built_in">files</span>，我们可以采用git rm <span class="comment">--cached file来停止跟踪这些文件</span></span><br><span class="line"></span><br><span class="line">            * 一旦纳入缓存，将有机会纳入版本库</span><br><span class="line"></span><br><span class="line">    * git commit –m “说明”</span><br><span class="line">	</span><br><span class="line">        * 说明一定要有语义化</span><br><span class="line"></span><br><span class="line">纳入版本库的文件，可以通过计算机的各个位置来找到，如果计算机坏掉了，此时文件就无法被找到</span><br><span class="line">所以，我们可以将文件上传到云端（服务器），之后，即时计算机坏掉也可以找到</span><br><span class="line"></span><br><span class="line"><span class="comment">## 5  建立信任关系</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="keyword">a</span> href=<span class="string">"https://help.github.com/cn/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account"</span> class=<span class="string">"LinkCard"</span>&gt;新增 SSH 密钥到 GitHub 帐户&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">进入github</span><br><span class="line"></span><br><span class="line">![U3Rrb4.png](<span class="keyword">https</span>://s1.ax1x.com/<span class="number">2020</span>/<span class="number">07</span>/<span class="number">12</span>/U3Rrb4.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 6  进入gitlab</span></span><br><span class="line"></span><br><span class="line">&lt;<span class="keyword">a</span> href=<span class="string">"https://about.gitlab.com/"</span> class=<span class="string">"LinkCard"</span>&gt;GitLab&lt;/<span class="keyword">a</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![U3R5rD.png](<span class="keyword">https</span>://s1.ax1x.com/<span class="number">2020</span>/<span class="number">07</span>/<span class="number">12</span>/U3R5rD.png)</span><br><span class="line"></span><br><span class="line">点击添加密钥即可完成信任链接</span><br><span class="line"></span><br><span class="line"><span class="comment">## 7  创建项目</span></span><br><span class="line"></span><br><span class="line"><span class="comment">### 7.1  进入github</span></span><br><span class="line"></span><br><span class="line">![U3Wvf1.png](<span class="keyword">https</span>://s1.ax1x.com/<span class="number">2020</span>/<span class="number">07</span>/<span class="number">12</span>/U3Wvf1.png)</span><br><span class="line"></span><br><span class="line">![U3fEtA.png](<span class="keyword">https</span>://s1.ax1x.com/<span class="number">2020</span>/<span class="number">07</span>/<span class="number">12</span>/U3fEtA.png)</span><br><span class="line"></span><br><span class="line">![U3fwBF.png](<span class="keyword">https</span>://s1.ax1x.com/<span class="number">2020</span>/<span class="number">07</span>/<span class="number">12</span>/U3fwBF.png)</span><br><span class="line"></span><br><span class="line">![U3fgc6.png](<span class="keyword">https</span>://s1.ax1x.com/<span class="number">2020</span>/<span class="number">07</span>/<span class="number">12</span>/U3fgc6.png)</span><br><span class="line"></span><br><span class="line">![U3hEbF.png](<span class="keyword">https</span>://s1.ax1x.com/<span class="number">2020</span>/<span class="number">07</span>/<span class="number">12</span>/U3hEbF.png)</span><br><span class="line"></span><br><span class="line"><span class="comment">### 7.2  github开源项目贡献流程</span></span><br><span class="line"></span><br><span class="line">方式一：新建Issue</span><br><span class="line"></span><br><span class="line">&gt;提交使用问题、建议或者想法</span><br><span class="line"></span><br><span class="line">方式二：Pull Requests</span><br></pre></td></tr></table></figure></div><p>fork项目<br>修改自己仓库的代码<br>新建 Pull Requests<br>等待作者操作审核合并</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="section">### 7.3  进入gitlab</span></span><br><span class="line"></span><br><span class="line">![<span class="string">U3hUPA.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3hUPA.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## 8  和github建立连接</span></span><br><span class="line"></span><br><span class="line">连接github：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U34Qij.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U34Qij.png</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">U34ao4.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U34ao4.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">建立连接：</span><br></pre></td></tr></table></figure></div><p>git remote add origin <a href="https://github.com/mango185/test.git" target="_blank" rel="noopener">https://github.com/mango185/test.git</a></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">![<span class="string">U346OK.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U346OK.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## 9  git初始化及仓库创建操作</span></span><br><span class="line"></span><br><span class="line">这些都是在<span class="strong">**本地操作**</span>，github上没有任何显示</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U34T6P.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U34T6P.png</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">## 9.1  git基础设置</span></span><br><span class="line"></span><br><span class="line">git安装完成之后，需要进行一些基本信息设置</span><br><span class="line"></span><br><span class="line">① 设置用户名</span><br><span class="line"></span><br><span class="line">&gt;git config –golbal user.name ‘用户名’</span><br><span class="line"></span><br><span class="line">② 设置用户名邮箱</span><br><span class="line"></span><br><span class="line">&gt;git config –golbal user.email ‘邮箱’</span><br><span class="line"></span><br><span class="line">③ 查看设置</span><br><span class="line"></span><br><span class="line">&gt;git config --list</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line"></span><br><span class="line">&gt;git config –global参数，有了这个参数，表示你这台机器上所有的git仓库都会使用这个配置，当然你也可以对某个仓库指定的不同的用户名和邮箱</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U3IWRA.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3IWRA.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## 9.2  向仓库添加文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U3oeL6.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3oeL6.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">### 9.2  修改文件内容</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U3oKoD.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3oKoD.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">### 9.3  删除文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U3oKoD.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3oKoD.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## 10  git管理远程仓库</span></span><br><span class="line"></span><br><span class="line">使用远程仓库的目的：</span><br><span class="line"></span><br><span class="line">&gt;备份、实现代码共享集中化处理</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U3oBWj.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3oBWj.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">### 10.1  git克隆操作</span></span><br><span class="line"></span><br><span class="line">目的：</span><br><span class="line"></span><br><span class="line">&gt;将远程仓库（github项目）复制到本地</span><br><span class="line"></span><br><span class="line">![<span class="string">U3ofkF.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3ofkF.png</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">### 10.2  git push上传文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U3ofkF.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3ofkF.png</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">### 10.3  从本地上传整个项目或者文件夹到github</span></span><br><span class="line"></span><br><span class="line">在做github个人主页的时候，使用github的readme写起来很麻烦，而且也不好加入一些自己的css样式，然后我就想从本地上传css样式和图片，直接使用html来进行个人主页设计。</span><br><span class="line"></span><br><span class="line">下面介绍一下如何从本地上传整个项目或者文件夹到github。</span><br><span class="line"></span><br><span class="line">如果是第一次使用，需要设置一下用户名和电子邮箱，命令为<span class="code">`git config --global user.name “你的用户名”`</span>     <span class="code">`git config --global user.email “你的电子邮箱”`</span></span><br><span class="line"></span><br><span class="line">然后就可以使用git上传文件和文件夹到github了</span><br><span class="line"></span><br><span class="line">首先需要在本地建一个repository，说白了就是个文件夹，一个项目的所有操作都可以在这个库里面进行，包括添加文件，删除，修改，甚至是还原</span><br><span class="line"></span><br><span class="line">方法也很简单，找到你建立的那个文件夹，在gitbash里进入到文件夹内</span><br><span class="line"></span><br><span class="line">然后在命令行输入git init即可把该目录变成可以使用git管理的目录</span><br><span class="line"></span><br><span class="line">或者直接进入该目录，右键点击GIt Bsh Here</span><br><span class="line"></span><br><span class="line">然后把你需要上传的文件和文件夹全部拷贝进来</span><br><span class="line"></span><br><span class="line">在命令行输入git add .         //添加当前文件夹下的所有文件（<span class="strong">**注意后面有个.**</span>）</span><br><span class="line"></span><br><span class="line">然后你需要到c盘的用户目录下找到.ssh文件夹，找到密钥信息和github建立信任关系</span><br><span class="line"></span><br><span class="line">建完ssh keys以后就可以进行文件上传了</span><br><span class="line"></span><br><span class="line">1.需要提交一下文件，命令如下：git commit -m "layout"  //引号中的内容为对该文件的描述</span><br><span class="line"></span><br><span class="line">2.需要连接到你的github库 git remote add origin 你的github地址（地址是你github建的库的地址，如果库里没有文件，直接进入可以找到地址，如果有文件，点Clone or download</span><br><span class="line"></span><br><span class="line">如果出现错误：</span><br><span class="line"></span><br><span class="line">&gt;fatal: remote origin already exists</span><br><span class="line"></span><br><span class="line">则执行以下语句：</span><br><span class="line"></span><br><span class="line">&gt;$ git remote rm origin</span><br><span class="line"></span><br><span class="line">3.git push -u origin master</span><br><span class="line"></span><br><span class="line"><span class="section">### 10.4  项目内容更新</span></span><br><span class="line"></span><br><span class="line">1、先是把自己GitHub上的代码克隆到本地（下载到本地）</span><br><span class="line"></span><br><span class="line">2、将需要更新的内容（或全部内容）替换</span><br><span class="line"></span><br><span class="line">3、重新将内容上传到github</span><br></pre></td></tr></table></figure></div><p>git add * 表示添加所有更新的内容到缓存区<br>git add . 表示添加所有内容</p><figure class="highlight"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">![U3TPnP.png](https://s1.ax1x.com/2020/07/12/U3TPnP.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 10.5  回退到上一个版本</span><br><span class="line"></span><br><span class="line">对于版本的回退，我们经常会用到两个命令：</span><br></pre></td></tr></table></figure><p>git reset<br>git revert</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="bullet">* </span>使用 git reset 回退：</span><br><span class="line"></span><br><span class="line">假如我们的系统现在有如下几个提交：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U3TVhQ.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3TVhQ.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">其中：A 和 B 是正常提交，而 C 和 D 是错误提交。现在，我们想把 C 和 D 回退掉。而此时，HEAD 指针指向 D 提交（5lk4er）。我们只需将 HEAD 指针移动到 B 提交（a0fvf8），就可以达到目的。</span><br><span class="line"></span><br><span class="line">完整命令如下：</span><br><span class="line"></span><br><span class="line">&gt;git reset --hard a0fvf8</span><br><span class="line"></span><br><span class="line">命令运行之后，HEAD 指针就会移动到 B 提交下，如下图示：</span><br><span class="line"></span><br><span class="line">![<span class="string">U3Tm1s.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3Tm1s.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">而这个时候，远程仓库的 HEAD 指针依然不变，仍在 D 提交上。所以，如果直接使用 git push 命令的话，将无法将更改推到远程仓库。此时，只能使用 -f 选项将提交强制推到远程仓库：</span><br><span class="line"></span><br><span class="line">&gt;git push -f</span><br><span class="line"></span><br><span class="line">采用这种方式回退代码的弊端显而易见，那就是会使 HEAD 指针往回移动，从而会失去之后的提交信息。将来如果突然发现，C 和 D 是多么绝妙的想法，可它们已经早就消失在历史的长河里了。</span><br><span class="line"></span><br><span class="line">而且，有些公司明令禁止使用 git reset 命令去回退代码，原因与上述一样。所以，我们需要找到一个命令，既可以回退代码，又可以保存错误的提交。这时，git revert 命令就派上用场了。</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>使用git revert:</span><br><span class="line"></span><br><span class="line">git revert的作用通过反做创建一个新的版本，这个版本的内容与我们要回退到的目标版本一样，但是HEAD指针是指向这个新生成的版本，而不是目标版本。</span><br><span class="line"></span><br><span class="line">使用 git revert 命令来实现上述例子的话，我们可以这样做：先 revert D，再 revert C （有多个提交需要回退的话需要由新到旧进行 revert）：</span><br></pre></td></tr></table></figure></div><p>git revert 5lk4er<br>git revert 76sdeb</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">这里会生成两个新有提交：D’ 和 C’，如下图示：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U3TUj1.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3TUj1.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">这里只有两个提交需要 revert，我们可以一个个回退。但如果有几十个呢？一个个回退肯定效率太低而且容易出错。我们可以使用以下方法进行批量回退：</span><br><span class="line"></span><br><span class="line">&gt;git revert OLDER<span class="emphasis">_COMMIT^…NEWER_</span>COMMIT</span><br><span class="line"></span><br><span class="line">这时，错误的提交 C 和 D 依然保留，将来查找的时候也有依可循。而且，这样操作的话 HEAD 指针是往后移动的，可以直接使用 git push 命令推送到远程仓库里。而这种做法，正是企业所鼓励的。</span><br><span class="line">我们再举个更难一点的例子。</span><br><span class="line"></span><br><span class="line">假如现在有三个提交，但很不巧的是，那个错误的提交刚好位于中间。如下图示：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U3T2jI.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3T2jI.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">这时，直接使用 git reset 命令将 HEAD 指针重置到 A 提交显然是不行的，因为 C 提交是正确的，需要保留的。先把 C 提交 及 B 提交全部回退，再使用 cherry-pick 命令将 C 提交重新再生成一个新的提交 C’’，这样就实现了将 B提交回退的需求。完整的过程如下：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![<span class="string">U3TjbV.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U3TjbV.png</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">通过以上对比可以发现，git reset 与 git revert 最大的差别就在于，<span class="strong">**git reset 会失去后面的提交**</span>，而 <span class="strong">**git revert 是通过反做的方式重新创建一个新的提交，而保留原有的提交**</span> 。在企业里，应尽量使用 git revert 命令，能不用 git reset 命令尽量不用。</span><br><span class="line"></span><br><span class="line"><span class="section">## 11  Github Pages搭建网站</span></span><br><span class="line"></span><br><span class="line"><span class="section">### 11.1  个人站点</span></span><br><span class="line"></span><br><span class="line">git提供了一个浏览项目的网址</span><br><span class="line"></span><br><span class="line">&gt;<span class="code">`https://用户名.github.io/`</span></span><br><span class="line"></span><br><span class="line">搭建步骤：</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>创建个人站点 ==&gt; 新建仓库 【注意：仓库名必须是 <span class="code">`用户名.github.io`</span>】</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>在仓库里创建网站首页 <span class="code">`index.html`</span></span><br><span class="line"></span><br><span class="line">![<span class="string">U37ivR.png</span>](<span class="link">https://s1.ax1x.com/2020/07/12/U37ivR.png</span>)</span><br><span class="line"></span><br><span class="line">注意：</span><br></pre></td></tr></table></figure></div><p>github pages仅支持静态网页<br>仓库里面只能是html文件</p><p>```</p><h3 id="11-2-project-pages项目站点"><a href="#11-2-project-pages项目站点" class="headerlink" title="11.2  project pages项目站点"></a>11.2 project pages项目站点</h3><p>访问：<code>https://用户名.github.io/仓库名</code></p><p>搭建步骤：</p><p>① 进入项目主页，点击Settings</p><p>② 在Settings页面，Github Pages中点击Choose a theme，选择主题</p><p><img src="https://s1.ax1x.com/2020/07/12/U37aGQ.png" alt="U37aGQ.png"></p><p>③ 选择主题</p><p><img src="https://s1.ax1x.com/2020/07/12/U376aT.png" alt="U376aT.png"></p><p>④ 新建站点基础信息设置</p><p>⑤ 生成网页</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>github</tag>
        <tag>web</tag>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title>大数据可视化</title>
    <url>/post/452bf07f.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h2 id="大数据可视化"><a href="#大数据可视化" class="headerlink" title="大数据可视化"></a>大数据可视化</h2><p>简单来说：就是做图表的</p><p><a href="http://hcharts.cn/" target="_blank" rel="noopener" class="LinkCard">HIGHCHARTS官网</a></p><p><code>HIGHCHARTS</code> 简介：</p><p><code>Highcharts</code> 是一个用纯 <code>JavaScript</code> 编写的一个图表库， 能够很简单便捷的在 <code>Web</code> 网站或是 <code>Web</code> 应用程序添加有交互性的图表，并且免费提供给个人学习、个人网站和非商业用途使用。</p><p><code>Highcharts</code> 支持的图表类型有直线图、曲线图、区域图、柱状图、饼状图、散状点图、仪表图、气泡图、瀑布流图等多达 <code>20</code> 种图表，其中很多图表可以集成在同一个图形中形成混合图。</p><p>下载：</p><p><img src="https://s1.ax1x.com/2020/07/12/U3aFoD.png" alt="U3aFoD.png"></p><p>不用理会直接关掉即可：</p><p><img src="https://s1.ax1x.com/2020/07/12/U3aeSA.png" alt="U3aeSA.png"></p><p>资源包:</p><p>提供完整的 <code>Highcharts</code> 资源包，包含实例文件、所有的 <code>js</code> 压缩版及源码等。</p><p>到 <code>下载中心</code> 页面即可获取最新的资源包。</p><p>解压下载得到的压缩包，进入相应的目录查看所有包含文件，<code>Highcharts</code> 提供的文件目录如下图所示：</p><p><img src="https://s1.ax1x.com/2020/07/12/U3alTS.png" alt="U3alTS.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">|<span class="comment">-- examples           例子</span></span><br><span class="line">|<span class="comment">-- gfx                例子用到的图片资源</span></span><br><span class="line">|<span class="comment">-- graphics           例子用到的图片资源 </span></span><br><span class="line">|<span class="comment">-- code               所有 js 文件及源代码</span></span><br><span class="line">    |<span class="comment">-- css            Highcharts css 文件（只用于 CSS 版本 Highcharts） </span></span><br><span class="line">    |<span class="comment">-- lib            相关的库文件</span></span><br><span class="line">    |<span class="comment">-- modules        功能模块文件目录</span></span><br><span class="line">    |<span class="comment">-- themes         主题文件目录</span></span><br><span class="line">    |<span class="comment">-- highcharts.js              highcharts 主文件</span></span><br><span class="line">    |<span class="comment">-- highcharts.src.js          highcharts 主文件源码</span></span><br><span class="line">    |<span class="comment">-- highcharts-3d.js           highcharts 3d 功能文件</span></span><br><span class="line">    |<span class="comment">-- highcharts-3d.src.js       highcharts 3d 功能文件源码</span></span><br><span class="line">    |<span class="comment">-- highcharts-more.js         highcharts 增加功能文件</span></span><br><span class="line">    |<span class="comment">-- highcharts-more.src.js     highcharts 增加功能文件源码</span></span><br><span class="line">    |<span class="comment">-- readme.txt                 源代码目录说明文件</span></span><br><span class="line">|<span class="comment">-- index.htm          例子入口文件 </span></span><br><span class="line">|<span class="comment">-- license.pdf        使用协议文档</span></span><br><span class="line">|<span class="comment">-- readme.txt         说明文件</span></span><br></pre></td></tr></table></figure></div><p>基础使用:</p><p><code>Highcharts</code> 最基本的运行只需要一个 <code>JS</code> 文件，即 <code>highcharts.js</code>，例如引入下面的文件即可创建基础的图表了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.highcharts.com.cn/highcharts/highcharts.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>功能模块:</p><p>功能模块是在 <code>Highcharts</code> 主要功能的基础做的扩展，是由官方发布的功能包，常用功能模块有：</p><ul><li><p>更多图表类型扩展模块（highcharts-more.js）</p></li><li><p>3D 图表模块 （highcharts-3d.js）</p></li><li><p>导出功能模块（modules/exporting.js）</p></li><li><p>金字塔图表类型（modules/funnel.js）</p></li><li><p>钻取功能模块（modules/drilldown.js）</p></li><li><p>数据加载功能模块（modules/data.js）</p></li><li><p>更多模块可以在下载的资源包的 modules 目录找到</p></li></ul><p>使用功能模块很简单，只需要引入对应的文件即可，唯一需要注意的是保证 <strong><code>highcharts.js</code> 的引用顺序是在功能模块之前。</strong></p><p>例如启用导出功能时需要引入的文件及顺序是：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.highcharts.com.cn/highcharts/highcharts.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.highcharts.com.cn/highcharts/modules/exporting.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>``Highstock<code>和</code>Highmaps`:</p><p><code>Highstock</code> 和 <code>Highmaps</code> 是另外两款针对不同使用场景的图表产品，三款产品之间相互独立又有密切关系，他们关系和混合使用的说明如下:</p><ul><li><p>1）三款产品简介</p><ul><li><p>Highcharts 基础图表</p></li><li><p>Highstock 股票及大数据量时间轴图表</p></li><li><p>Highmaps 地图</p></li></ul></li><li><p>2）相关之间的关系</p><ul><li><p>Highstock 是完全包含 Highcharts 的，是在 Highcharts 的基础上增加了更多高级功能；</p></li><li><p>Highmaps 则完全独立，不过我们提供了地图功能模块 map.js （在 Highmaps 资源包的 modules 目录）供 Highcharts 或 Highstock 调用。</p></li></ul></li><li><p>3）<strong>混合使用（重要）</strong></p></li></ul><p>A. Highcharts + Highstock 时只需要引入 highstock.js</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.highcharts.com.cn/highstock/highstock.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>B. Highcharts + Highmaps 混合使用是需要 引入 highcharts.js + map.js</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.highcharts.com.cn/highcharts/highcharts.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.highcharts.com.cn/highmaps/modules/map.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>C. Highstock + Highmaps 或 Highcharts + Highstock + Highmaps 混合使用时需引入 highstock.js + map.js</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.highcharts.com.cn/highstock/highstock.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.highcharts.com.cn/highmaps/modules/map.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>注意：</p><blockquote><p>上面说到的 <code>Highstock</code> 是完全包含 <code>Highcharts</code> 的，如果在同一个页面重复引用的话就会报 <code>#16</code> 号错误</p></blockquote><h2 id="1-1-产品简介"><a href="#1-1-产品简介" class="headerlink" title="1.1  产品简介"></a>1.1 产品简介</h2><p><code>Highcharts</code> 系列软件包含 <code>Highcharts JS</code>，<code>Highstock JS</code>，<code>Highmaps JS</code> 共三款软件，均为纯 <code>JavaScript</code> 编写的 <code>HTML5</code> 图表库，全部源码开放，个人及非商业用途可以任意使用及源代码编辑。</p><h3 id="1-1-1-Highcharts"><a href="#1-1-1-Highcharts" class="headerlink" title="1.1.1  Highcharts"></a>1.1.1 Highcharts</h3><p>Highcharts 是一个用纯 JavaScript 编写的一个图表库， 能够很简单便捷的在 Web 网站或是 Web 应用程序添加有交互性的图表，并且免费提供给个人学习、个人网站和非商业用途使用。</p><p>Highcharts 支持的图表类型有直线图、曲线图、区域图、柱状图、饼状图、散状点图、仪表图、气泡图、瀑布流图等多达 20 种图表，其中很多图表可以集成在同一个图形中形成混合图。</p><p><img src="https://s1.ax1x.com/2020/07/12/U3aIte.png" alt="U3aIte.png"></p><h3 id="1-1-2-Highstock"><a href="#1-1-2-Highstock" class="headerlink" title="1.1.2  Highstock"></a>1.1.2 Highstock</h3><p>Highstock 是用纯 JavaScript 编写的股票图表控件，可以开发股票走势或大数据量的时间轴图表。它包含多个高级导航组件：预设置数据时间范围，日期选择器、滚动条、平移、缩放功能。</p><p><img src="https://s1.ax1x.com/2020/07/12/U3ab6I.png" alt="U3ab6I.png"></p><h3 id="1-1-3-Highmaps"><a href="#1-1-3-Highmaps" class="headerlink" title="1.1.3  Highmaps"></a>1.1.3 Highmaps</h3><p>Highmaps 是一款基于 HTML5 的优秀地图组件。</p><p>Highmaps 继承了 Highcharts 简单易用的特性，利用它可以方便快捷的创建用于展现销售、选举结果等其他与地理位置关系密切的交互性地图图表。</p><p>Highmaps 可以单独使用，也可以作为 Highcharts 的一个组件来使用。</p><p><img src="https://s1.ax1x.com/2020/07/12/U3axAS.png" alt="U3axAS.png"></p><h2 id="1-2-上手-Highcharts"><a href="#1-2-上手-Highcharts" class="headerlink" title="1.2  上手 Highcharts"></a>1.2 上手 Highcharts</h2><h2 id="1-2-1-获取-Highcharts"><a href="#1-2-1-获取-Highcharts" class="headerlink" title="1.2.1  获取 Highcharts"></a>1.2.1 获取 Highcharts</h2><p>你可以通过以下几种方式获取 Highcharts ：</p><ul><li><p>直接引用官方提供的 CDN 服务，无需下载，高速稳定</p></li><li><p>通过 官网下载页面 获取资源包，资源包包含所有相关文件的源代码及压缩版本，丰富的实例及使用说明文档，关于下载包的详细文件说明请参考 资源包下载及使用</p></li><li><p>通过 Npm， Bower 等第三方包管理工具下载</p></li></ul><h3 id="1-2-2-引入-Highcharts"><a href="#1-2-2-引入-Highcharts" class="headerlink" title="1.2.2  引入 Highcharts"></a>1.2.2 引入 Highcharts</h3><p>Highcharts 最基本的运行只需要一个 JS 文件，即 highcharts.js，以使用 CDN 文件为例，对应的代码是：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.highcharts.com.cn/highcharts/highcharts.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="1-2-3-创建一个简单的图表"><a href="#1-2-3-创建一个简单的图表" class="headerlink" title="1.2.3  创建一个简单的图表"></a>1.2.3 创建一个简单的图表</h3><p>在绘图前我们需要为 Highcharts 准备一个 DOM 容器，并指定其大小</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"container"</span> style=<span class="string">"width: 600px; height: 400px;"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XL"><figure class="iseeu highlight /xl"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"Highcharts-8.0.4/code/highcharts.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 图表配置</span></span><br><span class="line">    var options = &#123;</span><br><span class="line">        chart: &#123;</span><br><span class="line">            type: <span class="string">'bar'</span>                          <span class="comment">//指定图表的类型，默认是折线图（line）</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="built_in">title</span>: &#123;</span><br><span class="line">            <span class="keyword">text</span>: <span class="string">'我的第一个图表'</span>                 <span class="comment">// 标题</span></span><br><span class="line">        &#125;,</span><br><span class="line">        xAxis: &#123;</span><br><span class="line">            categories: [<span class="string">'苹果'</span>, <span class="string">'香蕉'</span>, <span class="string">'橙子'</span>]   <span class="comment">// x 轴分类</span></span><br><span class="line">        &#125;,</span><br><span class="line">        yAxis: &#123;</span><br><span class="line">            <span class="built_in">title</span>: &#123;</span><br><span class="line">                <span class="keyword">text</span>: <span class="string">'吃水果个数'</span>                <span class="comment">// y 轴标题</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        series: [&#123;                              <span class="comment">// 数据列</span></span><br><span class="line">            <span class="keyword">name</span>: <span class="string">'小明'</span>,                        <span class="comment">// 数据列名</span></span><br><span class="line">            <span class="keyword">data</span>: [<span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>]                     <span class="comment">// 数据</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="keyword">name</span>: <span class="string">'小红'</span>,</span><br><span class="line">            <span class="keyword">data</span>: [<span class="number">5</span>, <span class="number">7</span>, <span class="number">3</span>]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 图表初始化函数</span></span><br><span class="line">    var chart = Highcharts.chart(<span class="string">'container'</span>, options);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3dPcn.png" alt="U3dPcn.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>大数据可视化</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>大数据可视化</tag>
        <tag>Highcharts</tag>
      </tags>
  </entry>
  <entry>
    <title>四 、对象的拓展</title>
    <url>/post/cbe6f8ca.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="四-、对象的拓展"><a href="#四-、对象的拓展" class="headerlink" title="四 、对象的拓展"></a>四 、对象的拓展</h1><h2 id="4-1-Object-preventExtensions-取消对象可拓展性"><a href="#4-1-Object-preventExtensions-取消对象可拓展性" class="headerlink" title="4.1  Object.preventExtensions 取消对象可拓展性"></a>4.1 <code>Object.preventExtensions</code> 取消对象可拓展性</h2><p>作用：</p><blockquote><p><strong>用于取消对象的可拓展性</strong></p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 对象默认是可以拓展的</span></span><br><span class="line">obj.b = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj);  <span class="comment">// &#123;a: 1, b: 2&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 取消对象的可拓展性</span></span><br><span class="line"><span class="built_in">Object</span>.preventExtensions(obj);</span><br><span class="line"><span class="comment">// 尝试添加属性</span></span><br><span class="line">obj.c = <span class="number">3</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj);  <span class="comment">// &#123;a: 1, b: 2&#125;  // 添加失败  原因就是取消了obj的可拓展性，但仍可以修改或删除属性</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3Nfjx.png" alt="U3Nfjx.png"></p><p><strong>总结</strong>：</p><blockquote><p>当取消了对象的可拓展性，仍然可以修改属性值，或删除属性</p></blockquote><p>查看对象是否取消可拓展性：</p><blockquote><p>Object.isExtensiable(obj) 返回值：true | false</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查看对象的可拓展性是否被取消</span></span><br><span class="line">console.log(<span class="module-access"><span class="module"><span class="identifier">Object</span>.</span></span>is<span class="constructor">Extensible(<span class="params">obj</span>)</span>);  <span class="comment">// false</span></span><br></pre></td></tr></table></figure></div><h2 id="4-2-Object-seal-封闭对象"><a href="#4-2-Object-seal-封闭对象" class="headerlink" title="4.2  Object.seal 封闭对象"></a>4.2 Object.seal 封闭对象</h2><p>作用：</p><blockquote><p><strong>用于封闭对象</strong></p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DELPHI"><figure class="iseeu highlight /delphi"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义对象</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    a: 1</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 封闭对象</span></span><br><span class="line"><span class="keyword">Object</span>.seal(obj);</span><br><span class="line"><span class="comment">// 封闭之后，对象可以被访问，不能拓展，不能删除，可以修改属性值</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3NIHO.png" alt="U3NIHO.png"></p><p><strong>总结</strong>：</p><blockquote><p>封闭之后，对象可以被访问，不能拓展，不能删除，可以修改属性值</p></blockquote><p>查看对象是否被封闭：</p><blockquote><p>Object.isSealed(obj); 返回值：true | false</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查看对象是否被封闭</span></span><br><span class="line">console.log(<span class="module-access"><span class="module"><span class="identifier">Object</span>.</span></span>is<span class="constructor">Sealed(<span class="params">obj</span>)</span>);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure></div><h2 id="4-3-Object-freeze-冻结"><a href="#4-3-Object-freeze-冻结" class="headerlink" title="4.3  Object.freeze 冻结"></a>4.3 <code>Object.freeze</code> 冻结</h2><p>作用：</p><blockquote><p><strong>冻结对象</strong></p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">// 定义对象</span><br><span class="line">var obj = &#123;</span><br><span class="line">    a: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">console.log(<span class="keyword">Object</span>.isFrozen(obj));  // <span class="keyword">false</span></span><br><span class="line"></span><br><span class="line">// 冻结对象</span><br><span class="line"><span class="keyword">Object</span>.<span class="keyword">freeze</span>(obj);</span><br><span class="line"></span><br><span class="line">// 添加属性</span><br><span class="line">obj.b = <span class="number">2</span>;</span><br><span class="line">// 修改属性</span><br><span class="line">obj.a = <span class="number">123</span>;</span><br><span class="line">// 删除属性</span><br><span class="line"><span class="keyword">delete</span> obj.a;</span><br><span class="line"></span><br><span class="line">console.log(obj);</span><br><span class="line">// 当对象冻结之后，不能拓展，不能删除，不能修改属性值</span><br><span class="line"></span><br><span class="line">// 查看对象是否被冻结</span><br><span class="line">console.log(<span class="keyword">Object</span>.isFrozen(obj));  // <span class="keyword">true</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3NTED.png" alt="U3NTED.png"></p><p><strong>总结</strong>：</p><blockquote><p>当对象冻结之后，不能添加属性，不能删除属性，不能修改属性值</p></blockquote><p>查看对象是否被冻结：</p><blockquote><p>Object.isFrozen(obj); 返回值：true | false</p></blockquote><h2 id="4-4-对象创建的新方式Object-create-prototype-options"><a href="#4-4-对象创建的新方式Object-create-prototype-options" class="headerlink" title="4.4  对象创建的新方式Object.create(prototype, options)"></a>4.4 对象创建的新方式<code>Object.create(prototype, options)</code></h2><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Object</span>.<span class="keyword">create</span>(prototype, <span class="keyword">options</span>);</span><br><span class="line">接收两个参数：</span><br><span class="line">    第一个参数是一个对像</span><br><span class="line">        该对象是<span class="keyword">Object</span>.<span class="keyword">create</span>创建出来的原型对象</span><br><span class="line">    第二个参数是一个对象</span><br><span class="line">        该对象是<span class="keyword">Object</span>.<span class="keyword">create</span>创建出来的特性对象</span><br></pre></td></tr></table></figure></div><h3 id="4-4-1-不传递参数"><a href="#4-4-1-不传递参数" class="headerlink" title="4.4.1  不传递参数"></a>4.4.1 不传递参数</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DART"><figure class="iseeu highlight /dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 原有方式</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 Object.create 创建对象</span></span><br><span class="line"><span class="comment">// 该方法接收两个参数： 第一个参数是原型对象， 第二个参数是特性对象</span></span><br><span class="line"><span class="built_in">Object</span>.create();  <span class="comment">// 不传递传参数会报错</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3NvKP.png" alt="U3NvKP.png"></p><h3 id="4-4-2-参数为null"><a href="#4-4-2-参数为null" class="headerlink" title="4.4.2  参数为null"></a>4.4.2 参数为<code>null</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DART"><figure class="iseeu highlight /dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj2 = <span class="built_in">Object</span>.create(<span class="keyword">null</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3Nzb8.png" alt="U3Nzb8.png"></p><h3 id="4-4-3-原型对象为null，特性对象正常添加"><a href="#4-4-3-原型对象为null，特性对象正常添加" class="headerlink" title="4.4.3  原型对象为null，特性对象正常添加"></a>4.4.3 原型对象为<code>null</code>，特性对象正常添加</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">var</span> <span class="string">obj3</span> <span class="string">=</span> <span class="string">Object.create(null,</span> <span class="string">&#123;</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="attr">value:</span> <span class="string">"red"</span><span class="string">,</span></span><br><span class="line">        <span class="attr">writable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="string">&#125;,</span></span><br><span class="line">    <span class="attr">num:</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="attr">value:</span> <span class="number">200</span><span class="string">,</span></span><br><span class="line">        <span class="attr">enumerable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3U9Ug.png" alt="U3U9Ug.png"></p><h3 id="4-4-4-只传递第一个参数且不为null"><a href="#4-4-4-只传递第一个参数且不为null" class="headerlink" title="4.4.4  只传递第一个参数且不为null"></a>4.4.4 只传递第一个参数且不为<code>null</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj4 = <span class="built_in">Object</span>.create(&#123;</span><br><span class="line">    say: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"say"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    sayHello: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"sayHello"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    sayNihao: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"sayNihao"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3UVK0.png" alt="U3UVK0.png"></p><h3 id="4-4-5-传递原型对象和特性对象"><a href="#4-4-5-传递原型对象和特性对象" class="headerlink" title="4.4.5  传递原型对象和特性对象"></a>4.4.5 传递原型对象和特性对象</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建原型对象</span></span><br><span class="line"><span class="keyword">var</span> prototype = &#123;</span><br><span class="line">    say: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"say"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    sayHello: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"sayHello"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    sayNihao: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"sayNihao"</span>);</span><br><span class="line">    &#125;           </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建特性对象</span></span><br><span class="line"><span class="keyword">var</span> options = &#123;</span><br><span class="line">    color: &#123;</span><br><span class="line">        value: <span class="string">"red"</span>,</span><br><span class="line">        writable: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    num: &#123;</span><br><span class="line">        value: <span class="number">200</span>,</span><br><span class="line">        enumerable: <span class="literal">false</span></span><br><span class="line">    &#125;          </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj5 = <span class="built_in">Object</span>.create(prototype, options);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3UlG9.png" alt="U3UlG9.png"></p><h3 id="4-4-6-使用Object-create继承"><a href="#4-4-6-使用Object-create继承" class="headerlink" title="4.4.6  使用Object.create继承"></a>4.4.6 使用<code>Object.create</code>继承</h3><h4 id="4-4-6-1-使用类式继承"><a href="#4-4-6-1-使用类式继承" class="headerlink" title="4.4.6.1  使用类式继承"></a>4.4.6.1 使用类式继承</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义父类</span></span><br><span class="line"><span class="keyword">function</span> <span class="constructor">People(<span class="params">name</span>, <span class="params">age</span>, <span class="params">sex</span>)</span>&#123;</span><br><span class="line">    this.name = name;</span><br><span class="line">    this.age = age;</span><br><span class="line">    this.sex = sex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法要写在原型上</span></span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">People</span>.</span></span>prototype.sayHello = <span class="keyword">function</span><span class="literal">()</span>&#123;</span><br><span class="line">    console.log(<span class="string">"大家好，我的名字叫做:"</span> + this.name + <span class="string">"；我的年龄是:"</span> + this.age + <span class="string">"；我的性别是："</span> + this.sex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义子类</span></span><br><span class="line"><span class="keyword">function</span> <span class="constructor">Student(<span class="params">name</span>, <span class="params">age</span>, <span class="params">sex</span>, <span class="params">grade</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 构造函数式继承</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">People</span>.</span></span>apply(this, arguments);</span><br><span class="line">    this.grade = grade;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 去掉 Student.Prototype 中多余的几个无用的属性  不可取：因为虽然能去掉，但是当多余的属性较多时，就不可能再逐一删除</span></span><br><span class="line"><span class="comment">// var p = new People();</span></span><br><span class="line"><span class="comment">// delete p.name;</span></span><br><span class="line"><span class="comment">// delete p.age;</span></span><br><span class="line"><span class="comment">// delete p.sex;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 原本</span></span><br><span class="line"><span class="comment">// Student.prototype = &#123;constructor: Student&#125;</span></span><br><span class="line"><span class="comment">// 使用类式继承</span></span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">Student</span>.</span></span>prototype = <span class="keyword">new</span> <span class="constructor">People()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化对象</span></span><br><span class="line">var s = <span class="keyword">new</span> <span class="constructor">Student(<span class="string">"小明"</span>, 12, <span class="string">"男"</span>, <span class="string">"六年级"</span>)</span>;</span><br><span class="line">s.say<span class="constructor">Hello()</span>;</span><br><span class="line"><span class="comment">// s 是 Student的实例化对象， s 可以访问自身的属性</span></span><br><span class="line"><span class="comment">// 但是 Student.Prototype 中多余了几个无用的属性：name:undefined age:undefined sex:undefined</span></span><br><span class="line"><span class="comment">// 于是，Object.create 就出现了</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3UYqK.png" alt="U3UYqK.png"></p><h4 id="4-4-6-2-使用Object-create"><a href="#4-4-6-2-使用Object-create" class="headerlink" title="4.4.6.2  使用Object.create"></a>4.4.6.2 使用<code>Object.create</code></h4><p>只传递原型对象，不需要特性对象：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELM"><figure class="iseeu highlight /elm"><table><tr><td class="code"><pre><span class="line">// 原本</span><br><span class="line">// <span class="type">Student</span>.proto<span class="keyword">type</span> = &#123;constructor: <span class="type">Student</span>&#125;</span><br><span class="line">// 使用类式继承</span><br><span class="line">// <span class="type">Student</span>.proto<span class="keyword">type</span> = new <span class="type">People</span>();</span><br><span class="line">// 使用<span class="type">Object</span>.create</span><br><span class="line"><span class="type">Student</span>.proto<span class="keyword">type</span> = <span class="type">Object</span>.create(<span class="type">People</span>.prototype);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3U0Gd.png" alt="U3U0Gd.png"></p><h3 id="4-4-7-模拟Object-create方法"><a href="#4-4-7-模拟Object-create方法" class="headerlink" title="4.4.7  模拟Object.create方法"></a>4.4.7 模拟<code>Object.create</code>方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 取消Object.create方法</span></span><br><span class="line"><span class="built_in">Object</span>.create = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">// Object.create(null);  // 报错，已经不是一个方法了</span></span><br><span class="line"><span class="comment">// 实现 Object.create 方法</span></span><br><span class="line"><span class="built_in">Object</span>.create = <span class="function"><span class="keyword">function</span>(<span class="params">prototype</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    F.prototype = prototype;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> F();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义父类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">People</span>(<span class="params">name, age, sex</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    <span class="keyword">this</span>.sex = sex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法要写在原型上</span></span><br><span class="line">People.prototype.sayHello = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"大家好，我的名字叫做:"</span> + <span class="keyword">this</span>.name + <span class="string">"；我的年龄是:"</span> + <span class="keyword">this</span>.age + <span class="string">"；我的性别是："</span> + <span class="keyword">this</span>.sex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义子类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name, age, sex, grade</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 构造函数式继承</span></span><br><span class="line">    People.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">this</span>.grade = grade;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 想要让子类继承父类，需要使用类式继承，即原型式继承</span></span><br><span class="line"><span class="comment">// Student.prototype = new People();</span></span><br><span class="line"><span class="comment">// 参考：</span></span><br><span class="line"><span class="comment">// Student.prototype = People.prototype;  // 不能直接这样用，会对原方法造成影响，但可作为参考</span></span><br><span class="line"><span class="comment">// var Fun = function()&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// Fun.prototype = People.prototype;</span></span><br><span class="line"><span class="comment">// Student.prototype = new Fun();</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = <span class="built_in">Object</span>.create(People.prototype);</span><br><span class="line">Student.prototype = obj;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化对象</span></span><br><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> Student(<span class="string">"小明"</span>, <span class="number">12</span>, <span class="string">"男"</span>, <span class="string">"六年级"</span>);</span><br><span class="line">s.sayHello();</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3UfiQ.png" alt="U3UfiQ.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-07</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>对象</tag>
        <tag>ES5</tag>
      </tags>
  </entry>
  <entry>
    <title>三、原型方法</title>
    <url>/post/3bc84ee7.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="三、原型方法"><a href="#三、原型方法" class="headerlink" title="三、原型方法"></a>三、原型方法</h1><p>ES5为原型拓展了几个方法</p><h2 id="3-1-isPrototypeOf"><a href="#3-1-isPrototypeOf" class="headerlink" title="3.1  isPrototypeOf"></a>3.1 <code>isPrototypeOf</code></h2><ul><li><p>原型对象的方法</p></li><li><p>用于判断原型对象是否是参数对象的原型</p></li><li><p>参数就是实例化对象</p></li><li><p>在查找的时候，会查找整个原型链</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取所有div</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> obj = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义数组</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [];</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 数组的原型是哪个对象的原型呢？</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Array</span>.prototype.isPrototypeOf(obj));  <span class="comment">// false</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Array</span>.prototype.isPrototypeOf(arr));  <span class="comment">// true</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 在查找原型的时候，会查找整个原型链</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.isPrototypeOf(obj));  <span class="comment">// true  展开原型链可以找到 Object</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Object</span>.prototype.isPrototypeOf(arr));  <span class="comment">// true  展开原型链可以找到 Object</span></span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3Ndcq.png" alt="U3Ndcq.png"></p><h2 id="3-2-getPrototypeOf"><a href="#3-2-getPrototypeOf" class="headerlink" title="3.2  getPrototypeOf"></a>3.2 <code>getPrototypeOf</code></h2><ul><li><p>是对象的静态方法</p></li><li><p>用于获取原型对象</p></li><li><p>在ES5之前，获取原型对象的方式： <strong>proto</strong>来获取原型对象，以__开头，在ES5中不推荐使用，所以提供了getPrototypeOf方法</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取所有div</span></span><br><span class="line">var obj = document.get<span class="constructor">ElementsByTagName(<span class="string">"div"</span>)</span>;</span><br><span class="line"><span class="comment">// 定义数组</span></span><br><span class="line">var arr = <span class="literal">[]</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取arr的原型对象</span></span><br><span class="line">console.log(arr.__proto__);</span><br><span class="line"><span class="comment">// ES5</span></span><br><span class="line">console.log(<span class="module-access"><span class="module"><span class="identifier">Object</span>.</span></span>get<span class="constructor">PrototypeOf(<span class="params">arr</span>)</span>);</span><br><span class="line">console.log(arr.__proto__<span class="operator"> === </span><span class="module-access"><span class="module"><span class="identifier">Object</span>.</span></span>get<span class="constructor">PrototypeOf(<span class="params">arr</span>)</span>);  <span class="comment">// true</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3NBuV.png" alt="U3NBuV.png"></p><h2 id="3-3-setPrototypeOf"><a href="#3-3-setPrototypeOf" class="headerlink" title="3.3  setPrototypeOf"></a>3.3 <code>setPrototypeOf</code></h2><p>作用：</p><blockquote><p>设置某一对象的原型对象（可以是一个对象，也可以是null）</p></blockquote><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Object</span>.</span></span>set<span class="constructor">PrototypeOf(<span class="params">obj</span>, <span class="params">prototype</span>)</span>;</span><br><span class="line">    obj：将被设置原型的对象</span><br><span class="line">    prototype：新的原型对象（可以是一个对象，也可以是null）</span><br><span class="line">    会修改整个原型链</span><br></pre></td></tr></table></figure></div><p>新的原型对象为<code>null</code>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置arr新的原型对象</span></span><br><span class="line"><span class="comment">// 会修改整个原型链</span></span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">Object</span>.</span></span>set<span class="constructor">PrototypeOf(<span class="params">arr</span>, <span class="params">null</span>)</span>;</span><br><span class="line">console.log(<span class="module-access"><span class="module"><span class="identifier">Object</span>.</span></span>get<span class="constructor">PrototypeOf(<span class="params">arr</span>)</span>);  <span class="comment">// 输出 null  Array中的方法就无法使用了</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3NyEF.png" alt="U3NyEF.png"></p><p>新的原型对象是一个对像：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Object</span>.</span></span>set<span class="constructor">PrototypeOf(<span class="params">arr</span>, &#123;<span class="string">"name"</span>: <span class="string">"laowang"</span>&#125;)</span>;</span><br><span class="line">console.log(<span class="module-access"><span class="module"><span class="identifier">Object</span>.</span></span>get<span class="constructor">PrototypeOf(<span class="params">arr</span>)</span>);  <span class="comment">// &#123;name: "laowang"&#125;  成为了 Object</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3Nc4J.png" alt="U3Nc4J.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-07</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>ES5</tag>
        <tag>原型</tag>
      </tags>
  </entry>
  <entry>
    <title>二、对象的拓展</title>
    <url>/post/2361ab2f.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="二、对象的拓展"><a href="#二、对象的拓展" class="headerlink" title="二、对象的拓展"></a>二、对象的拓展</h1><h2 id="2-1-特性"><a href="#2-1-特性" class="headerlink" title="2.1  特性"></a>2.1 特性</h2><p>对象是什么，我们用属性来描述</p><p>属性是什么，我们用特性来描述</p><p>也就是说：特性是用来描述属性的</p><h2 id="2-2-Object-defineProperty"><a href="#2-2-Object-defineProperty" class="headerlink" title="2.2  Object.defineProperty"></a>2.2 <code>Object.defineProperty</code></h2><p>作用：</p><blockquote><p>用于设置单个属性的特性</p></blockquote><p>在 ES3.1 中，只要对象能够被访问，就可以任意操作该对象。比如：添加属性，删除属性，修改属性值</p><p>在 ES5 中，为对象拓展了一个叫做 “特性” 的东西，用来控制对象中属性的可访问性</p><p>使用方式：</p><blockquote><p>Object.defineProperty(obj, property, {});</p></blockquote><ul><li><p>Object.defineProperty(obj, property, options);</p><ul><li><p>obj：要设置的对象</p></li><li><p>property：要进行设置的属性</p></li><li><p>options：描述特性对象</p></li></ul></li></ul><p>ES3.1：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ES3.1</span></span><br><span class="line">var obj = &#123;</span><br><span class="line">    <span class="built_in">color</span>: <span class="string">"red"</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line">console.<span class="built_in">log</span>(obj);</span><br><span class="line"><span class="comment">// 添加属性</span></span><br><span class="line">obj.title = <span class="string">"nihao"</span>;</span><br><span class="line"><span class="comment">// 删除属性</span></span><br><span class="line">delete obj.<span class="built_in">color</span>;</span><br><span class="line"><span class="comment">// 修改属性值</span></span><br><span class="line">obj.<span class="built_in">width</span> = <span class="number">200</span>;</span><br><span class="line">console.<span class="built_in">log</span>(obj);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1ZM0f.png" alt="U1ZM0f.png"></p><p>ES5：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ES5</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    color: <span class="string">"red"</span>,</span><br><span class="line">    width: <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 for 循环枚举每一个属性</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> obj)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义特性</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj, <span class="string">"color"</span>, &#123;</span><br><span class="line">    <span class="comment">// 修改可枚举性</span></span><br><span class="line">    enumerable: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 再次使用 for 循环枚举每一个属性</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> obj)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);  <span class="comment">// color 已被修改为不可枚举，结果只会出现 width</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 总结： 同样是 for 循环，在没有设置特性之前，是可以输出对象中的每一个属性</span></span><br><span class="line"><span class="comment">//        在设置了特性之后，被设置了特性的属性，没有被输出</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1Z1AS.png" alt="U1Z1AS.png"></p><h2 id="2-3-特性—配置值"><a href="#2-3-特性—配置值" class="headerlink" title="2.3 特性—配置值"></a>2.3 特性—配置值</h2><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">Object</span><span class="selector-class">.defineProperty</span>(<span class="selector-tag">obj</span>, <span class="selector-tag">property</span>, &#123;</span><br><span class="line">    <span class="attribute">value</span>: “”</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1ZBAU.png" alt="U1ZBAU.png"></p><p>总结：</p><ul><li><p>如果一个对象中，存在该属性，此时描述特性对象中的其他属性默认都是true</p></li><li><p>如果一个对象中，不存在该属性，而是通过定义特性的方式添加的属性，那么描述特性对象中的其他属性默认都是false</p></li></ul><h2 id="2-4-特性—可修改性"><a href="#2-4-特性—可修改性" class="headerlink" title="2.4  特性—可修改性"></a>2.4 特性—可修改性</h2><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRMSH"><figure class="iseeu highlight /crmsh"><table><tr><td class="code"><pre><span class="line">Object.defineProperty(obj,  <span class="keyword">property</span><span class="title"></span>, &#123;</span><br><span class="line">    writable: <span class="literal">false</span>   // 将可修改性设为<span class="literal">false</span>  将不能再被修改</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var obj = &#123;</span><br><span class="line">    <span class="built_in">color</span>: <span class="string">"red"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义特性</span></span><br><span class="line"><span class="keyword">Object</span>.defineProperty(obj, <span class="string">"color"</span>, &#123;</span><br><span class="line">    <span class="comment">// 不可修改</span></span><br><span class="line">    writable: <span class="keyword">false</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 尝试修改 obj.color</span></span><br><span class="line">obj.<span class="built_in">color</span> = <span class="string">"blue"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(obj);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1ZccR.png" alt="U1ZccR.png"></p><p>特性—可枚举性</p><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRMSH"><figure class="iseeu highlight /crmsh"><table><tr><td class="code"><pre><span class="line">Object.defineProperty(obj,  <span class="keyword">property</span><span class="title"></span>, &#123;</span><br><span class="line">    enumerable: <span class="literal">false</span>   // 将可修改性设为<span class="literal">false</span>  将不能再被枚举</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    color: <span class="string">"red"</span>,</span><br><span class="line">    width: <span class="number">200</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认情况下是可以被枚举的</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> obj)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i, obj[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义特性</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj, <span class="string">"color"</span>, &#123;</span><br><span class="line">    <span class="comment">// 不可被枚举</span></span><br><span class="line">    enumerable: <span class="literal">false</span></span><br><span class="line">    <span class="comment">// enumerable: true</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 再次使用 for 循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> obj)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i, obj[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1ZWB6.png" alt="U1ZWB6.png"></p><h2 id="2-6-特性—可配置性"><a href="#2-6-特性—可配置性" class="headerlink" title="2.6  特性—可配置性"></a>2.6 特性—可配置性</h2><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRMSH"><figure class="iseeu highlight /crmsh"><table><tr><td class="code"><pre><span class="line">Object.defineProperty(obj,  <span class="keyword">property</span><span class="title"></span>, &#123;</span><br><span class="line">    configurable: <span class="literal">false</span>   // 将可修改性设为<span class="literal">false</span>  将不能再被修改</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var obj = &#123;</span><br><span class="line">    <span class="built_in">color</span>: <span class="string">"red"</span>,</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">200</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义特性</span></span><br><span class="line"><span class="keyword">Object</span>.defineProperty(obj, <span class="string">"color"</span>, &#123;</span><br><span class="line">    <span class="comment">// 配置值</span></span><br><span class="line">    value: <span class="string">"blue"</span>,</span><br><span class="line">    <span class="comment">// 不可写入</span></span><br><span class="line">    writable: <span class="keyword">false</span>,</span><br><span class="line">    <span class="comment">// 不可配置</span></span><br><span class="line">    configurable: <span class="keyword">false</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 再次配置</span></span><br><span class="line"><span class="keyword">Object</span>.defineProperty(obj, <span class="string">"color"</span>, &#123;</span><br><span class="line">    <span class="comment">// 配置值</span></span><br><span class="line">    value: <span class="string">"pink"</span>,</span><br><span class="line">    <span class="comment">// 不可写入</span></span><br><span class="line">    writable: <span class="keyword">false</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 尝试修改 obj.color</span></span><br><span class="line">obj.<span class="built_in">color</span> = <span class="string">"green"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(obj);</span><br></pre></td></tr></table></figure></div><p>修改可配置属性为false之后，再次修改可配置性，会报错，因为已设置color不可配置</p><p><img src="https://s1.ax1x.com/2020/07/12/U3NK1I.png" alt="U3NK1I.png"></p><h2 id="2-7-特性方法"><a href="#2-7-特性方法" class="headerlink" title="2.7  特性方法"></a>2.7 特性方法</h2><ul><li><p>get用来获取属性值的</p><ul><li><p>没有参数</p></li><li><p>返回值就是要获取的属性值</p></li><li><p>作用域是当前对象</p></li><li><p><strong>千万不要在该方法中获取属性值，否则会递归死循环</strong></p></li><li><p>通常我们获取该属性的一个备用值</p></li></ul></li><li><p>set用来设置值的</p><ul><li><p>参数就是要设置的值</p></li><li><p>没有返回值</p></li><li><p>作用域就是当前对象</p></li><li><p><strong>千万不要在该方法中设置属性值</strong></p></li><li><p>通常我们设置该属性的一个备用值</p></li></ul></li></ul><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    color: <span class="string">"red"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置特性</span></span><br><span class="line"><span class="comment">// 一旦设置了特性方法 （set ， get ），当 obj.color; 就会触发 get 函数，  当 obj.color = xx; 就会触发 set 函数</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(obj, <span class="string">"color"</span>, &#123;</span><br><span class="line">    <span class="comment">// 取值器</span></span><br><span class="line">    <span class="keyword">get</span>: function()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">111</span>, <span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">        <span class="comment">// 千万不要在方法中获取该属性 会陷入死循环</span></span><br><span class="line">        <span class="comment">// return this.color;</span></span><br><span class="line">        <span class="comment">// 通常获取该属性的备用值</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._color;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 赋值器</span></span><br><span class="line">    <span class="keyword">set</span>: function(value)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">222</span>, <span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">        <span class="comment">// 千万不要设置该属性值 会陷入死循环</span></span><br><span class="line">        <span class="comment">// this.color = value;</span></span><br><span class="line">        <span class="comment">// 通常设置该属性的备用值</span></span><br><span class="line">        <span class="keyword">this</span>._color = value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(obj.color);  <span class="comment">// obj.color; 会触发 get 函数</span></span><br><span class="line">obj.color = <span class="string">"blue"</span>;  <span class="comment">// obj.color = xx; 会触发 set 函数</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3N3B8.png" alt="U3N3B8.png"></p><h3 id="2-7-1-单项绑定"><a href="#2-7-1-单项绑定" class="headerlink" title="2.7.1  单项绑定"></a>2.7.1 单项绑定</h3><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义对象</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj = &#123;</span></span><br><span class="line"><span class="actionscript">        color: <span class="string">"red"</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 设置内部文本</span></span></span><br><span class="line">    box.innerHTML = obj.color;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义特性</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">Object</span>.defineProperty(obj, <span class="string">"color"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">set</span>: <span class="function"><span class="keyword">function</span><span class="params">(value)</span></span>&#123;</span></span><br><span class="line">            box.innerHTML = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3NJAg.png" alt="U3NJAg.png"></p><h2 id="2-8-设置多个属性特性"><a href="#2-8-设置多个属性特性" class="headerlink" title="2.8  设置多个属性特性"></a>2.8 设置多个属性特性</h2><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Object</span>.</span></span>define<span class="constructor">Properties(<span class="params">obj</span>, <span class="params">options</span>)</span>;</span><br><span class="line">    obj：要设置的对象</span><br><span class="line">    options：特性对象</span><br><span class="line">        key：特性属性</span><br><span class="line">        value：属性特性对象</span><br><span class="line">        设置特性属性和方法</span><br></pre></td></tr></table></figure></div><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    color: <span class="string">"red"</span>,</span><br><span class="line">    num: <span class="number">100</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 color 和 num 的特性</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperties(obj, &#123;</span><br><span class="line">    color: &#123;</span><br><span class="line">        <span class="comment">// 值</span></span><br><span class="line">        value: <span class="string">"blue"</span>,</span><br><span class="line">        <span class="comment">// 不可写入</span></span><br><span class="line">        writable: <span class="literal">false</span>,</span><br><span class="line">        <span class="comment">// 不可枚举</span></span><br><span class="line">        enumerable: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    num: &#123;</span><br><span class="line">        <span class="comment">// 取值器</span></span><br><span class="line">        <span class="keyword">get</span>: function()&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>._num;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="keyword">set</span>: function(value)&#123;</span><br><span class="line">            <span class="keyword">this</span>._num = value;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 不可枚举</span></span><br><span class="line">        enumerable:<span class="literal">false</span>,</span><br><span class="line">        <span class="comment">// 一旦设置了特性方法 （set ， get） ，将无法再次配置 writable 和 value</span></span><br><span class="line">        <span class="comment">// 不可写入</span></span><br><span class="line">        <span class="comment">// writable: false,   // 会报错</span></span><br><span class="line">        <span class="comment">// 配置值</span></span><br><span class="line">        <span class="comment">// value: 300  // 会报错</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改 obj 中的属性值</span></span><br><span class="line">obj.color = <span class="string">"green"</span>;</span><br><span class="line">obj.num = <span class="number">500</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 枚举</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> obj )&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i, obj[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/12/U3NYNQ.png" alt="U3NYNQ.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-07</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>对象</tag>
        <tag>ES5</tag>
      </tags>
  </entry>
  <entry>
    <title>一、严格模式</title>
    <url>/post/f5165bd5.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="一、严格模式"><a href="#一、严格模式" class="headerlink" title="一、严格模式"></a>一、严格模式</h1><p>ES5拓展了严格模式，是我们的代码更加的安全可靠</p><p>在之前书写代码都是处于正常模式下</p><ul><li><p>正常模式下，定义一个变量可以不使用 var ，严格模式下是不允许的</p></li><li><p>正常模式下，可以使用八进制，严格模式下不允许</p></li><li><p>正常模式下，可以使用arguments.callee，严格模式下不允许</p></li></ul><h2 id="1-1-开启严格模式"><a href="#1-1-开启严格模式" class="headerlink" title="1.1  开启严格模式"></a>1.1 开启严格模式</h2><p>使用方式：“use strict”</p><p>加入“use strict”之后，如果认识它的浏览器就会自动开启严格模式；如果不认识它的浏览器也只是把它当作一个字符串定义，不会影响后续代码</p><p>开启严格模式之后，就必须按照严格模式的代码规范书写代码</p><p>在js代码第一行加入“use strict”，此时代码将处于“全局严格模式”</p><p>在某个函数的第一行加入“use strict”，当函数执行的时候，此时函数处于“局部严格模式”</p><p>举例：</p><p>在正常模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用 var 定义变量</span></span><br><span class="line">var a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不使用 var</span></span><br><span class="line">b = <span class="number">20</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1ApOf.png" alt="U1ApOf.png"></p><p>在严格模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="comment">// 使用 var 定义变量</span></span><br><span class="line"><span class="keyword">var</span> c = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不使用 var  在严格模式下是不允许的</span></span><br><span class="line">d = <span class="number">40</span>;</span><br></pre></td></tr></table></figure></div><p>会报错：</p><p><img src="https://s1.ax1x.com/2020/07/11/U1AnXV.png" alt="U1AnXV.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用 var 定义变量</span></span><br><span class="line"><span class="keyword">var</span> e = <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不使用 var  在严格模式下是不允许的</span></span><br><span class="line">f = <span class="number">60</span>;</span><br><span class="line"><span class="comment">// 在开启严格模式之前仍处于正常模式</span></span><br><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1A8h9.png" alt="U1A8h9.png"></p><p>局部严格模式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 局部严格模式</span></span><br><span class="line"><span class="comment">// 定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">localStrict</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 开启严格模式</span></span><br><span class="line">    <span class="string">"use strict"</span></span><br><span class="line">    <span class="comment">// 定义变量</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// b = 11;</span></span><br><span class="line">&#125;</span><br><span class="line">localStrict();   <span class="comment">// 只有调用函数才会报错，不调用，不会报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不使用 var 定义变量</span></span><br><span class="line">c = <span class="number">20</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1AanK.png" alt="U1AanK.png"></p><h2 id="1-2-在严格模式下定义变量"><a href="#1-2-在严格模式下定义变量" class="headerlink" title="1.2  在严格模式下定义变量"></a>1.2 在严格模式下定义变量</h2><p>在严格模式下定义变量，必须使用var声明</p><p>允许：</p><blockquote><p>var a = 10;</p></blockquote><p>不允许：</p><blockquote><p>b = 20;</p></blockquote><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="comment">// 使用 var 定义变量</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 不使用 var 定义变量</span></span><br><span class="line"><span class="comment">// 在严格模式下不允许 不使用 var</span></span><br><span class="line">b = <span class="number">20</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1ABAe.png" alt="U1ABAe.png"></p><h2 id="1-3-八进制"><a href="#1-3-八进制" class="headerlink" title="1.3  八进制"></a>1.3 八进制</h2><p>在js中有三种进制：</p><blockquote><p><code>8 进制</code> <code>10 进制</code> <code>16 进制</code></p></blockquote><p><strong>默认是 10 进制</strong></p><p>以 0 开头是 8 进制</p><p>以 0x，或ox开头的是 16 进制</p><p>允许：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DART"><figure class="iseeu highlight /dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">num</span> = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">var</span> num1 = <span class="number">0xff</span>;</span><br></pre></td></tr></table></figure></div><p>不允许：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DART"><figure class="iseeu highlight /dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">num</span> = <span class="number">011</span>;</span><br></pre></td></tr></table></figure></div><p>举例：</p><p>在正常模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DART"><figure class="iseeu highlight /dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义变量</span></span><br><span class="line"><span class="keyword">var</span> <span class="built_in">num</span> = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">var</span> num1 = <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> num2 = <span class="number">011</span>;</span><br></pre></td></tr></table></figure></div><p>输出：</p><p><img src="https://s1.ax1x.com/2020/07/11/U1Arhd.png" alt="U1Arhd.png"></p><p>在严格模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="comment">// 定义变量</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">var</span> num1 = <span class="number">0xff</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> num2 = <span class="number">011</span>;</span><br></pre></td></tr></table></figure></div><p>会报错：</p><p><img src="https://s1.ax1x.com/2020/07/11/U1Acct.png" alt="U1Acct.png"></p><h2 id="1-4-arguments-callee"><a href="#1-4-arguments-callee" class="headerlink" title="1.4  arguments.callee"></a>1.4 arguments.callee</h2><p>代码写的越“具体”，越能提升性能</p><p>arguments.callee 在编译阶段是无法解析出来，至于当执行到的时候才能确定下来，所以就无从提升性能</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 安全类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">People</span><span class="params">(name, age, sex)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 判断 this 指向</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> <span class="keyword">instanceof</span> People)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 没有使用 new 调用</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> People(name, age, sex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化对象</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> People(<span class="string">"小明"</span>, <span class="number">12</span>, <span class="string">"男"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p1 = People(<span class="string">"小龙"</span>, <span class="number">12</span>, <span class="string">"男"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1A5NQ.png" alt="U1A5NQ.png"></p><p>在正常模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 安全类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">People</span>(<span class="params">name, age, sex</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 判断 this 指向</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> <span class="keyword">instanceof</span> <span class="built_in">arguments</span>.callee)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 没有使用 new 调用</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">arguments</span>.callee(name, age, sex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化对象</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> People(<span class="string">"小明"</span>, <span class="number">12</span>, <span class="string">"男"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p1 = People(<span class="string">"小龙"</span>, <span class="number">12</span>, <span class="string">"男"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1A73n.png" alt="U1A73n.png"></p><p>在严格模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="comment">// 安全类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">People</span>(<span class="params">name, age, sex</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 判断 this 指向</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> <span class="keyword">instanceof</span> <span class="built_in">arguments</span>.callee)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 没有使用 new 调用</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">arguments</span>.callee(name, age, sex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化对象</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> People(<span class="string">"小明"</span>, <span class="number">12</span>, <span class="string">"男"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p1 = People(<span class="string">"小龙"</span>, <span class="number">12</span>, <span class="string">"男"</span>);</span><br></pre></td></tr></table></figure></div><p>会报错：</p><p><img src="https://s1.ax1x.com/2020/07/11/U1ALuV.png" alt="U1ALuV.png"></p><h2 id="1-5-使用delete"><a href="#1-5-使用delete" class="headerlink" title="1.5  使用delete"></a>1.5 使用delete</h2><p>使用delete可以删除对象中的属性</p><ul><li><p>若果要删除一个变量：</p><ul><li><p>在正常模式下，可以执行成功，不会删除成功，但是不会报错</p></li><li><p>在严格模式下，会报错</p></li></ul></li></ul><p>在正常模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义全局变量</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">window</span>.b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除变量</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> a);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> b);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1EpC9.png" alt="U1EpC9.png"></p><p>在严格模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="comment">// 定义全局变量</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">window</span>.b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除变量</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> a);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">delete</span> b);</span><br></pre></td></tr></table></figure></div><p>会报错：</p><p><img src="https://s1.ax1x.com/2020/07/11/U1EAHO.png" alt="U1EAHO.png"></p><h2 id="1-6-使用保留字定义变量"><a href="#1-6-使用保留字定义变量" class="headerlink" title="1.6  使用保留字定义变量"></a>1.6 使用保留字定义变量</h2><ul><li><p>正常模式下，可以使用保留字定义变量</p></li><li><p>严格模式下，不能使用保留字定义变量</p></li></ul><p>在正常模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用保留字</span></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">public</span> = <span class="string">"呵呵"</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1EnCd.png" alt="U1EnCd.png"></p><p>在严格模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="comment">// 使用保留字</span></span><br><span class="line"><span class="keyword">var</span> public = <span class="string">"呵呵"</span>;</span><br></pre></td></tr></table></figure></div><p>会报错：</p><p><img src="https://s1.ax1x.com/2020/07/11/U1Ea2n.png" alt="U1Ea2n.png"></p><h2 id="1-7-eval"><a href="#1-7-eval" class="headerlink" title="1.7  eval"></a>1.7 eval</h2><p>eval是一个函数，可以<strong>将字符串当作代码执行</strong>，但是会污染全局作用域</p><p>在严格模式下是不允许使用的，所以可以避免污染全局作用域</p><p>在正常模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义变量</span></span><br><span class="line"><span class="keyword">var</span> strcode = <span class="string">"var a = 10"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// eval接收一个参数就是字符串，执行结果就是字符串代码</span></span><br><span class="line"><span class="comment">// 当eval执行的时候， a 真的被定义出来了</span></span><br><span class="line"><span class="built_in">eval</span>(strcode);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价方法</span></span><br><span class="line"><span class="comment">// var a = 10;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1EhKx.png" alt="U1EhKx.png"></p><p>在严格模式下:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="keyword">var</span> strcode = <span class="string">"var a = 10"</span>;</span><br><span class="line"><span class="built_in">eval</span>(strcode);</span><br></pre></td></tr></table></figure></div><p>输入 a 会报错：</p><p><img src="https://s1.ax1x.com/2020/07/11/U1EoVO.png" alt="U1EoVO.png"></p><p>严格模式下，检测eval的方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="keyword">var</span> strcode = <span class="string">"var a = 10"</span>;</span><br><span class="line"><span class="built_in">eval</span>(strcode);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这只是告诉大家，严格模式检测 eval 的方式，并不是说要这样用</span></span><br><span class="line"><span class="keyword">var</span> s = <span class="built_in">eval</span>;</span><br><span class="line">s(strcode);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1EOxI.png" alt="U1EOxI.png"></p><h2 id="1-8-with"><a href="#1-8-with" class="headerlink" title="1.8  with"></a>1.8 with</h2><p>with是一个语法，在代码执行的时候，会改变作用域</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span>(target)&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(a);  <span class="comment">// 如果target中存在a属性，那么会优先输出a，如果没有，那么会沿着词法作用域一直往上查找</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>正常模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义对象</span></span><br><span class="line">var obj = &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">    b: <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var a = <span class="number">10</span>;</span><br><span class="line">var b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 with</span></span><br><span class="line">with (obj)&#123;</span><br><span class="line">    <span class="comment">// 此时 obj 中， 存在 a 和 b ，那么会优先输出 obj 中的 a 和 b</span></span><br><span class="line">    console.log(a);</span><br><span class="line">    console.log(b);</span><br><span class="line">    <span class="comment">// 此时 obj 中存在 a 属性， 所以优先改变 obj 中的 a</span></span><br><span class="line">    a = <span class="number">111</span>;</span><br><span class="line">    <span class="comment">// obj 中没有 c ，所以会将 c 添加在全局中，会污染全局作用域中的变量</span></span><br><span class="line">    c = <span class="number">123</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1VMi4.png" alt="U1VMi4.png"></p><p>严格模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="comment">// 定义对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">    b: <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 with</span></span><br><span class="line"><span class="keyword">with</span> (obj)&#123;</span><br><span class="line">    <span class="comment">// 此时 obj 中， 存在 a 和 b ，那么会优先输出 obj 中的 a 和 b</span></span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">    <span class="built_in">console</span>.log(b);</span><br><span class="line">    <span class="comment">// 此时 obj 中存在 a 属性， 所以优先改变 obj 中的 a</span></span><br><span class="line">    a = <span class="number">111</span>;</span><br><span class="line">    <span class="comment">// obj 中没有 c ，所以会将 c 添加在全局中，会污染全局作用域中的变量</span></span><br><span class="line">    c = <span class="number">123</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>会报错：</p><p><img src="https://s1.ax1x.com/2020/07/11/U1VJL6.png" alt="U1VJL6.png"></p><h2 id="1-9-变量名称"><a href="#1-9-变量名称" class="headerlink" title="1.9  变量名称"></a>1.9 变量名称</h2><ul><li><p>在正常模式下，在一个对象中定义属性可以是同名的</p></li><li><p>在严格模式下，不会报错，只是浏览器检测不出来</p></li></ul><p>举例：</p><p>正常模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DELPHI"><figure class="iseeu highlight /delphi"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义对象</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    a: 1,</span></span><br><span class="line"><span class="comment">    a: 2</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line">console.log(obj.a);  <span class="comment">// 2   后面的覆盖前面的</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1VNdO.png" alt="U1VNdO.png"></p><p>严格模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="comment">// 定义对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a: <span class="number">1</span>,</span><br><span class="line">    a: <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(obj.a);  <span class="comment">// 2   后面的覆盖前面的</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1VDSA.png" alt="U1VDSA.png"></p><p>注：<strong>没有区别，不是严格模式没有开启，只是浏览器没有实现</strong></p><h2 id="1-10-全局函数作用域"><a href="#1-10-全局函数作用域" class="headerlink" title="1.10  全局函数作用域"></a>1.10 全局函数作用域</h2><ul><li><p>在全局函数作用域中的this指向window，会污染全局作用域</p></li><li><p>在严格模式下，全局作用域中的this变为undefined，就可以避免对全局作用域的污染</p></li></ul><p>举例：</p><p>正常模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义函数</span></span><br><span class="line">function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">10</span>;</span><br><span class="line">    console.log(b);</span><br><span class="line">    <span class="comment">// 全局函数作用域</span></span><br><span class="line">    console.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">// 添加属性</span></span><br><span class="line">    <span class="keyword">this</span>.color = <span class="string">"red"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/U1Vcef.png" alt="U1Vcef.png"></p><p>严格模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(b);</span><br><span class="line">    <span class="comment">// 全局函数作用域</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">// 添加属性</span></span><br><span class="line">    <span class="keyword">this</span>.color = <span class="string">"red"</span>;</span><br><span class="line">&#125;</span><br><span class="line">fun();</span><br></pre></td></tr></table></figure></div><p>会报错，this指向变为undefined：</p><p><img src="https://s1.ax1x.com/2020/07/11/U1VzlR.png" alt="U1VzlR.png"></p><h2 id="1-11-函数参数"><a href="#1-11-函数参数" class="headerlink" title="1.11 函数参数"></a>1.11 函数参数</h2><ul><li><p>正常模式下，定义函数的参数可以使同名的，但是后面的会覆盖前面的</p></li><li><p>严格模式下，则是不允许的</p></li></ul><p>在正常模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义函数</span></span><br><span class="line">function <span class="function"><span class="title">fun</span><span class="params">(color, color)</span></span>&#123;</span><br><span class="line">    console.log(color);             <span class="comment">// blue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">fun</span><span class="params">(<span class="string">"red"</span>, <span class="string">"blue"</span>)</span></span>;</span><br></pre></td></tr></table></figure></div><p>在严格模式下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 开启严格模式</span></span><br><span class="line"><span class="meta">"use strict"</span></span><br><span class="line"><span class="comment">// 定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">color, color</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(color);</span><br><span class="line">&#125;</span><br><span class="line">fun(<span class="string">"red"</span>, <span class="string">"blue"</span>);</span><br></pre></td></tr></table></figure></div><p>会报错：</p><p><img src="https://s1.ax1x.com/2020/07/11/U1ZZpd.png" alt="U1ZZpd.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-07</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>ES5</tag>
        <tag>严格模式</tag>
      </tags>
  </entry>
  <entry>
    <title>五、toJSON格式化时间</title>
    <url>/post/165ca465.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="五、toJSON格式化时间"><a href="#五、toJSON格式化时间" class="headerlink" title="五、toJSON格式化时间"></a>五、toJSON格式化时间</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LASSO"><figure class="iseeu highlight /lasso"><table><tr><td class="code"><pre><span class="line"><span class="built_in">var</span> <span class="built_in">date</span> = <span class="literal">new</span> <span class="built_in">Date</span>();</span><br><span class="line">console.<span class="keyword">log</span>(<span class="built_in">date</span>); </span><br><span class="line"><span class="comment">// toJSON格式化时间 转为标准化格式</span></span><br><span class="line">console.<span class="keyword">log</span>(<span class="built_in">date</span>.toJSON());</span><br></pre></td></tr></table></figure></div><p><a href="https://imgchr.com/i/U1kfY9" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/07/11/U1kfY9.png" alt="U1kfY9.png"></a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-06</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>ES5</tag>
        <tag>toJSON</tag>
      </tags>
  </entry>
  <entry>
    <title>四、函数绑定</title>
    <url>/post/cc5cc6c3.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="四、函数绑定"><a href="#四、函数绑定" class="headerlink" title="四、函数绑定"></a>四、函数绑定</h1><h2 id="4-1-call-apply-bind"><a href="#4-1-call-apply-bind" class="headerlink" title="4.1  call  apply  bind"></a>4.1 call apply bind</h2><p>ES5为函数拓展了一个bind方法</p><p>作用就是：</p><blockquote><p>为函数绑定作用域（执行函数，改变作用域，传递参数）</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// call 方法：</span></span><br><span class="line"><span class="comment">// 执行函数，并改变函数的this指向</span></span><br><span class="line"><span class="comment">// 第一个参数就是要改变的this指向，从第二个参数开始都是原函数所需参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// apply 方法：</span></span><br><span class="line"><span class="comment">// 执行函数，并改变函数的this指向</span></span><br><span class="line"><span class="comment">// 第一个参数就是要改变的this指向，第二个参数是一个数组，数组中的每一项都是原函数所需参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// bind 方法：</span></span><br><span class="line"><span class="comment">// bind 方法与 call 方法类似，都是执行函数，并改变this指向</span></span><br><span class="line"><span class="comment">// 第一个参数就是要改变的this指向，从第二个参数开始都是原函数所需参数</span></span><br><span class="line"><span class="comment">// bind 与 call 和 apply 之间的区别：</span></span><br><span class="line"><span class="comment">// call   apply 调用即执行</span></span><br><span class="line"><span class="comment">// bind 调用不会执行，而是返回一个新的方法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义函数</span></span><br><span class="line">function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">    console.log(<span class="keyword">this</span>, arguments);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 函数自执行</span></span><br><span class="line"><span class="function"><span class="title">fun</span><span class="params">()</span></span>;  <span class="comment">// this 指向 window   不传递参数时 arguments为空</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用call 方法</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span>.<span class="title">call</span><span class="params">(document, <span class="number">1</span>, <span class="number">2</span>)</span></span>;  <span class="comment">// this 指向document，  arguments有两个参数： 1 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 apply 方法</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span>.<span class="title">apply</span><span class="params">(document.body, [<span class="number">3</span>, <span class="number">4</span>])</span></span>; <span class="comment">// this 指向 body  arguments有两个参数：3 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 bind 方法</span></span><br><span class="line"><span class="comment">// fun.bind(document.body, 5, 6);  // bind 调用不会执行，而是返回一个新的方法</span></span><br><span class="line"><span class="keyword">var</span> result = <span class="function"><span class="keyword">fun</span>.<span class="title">bind</span><span class="params">(document.body, <span class="number">5</span>, <span class="number">6</span>)</span></span>;</span><br><span class="line">result();  <span class="comment">// this 指向 body  arguments有两个参数：5 6</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ulq1xA.png" alt="Ulq1xA.png"></p><h2 id="4-2-bind方法的实现"><a href="#4-2-bind方法的实现" class="headerlink" title="4.2  bind方法的实现"></a>4.2 bind方法的实现</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取消bind方法</span></span><br><span class="line"><span class="comment">// 既然用fun()调用方法，说明是在构造函数Function的原型上</span></span><br><span class="line"><span class="built_in">Function</span>.prototype.bind = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">// fun.bind();   // 报错 不能使用了 Uncaught TypeError: fun.bind is not a function</span></span><br><span class="line"><span class="comment">// 实现bind方法</span></span><br><span class="line"><span class="built_in">Function</span>.prototype.bind = <span class="function"><span class="keyword">function</span>(<span class="params">target</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取剩余的参数</span></span><br><span class="line">    <span class="keyword">var</span> arg = [].slice.call(<span class="built_in">arguments</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 缓存 this</span></span><br><span class="line">    <span class="keyword">var</span> me = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">// 返回新的方法</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 获取剩余的参数</span></span><br><span class="line">        <span class="keyword">var</span> addArg = [].slice.call(<span class="built_in">arguments</span>);</span><br><span class="line">        <span class="comment">// 调用数组合并方法  将下面的参数合并到上面</span></span><br><span class="line">        <span class="keyword">var</span> result = arg.concat(addArg);</span><br><span class="line">        <span class="built_in">console</span>.log(result);</span><br><span class="line">        me.apply(target, result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = fun.bind(<span class="built_in">document</span>, <span class="number">6</span>, <span class="number">7</span>);</span><br><span class="line"><span class="comment">// result执行的时候 this已被改变，并执行其中的参数</span></span><br><span class="line">result(<span class="number">1</span>, <span class="number">2</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ulq8KI.png" alt="Ulq8KI.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-06</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>ES5</tag>
        <tag>函数绑定</tag>
      </tags>
  </entry>
  <entry>
    <title>三、数组拓展</title>
    <url>/post/7170732a.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="三、数组拓展"><a href="#三、数组拓展" class="headerlink" title="三、数组拓展"></a>三、数组拓展</h1><h2 id="3-1-判断数组"><a href="#3-1-判断数组" class="headerlink" title="3.1  判断数组"></a>3.1 判断数组</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取类数组对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> obj = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义数组</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请问有几种方式能确定arr是一个数组</span></span></span><br></pre></td></tr></table></figure></div><h3 id="3-1-1-第一种-判断实例化对象"><a href="#3-1-1-第一种-判断实例化对象" class="headerlink" title="3.1.1  第一种 判断实例化对象"></a>3.1.1 第一种 判断实例化对象</h3><blockquote><p>obj instanceof Array</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第一种 instanceof 判断实例化对象</span></span><br><span class="line"><span class="built_in">console</span>.log(arr <span class="keyword">instanceof</span> <span class="built_in">Array</span>);  <span class="comment">// true</span></span><br><span class="line"><span class="comment">// 判断数组是准确的，但是构造函数是Object也是true</span></span><br><span class="line"><span class="built_in">console</span>.log(arr <span class="keyword">instanceof</span> <span class="built_in">Object</span>);  <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(obj <span class="keyword">instanceof</span> <span class="built_in">Array</span>);  <span class="comment">// false</span></span><br></pre></td></tr></table></figure></div><h3 id="3-1-2-第二种-判断构造函数是否是Array"><a href="#3-1-2-第二种-判断构造函数是否是Array" class="headerlink" title="3.1.2  第二种 判断构造函数是否是Array"></a>3.1.2 第二种 判断构造函数是否是Array</h3><blockquote><p>obj.constructor === Array</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DELPHI"><figure class="iseeu highlight /delphi"><table><tr><td class="code"><pre><span class="line"><span class="comment">//第二种 constructor   判断构造函数</span></span><br><span class="line">console.log(arr<span class="function">.<span class="keyword">constructor</span> === <span class="title">Array</span>);</span>  <span class="comment">// true</span></span><br><span class="line">console.log(arr<span class="function">.<span class="keyword">constructor</span> === <span class="title">Object</span>);</span>  <span class="comment">// false arr的构造函数只能是Array</span></span><br><span class="line">console.log(obj<span class="function">.<span class="keyword">constructor</span> === <span class="title">Array</span>);</span>  <span class="comment">// false</span></span><br></pre></td></tr></table></figure></div><h3 id="3-1-3-第三种-判断对象的类型是否是数组"><a href="#3-1-3-第三种-判断对象的类型是否是数组" class="headerlink" title="3.1.3  第三种 判断对象的类型是否是数组"></a>3.1.3 第三种 判断对象的类型是否是数组</h3><blockquote><p>Object.prototype.toString.call(obj)</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">// 第三种 toString 判断对象类型是不是数组  <span class="keyword">call</span>()执行函数并改变this指向</span><br><span class="line">console.log(<span class="keyword">Object</span>.prototype.toString.<span class="keyword">call</span>(arr) === "[object Array]");  // <span class="keyword">true</span></span><br><span class="line">console.log(<span class="keyword">Object</span>.prototype.toString.<span class="keyword">call</span>(obj) === "[object Array]");  // <span class="keyword">false</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ul7Q8s.png" alt="Ul7Q8s.png"></p><h3 id="3-1-4-第四种-数组的静态方法"><a href="#3-1-4-第四种-数组的静态方法" class="headerlink" title="3.1.4  第四种 数组的静态方法"></a>3.1.4 第四种 数组的静态方法</h3><blockquote><p>Array.isArray(obj)</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第四种 数组的静态方法</span></span><br><span class="line">console.log(<span class="module-access"><span class="module"><span class="identifier">Array</span>.</span></span>is<span class="constructor">Array(<span class="params">arr</span>)</span>);  <span class="comment">// true</span></span><br><span class="line">console.log(<span class="module-access"><span class="module"><span class="identifier">Array</span>.</span></span>is<span class="constructor">Array(<span class="params">obj</span>)</span>);  <span class="comment">// false</span></span><br></pre></td></tr></table></figure></div><h2 id="3-2-获取成员的索引值"><a href="#3-2-获取成员的索引值" class="headerlink" title="3.2  获取成员的索引值"></a>3.2 获取成员的索引值</h2><h3 id="3-2-1-indexOf，-lastIndexOf"><a href="#3-2-1-indexOf，-lastIndexOf" class="headerlink" title="3.2.1  indexOf， lastIndexOf"></a>3.2.1 indexOf， lastIndexOf</h3><p>ES5为数组拓展了两个方法：indexOf， lastIndexOf，分别用于获取数组中成员的索引值</p><ul><li><p>参数就是要查找的成员</p></li><li><p>返回值就是成员的索引值</p><ul><li>如果没有找到成员，则返回-1（和字符串的indexOf方法类似）</li></ul></li></ul><p>在查找成员的时候，不会做数据的类型转换，是真正的全等查找</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"江峰"</span>, <span class="string">"赵静"</span>, <span class="string">"江峰"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 我们想要获取江峰的索引值  </span></span><br><span class="line"><span class="keyword">var</span> pos = arr.indexOf(<span class="string">"江峰"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(pos);  <span class="comment">// 1   有三个江峰，索引值依然只是 1</span></span><br><span class="line"><span class="comment">// 获取最后一个江峰的索引值</span></span><br><span class="line"><span class="keyword">var</span> pos1 = arr.lastIndexOf(<span class="string">"江峰"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(pos1);  <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></div><p><strong>在查找成员的时候，不会做数据的类型转换，是真正的全等查找</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// // 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="number">3</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> pos2 = arr.lastIndexOf(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(pos2);  <span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> pos3 = arr.lastIndexOf(<span class="string">"3"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(pos3);  <span class="comment">// -1</span></span><br></pre></td></tr></table></figure></div><h3 id="3-2-2-实现indexOf方法"><a href="#3-2-2-实现indexOf方法" class="headerlink" title="3.2.2  实现indexOf方法"></a>3.2.2 实现indexOf方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* indexOf  获取数组中成员的索引值</span></span><br><span class="line"><span class="comment">* <span class="doctag">@arr  </span>查找的数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@item  </span>要查找的成员</span></span><br><span class="line"><span class="comment">* return  索引值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">indexOf</span>(<span class="params">arr, item</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 遍历数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">        <span class="comment">// i 表示索引值    arr[i] 表示当前成员</span></span><br><span class="line">        <span class="comment">// 判断arr[i]是否与item全等</span></span><br><span class="line">        <span class="keyword">if</span> (arr[i] === item)&#123;</span><br><span class="line">            <span class="comment">// 找到成员 返回索引值</span></span><br><span class="line">            <span class="comment">// return i;</span></span><br><span class="line">            <span class="built_in">console</span>.log(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 循环完毕，没有找到，返回 -1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"江峰"</span>, <span class="string">"赵静"</span>, <span class="string">"江峰"</span>];</span><br><span class="line"><span class="keyword">var</span> pos = indexOf(arr, <span class="string">"江峰"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(pos);  <span class="comment">// 1</span></span><br></pre></td></tr></table></figure></div><h3 id="3-2-3-兼容IE8-实现indexOf方法"><a href="#3-2-3-兼容IE8-实现indexOf方法" class="headerlink" title="3.2.3  兼容IE8 实现indexOf方法"></a>3.2.3 兼容IE8 实现indexOf方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容 IE8 </span></span><br><span class="line"><span class="comment">// 实例化对象所拥有的方法，应该在类的原型上</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Array</span>.prototype.indexOf)&#123;</span><br><span class="line">    <span class="comment">// 如果类的原型上没有这个方法</span></span><br><span class="line">    <span class="comment">// 拓展方法  在类的原型上添加这个方法</span></span><br><span class="line">    <span class="built_in">Array</span>.prototype.indexOf = <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 遍历数组 本质上就是遍历this  因为在类的原型中，可以通过this获取它的实例化对象</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)&#123;</span><br><span class="line">            <span class="comment">// i 表示索引值    this[i] 表示当前成员</span></span><br><span class="line">            <span class="comment">// 判断this[i]是否与item全等</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>[i] === item)&#123;</span><br><span class="line">                <span class="comment">// 找到成员 返回索引值</span></span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">                <span class="comment">// console.log(i);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 遍历完毕后，没有找到就返回 -1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line"><span class="keyword">var</span> arr1 = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"江峰"</span>, <span class="string">"赵静"</span>, <span class="string">"江峰"</span>];</span><br><span class="line"><span class="keyword">var</span> pos = arr1.indexOf(<span class="string">"江峰"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(pos);  <span class="comment">// 1</span></span><br></pre></td></tr></table></figure></div><h3 id="3-2-4-兼容IE8-实现lastIndexOf方法"><a href="#3-2-4-兼容IE8-实现lastIndexOf方法" class="headerlink" title="3.2.4  兼容IE8 实现lastIndexOf方法"></a>3.2.4 兼容IE8 实现lastIndexOf方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容IE8 实现lastIndexOf方法</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Array</span>.prototype.lastIndexOf)&#123;</span><br><span class="line">    <span class="comment">// 如果类的原型上没有这个方法</span></span><br><span class="line">    <span class="comment">// 拓展方法  在类的原型上添加这个方法</span></span><br><span class="line">    <span class="built_in">Array</span>.prototype.lastIndexOf = <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 遍历数组 本质上就是遍历this  因为在类的原型中，可以通过this获取它的实例化对象</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">this</span>.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">            <span class="comment">// i 表示索引值    this[i] 表示当前成员</span></span><br><span class="line">            <span class="comment">// 判断this[i]是否与item全等</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>[i] === item)&#123;</span><br><span class="line">                <span class="comment">// 找到成员 返回索引值</span></span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">                <span class="comment">// console.log(i);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 遍历完毕后，没有找到就返回 -1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"江峰"</span>, <span class="string">"赵静"</span>, <span class="string">"江峰"</span>];</span><br><span class="line"><span class="keyword">var</span> pos5 = arr2.lastIndexOf(<span class="string">"江峰"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(pos5);  <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></div><h2 id="3-3-forEach"><a href="#3-3-forEach" class="headerlink" title="3.3  forEach"></a>3.3 forEach</h2><h3 id="3-3-1-forEach-使用方式"><a href="#3-3-1-forEach-使用方式" class="headerlink" title="3.3.1  forEach 使用方式"></a>3.3.1 forEach 使用方式</h3><p>该方法用于替代for循环，是数组的迭代器方法，并没有将for循环移除，只是将循环封装在了数组迭代器方法forEach中。</p><p>使用方式：</p><ul><li><p>数组.forEach(fn);</p><ul><li><p>fn：要执行的函数</p><ul><li><p>有三个参数：</p><ul><li><p>第一个参数：成员值</p></li><li><p>第二个参数：索引值</p></li><li><p>第三个参数：原数组</p></li></ul></li><li><p>作用域：window</p></li><li><p>函数的返回值对forEach的执行结果时没有影响的</p></li><li><p>forEach方法的返回值始终是undefined</p></li></ul></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环数组</span></span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ul7tVU.png" alt="Ul7tVU.png"></p><h3 id="3-3-2-forEach方法-实现数组的迭代器方法"><a href="#3-3-2-forEach方法-实现数组的迭代器方法" class="headerlink" title="3.3.2  forEach方法 实现数组的迭代器方法"></a>3.3.2 forEach方法 实现数组的迭代器方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* forEach方法  实现数组的迭代器方法</span></span><br><span class="line"><span class="comment">* <span class="doctag">@arr  </span>要遍历的数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@fn  </span>执行的函数   没有返回值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach</span>(<span class="params">arr, fn</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 遍历数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">        <span class="comment">// 执行函数</span></span><br><span class="line">        <span class="comment">// 函数中有三个参数：  成员值 arr[i]  索引值 i  原数组 arr</span></span><br><span class="line">        fn(arr[i], i, arr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环数组</span></span><br><span class="line"><span class="keyword">var</span> result = forEach(arr, <span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);   <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure></div><h3 id="3-3-3-兼容IE8-实现forEach方法"><a href="#3-3-3-兼容IE8-实现forEach方法" class="headerlink" title="3.3.3  兼容IE8  实现forEach方法"></a>3.3.3 兼容IE8 实现forEach方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容 IE8</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Array</span>.prototype.forEach)&#123;</span><br><span class="line">    <span class="comment">// 拓展方法</span></span><br><span class="line">    <span class="built_in">Array</span>.prototype.forEach = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 遍历数组，就是遍历this</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)&#123;</span><br><span class="line">            <span class="comment">// 执行函数并传递参数</span></span><br><span class="line">            <span class="comment">// 传递三个参数： 成员值 this[i]   索引值 i    原数组 this</span></span><br><span class="line">            fn(<span class="keyword">this</span>[i], i, <span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环数组</span></span><br><span class="line"><span class="keyword">var</span> result = arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);   <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ul7wG9.png" alt="Ul7wG9.png"></p><h3 id="3-3-4-jquery中的forEach方法"><a href="#3-3-4-jquery中的forEach方法" class="headerlink" title="3.3.4  jquery中的forEach方法"></a>3.3.4 jquery中的forEach方法</h3><p>jquery中也有一个类似的方法，each方法，与forEach方法的区别是：</p><blockquote><p>在jquery中的each方法，第一个参数是索引值，第二个参数是成员值</p></blockquote><p><img src="https://s1.ax1x.com/2020/07/11/Ul7yqK.png" alt="Ul7yqK.png"></p><h3 id="3-3-5-for循环的弊端"><a href="#3-3-5-for循环的弊端" class="headerlink" title="3.3.5  for循环的弊端"></a>3.3.5 for循环的弊端</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GO"><figure class="iseeu highlight /go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 测试for循环</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, <span class="built_in">len</span> = arr.length; i &lt; <span class="built_in">len</span>; i++)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">console.log(i, <span class="built_in">len</span>);  <span class="comment">// 4  4    </span></span><br><span class="line"><span class="comment">// 弊端是里面的参数是全局变量，不在函数内，从外部可以直接调用参数变量</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ul7gaD.png" alt="Ul7gaD.png"></p><h2 id="3-4-map"><a href="#3-4-map" class="headerlink" title="3.4  map"></a>3.4 map</h2><h3 id="3-4-1-map方法使用方式"><a href="#3-4-1-map方法使用方式" class="headerlink" title="3.4.1  map方法使用方式"></a>3.4.1 map方法使用方式</h3><p>该方法用于遍历数组并映射结果，与forEach方法类似，只是它的返回值是有意义的</p><ul><li><p>参数是要执行的函数</p><ul><li><p>函数中有3个参数：成员值， 索引值， 原数组</p></li><li><p>作用域是 window</p></li><li><p>返回值就是执行结果的数组成员</p></li></ul></li></ul><p>map方法的<strong>返回值是一个新的数组，数组中的成员就是每一次函数执行的结果的成员</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用map循环数组</span></span><br><span class="line"><span class="keyword">var</span> result = arr.map(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ul7Tqf.png" alt="Ul7Tqf.png"></p><p><strong>返回值是有意义的</strong>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> result = arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"十七期："</span> + value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ul7XGj.png" alt="Ul7XGj.png"></p><h3 id="3-4-2-实现map方法-用于遍历数组并映射结果"><a href="#3-4-2-实现map方法-用于遍历数组并映射结果" class="headerlink" title="3.4.2  实现map方法 用于遍历数组并映射结果"></a>3.4.2 实现map方法 用于遍历数组并映射结果</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* map方法  用于遍历数组并映射结果</span></span><br><span class="line"><span class="comment">* <span class="doctag">@arr  </span>要遍历的数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@fn  </span>执行的函数</span></span><br><span class="line"><span class="comment">* return 新的数组</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">map</span>(<span class="params">arr, fn</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 创建结果数组容器</span></span><br><span class="line">    <span class="keyword">var</span> result = [];</span><br><span class="line">    <span class="comment">// 遍历数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">        <span class="comment">// 执行函数并传递参数</span></span><br><span class="line">        <span class="comment">// 传递三个参数：  成员值 arr[i]   索引值 i    原数组 arr</span></span><br><span class="line">        result.push(fn(arr[i], i, arr));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返回新的数组</span></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用map循环数组</span></span><br><span class="line"><span class="keyword">var</span> result = map(arr, <span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"十七期："</span> + value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlHeQ1.png" alt="UlHeQ1.png"></p><h3 id="3-4-3-兼容IE8-实现map方法"><a href="#3-4-3-兼容IE8-实现map方法" class="headerlink" title="3.4.3  兼容IE8 实现map方法"></a>3.4.3 兼容IE8 实现map方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容 IE8  </span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Array</span>.prototype.map)&#123;</span><br><span class="line">    <span class="comment">// 拓展方法</span></span><br><span class="line">    <span class="built_in">Array</span>.prototype.map = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 创建数组结果容器</span></span><br><span class="line">        <span class="keyword">var</span> result = [];</span><br><span class="line">        <span class="comment">// 遍历数组就是遍历this</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)&#123;</span><br><span class="line">            <span class="comment">// 执行fn并传递参数</span></span><br><span class="line">            <span class="comment">// 传递三个参数： 成员值 this[i]   索引值 i    原数组 this</span></span><br><span class="line">            result.push(fn(<span class="keyword">this</span>[i], i, <span class="keyword">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回新的数组</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用map循环数组</span></span><br><span class="line"><span class="keyword">var</span> result = arr.map(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"十七期："</span> + value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlHKeK.png" alt="UlHKeK.png"></p><h2 id="3-5-fill"><a href="#3-5-fill" class="headerlink" title="3.5  fill"></a>3.5 fill</h2><h3 id="3-5-1-fill方法使用方式"><a href="#3-5-1-fill方法使用方式" class="headerlink" title="3.5.1  fill方法使用方式"></a>3.5.1 fill方法使用方式</h3><p>该方法用于填充数组中的成员</p><p>我们在使用<code>new Array(len)</code>或者 <code>Array(len)</code>来创建数组的时候，得到的只有长度没有成员，所以我们不能使用数组的迭代器方法（forEach， map），而是需要填充数组</p><p>参数就是需要填充的成员</p><p>如果参数为函数，也不会执行该函数</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建数组  创键长度为 5 的数组</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用forEach遍历数组</span></span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">123</span>);   <span class="comment">// 输出结果 ：为空  什么都不显示</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlH3JH.png" alt="UlH3JH.png"></p><p><strong>此时，就需要填充数组</strong>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建数组  创键长度为 5 的数组</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 填充数组</span></span><br><span class="line">arr.fill(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用forEach遍历数组</span></span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">123</span>);   <span class="comment">// 输出结果 ：打印 5 次 123</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlHdw8.png" alt="UlHdw8.png"></p><p><strong>如果参数为函数，也不会执行该函数</strong>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建数组  创键长度为 5 的数组</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 填充数组  填充内容为函数，该函数不会执行</span></span><br><span class="line">arr.fill(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"success"</span>);    </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用forEach遍历数组</span></span><br><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value);<span class="comment">//输出结果：function()&#123;console.log("success");&#125; 5 次  而不是执行函数输出success</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlHrWj.png" alt="UlHrWj.png"></p><h3 id="3-5-2-实现fill方法"><a href="#3-5-2-实现fill方法" class="headerlink" title="3.5.2  实现fill方法"></a>3.5.2 实现fill方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* fill方法  用于填充数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@arr </span>要填充的数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@item </span>要填充的成员</span></span><br><span class="line"><span class="comment">* return 填充后的数组</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fill</span>(<span class="params">arr, item</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 遍历数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">        <span class="comment">// 填充数组</span></span><br><span class="line">        arr[i] = item;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返回arr</span></span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建数组  创键长度为 5 的数组</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 填充数组</span></span><br><span class="line"><span class="keyword">var</span> result = fill(arr, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用forEach遍历数组</span></span><br><span class="line">result.forEach(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlHWwT.png" alt="UlHWwT.png"></p><h3 id="3-5-3-兼容IE8-实现fill填充方法"><a href="#3-5-3-兼容IE8-实现fill填充方法" class="headerlink" title="3.5.3  兼容IE8 实现fill填充方法"></a>3.5.3 兼容IE8 实现fill填充方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容IE8</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">Array</span>.prototype.fill)&#123;</span><br><span class="line">    <span class="comment">// 拓展方法</span></span><br><span class="line">    <span class="built_in">Array</span>.prototype.fill = <span class="function"><span class="keyword">function</span>(<span class="params">item</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)&#123;</span><br><span class="line">            <span class="comment">// 填充数组</span></span><br><span class="line">            <span class="keyword">this</span>[i] = item;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回arr</span></span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建数组  创键长度为 5 的数组</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 填充数组</span></span><br><span class="line"><span class="keyword">var</span> result = arr.fill(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><h2 id="3-6-断言方法-some"><a href="#3-6-断言方法-some" class="headerlink" title="3.6  断言方法 some"></a>3.6 断言方法 some</h2><h3 id="3-6-1-some方法使用方式"><a href="#3-6-1-some方法使用方式" class="headerlink" title="3.6.1  some方法使用方式"></a>3.6.1 some方法使用方式</h3><ul><li><p>数组中是否有成员满足条件</p></li><li><p>使用方式和forEach类似</p></li><li><p>参数就是要执行的函数</p><ul><li><p>有三个参数：成员值， 索引值， 原数组</p></li><li><p>函数的返回值就是判断的依据</p></li></ul></li><li><p>some方法的返回值：</p><ul><li><p><code>true：</code>至少有一个成员满足条件</p></li><li><p><code>false：</code>都不满足条件</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否有姓赵的同学</span></span><br><span class="line"><span class="keyword">var</span> result = arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> value[<span class="number">0</span>] == <span class="string">"赵"</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlHbOx.png" alt="UlHbOx.png"></p><p><strong>some方法对true极其敏感，一旦有条件，立即停止遍历</strong>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否有姓赵的同学</span></span><br><span class="line"><span class="keyword">var</span> result = arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> value[<span class="number">0</span>] == <span class="string">"江"</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlHxte.png" alt="UlHxte.png"></p><h3 id="3-6-2-实现some方法"><a href="#3-6-2-实现some方法" class="headerlink" title="3.6.2  实现some方法"></a>3.6.2 实现some方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* some 方法  判断数组中是否有成员满足条件</span></span><br><span class="line"><span class="comment">* <span class="doctag">@arr  </span>要判断的数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@fn  </span>执行的函数</span></span><br><span class="line"><span class="comment">* return bool 是否有成员满足条件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">some</span>(<span class="params">arr, fn</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 遍历数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">        <span class="comment">// 执行函数并判断结果</span></span><br><span class="line">        <span class="comment">// 传递三个参数： 成员值 arr[i]   索引值 i   原数组 arr</span></span><br><span class="line">        <span class="comment">// some 对true敏感 判断true</span></span><br><span class="line">        <span class="keyword">if</span> (fn(arr[i], i, arr))&#123;</span><br><span class="line">            <span class="comment">// 如果有成员满足条件  返回true</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 遍历完成，没有成员满足条件 返回 false</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否有姓赵的同学</span></span><br><span class="line"><span class="keyword">var</span> result = some(arr, <span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> value[<span class="number">0</span>] == <span class="string">"江"</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><h3 id="3-6-3-兼容IE8"><a href="#3-6-3-兼容IE8" class="headerlink" title="3.6.3  兼容IE8"></a>3.6.3 兼容IE8</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容IE8</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="built_in">Array</span>.prototype.some)&#123;</span><br><span class="line">    <span class="comment">// 拓展方法</span></span><br><span class="line">    <span class="built_in">Array</span>.prototype.some = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)&#123;</span><br><span class="line">            <span class="comment">// 执行函数并判断结果 传递三个参数</span></span><br><span class="line">            <span class="keyword">if</span> (fn(<span class="keyword">this</span>[i], i, <span class="keyword">this</span>))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否有姓赵的同学</span></span><br><span class="line"><span class="keyword">var</span> result = arr.some(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> value[<span class="number">0</span>] == <span class="string">"江"</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><h2 id="3-7-断言方法-every"><a href="#3-7-断言方法-every" class="headerlink" title="3.7  断言方法 every"></a>3.7 断言方法 every</h2><h3 id="3-7-1-every方法使用方式"><a href="#3-7-1-every方法使用方式" class="headerlink" title="3.7.1  every方法使用方式"></a>3.7.1 every方法使用方式</h3><ul><li><p>数组中是否都满足条件</p></li><li><p>使用方式与forEach类似</p></li><li><p>参数就是要执行的函数</p><ul><li><p>函数中有三个参数：成员值， 索引值， 原数组</p></li><li><p>函数的返回值就是判断的依据</p></li></ul></li><li><p>every方法的返回值：</p><ul><li><p>true：全部满足条件</p></li><li><p>false：有成员不满足条件</p></li></ul></li></ul><p><strong>every对false敏感，一旦遇到一个不满足条件的，就会立即停止遍历</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 成员中是否都是 2 个字符</span></span><br><span class="line"><span class="keyword">var</span> result = arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlbVAS.png" alt="UlbVAS.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> result = arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ulbln0.png" alt="Ulbln0.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> result = arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlbYh4.png" alt="UlbYh4.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 成员中是否都是 2 个字符</span></span><br><span class="line"><span class="keyword">var</span> result = arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> value.length == <span class="number">2</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ulbdj1.png" alt="Ulbdj1.png"></p><h3 id="3-7-2-实现every方法"><a href="#3-7-2-实现every方法" class="headerlink" title="3.7.2  实现every方法"></a>3.7.2 实现every方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* every方法  用于判断数组中是否都满足条件</span></span><br><span class="line"><span class="comment">* <span class="doctag">@arr  </span>要查找的数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@fn  </span>执行的函数</span></span><br><span class="line"><span class="comment">* return bool  是否都满足条件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">every</span>(<span class="params">arr, fn</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 遍历数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">        <span class="comment">// 执行函数并判断结果  传递三个参数</span></span><br><span class="line">        <span class="comment">// every 对false敏感 判断false</span></span><br><span class="line">        <span class="keyword">if</span> (!fn(arr[i], i, arr))&#123;</span><br><span class="line">            <span class="comment">// 停止遍历  返回false</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 遍历完成 都满足条件 返回true</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 成员中是否都是 2 个字符</span></span><br><span class="line"><span class="keyword">var</span> result = every(arr, <span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> value.length == <span class="number">2</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><h3 id="3-7-3-兼容IE8"><a href="#3-7-3-兼容IE8" class="headerlink" title="3.7.3  兼容IE8"></a>3.7.3 兼容IE8</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容IE8</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Array</span>.prototype.every)&#123;</span><br><span class="line">    <span class="comment">// 拓展方法</span></span><br><span class="line">    <span class="built_in">Array</span>.prototype.every = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)&#123;</span><br><span class="line">            <span class="comment">// 执行函数并判断结果  传递三个参数</span></span><br><span class="line">            <span class="keyword">if</span> (!fn(<span class="keyword">this</span>[i], i, <span class="keyword">this</span>))&#123;</span><br><span class="line">                <span class="comment">// 有不满足条件的  停止遍历  返回false</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 遍历完成 都满足条件 返回true</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩"</span>, <span class="string">"江峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 成员中是否都是 2 个字符</span></span><br><span class="line"><span class="keyword">var</span> result = arr.every(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> value.length == <span class="number">2</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><h2 id="3-8-filter"><a href="#3-8-filter" class="headerlink" title="3.8  filter"></a>3.8 filter</h2><h3 id="3-8-1-filter方法的使用方式"><a href="#3-8-1-filter方法的使用方式" class="headerlink" title="3.8.1  filter方法的使用方式"></a>3.8.1 filter方法的使用方式</h3><ul><li><p>实现对数组的过滤</p></li><li><p>使用方式和forEach方法类似</p></li><li><p>参数就是要执行的函数</p><ul><li><p>函数中有三个参数：成员值， 索引值， 原数组</p></li><li><p>函数的返回值就是过滤的条件</p></li></ul></li><li><p>filter方法的返回值就是满足过滤条件的成员组成的新数组</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩浩"</span>, <span class="string">"江峰峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 寻找第二个字符和第三个字符相等的成员</span></span><br><span class="line"><span class="keyword">var</span> result = arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> value[<span class="number">1</span>] == value[<span class="number">2</span>];</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlbsAO.png" alt="UlbsAO.png"></p><h3 id="3-8-2-实现filter方法"><a href="#3-8-2-实现filter方法" class="headerlink" title="3.8.2  实现filter方法"></a>3.8.2 实现filter方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* filter方法  实现对数组的过滤</span></span><br><span class="line"><span class="comment">* <span class="doctag">@arr  </span>要查找的数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@fn  </span>执行的函数</span></span><br><span class="line"><span class="comment">* return []  满足锅炉条件的成员组成的新数组</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">arr, fn</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 创建一个新的空数组</span></span><br><span class="line">    <span class="keyword">var</span> result = [];</span><br><span class="line">    <span class="comment">// 遍历数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">        <span class="comment">// 执行函数并传递参数</span></span><br><span class="line">        <span class="keyword">if</span> (fn(arr[i], i, arr))&#123;</span><br><span class="line">            <span class="comment">// 如果条件满足，就将成员放到新的数组中</span></span><br><span class="line">            result.push(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 遍历完成之后 返回新数组</span></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩浩"</span>, <span class="string">"江峰峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 寻找第二个字符和第三个字符相等的成员</span></span><br><span class="line"><span class="keyword">var</span> result = filter(arr, <span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> value[<span class="number">1</span>] == value[<span class="number">2</span>];</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><h3 id="3-8-3-兼容IE8"><a href="#3-8-3-兼容IE8" class="headerlink" title="3.8.3  兼容IE8"></a>3.8.3 兼容IE8</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容IE8</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Array</span>.prototype.filter)&#123;</span><br><span class="line">    <span class="comment">// 拓展方法</span></span><br><span class="line">    <span class="built_in">Array</span>.prototype.filter = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 创建一个新的空数组</span></span><br><span class="line">        <span class="keyword">var</span> result = [];</span><br><span class="line">        <span class="comment">// 遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++)&#123;</span><br><span class="line">            <span class="comment">// 执行函数并传递参数</span></span><br><span class="line">            <span class="keyword">if</span> (fn(<span class="keyword">this</span>[i], i, <span class="keyword">this</span>))&#123;</span><br><span class="line">                <span class="comment">// 若果条件满足，就将成员放到新的数组中</span></span><br><span class="line">                result.push(<span class="keyword">this</span>[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 遍历完成之后返回新数组</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"周浩浩"</span>, <span class="string">"江峰峰"</span>, <span class="string">"江新"</span>, <span class="string">"赵静"</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 寻找第二个字符和第三个字符相等的成员</span></span><br><span class="line"><span class="keyword">var</span> result = arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params">value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> value[<span class="number">1</span>] != value[<span class="number">2</span>];</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><h2 id="3-9-reduce-累加方法"><a href="#3-9-reduce-累加方法" class="headerlink" title="3.9  reduce 累加方法"></a>3.9 reduce 累加方法</h2><h2 id="3-10-reduceRight"><a href="#3-10-reduceRight" class="headerlink" title="3.10  reduceRight"></a>3.10 reduceRight</h2><h3 id="3-10-1-reduce-和reduceRight方法使用方式"><a href="#3-10-1-reduce-和reduceRight方法使用方式" class="headerlink" title="3.10.1  reduce 和reduceRight方法使用方式"></a>3.10.1 reduce 和reduceRight方法使用方式</h3><ul><li><p>这两个是累加的方法，reduce是从前向后累加，而reduceRight是从后向前累加</p></li><li><p>对所有成员逐一处理，并将结果返回</p></li><li><p>参数就是要执行的函数</p><ul><li><p>有四个参数：上一次的累积结果，当前成员值，当前索引值，原数组</p></li><li><p>函数的返回值就是当次累积的结果，将会在下一次遍历的时候作为第一个参数传递</p></li><li><p>reduce是从第二个成员开始遍历，第一个成员会在第一次开始遍历的时候作为第一个参数传递</p></li><li><p>reduceRight是从倒数第二个成员开始遍历，倒数第一个成员在第一次遍历的时候作为第一个参数传递</p></li></ul></li></ul><p>reduce 累加：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义数组</span></span><br><span class="line">var arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求相加的结果</span></span><br><span class="line">var result = arr.reduce(function(pre, value, index, arr)&#123;</span><br><span class="line">    console.log(<span class="keyword">this</span>, arguments);</span><br><span class="line">    <span class="comment">// return 100;</span></span><br><span class="line">    <span class="keyword">return</span> pre + value;</span><br><span class="line">&#125;);</span><br><span class="line">console.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ulb23d.png" alt="Ulb23d.png"></p><p>reduce 累积：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义数组</span></span><br><span class="line">var arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求累积的结果</span></span><br><span class="line">var result = arr.reduce(function(pre, value, index, arr)&#123;</span><br><span class="line">    console.log(<span class="keyword">this</span>, arguments);</span><br><span class="line">    <span class="comment">// return 100;</span></span><br><span class="line">    <span class="keyword">return</span> pre * value;</span><br><span class="line">&#125;);</span><br><span class="line">console.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ulbhut.png" alt="Ulbhut.png"></p><p>reduceRight 累加：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义数组</span></span><br><span class="line">var arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求累加的结果</span></span><br><span class="line">var result = arr.reduceRight(function(pre, value, index, arr)&#123;</span><br><span class="line">    console.log(<span class="keyword">this</span>, arguments);</span><br><span class="line">    <span class="comment">// return 100;</span></span><br><span class="line">    <span class="keyword">return</span> pre + value;</span><br><span class="line">&#125;);</span><br><span class="line">console.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlqSET.png" alt="UlqSET.png"></p><p>reduceRight 累积：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义数组</span></span><br><span class="line">var arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求累积的结果</span></span><br><span class="line">var result = arr.reduceRight(function(pre, value, index, arr)&#123;</span><br><span class="line">    console.log(<span class="keyword">this</span>, arguments);</span><br><span class="line">    <span class="comment">// return 100;</span></span><br><span class="line">    <span class="keyword">return</span> pre * value;</span><br><span class="line">&#125;);</span><br><span class="line">console.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ulqi8J.png" alt="Ulqi8J.png"></p><h3 id="3-10-2-实现reduce方法"><a href="#3-10-2-实现reduce方法" class="headerlink" title="3.10.2  实现reduce方法"></a>3.10.2 实现reduce方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* reduce方法  实现reduce方法</span></span><br><span class="line"><span class="comment">* <span class="doctag">@arr  </span>数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@fn  </span>执行的函数</span></span><br><span class="line"><span class="comment">* return 累积的结果</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reduce</span>(<span class="params">arr, fn</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 定义当前累积结果</span></span><br><span class="line">    <span class="comment">// 由于是从第二个成员开始遍历，上次累积的结果应该是第一个成员</span></span><br><span class="line">    <span class="keyword">var</span> result = arr[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// 遍历数组 从第二个成员开始遍历</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length; i++)&#123;</span><br><span class="line">        <span class="comment">// 执行函数：上一次的累积结果， 当前成员值， 当前索引值， 原数组</span></span><br><span class="line">        result = fn(result, arr[i], i, arr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返回结果</span></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求累积的结果</span></span><br><span class="line"><span class="keyword">var</span> result = reduce(arr, <span class="function"><span class="keyword">function</span>(<span class="params">pre, value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> pre * value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><h3 id="3-10-3-兼容IE8-实现reduce方法"><a href="#3-10-3-兼容IE8-实现reduce方法" class="headerlink" title="3.10.3  兼容IE8 实现reduce方法"></a>3.10.3 兼容IE8 实现reduce方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容IE8 实现reduce方法</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Array</span>.prototype.reduce)&#123;</span><br><span class="line">    <span class="comment">// 拓展方法</span></span><br><span class="line">    <span class="built_in">Array</span>.prototype.reduce = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 定义当前累积结果</span></span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">this</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">// 遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; <span class="keyword">this</span>.length; i++)&#123;</span><br><span class="line">            <span class="comment">// 执行函数</span></span><br><span class="line">            result = fn(result, <span class="keyword">this</span>[i], i, <span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回结果</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求累积的结果</span></span><br><span class="line"><span class="keyword">var</span> result = arr.reduce(<span class="function"><span class="keyword">function</span>(<span class="params">pre, value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> pre * value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><h3 id="3-10-4-实现reduceRight方法"><a href="#3-10-4-实现reduceRight方法" class="headerlink" title="3.10.4  实现reduceRight方法"></a>3.10.4 实现reduceRight方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* reduceRight方法  实现reduceRight方法</span></span><br><span class="line"><span class="comment">* <span class="doctag">@arr  </span>数组</span></span><br><span class="line"><span class="comment">* <span class="doctag">@fn  </span>执行的函数</span></span><br><span class="line"><span class="comment">* return 累积的结果</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reduceRight</span>(<span class="params">arr, fn</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 定义当前累积结果</span></span><br><span class="line">    <span class="comment">// 由于是从倒数第二个成员开始遍历，上次累积的结果应该是倒数第一个成员</span></span><br><span class="line">    <span class="keyword">var</span> result = arr[arr.length - <span class="number">1</span>];</span><br><span class="line">    <span class="comment">// 遍历数组 从倒数第二个成员开始遍历</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = arr.length - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="comment">// 执行函数：上一次的累积结果， 当前成员值， 当前索引值， 原数组</span></span><br><span class="line">        result = fn(result, arr[i], i, arr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返回结果</span></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求累积的结果</span></span><br><span class="line"><span class="keyword">var</span> result = reduceRight(arr, <span class="function"><span class="keyword">function</span>(<span class="params">pre, value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> pre * value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><h3 id="3-10-5-兼容IE8-实现reduceRight方法"><a href="#3-10-5-兼容IE8-实现reduceRight方法" class="headerlink" title="3.10.5  兼容IE8 实现reduceRight方法"></a>3.10.5 兼容IE8 实现reduceRight方法</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容IE8 实现reduceRight方法</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">Array</span>.prototype.reduceRight)&#123;</span><br><span class="line">    <span class="comment">// 拓展方法</span></span><br><span class="line">    <span class="built_in">Array</span>.prototype.reduceRight = <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 定义当前累积结果</span></span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">this</span>[<span class="keyword">this</span>.length - <span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="keyword">this</span>.length - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">            <span class="comment">// 执行函数</span></span><br><span class="line">            result = fn(result, <span class="keyword">this</span>[i], i, <span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回结果</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求累积的结果</span></span><br><span class="line"><span class="keyword">var</span> result = arr.reduceRight(<span class="function"><span class="keyword">function</span>(<span class="params">pre, value, index, arr</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> pre * value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><h2 id="3-11-addNum"><a href="#3-11-addNum" class="headerlink" title="3.11  addNum"></a>3.11 addNum</h2><p>实现addNum（num1， num2）方法，接收两个参数，分别是两个整数，求两个整数之间的所有整数之和</p><ul><li><p>addNum（1， 100）</p><ul><li><p>可以包含两个参数，可以不包含两个参数</p></li><li><p>我们统一为包含两个参数，即1~100之和</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCILAB"><figure class="iseeu highlight /scilab"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addNum</span><span class="params">(num1, num2)</span>&#123;</span></span><br><span class="line">    <span class="comment">// 确定最大值与最小值</span></span><br><span class="line">    var <span class="built_in">max</span> = Math.<span class="built_in">max</span>(num1, num2);</span><br><span class="line">    var <span class="built_in">min</span> = Math.<span class="built_in">min</span>(num1, num2);</span><br><span class="line">    <span class="comment">// console.log(max, min);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// (5, 10) 5, 6, 7, 8, 9, 10    长度为 10 - 5 + 1</span></span><br><span class="line">    <span class="comment">// (5, 10) 6, 7, 8, 9           长度为 10 - 5 - 1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建数组  （连续打点 如果不连续打点可以定义一些变量进行接收）</span></span><br><span class="line">    <span class="keyword">return</span> Array(<span class="built_in">max</span> - <span class="built_in">min</span> + <span class="number">1</span>)</span><br><span class="line">    <span class="comment">// 为了遍历数组，所以需要填充数组</span></span><br><span class="line">    .fill(<span class="built_in">min</span>)</span><br><span class="line">    <span class="comment">// 构建一个从最小值到最大值之间的数组</span></span><br><span class="line">    .map(<span class="function"><span class="keyword">function</span><span class="params">(value, index, arr)</span>&#123;</span></span><br><span class="line">        <span class="comment">// index是递加的，用 min + index 可以得到一个从最小值到最大值之间的数组</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">min</span> + index;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 累加 只用到两个参数，传递两个参数就可以</span></span><br><span class="line">    .reduce(<span class="function"><span class="keyword">function</span><span class="params">(pre, value)</span>&#123;</span></span><br><span class="line">        <span class="keyword">return</span> pre + value;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">console.<span class="built_in">log</span>(addNum(<span class="number">1</span>, <span class="number">100</span>));        <span class="comment">// 5050</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-06</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>数组</tag>
        <tag>ES5</tag>
      </tags>
  </entry>
  <entry>
    <title>二、JSON拓展</title>
    <url>/post/89e6caba.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="二、JSON拓展"><a href="#二、JSON拓展" class="headerlink" title="二、JSON拓展"></a>二、JSON拓展</h1><h2 id="2-1-parse"><a href="#2-1-parse" class="headerlink" title="2.1  parse"></a>2.1 parse</h2><p>该方法是将json字符串解析为js对象的</p><p>使用方式：</p><ul><li><p>JSON.parse(str, fn);</p><ul><li><p>str：要处理的字符串</p></li><li><p>fn：要处理的函数</p><ul><li><p>返回值就是本次处理的结果</p><ul><li><p>有两个参数：</p><ul><li><p>第一个参数：属性名称</p></li><li><p>第二个参数：属性值</p></li></ul></li></ul></li></ul></li></ul></li></ul><p>从外部向内部遍历，<strong>从叶子节点到根节点</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义json字符串</span></span><br><span class="line"><span class="keyword">var</span> str = '&#123;<span class="string">"a"</span>: 1, <span class="string">"b"</span>: <span class="string">"2"</span>, <span class="string">"c"</span>: &#123;<span class="string">"d"</span>: 3&#125;&#125;';</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 str 转为 js 对象</span></span><br><span class="line"><span class="keyword">var</span> result = JSON.<span class="keyword">parse</span>(str);</span><br><span class="line">console.<span class="built_in">log</span>(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlrgpQ.png" alt="UlrgpQ.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="OPENSCAD"><figure class="iseeu highlight /openscad"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义json字符串</span></span><br><span class="line">var <span class="built_in">str</span> = '&#123;<span class="string">"a"</span>: <span class="number">1</span>, <span class="string">"b"</span>: <span class="string">"2"</span>, <span class="string">"c"</span>: &#123;<span class="string">"d"</span>: <span class="number">3</span>&#125;&#125;';</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 str 转为 js 对象</span></span><br><span class="line">var result = JSON.parse(<span class="built_in">str</span>, <span class="function"><span class="keyword">function</span><span class="params">(key, value)</span>&#123;</span></span><br><span class="line">    console.<span class="built_in">log</span>(arguments);</span><br><span class="line">&#125;);</span><br><span class="line">console.<span class="built_in">log</span>(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ulr57V.png" alt="Ulr57V.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义json字符串</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'&#123;"a": 1, "b": "2", "c": &#123;"d": 3&#125;&#125;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 str 转为 js 对象</span></span><br><span class="line"><span class="keyword">var</span> result = <span class="built_in">JSON</span>.parse(str, <span class="function"><span class="keyword">function</span>(<span class="params">key, value</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="comment">// 对属性值 value进行判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> value === <span class="string">"string"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> +value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 我们希望将字符串转为数字</span></span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlrTtU.png" alt="UlrTtU.png"></p><h2 id="2-2-stringify"><a href="#2-2-stringify" class="headerlink" title="2.2  stringify"></a>2.2 stringify</h2><p>该方法用于将js对象转为json字符串</p><p>使用方式：</p><ul><li><p>JSON.stringify(obj, fn);</p><ul><li><p>obj：要处理的对象</p></li><li><p>fn：处理的函数</p><ul><li><p>返回值就是本次处理的结果</p></li><li><p>有两个参数：</p><ul><li><p>第一个参数：属性名</p></li><li><p>第二个参数：属性值</p></li></ul></li></ul></li></ul></li></ul><p>从内部到外部遍历，<strong>从根节点到叶子节点</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义对象</span></span><br><span class="line">var obj = &#123;</span><br><span class="line"><span class="symbol">    a:</span> <span class="number">1</span>,</span><br><span class="line"><span class="symbol">    b:</span> <span class="string">"2"</span>,</span><br><span class="line"><span class="symbol">    c:</span> &#123;</span><br><span class="line"><span class="symbol">        d:</span> <span class="number">3</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将obj转为json字符串</span></span><br><span class="line">var result = JSON.stringify(obj);</span><br><span class="line">console.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlTU1I.png" alt="UlTU1I.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="built_in">JSON</span>.stringify(obj, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlTBB8.png" alt="UlTBB8.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="built_in">JSON</span>.stringify(obj, <span class="function"><span class="keyword">function</span>(<span class="params">key, value</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlT6hj.png" alt="UlT6hj.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="built_in">JSON</span>.stringify(obj, <span class="function"><span class="keyword">function</span>(<span class="params">key, value</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="comment">// 我们想让所有的属性值作为数字表示，要对value进行判定</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> value === <span class="string">"string"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> +value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlTRcq.png" alt="UlTRcq.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-06</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>json</tag>
        <tag>ES5</tag>
      </tags>
  </entry>
  <entry>
    <title>一、ES5</title>
    <url>/post/c9716ed6.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="一、ES5"><a href="#一、ES5" class="headerlink" title="一、ES5"></a>一、ES5</h1><p>javascript最早是由网景公司推出的，极其简单，被很多开发者接受，逐渐流行起来，后来IE为了抢占市场微软，将IE浏览器内置在windows系统中，所以IE的市场占有率相当的高。IE脚本语言是Jscript（vbscript）</p><p>网景公司为了推广js，与sun公司合作，为了让js更流行，借助当时极其流行的语法java，将js更名为javascript，所以java与javascript关系就像雷锋和雷峰塔。网景公司做了一件好事，将js的语言规范提交给ECMA组织，所以我们学习ECMAScript规范就是在学习javascript规范，所以ECMAScript是js规范的未来。微软很有个性，自己非要研制一套规范，研制的非常不好用，后来自己内部工程师都不干了，非要重新研制新的浏览器，所以微软决定放弃xp系统（放弃IE6,7）。重新研制了IE9浏览器，完全遵守ECMAScript语言规范，所以IE9是微软的第一代高级浏览器（是所有高级浏览器中，最差的一款）。</p><p>在国内，我们还要维护IE6,7,8，原因是国内一些企业决定维护xp系统，所以IE6,7就无法淘汰，所以就苦了国内的工程师了，还要维护IE6,7,8</p><p>好消息是移动端基本都是webkit内核，因此我们可以放心的使用html5，css3，ES5规范等等<br>在pc端，由于高级浏览器都实现了html5，css3，ES5规范等等，所以我们可以直接用高级浏览器测试它们</p><ul><li><p>ES规范版本：</p><ul><li><p>ES1</p></li><li><p>ES2</p></li><li><p>ES3</p></li><li><p>ES4</p></li><li><p>ES3.1</p></li><li><p>ES5</p></li><li><p>ES6</p></li><li><p>ES2016</p></li><li><p>ES2017</p></li><li><p>ES2018</p></li></ul></li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-06</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>ES5</tag>
      </tags>
  </entry>
  <entry>
    <title>三、贪吃蛇</title>
    <url>/post/324ac8cb.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="三、贪吃蛇"><a href="#三、贪吃蛇" class="headerlink" title="三、贪吃蛇"></a>三、贪吃蛇</h1><h2 id="3-1-分析"><a href="#3-1-分析" class="headerlink" title="3.1  分析"></a>3.1 分析</h2><p>我们决定使用面向对象的方式书写贪吃蛇游戏</p><p>游戏是最适合使用面向对象的方式书写</p><p>我们把整个游戏看成是一个“游戏”类</p><ul><li><p>游戏类可以有各种各样的属性</p><ul><li><p>贪吃蛇中的蛇作为一个属性</p></li><li><p>地图属性</p></li><li><p>食物属性</p></li><li><p>障碍物属性</p></li></ul></li><li><p>我们可以把蛇当作一个“蛇”类</p><ul><li><p>有数组属性 装蛇的每一节身体</p></li><li><p>有方向属性</p></li><li><p>有增长的方法</p></li><li><p>有移动方法</p></li></ul></li><li><p>可以把地图看成一个“地图”类</p><ul><li><p>有行属性</p></li><li><p>有列属性</p></li><li><p>有宽度属性 （总宽）</p></li><li><p>有高度属性 （总高）</p></li><li><p>有一个数组属性，数组中存放的是每一个小方格</p></li></ul></li><li><p>可以把食物看成一个“食物”类</p><ul><li><p>有一个x属性</p></li><li><p>有一个y属性</p></li><li><p>有一个img属性</p></li></ul></li><li><p>可以把障碍物看成一个“障碍物”类</p><ul><li>有一个数组属性 数组里存放的是每一个障碍物</li></ul></li></ul><p><img src="https://s1.ax1x.com/2020/07/11/Ul040K.png" alt="Ul040K.png"></p><p><a href="https://codeload.github.com/mango185/Snake/zip/master" target="_blank" rel="noopener" class="LinkCard">贪吃蛇源码下载</a></p><p><a href="https://github.com/mango185/Snake.git" target="_blank" rel="noopener" class="LinkCard">我在github上的贪吃蛇项目</a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-05</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>面向对象</tag>
        <tag>内置构造函数</tag>
        <tag>贪吃蛇</tag>
      </tags>
  </entry>
  <entry>
    <title>二、内置构造函数之间的关系</title>
    <url>/post/4e278240.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="二、内置构造函数之间的关系"><a href="#二、内置构造函数之间的关系" class="headerlink" title="二、内置构造函数之间的关系"></a>二、内置构造函数之间的关系</h1><ul><li><p>所有的函数都是Function的实例</p></li><li><p>所有的对象都是Object的实例</p></li><li><p>函数也是对象</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DELPHI"><figure class="iseeu highlight /delphi"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个对象</span></span><br><span class="line"><span class="keyword">var</span> obj = <span class="comment">&#123;&#125;</span>;</span><br><span class="line"></span><br><span class="line">console.log(obj instanceof <span class="keyword">Object</span>);                 <span class="comment">// true</span></span><br><span class="line">console.log([]<span class="function">.<span class="keyword">constructor</span> <span class="title">instanceof</span> <span class="title">Object</span>);</span>      <span class="comment">// true</span></span><br><span class="line">console.log([]<span class="function">.<span class="keyword">constructor</span>.<span class="title">constructor</span> <span class="title">instanceof</span> <span class="title">Object</span>);</span>  <span class="comment">// true</span></span><br><span class="line">console.log(<span class="keyword">Object</span> instanceof <span class="function"><span class="keyword">Function</span>);</span>            <span class="comment">// true</span></span><br><span class="line">console.log(<span class="keyword">Object</span> instanceof <span class="keyword">Object</span>);              <span class="comment">// true</span></span><br><span class="line">console.log(<span class="function"><span class="keyword">Function</span> <span class="title">instanceof</span> <span class="title">Object</span>);</span>            <span class="comment">// true</span></span><br><span class="line">console.log(<span class="function"><span class="keyword">Function</span> <span class="title">instanceof</span> <span class="title">Function</span>);</span>          <span class="comment">// true</span></span><br><span class="line">console.log(obj instanceof <span class="function"><span class="keyword">Function</span>);</span>               <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">obj<span class="function">.<span class="keyword">constructor</span>                                     <span class="comment">// Object</span></span></span><br><span class="line"><span class="function"><span class="title">obj</span>.__<span class="title">proto__</span>                                       <span class="comment">// obj.constructor.prototype</span></span></span><br><span class="line"><span class="function"><span class="comment">// 在实际开发过程中不要使用 __proto__ ,它是浏览器添加的</span></span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-05</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>内置构造函数</tag>
      </tags>
  </entry>
  <entry>
    <title>一、内置构造函数</title>
    <url>/post/e2bbd5f3.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="一、内置构造函数"><a href="#一、内置构造函数" class="headerlink" title="一、内置构造函数"></a>一、内置构造函数</h1><h2 id="1-1-String"><a href="#1-1-String" class="headerlink" title="1.1  String"></a>1.1 String</h2><p>这是一个内置构造函数，它是string值类型的包装类型</p><p>这也就是为什么字符串可以调用方法的原因</p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line"><span class="comment">// String 是 string 值类型的对应包装类型</span></span><br><span class="line">var <span class="built_in">str</span> = <span class="string">"abcdefg"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="comment">// 转为对应的包装类型</span></span><br><span class="line">var str_obj = <span class="keyword">new</span> <span class="keyword">String</span>(<span class="built_in">str</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlwYKx.png" alt="UlwYKx.png"></p><h2 id="1-2-Boolean"><a href="#1-2-Boolean" class="headerlink" title="1.2  Boolean"></a>1.2 Boolean</h2><p>这是一个内置构造函数，它是bool值类型的对应包装类型</p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">// <span class="type">Boolean</span></span><br><span class="line">// 它是<span class="type">bool</span>值类型的对应包装类型</span><br><span class="line">var f = <span class="keyword">false</span>;</span><br><span class="line">// 转为对应的包装类型</span><br><span class="line">var f_obj = <span class="built_in">new</span> <span class="type">Boolean</span>(f);</span><br><span class="line">// f 是 <span class="built_in">new</span> <span class="type">Boolean</span>对象的原始值，而 <span class="built_in">new</span> <span class="type">Boolean</span> 是 f 的对应包装类型</span><br><span class="line">// !f 是 <span class="keyword">true</span>  ！f_obj 是<span class="keyword">false</span>  因为f_obj是一个对象  对象永远是<span class="keyword">true</span></span><br><span class="line">console.log(f_obj.valueOf());  // 原始值是 <span class="keyword">false</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlwbLV.png" alt="UlwbLV.png"></p><h2 id="1-3-Number"><a href="#1-3-Number" class="headerlink" title="1.3  Number"></a>1.3 Number</h2><p>这是一个内置构造函数，它是number值类型的对应包装类型</p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Number</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">3</span>;</span><br><span class="line"><span class="comment">//转为对应包装类型</span></span><br><span class="line"><span class="keyword">var</span> num_obj = <span class="keyword">new</span> <span class="built_in">Number</span>(num);</span><br><span class="line"><span class="comment">// console.log(num_obj.toFixed(2));  // 保留2位小数 3.00</span></span><br><span class="line"><span class="comment">// console.log(num_obj.toFixed(3));  // 保留3位小数 3.000</span></span><br><span class="line"><span class="comment">// console.log(num_obj.toFixed(4));  // 保留4位小数 3.0000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Number本身不是一个安全类，当Number自执行的时候，会作为类型转为函数使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// var a = "3";  // a 是字符串 3</span></span><br><span class="line"><span class="comment">// var aa = Number(a);  // aa 是将 a 转为数字类型 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">"3a"</span>;  <span class="comment">// a 是字符串 3a</span></span><br><span class="line"><span class="keyword">var</span> aa = <span class="built_in">Number</span>(a);  <span class="comment">// aa 是 NaN  Number能转则转，不能转拉倒</span></span><br><span class="line"><span class="keyword">var</span> aaa = <span class="built_in">parseInt</span>(a);  <span class="comment">// aaa 是 3  转成数字类型。不能转的部分舍弃掉</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Ul0Kyt.png" alt="Ul0Kyt.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-05</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>内置构造函数</tag>
      </tags>
  </entry>
  <entry>
    <title>十三、案例：气球类</title>
    <url>/post/2cc57d2.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十三、案例：气球类"><a href="#十三、案例：气球类" class="headerlink" title="十三、案例：气球类"></a>十三、案例：气球类</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 定义一个气球类</span></span><br><span class="line">    function Balloon(img)&#123;</span><br><span class="line">        <span class="comment">// 容器属性</span></span><br><span class="line">        <span class="keyword">this</span>.dom = document.createElement(<span class="string">"div"</span>);</span><br><span class="line">        <span class="comment">// 图片属性</span></span><br><span class="line">        <span class="keyword">this</span>.img = img;</span><br><span class="line">        <span class="comment">// 图片的宽</span></span><br><span class="line">        <span class="keyword">this</span>.width = <span class="keyword">this</span>.img.width / <span class="number">4</span>;</span><br><span class="line">        <span class="comment">// 图片的高</span></span><br><span class="line">        <span class="keyword">this</span>.height = <span class="keyword">this</span>.img.height / <span class="number">3</span>;</span><br><span class="line">        <span class="comment">// 图片的定位X</span></span><br><span class="line">        <span class="keyword">this</span>.positionX = parseInt(Math.random() * <span class="number">4</span>);</span><br><span class="line">        <span class="comment">// 图片的定位Y</span></span><br><span class="line">        <span class="keyword">this</span>.positionY = parseInt(Math.random() * <span class="number">3</span>);</span><br><span class="line">        <span class="comment">// 定义left</span></span><br><span class="line">        <span class="keyword">this</span>.left = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 定义top</span></span><br><span class="line">        <span class="keyword">this</span>.top = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 设置样式的方法</span></span><br><span class="line">        <span class="keyword">this</span>.setStyle = function()&#123;</span><br><span class="line">            <span class="comment">// 要使图片移动 需要设置绝对定位</span></span><br><span class="line">            <span class="keyword">this</span>.dom.style.position = <span class="string">"absolute"</span>;</span><br><span class="line">            <span class="keyword">this</span>.dom.style.left = <span class="keyword">this</span>.left + <span class="string">"px"</span>;</span><br><span class="line">            <span class="keyword">this</span>.dom.style.top = <span class="keyword">this</span>.top + <span class="string">"px"</span>;</span><br><span class="line">            <span class="comment">// 赋值dom的宽度和高度</span></span><br><span class="line">            <span class="keyword">this</span>.dom.style.width = <span class="keyword">this</span>.width + <span class="string">"px"</span>;</span><br><span class="line">            <span class="keyword">this</span>.dom.style.height = <span class="keyword">this</span>.height + <span class="string">"px"</span>;</span><br><span class="line">            <span class="comment">// 设置元素的背景图片</span></span><br><span class="line">            <span class="keyword">this</span>.dom.style.backgroundImage = <span class="string">"url("</span> + <span class="keyword">this</span>.img.src + <span class="string">")"</span>;</span><br><span class="line">            <span class="comment">// 设置图片的背景定位</span></span><br><span class="line">            <span class="keyword">this</span>.dom.style.backgroundPositionX = -<span class="keyword">this</span>.width * <span class="keyword">this</span>.positionX + <span class="string">"px"</span>;</span><br><span class="line">            <span class="keyword">this</span>.dom.style.backgroundPositionY = -<span class="keyword">this</span>.height * <span class="keyword">this</span>.positionY + <span class="string">"px"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 上树</span></span><br><span class="line">        <span class="keyword">this</span>.upTree = function()&#123;</span><br><span class="line">            document.body.appendChild(<span class="keyword">this</span>.dom);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置初始化方法</span></span><br><span class="line">        <span class="keyword">this</span>.<span class="keyword">init</span> = function()&#123;</span><br><span class="line">            <span class="keyword">this</span>.upTree();</span><br><span class="line">            <span class="keyword">this</span>.setStyle();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 图片移动方法</span></span><br><span class="line">        <span class="keyword">this</span>.move = function()&#123;</span><br><span class="line">            <span class="keyword">this</span>.left += <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">this</span>.dom.style.left = <span class="keyword">this</span>.left + <span class="string">"px"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 执行init</span></span><br><span class="line">        <span class="keyword">this</span>.<span class="keyword">init</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建图片元素</span></span><br><span class="line">    <span class="keyword">var</span> img = document.createElement(<span class="string">"img"</span>);</span><br><span class="line">    <span class="comment">// 设置路径</span></span><br><span class="line">    img.src = <span class="string">"images/balloon.jpg"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置load事件 读完onload再执行代码</span></span><br><span class="line">    <span class="keyword">var</span> b = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 定义定时器</span></span><br><span class="line">    <span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line">    img.onload = function()&#123;</span><br><span class="line">        <span class="comment">// 实例化对象</span></span><br><span class="line">        b = new Balloon(<span class="keyword">this</span>); </span><br><span class="line">        <span class="comment">// 赋值timer</span></span><br><span class="line">        timer = setInterval(function()&#123;</span><br><span class="line">            b.move();</span><br><span class="line">        &#125;, <span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/Uldf3R.png" alt="Uldf3R.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>面向对象</tag>
        <tag>构造函数</tag>
      </tags>
  </entry>
  <entry>
    <title>十二、构造函数的四步</title>
    <url>/post/23ea5654.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十二、构造函数的四步"><a href="#十二、构造函数的四步" class="headerlink" title="十二、构造函数的四步"></a>十二、构造函数的四步</h1><ol><li>开辟了一个新的内存空间</li><li>与this绑定</li><li>执行函数中的代码</li><li>返回this</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COFFEESCRIPT"><figure class="iseeu highlight /coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span> 定义构造函数</span><br><span class="line">function People(name, age, sex)&#123;</span><br><span class="line">    <span class="regexp">//</span> <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    <span class="keyword">this</span>.sex = sex;</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span> 当<span class="keyword">return</span>是值类型的时候 则忽略</span><br><span class="line">    <span class="regexp">//</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="regexp">//</span> <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    <span class="regexp">//</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="regexp">//</span> <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="regexp">//</span> <span class="keyword">return</span> <span class="literal">undefined</span>;</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span> 当<span class="keyword">return</span>是引用类型的时候 以<span class="keyword">return</span>为准</span><br><span class="line">    <span class="regexp">//</span> <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    <span class="regexp">//</span> <span class="keyword">return</span> [];</span><br><span class="line"></span><br><span class="line">    <span class="regexp">//</span> 所以，在构造函数中不要使用<span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> 初始化对象</span><br><span class="line">var xiaoming = <span class="keyword">new</span> People(<span class="string">"小明"</span>, <span class="number">12</span>, <span class="string">"男"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(xiaoming);</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>面向对象</tag>
        <tag>构造函数</tag>
      </tags>
  </entry>
  <entry>
    <title>十一、构造函数</title>
    <url>/post/1473fb3e.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十一、构造函数"><a href="#十一、构造函数" class="headerlink" title="十一、构造函数"></a>十一、构造函数</h1><ul><li><p>定义构造函数与定义普通函数没有任何区别</p></li><li><p><strong>定义构造函数首字母要大写</strong>，非语法要求，是业内约定成俗的</p></li></ul><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义普通函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dog</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Dog</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">people</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义构造函数 首字母大写 此要求非语法要求，是认为规定，业内约定成俗的</span></span><br><span class="line"><span class="comment">// 以后只要看到首字母是大写的，都可以认为它是构造函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建对象有 2 种方式</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;  <span class="comment">// 字面量</span></span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> <span class="type">Object</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(obj, obj1);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dog = <span class="keyword">new</span> <span class="type">Dog</span>();</span><br><span class="line"><span class="keyword">var</span> people = <span class="keyword">new</span> <span class="type">people</span>();</span><br></pre></td></tr></table></figure></div><p>通过构造函数实例化对象：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> people = <span class="keyword">new</span> <span class="type">people</span>();</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UldEnK.png" alt="UldEnK.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>面向对象</tag>
        <tag>构造函数</tag>
      </tags>
  </entry>
  <entry>
    <title>十、工厂模式的弊端</title>
    <url>/post/4f7077df.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十、工厂模式的弊端"><a href="#十、工厂模式的弊端" class="headerlink" title="十、工厂模式的弊端"></a>十、工厂模式的弊端</h1><p>工厂模式：定义一个对象，传递一些参数，最终返回一个对象</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TYPESCRIPT"><figure class="iseeu highlight /typescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义函数 创建人</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">people</span>(<span class="params">name, age, sex</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 定义对象</span></span><br><span class="line">    <span class="keyword">var</span> obj = &#123;</span><br><span class="line">        name: name,</span><br><span class="line">        age: age,</span><br><span class="line">        sex: sex</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返回对象</span></span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用函数，来创建不同的对象</span></span><br><span class="line"><span class="keyword">var</span> xiaoming = people(<span class="string">"小明"</span>, <span class="number">12</span>, <span class="string">"男"</span>);</span><br><span class="line"><span class="keyword">var</span> xiaohong = people(<span class="string">"小红"</span>, <span class="number">11</span>, <span class="string">"女"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义工厂 创建狗</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">dog</span>(<span class="params">name, age, sex, <span class="keyword">type</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> obj = &#123;</span><br><span class="line">        name: name,</span><br><span class="line">        age: age,</span><br><span class="line">        sex: sex,</span><br><span class="line">        <span class="keyword">type</span>: <span class="keyword">type</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返回对象</span></span><br><span class="line">    <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用函数，来创建不同的对象</span></span><br><span class="line"><span class="keyword">var</span> xiaoha = dog(<span class="string">"小哈"</span>, <span class="number">2</span>, <span class="string">"公"</span>, <span class="string">"哈士奇"</span>);</span><br><span class="line"><span class="keyword">var</span> xiaojin = dog(<span class="string">"小金"</span>, <span class="number">1</span>, <span class="string">"母"</span>, <span class="string">"金毛"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlaOXV.png" alt="UlaOXV.png"></p><ul><li><p>总结：</p><ul><li><p>对象和数组类型可以明显区分 object array</p></li><li><p>同是对象类型的创建的人的对象和狗的对象无法区分</p></li></ul></li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>面向对象</tag>
        <tag>工厂模式</tag>
      </tags>
  </entry>
  <entry>
    <title>九、滚动轮播图修改面向过程为面向对象</title>
    <url>/post/28a20d02.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="九、滚动轮播图修改面向过程为面向对象"><a href="#九、滚动轮播图修改面向过程为面向对象" class="headerlink" title="九、滚动轮播图修改面向过程为面向对象"></a>九、滚动轮播图修改面向过程为面向对象</h1><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/bindEvent.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/animate.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义一个函数，接收一个事件对象，返回滚轮滚动的方向 定义向上为false 向下为true</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">direction</span><span class="params">(e)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 使用e.wheelDelta 来判断是否是undefined 从而判断是哪个浏览器</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(e.wheelDelta);</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (<span class="keyword">typeof</span> e.wheelDelta === <span class="string">"undefined"</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log("是火狐");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 判断滚动方向</span></span></span><br><span class="line">            if (e.detail &gt; 0)&#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("向下滚动");</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("向上滚动");</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log("不是火狐");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 判断滚动方向</span></span></span><br><span class="line">            if (e.wheelDelta &gt; 0)&#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("向上滚动");</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("向下滚动");</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 以下使用的是面向对象的书写方式</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 我们要把carousel看成一个对象</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 既然carousel是一个对象了，就可以拥有一些属性或者方法</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义carousel对象</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> carousel = &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 容器属性</span></span></span><br><span class="line"><span class="javascript">        dom: <span class="built_in">document</span>.getElementById(<span class="string">"carousel"</span>),</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 图片列表属性</span></span></span><br><span class="line"><span class="javascript">        unit: <span class="built_in">document</span>.getElementById(<span class="string">"unit"</span>),</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 定义length属性</span></span></span><br><span class="line"><span class="javascript">        length: <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>).length - <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 定义锁</span></span></span><br><span class="line"><span class="actionscript">        lock: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 定义信号量</span></span></span><br><span class="line">        idx: 0,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 图片向左的方法 相当于右按钮点击事件</span></span></span><br><span class="line"><span class="actionscript">        left: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 函数节流</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (!<span class="keyword">this</span>.lock)&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 关闭锁</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.lock = <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 备份this</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> me = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 先拉动 再瞬移</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 信号量改变</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.idx++;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 拉动</span></span></span><br><span class="line"><span class="actionscript">            animate(<span class="keyword">this</span>.unit, &#123;<span class="string">"left"</span>: - <span class="keyword">this</span>.idx * <span class="keyword">this</span>.dom.clientWidth&#125;, <span class="number">1000</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 验证信号量</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(me);</span></span><br><span class="line">                if (me.idx &gt; me.length - 1)&#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 让idx归0</span></span></span><br><span class="line">                    me.idx = 0;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 拉回原位</span></span></span><br><span class="line">                    me.unit.style.left = 0;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 开锁</span></span></span><br><span class="line"><span class="actionscript">                me.lock = <span class="literal">true</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">// 图片向右的方法 相当于左按钮事件</span></span></span><br><span class="line"><span class="actionscript">        right: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 函数节流</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (!<span class="keyword">this</span>.lock)&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 关闭锁</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.lock = <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 备份this</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> me = <span class="keyword">this</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 先瞬移 再拉动</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 信号量改变</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>.idx--;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 边界判定</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">if</span> (<span class="keyword">this</span>.idx &lt; <span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.idx = <span class="keyword">this</span>.length - <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 瞬移到猫腻图</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.unit.style.left = - <span class="keyword">this</span>.length * <span class="keyword">this</span>.dom.clientWidth + <span class="string">"px"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 再拉动</span></span></span><br><span class="line"><span class="actionscript">            animate(<span class="keyword">this</span>.unit, &#123;<span class="string">"left"</span>: - <span class="keyword">this</span>.idx * <span class="keyword">this</span>.dom.clientWidth&#125;, <span class="number">1000</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(me);</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 开锁</span></span></span><br><span class="line"><span class="actionscript">                me.lock = <span class="literal">true</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 给document添加鼠标滚轮事件</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.onmousewheel = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line">        if (direction(e))&#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 说明是往下滚动 调用carousel的left方法</span></span></span><br><span class="line">            carousel.left();</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 说明是向上滚动 调用carousel的right方法</span></span></span><br><span class="line">            carousel.right();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/11/UlaTYj.png" alt="UlaTYj.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>滚动</tag>
        <tag>轮播图</tag>
        <tag>面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>八、面向对象</title>
    <url>/post/25c78a98.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="八、面向对象"><a href="#八、面向对象" class="headerlink" title="八、面向对象"></a>八、面向对象</h1><h2 id="8-1-面向过程"><a href="#8-1-面向过程" class="headerlink" title="8.1  面向过程"></a>8.1 面向过程</h2><p>之前我们所写的代码都是面向过程的书写方式</p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">var</span> name1 = <span class="string">"老王"</span>;</span><br><span class="line"><span class="built_in">var</span> <span class="built_in">length</span> = <span class="number">180</span>;</span><br><span class="line"><span class="built_in">var</span> age = <span class="number">30</span>;</span><br><span class="line"><span class="built_in">var</span> sex = <span class="string">"男"</span>;</span><br></pre></td></tr></table></figure></div><p>面向过程：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line">var person = &#123;</span><br><span class="line"><span class="symbol">    name1:</span> <span class="string">"老王"</span>,</span><br><span class="line"><span class="symbol">    length:</span> <span class="number">180</span>,</span><br><span class="line"><span class="symbol">    age:</span> <span class="number">30</span>,</span><br><span class="line"><span class="symbol">    sex:</span> <span class="string">"男"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="8-2-面向对象"><a href="#8-2-面向对象" class="headerlink" title="8.2  面向对象"></a>8.2 面向对象</h2><p>也就是说，面向对象是面向过程的另一种书写代码的方式</p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 函数可以传递参数，我们将可变的提取为函数的参数，把不变的写死</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createObject</span>(<span class="params">name, length, age, sex</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> person = &#123;</span><br><span class="line">        name1: name,</span><br><span class="line">        length: length,</span><br><span class="line">        age: age,</span><br><span class="line">        sex: sex,</span><br><span class="line">        <span class="comment">// 对象可以定义方法</span></span><br><span class="line">        sayHello: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"大家好，我的名字叫做："</span> + <span class="keyword">this</span>.name1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 返回对象</span></span><br><span class="line">    <span class="keyword">return</span> person;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 尝试再次调用createObject函数</span></span><br><span class="line"><span class="comment">// 现在每次调用createObject函数即可以得到不同的对象</span></span><br><span class="line"><span class="keyword">var</span> xiaoming = createObject(<span class="string">"小明"</span>, <span class="number">160</span>, <span class="number">12</span>, <span class="string">"男"</span>);</span><br><span class="line"><span class="keyword">var</span> xiaohong = createObject(<span class="string">"小红"</span>, <span class="number">165</span>, <span class="number">11</span>, <span class="string">"女"</span>);</span><br><span class="line"><span class="comment">// 调用对象中的方法</span></span><br><span class="line">xiaoming.sayHello();</span><br><span class="line">xiaohong.sayHello();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 此时这个函数被称为 “简单工厂”</span></span><br><span class="line"><span class="comment">// 这种思想模式，叫做 “工厂模式”</span></span><br><span class="line"><span class="comment">// 对象中可以有属性和方法，方法也是属性，不过是特殊属性</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>面向对象</tag>
      </tags>
  </entry>
  <entry>
    <title>七、小钢琴</title>
    <url>/post/a261f5db.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="七、小钢琴"><a href="#七、小钢琴" class="headerlink" title="七、小钢琴"></a>七、小钢琴</h1><h2 id="7-1-dom结构"><a href="#7-1-dom结构" class="headerlink" title="7.1  dom结构"></a>7.1 dom结构</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">id</span>=<span class="string">"audio"</span> <span class="attr">autoplay</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="7-2-CSS样式"><a href="#7-2-CSS样式" class="headerlink" title="7.2  CSS样式"></a>7.2 CSS样式</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">1px</span> solid blue;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">    <span class="attribute">border-right</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="7-3-执行代码"><a href="#7-3-执行代码" class="headerlink" title="7.3  执行代码"></a>7.3 执行代码</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> lis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</span><br><span class="line"><span class="keyword">var</span> audio = <span class="built_in">document</span>.getElementById(<span class="string">"audio"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加onkeydown事件</span></span><br><span class="line"><span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// console.log(e);</span></span><br><span class="line">    <span class="comment">// 获取用户按下的字符</span></span><br><span class="line">    <span class="comment">// console.log(e.key);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用switch条件语句</span></span><br><span class="line">    <span class="keyword">switch</span> (e.key) &#123;</span><br><span class="line">        <span class="comment">// case "1":</span></span><br><span class="line">        <span class="comment">//     lis[e.key - 1].style.backgroundColor = "red";</span></span><br><span class="line">        <span class="comment">//     break;</span></span><br><span class="line">        <span class="comment">// case "2":</span></span><br><span class="line">        <span class="comment">//     lis[e.key - 1].style.backgroundColor = "orange";</span></span><br><span class="line">        <span class="comment">//     break;</span></span><br><span class="line">        <span class="comment">// case "3":</span></span><br><span class="line">        <span class="comment">//     lis[e.key - 1].style.backgroundColor = "yellow";</span></span><br><span class="line">        <span class="comment">//     break;</span></span><br><span class="line">        <span class="comment">// case "4":</span></span><br><span class="line">        <span class="comment">//     lis[e.key - 1].style.backgroundColor = "green";</span></span><br><span class="line">        <span class="comment">//     break;                </span></span><br><span class="line">        <span class="comment">// case "5":</span></span><br><span class="line">        <span class="comment">//     lis[e.key - 1].style.backgroundColor = "blue";</span></span><br><span class="line">        <span class="comment">//     break;</span></span><br><span class="line">        <span class="comment">// case "6":</span></span><br><span class="line">        <span class="comment">//     lis[e.key - 1].style.backgroundColor = "indigo";</span></span><br><span class="line">        <span class="comment">//     break;</span></span><br><span class="line">        <span class="comment">// case "7":</span></span><br><span class="line">        <span class="comment">//     lis[e.key - 1].style.backgroundColor = "purple";</span></span><br><span class="line">        <span class="comment">//     break;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> <span class="string">"1"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"2"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"3"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"4"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"5"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"6"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"7"</span>:</span><br><span class="line">            lis[e.key - <span class="number">1</span>].style.backgroundColor = <span class="string">"red"</span>;</span><br><span class="line">            audio.src = <span class="string">"audio/"</span> + e.key + <span class="string">".mp3"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"你按的是"</span> + e.key + <span class="string">",别瞎按"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 键盘抬起</span></span><br><span class="line"><span class="built_in">document</span>.onkeyup = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 使用switch</span></span><br><span class="line">    <span class="keyword">switch</span> (e.key) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"1"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"2"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"3"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"4"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"5"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"6"</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"7"</span>:</span><br><span class="line">            lis[e.key - <span class="number">1</span>].style.backgroundColor = <span class="string">"white"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="7-4-执行结果"><a href="#7-4-执行结果" class="headerlink" title="7.4  执行结果"></a>7.4 执行结果</h2><p><img src="https://s1.ax1x.com/2020/07/10/UMRqV1.png" alt="UMRqV1.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>onkeydown</tag>
        <tag>小钢琴</tag>
      </tags>
  </entry>
  <entry>
    <title>六、尝试给div添加onkeydown事件</title>
    <url>/post/3ab94403.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="六、尝试给div添加onkeydown事件"><a href="#六、尝试给div添加onkeydown事件" class="headerlink" title="六、尝试给div添加onkeydown事件"></a>六、尝试给div添加onkeydown事件</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">"box"</span> tabIndex=<span class="string">"2"</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果要给document添加onkeydown事件，直接添加即可</span></span><br><span class="line"><span class="comment">// 如果要给一个div元素添加onkeydown事件，要想办法让div获取焦点，获取焦点的方式就是添加tabIndex属性，tabIndex属性的值决定了当按下tab键的时候获取焦点的顺序</span></span><br><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = document.getElementById(<span class="string">"box"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加onkeydown事件</span></span><br><span class="line">box.onkeydown = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    console.log(<span class="string">"键盘按下了"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMR52F.png" alt="UMR52F.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>onkeydown</tag>
      </tags>
  </entry>
  <entry>
    <title>五、tabIndex</title>
    <url>/post/dba790b3.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="五、tabIndex"><a href="#五、tabIndex" class="headerlink" title="五、tabIndex"></a>五、tabIndex</h1><ul><li><p>该属性是html的标准属性</p></li><li><p>页面中的元素有很多，当用户失去鼠标的时候，可以通过键盘上的tab键来选择元素</p></li><li><p>按下tab键是按照顺序来获取元素的焦点</p></li><li><p>按下tab + shift键 是逆序来获取元素的焦点</p></li><li><p>tabIndex的属性值决定了按下tab键的获取顺序</p></li></ul><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">tabIndex</span>=<span class="string">"1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">tabIndex</span>=<span class="string">"2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">tabIndex</span>=<span class="string">"3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">tabIndex</span>=<span class="string">"5"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">tabIndex</span>=<span class="string">"6"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">tabIndex</span>=<span class="string">"7"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">tabIndex</span>=<span class="string">"8"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">tabIndex</span>=<span class="string">"9"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">tabIndex</span>=<span class="string">"10"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">tabIndex</span>=<span class="string">"4"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>显示结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMRW5V.png" alt="UMRW5V.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>tabIndex</tag>
      </tags>
  </entry>
  <entry>
    <title>四、键盘事件</title>
    <url>/post/4c876ecc.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="四、键盘事件"><a href="#四、键盘事件" class="headerlink" title="四、键盘事件"></a>四、键盘事件</h1><p>onkeyDown 当键盘按下的时候触发</p><p>绑定方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 键盘按下</span></span><br><span class="line"><span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"键盘按下了"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 键盘抬起</span></span><br><span class="line"><span class="built_in">document</span>.onkeyup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"键盘抬起了"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 有字符输入</span></span><br><span class="line"><span class="built_in">document</span>.onkeypress = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"有字符输入了"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>输出结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMRRU0.png" alt="UMRRU0.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>键盘事件</tag>
      </tags>
  </entry>
  <entry>
    <title>三、滚动轮播图</title>
    <url>/post/2717c515.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="三、滚动轮播图"><a href="#三、滚动轮播图" class="headerlink" title="三、滚动轮播图"></a>三、滚动轮播图</h1><h2 id="3-1-dom结构"><a href="#3-1-dom结构" class="headerlink" title="3.1  dom结构"></a>3.1 dom结构</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"carousel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"unit"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 最后一张为猫腻图 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="3-2-CSS样式"><a href="#3-2-CSS样式" class="headerlink" title="3.2  CSS样式"></a>3.2 CSS样式</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 清楚默认样式 */</span></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#carousel</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 滚动轮播图的关键：unit的宽度要足够宽，所有图片并排在一起 */</span></span><br><span class="line"><span class="selector-id">#carousel</span> <span class="selector-id">#unit</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5000px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#carousel</span> <span class="selector-id">#unit</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="3-3-执行代码"><a href="#3-3-执行代码" class="headerlink" title="3.3  执行代码"></a>3.3 执行代码</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/bindEvent.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/animate.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> unit = <span class="built_in">document</span>.getElementById(<span class="string">"unit"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> carousel = <span class="built_in">document</span>.getElementById(<span class="string">"carousel"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义宽度</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> width = carousel.clientWidth;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(width);</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义length</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> length = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>).length - <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(length);</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义锁</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> lock = <span class="literal">true</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义信号量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> idx = <span class="number">0</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 绑定事件</span></span></span><br><span class="line"><span class="actionscript">    bindEvent(unit, <span class="string">"mousewheel"</span>, <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 函数节流</span></span></span><br><span class="line">        if (!lock)&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 关闭锁</span></span></span><br><span class="line"><span class="actionscript">        lock = <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(direction(e));</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 如果返回true 向下滚动 相当于右按钮点击事件</span></span></span><br><span class="line">        if (direction(e))&#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 图片应该从右边进来</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 右按钮的的拉动策略： 先拉动，再瞬移</span></span></span><br><span class="line">            idx++;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 拉动 调用animate函数</span></span></span><br><span class="line"><span class="actionscript">            animate(unit, &#123;left: - idx * width&#125;, <span class="number">1000</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; </span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 验证信号量</span></span></span><br><span class="line">                if (idx &gt; length - 1)&#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// idx 归0</span></span></span><br><span class="line">                    idx = 0;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 拉回原位</span></span></span><br><span class="line">                    unit.style.left = 0; </span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 开锁</span></span></span><br><span class="line"><span class="actionscript">                lock = <span class="literal">true</span>;</span></span><br><span class="line">            &#125;);</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 图片应该从左侧进入 相当于左按钮事件</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 拉动策略： 先瞬移 再拉动</span></span></span><br><span class="line">            idx--;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 边界判定</span></span></span><br><span class="line">            if (idx &lt; 0)&#123;</span><br><span class="line">                idx = length - 1;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 瞬移到猫腻图</span></span></span><br><span class="line"><span class="actionscript">                unit.style.left = -length * width + <span class="string">"px"</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 拉动</span></span></span><br><span class="line"><span class="actionscript">            animate(unit, &#123;left: - idx * width&#125;, <span class="number">1000</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("动画完成");</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 开锁</span></span></span><br><span class="line"><span class="actionscript">                lock = <span class="literal">true</span>;</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义一个函数，接收一个事件对象，返回滚轮滚动的方向 定义向上为false 向下为true</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">direction</span><span class="params">(e)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 使用e.wheelDelta 来判断是否是undefined 从而判断是哪个浏览器</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(e.wheelDelta);</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (<span class="keyword">typeof</span> e.wheelDelta === <span class="string">"undefined"</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log("是火狐");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 判断滚动方向</span></span></span><br><span class="line">            if (e.detail &gt; 0)&#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("向下滚动");</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("向上滚动");</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log("不是火狐");</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 判断滚动方向</span></span></span><br><span class="line">            if (e.wheelDelta &gt; 0)&#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("向上滚动");</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// console.log("向下滚动");</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="3-3-1-animate-js"><a href="#3-3-1-animate-js" class="headerlink" title="3.3.1  animate.js"></a>3.3.1 animate.js</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">dom,json,time,callBack</span>)</span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">        逻辑分析：</span></span><br><span class="line"><span class="comment">            定义间隔定时器，循环动画到目标值</span></span><br><span class="line"><span class="comment">            既然是循环动画，那么每一次动画都是一个步长</span></span><br><span class="line"><span class="comment">            步长值 = 总距离 / 总次数</span></span><br><span class="line"><span class="comment">            总距离 = 目标值 - 初始值</span></span><br><span class="line"><span class="comment">            总次数 = 总时间 / 定时器间隔时间</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计数器</span></span><br><span class="line">    <span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 定义间隔时间</span></span><br><span class="line">    <span class="keyword">var</span> interval = <span class="number">20</span>;</span><br><span class="line">    <span class="comment">// 总次数 = 总时间 / 间隔时间</span></span><br><span class="line">    <span class="keyword">var</span> allCount = time / interval;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取元素的总距离，就是用目标值 - 初始值</span></span><br><span class="line">    <span class="comment">// json里面传递的都是目标值</span></span><br><span class="line">    <span class="comment">// 定义一个nowJson 用于保存元素的初始值</span></span><br><span class="line">    <span class="keyword">var</span> nowJson = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> json)&#123;</span><br><span class="line">    <span class="comment">// console.log(i);   // left top</span></span><br><span class="line">    <span class="comment">// nowJson[i] = getComputedStyle(dom)[i];  // &#123;left: "50px", top: "50px"&#125; 字符串类型</span></span><br><span class="line">    <span class="comment">// 转为number类型</span></span><br><span class="line">    nowJson[i] = <span class="built_in">parseInt</span>(getComputedStyle(dom)[i]);   <span class="comment">// &#123;left: 50, top: 50&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// console.log(nowJson);</span></span><br><span class="line">    <span class="comment">// 循环完毕之后初始值也就有了</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算总距离，再得到步长值</span></span><br><span class="line">    <span class="keyword">var</span> stepJson = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> json)&#123;</span><br><span class="line">        <span class="comment">// 步长值 = （目标值 - 初始值）/ 总次数</span></span><br><span class="line">        stepJson[i] = (json[i] - nowJson[i]) / allCount</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// console.log(stepJson);   // &#123;left: 19, top: 9&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义定时器</span></span><br><span class="line">    <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 计数器++</span></span><br><span class="line">        count ++;</span><br><span class="line">        <span class="comment">// 改变dom的定位值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> json)&#123;</span><br><span class="line">            <span class="comment">// 当前值 = 初始值 + 步长值 * 次数</span></span><br><span class="line">            dom.style[i] = nowJson[i] + stepJson[i] * count + <span class="string">"px"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判断是否到达边界</span></span><br><span class="line">        <span class="keyword">if</span> (count &gt;= allCount)&#123;</span><br><span class="line">            <span class="comment">// 停止定时器</span></span><br><span class="line">            clearInterval(timer);</span><br><span class="line">            <span class="comment">// 执行回调函数 短路语法 存在callBack 执行后面的，不存在就执行前面的</span></span><br><span class="line">            callBack &amp;&amp; callBack();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, interval);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="3-3-2-bindEvent-js"><a href="#3-3-2-bindEvent-js" class="headerlink" title="3.3.2  bindEvent.js"></a>3.3.2 bindEvent.js</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个函数，可以实现多个浏览器的事件绑定</span></span><br><span class="line"><span class="keyword">function</span> bind<span class="constructor">Event(<span class="params">dom</span>, <span class="params">type</span>, <span class="params">fn</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断type类型</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">type</span>.<span class="keyword">to</span><span class="constructor">LowerCase()</span><span class="operator"> === </span><span class="string">"mousewheel"</span>)&#123;</span><br><span class="line">        <span class="comment">// 判断是否是火狐浏览器</span></span><br><span class="line">        var isFF = window.navigator.userAgent.index<span class="constructor">Of(<span class="string">"Firefox"</span>)</span><span class="operator"> === </span>- <span class="number">1</span> ? <span class="literal">false</span> : <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// console.log(isFF);</span></span><br><span class="line">        <span class="comment">// 如果是火狐 要添加DOMMouseScroll事件</span></span><br><span class="line">        <span class="keyword">if</span> (isFF)&#123;</span><br><span class="line">            dom.add<span class="constructor">EventListener(<span class="string">"DOMMouseScroll"</span>, <span class="params">fn</span>, <span class="params">false</span>)</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 使用能力检测，检测浏览器支持哪种浏览器</span></span><br><span class="line">    <span class="keyword">if</span> (dom.addEventListener)&#123;</span><br><span class="line">        <span class="comment">// 说明是高级浏览器  IE没有第三个参数，只支持冒泡，在这里直接写死，绑定到冒泡阶段</span></span><br><span class="line">        dom.add<span class="constructor">EventListener(<span class="params">type</span>, <span class="params">fn</span>, <span class="params">false</span>)</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dom.attachEvent)&#123;</span><br><span class="line">        <span class="comment">// 说明是IE中的高级版本</span></span><br><span class="line">        dom.attach<span class="constructor">Event(<span class="string">"on"</span> + <span class="params">type</span>, <span class="params">fn</span>)</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 说明是其他不知名浏览器</span></span><br><span class="line">        <span class="comment">// dom.onclick = function()&#123;&#125;</span></span><br><span class="line">        dom<span class="literal">["<span class="identifier">on</span>" + <span class="identifier">type</span>]</span> = fn;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>滚动</tag>
        <tag>轮播图</tag>
      </tags>
  </entry>
  <entry>
    <title>二、事件对象</title>
    <url>/post/e41ef9d2.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="二、事件对象"><a href="#二、事件对象" class="headerlink" title="二、事件对象"></a>二、事件对象</h1><p>在鼠标的点击事件中，我们关心的是鼠标的位置</p><p>在鼠标滚轮事件中，我们关心的是鼠标滚轮的方向</p><h2 id="2-1-在chrome和IE中"><a href="#2-1-在chrome和IE中" class="headerlink" title="2.1  在chrome和IE中"></a>2.1 在chrome和IE中</h2><p><img src="https://s1.ax1x.com/2020/07/10/UMRAc4.png" alt="UMRAc4.png"></p><ul><li><p>在chrome中：</p><ul><li><p>向下滚动： -120的倍数</p></li><li><p>向上滚动： 120的倍数</p></li></ul></li></ul><p><img src="https://s1.ax1x.com/2020/07/10/UMRM4K.png" alt="UMRM4K.png"></p><ul><li><p>在IE中：</p><ul><li><p>向下滚动： -120的倍数</p></li><li><p>向上滚动： 120的倍数</p></li></ul></li></ul><p><img src="https://s1.ax1x.com/2020/07/10/UMR8jH.png" alt="UMR8jH.png"></p><ul><li><p>总结：</p><ul><li><p>在非火狐中（IE、chrome）指示鼠标滚轮方向的属性是：e.wheelDelta</p></li><li><p>向下滚动：是-120的倍数</p></li><li><p>向上滚动：是120的倍数</p></li></ul></li></ul><h2 id="2-2-在火狐浏览器中"><a href="#2-2-在火狐浏览器中" class="headerlink" title="2.2  在火狐浏览器中"></a>2.2 在火狐浏览器中</h2><p><img src="https://s1.ax1x.com/2020/07/10/UMR0C8.png" alt="UMR0C8.png"></p><ul><li><p>在火狐中：火狐不支持onmousewheel，而是支持DOMMouseScroll</p><ul><li><p>向下滚动：3的倍数</p></li><li><p>向上滚动：-3的倍数</p></li></ul></li></ul><p><img src="https://s1.ax1x.com/2020/07/10/UMRDgg.png" alt="UMRDgg.png"></p><ul><li><p>总结：</p><ul><li><p>在火狐中指示鼠标滚轮方向的属性是：e.detail</p></li><li><p>向下滚动：是3的倍数</p></li><li><p>向上滚动：是 - 3的倍数</p></li></ul></li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>事件对象</tag>
      </tags>
  </entry>
  <entry>
    <title>一、mousewheel鼠标滚轮事件</title>
    <url>/post/2341c19b.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="一、mousewheel鼠标滚轮事件"><a href="#一、mousewheel鼠标滚轮事件" class="headerlink" title="一、mousewheel鼠标滚轮事件"></a>一、mousewheel鼠标滚轮事件</h1><h2 id="1-1-定义一个函数，实现多个浏览器的绑定"><a href="#1-1-定义一个函数，实现多个浏览器的绑定" class="headerlink" title="1.1  定义一个函数，实现多个浏览器的绑定"></a>1.1 定义一个函数，实现多个浏览器的绑定</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个函数，可以实现多个浏览器的事件绑定</span></span><br><span class="line"><span class="keyword">function</span> bind<span class="constructor">Event(<span class="params">dom</span>, <span class="params">type</span>, <span class="params">fn</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断type类型</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">type</span>.<span class="keyword">to</span><span class="constructor">LowerCase()</span><span class="operator"> === </span><span class="string">"mousewheel"</span>)&#123;</span><br><span class="line">        <span class="comment">// 判断是否是火狐浏览器</span></span><br><span class="line">        var isFF = window.navigator.userAgent.index<span class="constructor">Of(<span class="string">"Firefox"</span>)</span><span class="operator"> === </span>- <span class="number">1</span> ? <span class="literal">false</span> : <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// console.log(isFF);</span></span><br><span class="line">        <span class="comment">// 如果是火狐 要添加DOMMouseScroll事件</span></span><br><span class="line">        <span class="keyword">if</span> (isFF)&#123;</span><br><span class="line">            dom.add<span class="constructor">EventListener(<span class="string">"DOMMouseScroll"</span>, <span class="params">fn</span>, <span class="params">false</span>)</span>;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 使用能力检测，检测浏览器支持哪种浏览器</span></span><br><span class="line">    <span class="keyword">if</span> (dom.addEventListener)&#123;</span><br><span class="line">        <span class="comment">// 说明是高级浏览器  IE没有第三个参数，只支持冒泡，在这里直接写死，绑定到冒泡阶段</span></span><br><span class="line">        dom.add<span class="constructor">EventListener(<span class="params">type</span>, <span class="params">fn</span>, <span class="params">false</span>)</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dom.attachEvent)&#123;</span><br><span class="line">        <span class="comment">// 说明是IE中的高级版本</span></span><br><span class="line">        dom.attach<span class="constructor">Event(<span class="string">"on"</span> + <span class="params">type</span>, <span class="params">fn</span>)</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 说明是其他不知名浏览器</span></span><br><span class="line">        <span class="comment">// dom.onclick = function()&#123;&#125;</span></span><br><span class="line">        dom<span class="literal">["<span class="identifier">on</span>" + <span class="identifier">type</span>]</span> = fn;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="1-2-onmousewheel事件"><a href="#1-2-onmousewheel事件" class="headerlink" title="1.2  onmousewheel事件"></a>1.2 onmousewheel事件</h2><p>该事件触发的条件：当鼠标滚轮上下滚动的时候</p><p>兼容性：</p><blockquote><p>火狐不支持mousewheel事件，支持DOMMouseScroll事件</p></blockquote><p>绑定方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 给document绑定鼠标滚动事件</span></span><br><span class="line"><span class="built_in">document</span>.onmousewheel = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"滚动滚轮了"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><ul><li>在chrome中：</li></ul><p><img src="https://s1.ax1x.com/2020/07/10/UM25nA.png" alt="UM25nA.png"></p><ul><li>在IE中：</li></ul><p><img src="https://s1.ax1x.com/2020/07/10/UM2Htf.png" alt="UM2Htf.png"></p><ul><li><p>在火狐浏览器中：</p><ul><li><p>滚动滚轮，没有反应</p></li><li><p>原因是火狐不支持mousewheel事件</p></li></ul></li></ul><p>支持方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(“DOMMouseScroll”, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"DOMMouseScroll"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"火狐中滚动"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UM2xns.png" alt="UM2xns.png"></p><h2 id="1-3-阻止默认事件"><a href="#1-3-阻止默认事件" class="headerlink" title="1.3  阻止默认事件"></a>1.3 阻止默认事件</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">bindEvent(<span class="built_in">document</span>, <span class="string">"mousewheel"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">123</span>);</span><br><span class="line">    <span class="comment">// 阻止默认onscroll事件，使得滚动鼠标时，滚动条不发生改变</span></span><br><span class="line">    <span class="comment">// e.preventDefault();</span></span><br><span class="line">    <span class="keyword">if</span> (e.preventDefault)&#123;</span><br><span class="line">        <span class="comment">// 谷歌 火狐中阻止默认事件执行的方式</span></span><br><span class="line">        e.preventDefault();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// IE中阻止默认事件执行的方式</span></span><br><span class="line">        e.returnValue = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-04</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>mousewheel</tag>
        <tag>鼠标滚轮</tag>
      </tags>
  </entry>
  <entry>
    <title>九、裁剪</title>
    <url>/post/b52ab25d.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="九、裁剪"><a href="#九、裁剪" class="headerlink" title="九、裁剪"></a>九、裁剪</h1><h2 id="9-1-dom结构"><a href="#9-1-dom结构" class="headerlink" title="9.1  dom结构"></a>9.1 dom结构</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"mask"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"area"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"dot"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><h2 id="9-2-css"><a href="#9-2-css" class="headerlink" title="9.2  css"></a>9.2 css</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">430px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">430px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(images/small.jpg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#mask</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#area</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(images/small.jpg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#dot</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: -<span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="9-3-执行代码"><a href="#9-3-执行代码" class="headerlink" title="9.3  执行代码"></a>9.3 执行代码</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="keyword">var</span> area = <span class="built_in">document</span>.getElementById(<span class="string">"area"</span>);</span><br><span class="line"><span class="keyword">var</span> dot = <span class="built_in">document</span>.getElementById(<span class="string">"dot"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给dot添加mousedown事件</span></span><br><span class="line">dot.onmousedown =<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 点击dot时会拖动area移动，需要阻止冒泡</span></span><br><span class="line">    e.stopPropagation();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取鼠标位于视口的位置</span></span><br><span class="line">    <span class="keyword">var</span> x = e.clientX;</span><br><span class="line">    <span class="keyword">var</span> y = e.clientY;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取area的宽度和高度</span></span><br><span class="line">    <span class="keyword">var</span> a_width = area.clientWidth;</span><br><span class="line">    <span class="keyword">var</span> a_height = area.clientHeight;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给document添加mousemove事件</span></span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 获取鼠标移动后的位置</span></span><br><span class="line">        <span class="keyword">var</span> m_x = e.clientX;</span><br><span class="line">        <span class="keyword">var</span> m_y = e.clientY;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义变量 用于简化代码</span></span><br><span class="line">        <span class="keyword">var</span> resultX = m_x - x + a_width;</span><br><span class="line">        <span class="keyword">var</span> resultY = m_y - y + a_height;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 进行边界限制</span></span><br><span class="line">        <span class="keyword">if</span> (resultX &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            resultX = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultX &gt; box.clientWidth - area.offsetLeft)&#123;</span><br><span class="line">            resultX = box.clientWidth - area.offsetLeft;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resultY &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            resultY = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultY &gt; box.clientHeight - area.offsetTop)&#123;</span><br><span class="line">            resultY = box.clientHeight - area.offsetTop;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 赋值area的宽度和高度</span></span><br><span class="line">        area.style.width = resultX + <span class="string">"px"</span>;</span><br><span class="line">        area.style.height = resultY + <span class="string">"px"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给area添加点击移动事件</span></span><br><span class="line">area.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取鼠标位于视口的位置</span></span><br><span class="line">    <span class="keyword">var</span> x = e.clientX;</span><br><span class="line">    <span class="keyword">var</span> y = e.clientY;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取元素定位值</span></span><br><span class="line">    <span class="keyword">var</span> a_left = <span class="keyword">this</span>.offsetLeft</span><br><span class="line">    <span class="keyword">var</span> a_top = <span class="keyword">this</span>.offsetTop;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给document添加移动事件</span></span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 获取鼠标移动后的位置</span></span><br><span class="line">        <span class="keyword">var</span> m_x = e.clientX;</span><br><span class="line">        <span class="keyword">var</span> m_y = e.clientY;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义变量 简化书写</span></span><br><span class="line">        <span class="keyword">var</span> resultX = m_x - x + a_left;</span><br><span class="line">        <span class="keyword">var</span> resultY = m_y - y + a_top;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 进行边界限定</span></span><br><span class="line">        <span class="keyword">if</span> (resultX &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            resultX = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultX &gt; box.clientWidth - area.clientWidth)&#123;</span><br><span class="line">            resultX = box.clientWidth - area.clientWidth;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resultY &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            resultY = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultY &gt; box.clientHeight - area.clientHeight)&#123;</span><br><span class="line">            resultY = box.clientHeight - area.clientHeight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 赋值area的定位值</span></span><br><span class="line">        area.style.left = resultX + <span class="string">"px"</span>;</span><br><span class="line">        area.style.top = resultY + <span class="string">"px"</span>;</span><br><span class="line">        <span class="comment">// 改变图片的背景定位</span></span><br><span class="line">        area.style.backgroundPositionX = - resultX + <span class="string">"px"</span>;</span><br><span class="line">        area.style.backgroundPositionY = - resultY + <span class="string">"px"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标抬起 取消mousemove事件</span></span><br><span class="line"><span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="9-4-输出结果"><a href="#9-4-输出结果" class="headerlink" title="9.4  输出结果"></a>9.4 输出结果</h2><p><img src="https://s1.ax1x.com/2020/07/10/UM2ctK.png" alt="UM2ctK.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-03</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>裁剪</tag>
      </tags>
  </entry>
  <entry>
    <title>八、节流</title>
    <url>/post/6a7f09eb.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="八、节流"><a href="#八、节流" class="headerlink" title="八、节流"></a>八、节流</h1><p>onscroll是一个高频率的事件，如果将代码直接放入事件中，代码将会被执行很多次，很浪费运算资源。为了避免代码被执行多次，我们定义一个延时器，将要执行的代码放入延时器中，在频繁执行该事件的时候，先清楚之前的延时器，再开启一个新的延时器，从而保证代码只执行一次。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> $box = $(<span class="string">"#box"</span>);</span><br><span class="line"><span class="comment">// 使用延时器节流</span></span><br><span class="line"><span class="comment">// 定义一个定时器</span></span><br><span class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给document添加scroll事件</span></span><br><span class="line"><span class="built_in">document</span>.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">123</span>);</span><br><span class="line">    <span class="comment">// 如果页面卷动值大于或等于2000 让box出现</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.documentElement.scrollTop &gt;= <span class="number">2000</span>)&#123;</span><br><span class="line">        <span class="comment">// 先清除之前的定时器</span></span><br><span class="line">        clearTimeout(timer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 赋值定时器</span></span><br><span class="line">        timer = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            $box.animate(&#123;<span class="attr">opacity</span>: <span class="number">1</span>&#125;, <span class="number">2000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"出现了"</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;, <span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-03</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>节流</tag>
      </tags>
  </entry>
  <entry>
    <title>七、onscroll事件</title>
    <url>/post/be8cd51c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="七、onscroll事件"><a href="#七、onscroll事件" class="headerlink" title="七、onscroll事件"></a>七、onscroll事件</h1><p>当页面卷动的时候会触发该事件</p><p>在一个页面中，视口是一定的，当页面的高度比视口高的时候，此时页面将出现滚动条。这个时候，当我们改变滚动条位置的时候，会触发onscroll事件。</p><p>触发该事件的条件：改变页面卷动值</p><p>触发该事件的条件有很多，比如：</p><ul><li><p>鼠标滚轮滚动</p></li><li><p>键盘上空格键</p></li><li><p>键盘上的pageUp和pageDown</p></li><li><p>键盘上的上下键</p></li></ul><p>绑定方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 给document.body添加scroll事件</span></span><br><span class="line"><span class="built_in">document</span>.body.onscroll = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"123"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>当鼠标滚轮滚动时：</p><p><img src="https://s1.ax1x.com/2020/07/10/UM2r01.png" alt="UM2r01.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-03</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>onscroll</tag>
      </tags>
  </entry>
  <entry>
    <title>六、页面卷动值和IE中的透明度</title>
    <url>/post/1df6e8d6.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="六、页面卷动值和IE中的透明度"><a href="#六、页面卷动值和IE中的透明度" class="headerlink" title="六、页面卷动值和IE中的透明度"></a>六、页面卷动值和IE中的透明度</h1><h2 id="6-1-页面卷动值"><a href="#6-1-页面卷动值" class="headerlink" title="6.1  页面卷动值"></a>6.1 页面卷动值</h2><p><img src="https://s1.ax1x.com/2020/07/10/UM2NfU.png" alt="UM2NfU.png"></p><p>页面卷动值指的是：</p><blockquote><p>在页面中，视口上面看不到的部分，也就是被卷起来的部分</p></blockquote><p>获取页面卷动值的方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">document</span><span class="selector-class">.documentElement</span><span class="selector-class">.scrollTop</span>  新版本的<span class="selector-tag">chrome</span>、火狐、<span class="selector-tag">IE</span>都支持</span><br><span class="line"><span class="selector-tag">document</span><span class="selector-class">.body</span><span class="selector-class">.scrollTop</span>             老版本的<span class="selector-tag">chrome</span>或者一些其他的浏览器支持的</span><br></pre></td></tr></table></figure></div><h2 id="6-2-IE中的透明度"><a href="#6-2-IE中的透明度" class="headerlink" title="6.2  IE中的透明度"></a>6.2 IE中的透明度</h2><p>高级浏览器中：</p><blockquote><p>设置透明度：opacity[0~1]</p></blockquote><p>IE中：</p><blockquote><p>filter:alpha(opacity=[0~100])</p></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-03</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>页面卷动</tag>
        <tag>IE</tag>
        <tag>透明度</tag>
      </tags>
  </entry>
  <entry>
    <title>五、淘宝放大镜</title>
    <url>/post/f712fd20.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="五、淘宝放大镜"><a href="#五、淘宝放大镜" class="headerlink" title="五、淘宝放大镜"></a>五、淘宝放大镜</h1><h2 id="5-1-mouseenter事件"><a href="#5-1-mouseenter事件" class="headerlink" title="5.1  mouseenter事件"></a>5.1 mouseenter事件</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加mouseenter事件</span></span><br><span class="line">glass.onmouseenter = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"进入镜片了"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">box.onmouseenter = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"进入图片了"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当绑定的是mouseenter事件，当鼠标不断在镜片来回进入的时候，只会触发镜片事件</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UM2Ewt.png" alt="UM2Ewt.png"></p><h2 id="5-2-mouseover事件"><a href="#5-2-mouseover事件" class="headerlink" title="5.2  mouseover事件"></a>5.2 mouseover事件</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加mouseover事件</span></span><br><span class="line">glass.onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"进入镜片了"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">box.onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"进入图片了"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当绑定的是mouseover事件，当鼠标不断在镜片来回进入的时候，同时触发镜片和图片事件</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UM2KSg.png" alt="UM2KSg.png"></p><h2 id="5-3-mouseleave事件"><a href="#5-3-mouseleave事件" class="headerlink" title="5.3  mouseleave事件"></a>5.3 mouseleave事件</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加mouseleave事件</span></span><br><span class="line">glass.onmouseleave = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"进入镜片了"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">box.onmouseleave = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"进入图片了"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 当绑定的是mouseleave事件，当鼠标不断在镜片来回进入的时候，只会触发镜片事件</span></span><br></pre></td></tr></table></figure></div><h2 id="5-4-淘宝放大镜-鼠标移入放大图片，离开缩小"><a href="#5-4-淘宝放大镜-鼠标移入放大图片，离开缩小" class="headerlink" title="5.4  淘宝放大镜 鼠标移入放大图片，离开缩小"></a>5.4 淘宝放大镜 鼠标移入放大图片，离开缩小</h2><h3 id="5-4-1-dom结构"><a href="#5-4-1-dom结构" class="headerlink" title="5.4.1  dom结构"></a>5.4.1 dom结构</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"glass"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box1"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><h3 id="5-4-2-样式"><a href="#5-4-2-样式" class="headerlink" title="5.4.2  样式"></a>5.4.2 样式</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(images/small.jpg);</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#glass</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, .<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box1</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">550px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(images/big.jpg);</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="5-4-3-执行代码"><a href="#5-4-3-执行代码" class="headerlink" title="5.4.3  执行代码"></a>5.4.3 执行代码</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-1.12.3.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/offset.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> glass = <span class="built_in">document</span>.getElementById(<span class="string">"glass"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">"box1"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 当鼠标进入box中，让glass和box1出现</span></span></span><br><span class="line"><span class="actionscript">    box.onmouseenter = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        glass.style.display = <span class="string">"block"</span>;</span></span><br><span class="line"><span class="actionscript">        box1.style.display = <span class="string">"block"</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 当鼠标离开box时，让glass和box1消失</span></span></span><br><span class="line"><span class="actionscript">    box.onmouseleave = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        glass.style.display = <span class="string">"none"</span>;</span></span><br><span class="line"><span class="actionscript">        box1.style.display = <span class="string">"none"</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取box到页面的距离</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> result = offset(box);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(result);</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> box_x = result.left;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> box_y = result.top;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 给box添加mousemove事件，让glass跟随鼠标移动</span></span></span><br><span class="line"><span class="actionscript">    box.onmousemove = <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 获取鼠标到页面的距离</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> m_x = e.pageX;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> m_y = e.pageY;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 定义变量简化书写</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 鼠标的位置 = 鼠标位于页面中的位置 - 盒子位于页面中的位置</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> x = m_x - box_x;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> y = m_y -box_y;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> resultX = x - glass.clientWidth / <span class="number">2</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> resultY = y - glass.clientHeight / <span class="number">2</span>;</span></span><br><span class="line">        </span><br><span class="line"><span class="actionscript">        <span class="comment">// 进行边界限制</span></span></span><br><span class="line">        if (resultX &lt; 0)&#123;</span><br><span class="line">            resultX = 0;</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultX &gt; box.clientWidth - glass.clientWidth)&#123;</span></span><br><span class="line">            resultX = box.clientWidth - glass.clientWidth;</span><br><span class="line">        &#125;</span><br><span class="line">        if (resultY &lt; 0)&#123;</span><br><span class="line">            resultY = 0;</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultY &gt; box.clientHeight - glass.clientHeight)&#123;</span></span><br><span class="line">            resultY = box.clientHeight - glass.clientHeight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 将x y赋值给glass</span></span></span><br><span class="line"><span class="actionscript">        glass.style.left = resultX + <span class="string">"px"</span>;</span></span><br><span class="line"><span class="actionscript">        glass.style.top = resultY + <span class="string">"px"</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 改变box1的背景图片定位 x 和 y 方向数值之间有空格</span></span></span><br><span class="line"><span class="actionscript">        box1.style.backgroundPosition = - <span class="number">2</span> * resultX + <span class="string">"px "</span> + - <span class="number">2</span> * resultY + <span class="string">"px"</span>;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="5-4-4-输出结果"><a href="#5-4-4-输出结果" class="headerlink" title="5.4.4  输出结果"></a>5.4.4 输出结果</h3><p><img src="https://s1.ax1x.com/2020/07/10/UM2Qyj.png" alt="UM2Qyj.png"></p><h2 id="5-5-兼容IE"><a href="#5-5-兼容IE" class="headerlink" title="5.5  兼容IE"></a>5.5 兼容IE</h2><ul><li><p>IE8 不支持background-size</p><ul><li><p>直接在box中插入img</p></li><li><p>并设置img width：100%； height：100%;</p></li></ul></li><li><p>IE8不支持rgba()设置透明度</p><ul><li><p>需要使用filter: alpha(opacity=50);来设置</p></li><li><p>高级浏览器不支持filter: alpha(opacity=50); 静默不处理，执行下一条语句</p></li></ul></li><li><p>IE8不支持pageX pageY</p><ul><li><p>实际使用时，clientX可替代pageX</p></li><li><p>pageY用clientY + document.documentElement.scrollTop; 来替代</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;img src=<span class="string">"images/small.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"glass"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box1"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="comment">/* background-image: url(images/small.jpg);</span></span><br><span class="line"><span class="comment">    background-size: cover;   IE8 不支持background-size*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#glass</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">     <span class="comment">/* IE8不支持rgba() */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>);</span><br><span class="line">    <span class="comment">/* 高级浏览器不认识filter 静默不处理 执行下一条语句 */</span></span><br><span class="line">    <span class="attribute">filter</span>: <span class="built_in">alpha</span>(opacity=<span class="number">50</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, .<span class="number">5</span>);  </span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DART"><figure class="iseeu highlight /dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容IE8</span></span><br><span class="line"><span class="keyword">var</span> e = e || <span class="built_in">window</span>.event;</span><br><span class="line"><span class="comment">// 获取鼠标到页面的距离</span></span><br><span class="line"><span class="keyword">var</span> m_x = e.clientX;</span><br><span class="line"><span class="keyword">var</span> m_y = e.clientY + <span class="built_in">document</span>.documentElement.scrollTop;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-03</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
      </tags>
  </entry>
  <entry>
    <title>四、拖拽放大镜</title>
    <url>/post/e001a8a1.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="四、拖拽放大镜"><a href="#四、拖拽放大镜" class="headerlink" title="四、拖拽放大镜"></a>四、拖拽放大镜</h1><p><img src="https://s1.ax1x.com/2020/07/10/UMgjdx.png" alt="UMgjdx.png"></p><h2 id="4-1-dom结构"><a href="#4-1-dom结构" class="headerlink" title="4.1  dom结构"></a>4.1 dom结构</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"glass"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box1"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><h2 id="4-2-css"><a href="#4-2-css" class="headerlink" title="4.2  css"></a>4.2 css</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(images/small.jpg);</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#glass</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, .<span class="number">5</span>);</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box1</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">550px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(images/big.jpg);</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="4-3-执行代码"><a href="#4-3-执行代码" class="headerlink" title="4.3  执行代码"></a>4.3 执行代码</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="keyword">var</span> glass = <span class="built_in">document</span>.getElementById(<span class="string">"glass"</span>);</span><br><span class="line"><span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">"box1"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给glass添加mousedown事件</span></span><br><span class="line">glass.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取鼠标位于视口的位置</span></span><br><span class="line">    <span class="keyword">var</span> x = e.clientX;</span><br><span class="line">    <span class="keyword">var</span> y = e.clientY;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取glass的定位值</span></span><br><span class="line">    <span class="keyword">var</span> left = <span class="keyword">this</span>.offsetLeft;</span><br><span class="line">    <span class="keyword">var</span> top = <span class="keyword">this</span>.offsetTop;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给document添加mousemove事件</span></span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 获取鼠标移动后的位置</span></span><br><span class="line">        <span class="keyword">var</span> m_x = e.clientX;</span><br><span class="line">        <span class="keyword">var</span> m_y = e.clientY;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义变量 简化书写</span></span><br><span class="line">        <span class="keyword">var</span> resultX = m_x - x + left;</span><br><span class="line">        <span class="keyword">var</span> resultY = m_y - y + top;</span><br><span class="line">        <span class="comment">// console.log(resultX, resultY);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 进行边界限制</span></span><br><span class="line">        <span class="keyword">if</span> (resultX &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            resultX = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultX &gt; box.clientWidth - glass.clientWidth)&#123;</span><br><span class="line">            resultX = box.clientWidth - glass.clientWidth;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resultY &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            resultY = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultY &gt; box.clientHeight - glass.clientHeight)&#123;</span><br><span class="line">            resultY = box.clientHeight - glass.clientHeight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 改变glass的定位值 用移动后的鼠标位置 - 移动之前的位置 </span></span><br><span class="line">        glass.style.left = resultX + <span class="string">"px"</span>;</span><br><span class="line">        glass.style.top = resultY + <span class="string">"px"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 改变box1的背景图片定位 x 和 y 方向数值之间有空格</span></span><br><span class="line">        box1.style.backgroundPosition = - <span class="number">2</span> * resultX + <span class="string">"px "</span> + - <span class="number">2</span> * resultY + <span class="string">"px"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标抬起 取消移动事件</span></span><br><span class="line"><span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-03</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>拖拽</tag>
        <tag>放大镜</tag>
      </tags>
  </entry>
  <entry>
    <title>三、获取一个元素到页面的距离</title>
    <url>/post/dedd2633.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="三、获取一个元素到页面的距离"><a href="#三、获取一个元素到页面的距离" class="headerlink" title="三、获取一个元素到页面的距离"></a>三、获取一个元素到页面的距离</h1><h2 id="3-1-浏览器识别"><a href="#3-1-浏览器识别" class="headerlink" title="3.1  浏览器识别"></a>3.1 浏览器识别</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">window</span><span class="selector-class">.navigator</span><span class="selector-class">.userAgent</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMM7FS.png" alt="UMM7FS.png"></p><h2 id="3-2-获取一个元素到页面的距离"><a href="#3-2-获取一个元素到页面的距离" class="headerlink" title="3.2  获取一个元素到页面的距离"></a>3.2 获取一个元素到页面的距离</h2><p>思路：</p><ul><li><p>获取元素的定位父元素，再获取距离</p></li><li><p>再获取元素的定位父元素的定位父元素，再获取距离</p></li><li><p>再获取元素的定位父元素的定位父元素的定位父元素，直到终点 =&gt; body元素，距离相累加</p></li></ul><h3 id="3-2-1-dom结构"><a href="#3-2-1-dom结构" class="headerlink" title="3.2.1  dom结构"></a>3.2.1 dom结构</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box1"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box2"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><h3 id="3-2-2-css"><a href="#3-2-2-css" class="headerlink" title="3.2.2   css"></a>3.2.2 css</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">123px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box1</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">10px</span> solid blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box2</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">10px</span> solid orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="3-2-3-执行代码"><a href="#3-2-3-执行代码" class="headerlink" title="3.2.3  执行代码"></a>3.2.3 执行代码</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-1.12.3.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义一个函数，传入一个元素，返回一个对象，对象中要包含该元素的定位值（left， top）</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">offset</span><span class="params">(dom)</span></span>&#123;</span></span><br><span class="line">        /* </span><br><span class="line">            思路：</span><br><span class="line">                获取元素的定位父元素，再获取距离</span><br><span class="line">                再获取元素的定位父元素的定位父元素，再获取距离</span><br><span class="line">                再获取元素的定位父元素的定位父元素的定位父元素，直到终点 =&gt; body元素，距离相累加</span><br><span class="line">            */</span><br><span class="line"><span class="actionscript">        <span class="comment">// for (, dom != document.body; dom = dom.offsetParent)  通常不这样循环</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 获取浏览器的信息</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> str = <span class="built_in">window</span>.navigator.userAgent;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 定义变量，简化书写</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> isIE8 = <span class="literal">null</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 检测浏览器的信息</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (str.indexOf(<span class="string">"MSIE 8.0"</span>) === <span class="number">-1</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log("不是IE8");</span></span></span><br><span class="line"><span class="actionscript">            isIE8 = <span class="literal">false</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log("是IE8");</span></span></span><br><span class="line"><span class="actionscript">            isIE8 = <span class="literal">true</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 定义对象</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 一开始不应该加上自己的边框</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> result = &#123;</span></span><br><span class="line">            top: dom.offsetTop,</span><br><span class="line">            left: dom.offsetLeft</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 使用while循环</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">while</span> (dom != <span class="built_in">document</span>.body)&#123;</span></span><br><span class="line">            dom = dom.offsetParent;</span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log(dom);   获取到body为止</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// 判断是不是IE8</span></span></span><br><span class="line">            if (isIE8)&#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 说明是IE8，不需要加上父元素的边框</span></span></span><br><span class="line">                result.left += dom.offsetLeft;</span><br><span class="line">                result.top += dom.offsetTop;</span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 说明不是IE8 需要额外加上父元素的边框</span></span></span><br><span class="line">                result.left += dom.offsetLeft + dom.clientLeft;</span><br><span class="line">                result.top += dom.offsetTop + dom.clientTop;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"><span class="actionscript">        <span class="comment">// 返回对象</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> result;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> box2 = <span class="built_in">document</span>.getElementById(<span class="string">"box2"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 调用</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> result = offset(box2);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(result);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// js中获取元素到页面的距离</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log($(<span class="string">"#box2"</span>).offset());</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="3-2-4-输出结果"><a href="#3-2-4-输出结果" class="headerlink" title="3.2.4  输出结果"></a>3.2.4 输出结果</h3><p><img src="https://s1.ax1x.com/2020/07/10/UMMXyn.png" alt="UMMXyn.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-03</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>元素位置</tag>
      </tags>
  </entry>
  <entry>
    <title>二、元素的位置和距离</title>
    <url>/post/8739b3ef.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="二、元素的位置和距离"><a href="#二、元素的位置和距离" class="headerlink" title="二、元素的位置和距离"></a>二、元素的位置和距离</h1><h2 id="2-1-定位父元素-offsetParent"><a href="#2-1-定位父元素-offsetParent" class="headerlink" title="2.1  定位父元素 offsetParent"></a>2.1 定位父元素 offsetParent</h2><ul><li><p>子绝父相中的父</p></li><li><p>该元素不一定是父节点中的parentNode</p></li></ul><p>dom结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#box</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            width: 500px;</span><br><span class="line">            height: 500px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#box1</span> &#123;</span></span><br><span class="line">            width: 250px;</span><br><span class="line">            height: 250px;</span><br><span class="line">            background-color: blue;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-id">#box2</span> &#123;</span></span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            left: 100px;</span><br><span class="line">            top: 100px;</span><br><span class="line">            background-color: orange;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 此时box2是相对于box进行定位的，在节点关系中box2的parentNode却是box1 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>此时box2相对于box进行定位</p><p>如何通过box2得到定位父元素呢？</p><blockquote><p>console.log(box2.offsetParent);</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">"box1"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> box2 = <span class="built_in">document</span>.getElementById(<span class="string">"box2"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 通过box2获取自身的定位父元素</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(box2.offsetParent);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMKrCQ.png" alt="UMKrCQ.png"></p><h2 id="2-2-定位值-offsetLeft-和offsetTop"><a href="#2-2-定位值-offsetLeft-和offsetTop" class="headerlink" title="2.2  定位值 offsetLeft 和offsetTop"></a>2.2 定位值 offsetLeft 和offsetTop</h2><ul><li><p>元素的定位值也是经常要获取的值，所以dom也提供了相应的属性来获取</p></li><li><p>快速获取元素的定位值的方式：</p><ul><li><p>距离自己定位父元素的左边距离：offsetLeft</p></li><li><p>距离自己定位父元素的上边距离：offsetTop</p></li></ul></li></ul><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取box2的定位值</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="string">"距离自己定位父元素的左边距离是："</span> + box2.offsetLeft);  <span class="comment">// 距离自己定位父元素的左边距离</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="string">"距离自己定位父元素的上边距离是："</span> + box2.offsetTop);  <span class="comment">// 距离自己定位父元素的上边距离</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/10/UMKhUU.png" alt="UMKhUU.png"></p><p>该属性存在兼容性问题：</p><ul><li><p>在高级浏览器中：是从子元素的边框外到父元素的边框内</p></li><li><p>在IE中：<strong>是从子元素的边框外到父元素的边框外 也就是说多算了一条父元素的边框</strong></p></li></ul><p>在IE中输出定位值：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">5px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box1</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">250px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box2</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">5px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMKbK1.png" alt="UMKbK1.png"></p><h2 id="2-3-jquery中的定位值"><a href="#2-3-jquery中的定位值" class="headerlink" title="2.3  jquery中的定位值"></a>2.3 jquery中的定位值</h2><p>使用方式：</p><blockquote><p>$(dom).position()</p></blockquote><p>返回值是一个对像</p><blockquote><p>对象中包含left，就是dom的定位left值；同时包含top，就是dom的定位top值</p></blockquote><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取box2的定位值</span></span><br><span class="line">var <span class="symbol">$</span>box2_position = <span class="symbol">$</span>(<span class="string">"#box2"</span>).position();</span><br><span class="line">console.<span class="built-in">log</span>(<span class="symbol">$</span>box2_position);</span><br></pre></td></tr></table></figure></div><p>输出结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMM3ZV.png" alt="UMM3ZV.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-03</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>元素位置</tag>
      </tags>
  </entry>
  <entry>
    <title>一、快捷尺寸</title>
    <url>/post/b17b8b19.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="一、快捷尺寸"><a href="#一、快捷尺寸" class="headerlink" title="一、快捷尺寸"></a>一、快捷尺寸</h1><h2 id="1-1-clientWidth和clientHeight"><a href="#1-1-clientWidth和clientHeight" class="headerlink" title="1.1  clientWidth和clientHeight"></a>1.1 clientWidth和clientHeight</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(box.clientWidth);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 图片不能直接使用 执行时，图片传输出去，但结果未获取 需要当所有资源加载完之后再执行</span></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(box.clientWidth);</span><br><span class="line"><span class="built_in">console</span>.log(box.clientHeight);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>输出结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMKV39.png" alt="UMKV39.png"></p><p>总结：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">clientWidth</span> = content + padding</span><br><span class="line"><span class="attr">clientHeight</span> = content + padding</span><br></pre></td></tr></table></figure></div><h2 id="1-2-offsetWidth和offsetHeight"><a href="#1-2-offsetWidth和offsetHeight" class="headerlink" title="1.2  offsetWidth和offsetHeight"></a>1.2 offsetWidth和offsetHeight</h2><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(box.offsetWidth);</span><br><span class="line">    <span class="built_in">console</span>.log(box.offsetHeight);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>输出结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMKnnx.png" alt="UMKnnx.png"></p><p>总结：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">clientWidth</span> = content + padding + border</span><br><span class="line"><span class="attr">clientHeight</span> = content + padding + border</span><br></pre></td></tr></table></figure></div><h2 id="1-3-clientLeft和clientTop"><a href="#1-3-clientLeft和clientTop" class="headerlink" title="1.3  clientLeft和clientTop"></a>1.3 clientLeft和clientTop</h2><ul><li><p>clientLeft：左边框的宽度</p></li><li><p>clientTop：上边框的宽度</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">border-left-width</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">// 不涉及内容，不需要在全部加载完毕之后再执行</span><br><span class="line"><span class="built_in">var</span> <span class="built_in">box</span> = document.getElementById(<span class="string">"box"</span>);</span><br><span class="line">console.<span class="built_in">log</span>(<span class="string">"clientLeft的值是："</span> + <span class="built_in">box</span>.clientLeft);</span><br><span class="line">console.<span class="built_in">log</span>(<span class="string">"clientTop的值是："</span> + <span class="built_in">box</span>.clientTop);</span><br></pre></td></tr></table></figure></div><p>结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMKKHK.png" alt="UMKKHK.png"></p><h2 id="1-4-jquery中的快捷尺寸"><a href="#1-4-jquery中的快捷尺寸" class="headerlink" title="1.4  jquery中的快捷尺寸"></a>1.4 jquery中的快捷尺寸</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">border-left-width</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    // 获取元素</span><br><span class="line">    <span class="built_in">var</span> $<span class="built_in">box</span> = $(<span class="string">"#box"</span>);</span><br><span class="line"></span><br><span class="line">    // <span class="built_in">content</span> <span class="built_in">width</span>()</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"content宽是："</span> + $<span class="built_in">box</span>.<span class="built_in">width</span>());</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"content高是："</span> + $<span class="built_in">box</span>.<span class="built_in">height</span>());</span><br><span class="line"></span><br><span class="line">    // <span class="built_in">content</span> + padding innerWidth()</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"innerWidth："</span> + $<span class="built_in">box</span>.innerWidth());</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"innerHeight："</span> + $<span class="built_in">box</span>.innerHeight());</span><br><span class="line"></span><br><span class="line">    // <span class="built_in">content</span> + padding ＋<span class="built_in">border</span> outerWidth()</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"outerWidth："</span> +　$<span class="built_in">box</span>.outerWidth());</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"outerHeight："</span> +　$<span class="built_in">box</span>.outerHeight());</span><br><span class="line"></span><br><span class="line">    // <span class="built_in">content</span> + padding +　<span class="built_in">border</span> + margin outerWidth(<span class="literal">true</span>)</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"outerWidth(true)："</span> + $<span class="built_in">box</span>.outerWidth(<span class="literal">true</span>));</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"outerHeight(true)："</span> + $<span class="built_in">box</span>.outerHeight(<span class="literal">true</span>));</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p>结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMK14e.png" alt="UMK14e.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-03</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>快捷尺寸</tag>
      </tags>
  </entry>
  <entry>
    <title>十三、限制拖拽模型</title>
    <url>/post/77eec3d5.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十三、限制拖拽模型"><a href="#十三、限制拖拽模型" class="headerlink" title="十三、限制拖拽模型"></a>十三、限制拖拽模型</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box1"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#box1</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">"box1"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取box和box1的宽度和高度</span></span><br><span class="line"><span class="keyword">var</span> box_style = getComputedStyle(box);</span><br><span class="line"><span class="keyword">var</span> box_width = <span class="built_in">parseInt</span>(box_style[<span class="string">"width"</span>]);</span><br><span class="line"><span class="keyword">var</span> box_height = <span class="built_in">parseInt</span>(box_style[<span class="string">"height"</span>]);</span><br><span class="line"><span class="comment">// console.log("box：", box_width, box_height);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> box1_style = getComputedStyle(box1);</span><br><span class="line"><span class="keyword">var</span> box1_width = <span class="built_in">parseInt</span>(box1_style[<span class="string">"width"</span>]);</span><br><span class="line"><span class="keyword">var</span> box1_height = <span class="built_in">parseInt</span>(box1_style[<span class="string">"height"</span>]);</span><br><span class="line"><span class="comment">// console.log("box1：", box1_width, box1_height);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 给box1添加mousedown事件</span></span><br><span class="line">box1.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取鼠标位于视口的位置</span></span><br><span class="line">    <span class="keyword">var</span> x = e.clientX;</span><br><span class="line">    <span class="keyword">var</span> y = e.clientY;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取元素定位值</span></span><br><span class="line">    <span class="keyword">var</span> left = <span class="built_in">parseInt</span>(getComputedStyle(box1)[<span class="string">"left"</span>]);</span><br><span class="line">    <span class="keyword">var</span> top = <span class="built_in">parseInt</span>(getComputedStyle(box1)[<span class="string">"top"</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给document添加mousemove事件</span></span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 获取鼠标移动后的位置</span></span><br><span class="line">        <span class="keyword">var</span> m_x = e.clientX;</span><br><span class="line">        <span class="keyword">var</span> m_y = e.clientY;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 定义变量 用于简化代码</span></span><br><span class="line">        <span class="keyword">var</span> resultX = m_x - x + left;</span><br><span class="line">        <span class="keyword">var</span> resultY = m_y - y + top;</span><br><span class="line">        <span class="comment">// console.log(resultX, resultY);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 进行边界限制</span></span><br><span class="line">        <span class="keyword">if</span> (resultX &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            resultX = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultX &gt; box_width - box1_width)&#123;</span><br><span class="line">            resultX = box_width - box1_width;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resultY &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            resultY = <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultY &gt; box_height - box1_height)&#123;</span><br><span class="line">            resultY = box_height - box1_height;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 赋值box1的定位值</span></span><br><span class="line">        box1.style.left = resultX + <span class="string">"px"</span>;</span><br><span class="line">        box1.style.top = resultY + <span class="string">"px"</span>;</span><br><span class="line">        <span class="comment">// console.log(resultX, resultY);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 鼠标离开 清除mousemove事件</span></span><br><span class="line"><span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>输出结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMuOhQ.png" alt="UMuOhQ.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
      </tags>
  </entry>
  <entry>
    <title>十二、阻止默认事件</title>
    <url>/post/d1ac9aee.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十二、阻止默认事件"><a href="#十二、阻止默认事件" class="headerlink" title="十二、阻止默认事件"></a>十二、阻止默认事件</h1><p>有些标签在点击或者有其他操作的时候，会有一些默认的行为。</p><ul><li><p>比如：</p><ul><li><p>submit 会默认提交表单</p></li><li><p>a 标签如果有href属性，会跳转页面</p></li><li><p>页面出现滚动条的时候，当我们滚动鼠标滚轮时，滚动条的位置将被改变</p></li><li><p>………这些都叫做默认行为、事件</p></li></ul></li></ul><p>在高级浏览器中阻止默认事件的方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">e.preventDefault()<span class="comment">;</span></span><br></pre></td></tr></table></figure></div><p>在IE中阻止默认事件的方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">e.returnValue</span> = <span class="literal">false</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></div><p>同时添加兼容性：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CS"><figure class="iseeu highlight /cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> e = e || window.<span class="keyword">event</span>;</span><br></pre></td></tr></table></figure></div><p>如果是dom0级绑定方式，IE和高级浏览器都可以使用 return false来阻止事件：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></div><p><strong>dom2级绑定方式无法使用return false来阻止事件</strong></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
      </tags>
  </entry>
  <entry>
    <title>十一、阻止冒泡</title>
    <url>/post/51a0ebc8.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十一、阻止冒泡"><a href="#十一、阻止冒泡" class="headerlink" title="十一、阻止冒泡"></a>十一、阻止冒泡</h1><p>在高级浏览器中阻止冒泡的方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">e.stopPropagation()<span class="comment">;</span></span><br></pre></td></tr></table></figure></div><p>在IE中阻止冒泡的方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">e.cancelBubble</span> = <span class="literal">true</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></div><p>同时要兼容IE：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CS"><figure class="iseeu highlight /cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> e = e || window.<span class="keyword">event</span>;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>阻止冒泡</tag>
      </tags>
  </entry>
  <entry>
    <title>十、拖拽模型</title>
    <url>/post/5b3469a.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十、拖拽模型"><a href="#十、拖拽模型" class="headerlink" title="十、拖拽模型"></a>十、拖拽模型</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="comment">/* 因为是要拖拽，改变的是元素的定位值，所以要绝对定位 */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 要求：当鼠标按下box的时候并移动鼠标，元素要跟随鼠标移动</span></span><br><span class="line"><span class="comment">// 给box添加mousedown事件</span></span><br><span class="line">box.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 获取鼠标位于视口中的位置</span></span><br><span class="line">    <span class="keyword">var</span> x = e.clientX;</span><br><span class="line">    <span class="keyword">var</span> y = e.clientY;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取box的定位值 计算后的样式  用于防止第二次点击时，box返回原位置</span></span><br><span class="line">    <span class="keyword">var</span> left = <span class="built_in">parseInt</span>(getComputedStyle(box)[<span class="string">"left"</span>]);</span><br><span class="line">    <span class="keyword">var</span> top = <span class="built_in">parseInt</span>(getComputedStyle(box)[<span class="string">"top"</span>]);</span><br><span class="line">    <span class="built_in">console</span>.log(left, top);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给box添加mousemove事件 在document范围内 否则鼠标快速滑动是超出box范围 运动停止</span></span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 获取鼠标移动后的位置</span></span><br><span class="line">        <span class="keyword">var</span> m_x = e.clientX;</span><br><span class="line">        <span class="keyword">var</span> m_y = e.clientY;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 改变box的定位值 用鼠标移动后的距离 - 鼠标移动之前的距离 + 鼠标当前位置 </span></span><br><span class="line">        box.style.left = m_x - x  + left + <span class="string">"px"</span>;</span><br><span class="line">        box.style.top = m_y - y  + top + <span class="string">"px"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当鼠标抬起，不让box再跟随鼠标移动了</span></span><br><span class="line"><span class="built_in">document</span>.onmouseup = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 取消mousemove事件</span></span><br><span class="line">    <span class="built_in">document</span>.onmousemove = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>拖拽模型</tag>
      </tags>
  </entry>
  <entry>
    <title>九、事件对象和属性</title>
    <url>/post/337e5e51.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="九、事件对象和属性"><a href="#九、事件对象和属性" class="headerlink" title="九、事件对象和属性"></a>九、事件对象和属性</h1><p>当函数执行的时候，会产生一系列的信息，浏览器会将这些信息收集起来并封装成对象，传递到事件对象中。</p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="comment">// 绑定事件</span></span><br><span class="line">    box.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 当函数执行的时候，会产生一系列的信息，浏览器会将这些信息收集起来并封装成对象，传递到事件对象中</span></span><br><span class="line">        <span class="built_in">console</span>.log(e);    <span class="comment">// 事件对象</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p>输出结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMnAVU.png" alt="UMnAVU.png"></p><h2 id="9-1-offsetX-offsetY鼠标位于元素内部的位置"><a href="#9-1-offsetX-offsetY鼠标位于元素内部的位置" class="headerlink" title="9.1  offsetX offsetY鼠标位于元素内部的位置"></a>9.1 offsetX offsetY鼠标位于元素内部的位置</h2><p>这两个属性标记了鼠标位于元素内部的位置，会受到子元素的影响</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="selector-tag">e</span><span class="selector-class">.offsetX</span>, <span class="selector-tag">e</span><span class="selector-class">.offsetY</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMnux1.png" alt="UMnux1.png"></p><h2 id="9-2-clientX-clientY鼠标位于视口中的位置"><a href="#9-2-clientX-clientY鼠标位于视口中的位置" class="headerlink" title="9.2  clientX clientY鼠标位于视口中的位置"></a>9.2 clientX clientY鼠标位于视口中的位置</h2><p>这两个属性标记了鼠标位于视口中的位置</p><p>页面 : 整个全部页面</p><p>视口 : 屏幕所显示的区域</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="selector-tag">e</span><span class="selector-class">.clientX</span>, <span class="selector-tag">e</span><span class="selector-class">.clientY</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMn3VO.png" alt="UMn3VO.png"></p><h2 id="9-3-pageX-pageY-鼠标位于页面中的位置"><a href="#9-3-pageX-pageY-鼠标位于页面中的位置" class="headerlink" title="9.3  pageX pageY 鼠标位于页面中的位置"></a>9.3 pageX pageY 鼠标位于页面中的位置</h2><p>这两个属性标记的是鼠标位于页面中的位置，当页面打开的时候默认是首屏的位置。</p><p>此时，clientX、clientY与pageX、pageY的值是相同的。</p><p>当页面滚动条位置改变之后，它们的值将不一致</p><p><strong>IE浏览器低版本没有pageX、pageY属性</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="selector-tag">e</span><span class="selector-class">.pageX</span>, <span class="selector-tag">e</span><span class="selector-class">.pageY</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMnwsP.png" alt="UMnwsP.png"></p><h2 id="9-4-screenX-screenY-鼠标位于屏幕中的位置"><a href="#9-4-screenX-screenY-鼠标位于屏幕中的位置" class="headerlink" title="9.4  screenX screenY 鼠标位于屏幕中的位置"></a>9.4 screenX screenY 鼠标位于屏幕中的位置</h2><p>这两个属性标记的是鼠标位于屏幕中的位置</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="selector-tag">e</span><span class="selector-class">.screenX</span>, <span class="selector-tag">e</span><span class="selector-class">.screenY</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMnrdS.png" alt="UMnrdS.png"></p><h2 id="9-5-IE中的事件对象"><a href="#9-5-IE中的事件对象" class="headerlink" title="9.5  IE中的事件对象"></a>9.5 IE中的事件对象</h2><p><img src="https://s1.ax1x.com/2020/07/10/UMnfs0.png" alt="UMnfs0.png"></p><p>在IE中，没有将时间对象传递到函数中。</p><p>其实，在window.event身上</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MEL"><figure class="iseeu highlight /mel"><table><tr><td class="code"><pre><span class="line">console.<span class="keyword">log</span>(<span class="keyword">window</span>.<span class="keyword">event</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMutTU.png" alt="UMutTU.png"></p><p>由于在IE中不能点击输出显示，我们用<code>for in</code>循环输出</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="comment">// 绑定事件</span></span><br><span class="line">box.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 输出事件对象</span></span><br><span class="line">    <span class="comment">// console.log(e);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// IE中没有将事件对象传递，而是在window.event身上</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">window</span>.event);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> <span class="built_in">window</span>.event)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMu2kD.png" alt="UMu2kD.png"></p><p>兼容方式：</p><blockquote><p>var e = e || window.event （e = e 或 window.event）</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STAN"><figure class="iseeu highlight /stan"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 兼容方式：</span></span><br><span class="line">var <span class="built_in">e</span> = <span class="built_in">e</span> || window.event;  <span class="comment">// 短路语法，有e用e，没有就用后面的</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">e</span>);</span><br></pre></td></tr></table></figure></div><h2 id="9-6-总结"><a href="#9-6-总结" class="headerlink" title="9.6  总结"></a>9.6 总结</h2><ul><li><p>dom0级：</p><ul><li><p>在高级浏览器中：事件对象可以被传递到事件函数中</p></li><li><p>在IE中：事件对象没有被传递进来</p></li><li><p>this指向触发事件的对象</p></li></ul></li><li><p>dom2级：</p><ul><li><p>事件对象可以被传到事件函数中</p></li><li><p>this指向触发事件的对象</p></li></ul></li><li><p>attachEvent：</p><ul><li><p>事件对象可以被传递到事件函数中</p></li><li><p>this指向window</p></li></ul></li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>事件对象</tag>
        <tag>属性</tag>
      </tags>
  </entry>
  <entry>
    <title>八、事件绑定函数</title>
    <url>/post/3c88a03c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="八、事件绑定函数"><a href="#八、事件绑定函数" class="headerlink" title="八、事件绑定函数"></a>八、事件绑定函数</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> bind<span class="constructor">Event(<span class="params">dom</span>, <span class="params">type</span>, <span class="params">fn</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 使用能力检测，检测浏览器支持哪种能力</span></span><br><span class="line">    <span class="comment">// 能力检测就是利用：当一个元素读取一个属性的时候，如果能读取到，那么就输出，如果属性不存在就会输出undefined，而不是报错的这个特点</span></span><br><span class="line">    <span class="keyword">if</span> (dom.addEventListener) &#123;</span><br><span class="line">        <span class="comment">// 存在addEventListener，说明是高级浏览器</span></span><br><span class="line">        dom.add<span class="constructor">EventListener(<span class="params">type</span>, <span class="params">fn</span>, <span class="params">false</span>)</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (dom.attachEvent)&#123;</span><br><span class="line">        <span class="comment">// 说明是IE中的高版本</span></span><br><span class="line">        dom.attach<span class="constructor">Event(<span class="string">"on"</span> + <span class="params">type</span>, <span class="params">fn</span>)</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 说明是IE中的低版本或一些不知名的浏览器</span></span><br><span class="line">        dom<span class="literal">["<span class="identifier">on</span>" + <span class="identifier">type</span>]</span> = fn;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line">bind<span class="constructor">Event(<span class="params">box</span>, <span class="string">"click"</span>, <span class="params">function</span>()</span>&#123;</span><br><span class="line">    console.log(<span class="string">"事件执行了"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMn9vq.png" alt="UMn9vq.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>事件绑定</tag>
      </tags>
  </entry>
  <entry>
    <title>七、移除事件</title>
    <url>/post/37c2b7e4.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><hr><p>title: 七、移除事件</p><p>abbrlink: 9af7d3f8<br>date: 2020-05-08 21:26:32<br>copyright: true # 开启版权声明</p><hr><h1 id="七、移除事件"><a href="#七、移除事件" class="headerlink" title="七、移除事件"></a>七、移除事件</h1><p>其实现在大部分浏览器都支持：</p><blockquote><p>一旦给一个元素添加了id，相当于给window添加了一个属性</p></blockquote><p>一般在测试的时候可以使用</p><p>但是在开发的时候还要通过getElementById来获取元素</p><h2 id="7-1-dom2级移除事件方式"><a href="#7-1-dom2级移除事件方式" class="headerlink" title="7.1  dom2级移除事件方式"></a>7.1 dom2级移除事件方式</h2><p>使用方式：</p><ul><li><p>dom.removeEventListener(type,fn,Boolean)</p><ul><li><p>type：事件类型</p></li><li><p>fn：执行函数</p></li><li><p>boolean：该参数决定要移除捕获还是冒泡阶段</p></li></ul></li></ul><p>错误的移除方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加dom2级事件</span></span><br><span class="line">box.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"函数执行了"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 点击btn，移除box上的事件</span></span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    box.removeEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"函数移除了"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>正确的移除方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 如果想要移除事件，必须要提取为有名函数，否则就算要移除的事件函数写的一样，但那还是在不同内存的不同函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">click</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"函数执行了"</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 添加dom2级事件</span></span><br><span class="line">    box.addEventListener(<span class="string">"click"</span>,click);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击btn，移除box上的事件</span></span><br><span class="line">    btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        box.removeEventListener(<span class="string">"click"</span>,click);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><h2 id="7-2-detachEvent"><a href="#7-2-detachEvent" class="headerlink" title="7.2  detachEvent"></a>7.2 detachEvent</h2><ul><li><p>作用：</p><ul><li>移除attachEvent事件</li></ul></li><li><p>使用方式：</p><ul><li>同removeEventListener一致，只是没有了第三个参数，因为attachEvent不支持捕获</li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">click</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"函数执行了"</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 添加dom2级事件</span></span><br><span class="line">    box.attachEvent(<span class="string">"onclick"</span>,click);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击btn，移除box上的事件</span></span><br><span class="line">    btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        box.detachEvent(<span class="string">"onclick"</span>,click);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>移除事件</tag>
      </tags>
  </entry>
  <entry>
    <title>六、attachEvent和dom2级绑定方式的区别</title>
    <url>/post/be5e3298.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="六、attachEvent和dom2级绑定方式的区别"><a href="#六、attachEvent和dom2级绑定方式的区别" class="headerlink" title="六、attachEvent和dom2级绑定方式的区别"></a>六、attachEvent和dom2级绑定方式的区别</h1><h2 id="6-1-绑定数量"><a href="#6-1-绑定数量" class="headerlink" title="6.1  绑定数量"></a>6.1 绑定数量</h2><ul><li><p>dom0级：只可以给一个元素的一个事件绑定一个函数</p></li><li><p>attachEvent：可以绑定多个事件函数</p></li></ul><h2 id="6-2-执行顺序"><a href="#6-2-执行顺序" class="headerlink" title="6.2  执行顺序"></a>6.2 执行顺序</h2><p>优先执行dom0级事件，然后再逆序执行attachEvent事件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">box.attachEvent(<span class="string">"onclick"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"attachEvent1"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 绑定dom0级事件</span></span><br><span class="line">box.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">box.attachEvent(<span class="string">"onclick"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"attachEvent2"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">box.attachEvent(<span class="string">"onclick"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"attachEvent3"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMmhUe.png" alt="UMmhUe.png"></p><h2 id="6-3-是否可以同时存在"><a href="#6-3-是否可以同时存在" class="headerlink" title="6.3  是否可以同时存在"></a>6.3 是否可以同时存在</h2><p>可以</p><h2 id="6-4-函数中的this指向"><a href="#6-4-函数中的this指向" class="headerlink" title="6.4  函数中的this指向"></a>6.4 函数中的this指向</h2><ul><li><p>dom0级函数中的this指向触发事件的元素</p></li><li><p>attachEvent事件函数中this指向window</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">box.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">box.attachEvent(<span class="string">"onclick"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"attachEvent2"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMmTgI.png" alt="UMmTgI.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>dom2级</tag>
        <tag>attachEvent</tag>
      </tags>
  </entry>
  <entry>
    <title>五、dom2级绑定方式和dom0级绑定方式的区别</title>
    <url>/post/9517a6cc.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="五、dom2级绑定方式和dom0级绑定方式的区别"><a href="#五、dom2级绑定方式和dom0级绑定方式的区别" class="headerlink" title="五、dom2级绑定方式和dom0级绑定方式的区别"></a>五、dom2级绑定方式和dom0级绑定方式的区别</h1><h2 id="5-1-绑定数量"><a href="#5-1-绑定数量" class="headerlink" title="5.1 绑定数量"></a>5.1 绑定数量</h2><ul><li><p>dom0级：只可以给一个元素的一个事件绑定一个函数</p></li><li><p>dom2级：可以给一个元素的一个事件绑定多个函数</p></li></ul><h2 id="5-2-执行顺序"><a href="#5-2-执行顺序" class="headerlink" title="5.2 执行顺序"></a>5.2 执行顺序</h2><p>按照绑定的顺序执行</p><h2 id="5-3-是否可以同时存在"><a href="#5-3-是否可以同时存在" class="headerlink" title="5.3 是否可以同时存在"></a>5.3 是否可以同时存在</h2><p>可以</p><h2 id="5-4-函数中的this指向"><a href="#5-4-函数中的this指向" class="headerlink" title="5.4 函数中的this指向"></a>5.4 函数中的this指向</h2><p>dom0级和dom2级函数中的this指向都指向触发事件的元素</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>dom2级</tag>
        <tag>dom0级</tag>
      </tags>
  </entry>
  <entry>
    <title>四、IE中的高级绑定方式</title>
    <url>/post/46518ebc.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="四、IE中的高级绑定方式"><a href="#四、IE中的高级绑定方式" class="headerlink" title="四、IE中的高级绑定方式"></a>四、IE中的高级绑定方式</h1><p>IE不支持addEventListener，而是支持自己的attachEvent事件</p><p><img src="https://s1.ax1x.com/2020/07/10/UMEhSx.png" alt="UMEhSx.png"></p><p>使用方式：</p><ul><li><p>dom.attachEvent(type,fn)</p><ul><li><p>type：字符串，表示事件类型 注意：是带“on” 比如：onclick，onmousedown，onmouseup</p></li><li><p>fn：表示要执行的事件函数</p></li><li><p>没有第三个函数 ，也就是不支持捕获。</p></li></ul></li></ul><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">box.attachEvent(<span class="string">"onclick"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">box1.attachEvent(<span class="string">"onclick"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box1"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">box2.attachEvent(<span class="string">"onclick"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box2"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>输出：</p><p><img src="https://s1.ax1x.com/2020/07/10/UME56K.png" alt="UME56K.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>dom2级</tag>
        <tag>IE</tag>
      </tags>
  </entry>
  <entry>
    <title>三、dom2级绑定方式</title>
    <url>/post/3bfcaa80.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="三、dom2级绑定方式"><a href="#三、dom2级绑定方式" class="headerlink" title="三、dom2级绑定方式"></a>三、dom2级绑定方式</h1><ul><li><p>dom 0级：</p><ul><li>document.onclick = function () {} 是绑定在冒泡阶段</li></ul></li><li><p>dom 1级：</p><ul><li>延续dom 1级，没有做任何改变</li></ul></li><li><p>dom2级绑定方式：</p><ul><li><p>事件名称：addEventLitener</p></li><li><p>这是一个方法，每一个元素都可以调用</p></li><li><p>使用方式：</p><ul><li><p>dom.addEventListener(type,fn,Boolean)</p><ul><li><p>type：事件类型 注意：不带“on” 比如：click，mousedown，mouseup</p></li><li><p>fn：要执行的函数</p></li><li><p>boolean：是一个布尔值，决定绑定的事件是在捕获还是冒泡阶段，默认是false，表示绑定到了冒泡阶段。如果是true，表示绑定到了捕获阶段。</p></li></ul></li></ul></li></ul></li></ul><p>DOM结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box1"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box2"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">"box1"</span>);</span><br><span class="line"><span class="keyword">var</span> box2 = <span class="built_in">document</span>.getElementById(<span class="string">"box2"</span>);</span><br><span class="line"><span class="comment">// 绑定到冒泡阶段</span></span><br><span class="line">box.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box 冒泡"</span>);</span><br><span class="line">&#125;,<span class="literal">false</span>);        </span><br><span class="line">box1.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box1 冒泡"</span>);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br><span class="line">box2.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box2 冒泡"</span>);</span><br><span class="line">&#125;,<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定到捕获阶段</span></span><br><span class="line">box.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box 捕获"</span>);</span><br><span class="line">&#125;,<span class="literal">true</span>);</span><br><span class="line">box1.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box1 捕获"</span>);</span><br><span class="line">&#125;,<span class="literal">true</span>);        </span><br><span class="line">box2.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box2 捕获"</span>);</span><br><span class="line">&#125;,<span class="literal">true</span>);</span><br></pre></td></tr></table></figure></div><p>输出结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMEWf1.png" alt="UMEWf1.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>dom2级</tag>
      </tags>
  </entry>
  <entry>
    <title>二、事件流程</title>
    <url>/post/36a2f3e2.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="二、事件流程"><a href="#二、事件流程" class="headerlink" title="二、事件流程"></a>二、事件流程</h1><ul><li><p>整个事件流程分为：捕获和冒泡。</p><ul><li><p>捕获：事件从最顶层元素开始执行，一层一层往下，直到最精确的元素。</p></li><li><p>冒泡：事件从最精确的元素开始执行，一层一层往上，直到最顶层元素。</p></li><li><p>当处于最精确元素的时候是不区分捕获和冒泡的。</p></li></ul></li></ul><p><img src="https://s1.ax1x.com/2020/07/10/UMEaYn.png" alt="UMEaYn.png"></p><p>DOM结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box1"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box2"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="keyword">var</span> box1 = <span class="built_in">document</span>.getElementById(<span class="string">"box1"</span>);</span><br><span class="line"><span class="keyword">var</span> box2 = <span class="built_in">document</span>.getElementById(<span class="string">"box2"</span>);</span><br><span class="line"><span class="comment">// 绑定点击事件</span></span><br><span class="line">box.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box"</span>);</span><br><span class="line">&#125;</span><br><span class="line">box1.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box1"</span>);</span><br><span class="line">&#125;</span><br><span class="line">box2.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"box2"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>输出结果：</p><p><img src="https://s1.ax1x.com/2020/07/10/UMEcTJ.png" alt="UMEcTJ.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>事件流程</tag>
      </tags>
  </entry>
  <entry>
    <title>一、call和apply</title>
    <url>/post/e1c9ba31.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="一、call和apply"><a href="#一、call和apply" class="headerlink" title="一、call和apply"></a>一、call和apply</h1><p>函数中的this在定义的时候，无法确定，只有当函数执行的瞬间，this才能确定下来。</p><p>简单来说，就是：</p><blockquote><p>谁调用，指向谁</p></blockquote><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">&lt;body style=<span class="string">"height:500px"</span>&gt;</span><br><span class="line"></span><br><span class="line">/<span class="regexp">/ 定义函数</span></span><br><span class="line"><span class="regexp">function fun(a, b, c)&#123;</span></span><br><span class="line"><span class="regexp">    console.log(this, arguments);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 函数单独执行</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ fun(1, 2, 3);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 作为事件函数执行</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ document.onclick = fun;</span></span><br><span class="line"><span class="regexp">document.body.onclick = fun;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMEuFA.png" alt="UMEuFA.png"></p><p>当我们需要改变函数中的this指向固定元素的时候，我们就要用到call或者apply</p><h2 id="1-1-call"><a href="#1-1-call" class="headerlink" title="1.1  call"></a>1.1 call</h2><p>call方法是每一个函数天生可以调用的。</p><p>作用：</p><blockquote><p>执行函数，并改变函数的this指向</p></blockquote><p>使用方式：</p><ul><li><p>fun.call()</p><ul><li><p>可以接受多个参数：</p><ul><li><p>第一个参数就是要改变的this指向</p></li><li><p>从第二个参数开始都是原函数所需要的参数</p></li></ul></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用call改变函数的this指向</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span>.<span class="title">call</span><span class="params">(document, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span></span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMElSP.png" alt="UMElSP.png"></p><p>如果fun函数中需要传递参数，就可以往call第二个参数开始传递。</p><h2 id="1-2-apply"><a href="#1-2-apply" class="headerlink" title="1.2  apply"></a>1.2 apply</h2><p>和call方法作用一致，都是执行函数，并改变函数中的this指向</p><p>使用方式：</p><blockquote><p>fun.apply()</p></blockquote><ul><li><p>与call方法不同的是参数：</p><ul><li><p>可以接受2个参数：</p><ul><li><p>第一个参数是改变函数的this指向</p></li><li><p>第二个参数是一个数组，数组中每一项就是函数所需要的参数</p></li></ul></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用apply改变函数中this指向</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span>.<span class="title">apply</span><span class="params">(document.body, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span></span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMEtoj.png" alt="UMEtoj.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-02</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>call</tag>
        <tag>apply</tag>
      </tags>
  </entry>
  <entry>
    <title>四、animate函数</title>
    <url>/post/bbd4025.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="四、animate函数"><a href="#四、animate函数" class="headerlink" title="四、animate函数"></a>四、animate函数</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取box</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="comment">// 改变box位置</span></span><br><span class="line">animate(box, &#123;<span class="string">"left"</span>: <span class="number">1000</span>, <span class="string">"top"</span>: <span class="number">300</span>&#125;, <span class="number">1000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="string">"动画完成了"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// $(xx).animate(&#123;&#125;, time, callBack);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装函数，实现animate方法</span></span><br><span class="line"><span class="comment">// @dom 表示要运动的元素</span></span><br><span class="line"><span class="comment">// @json css样式</span></span><br><span class="line"><span class="comment">// @time 要完成动画的时间 单位ms</span></span><br><span class="line"><span class="comment">// @callBack 回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate</span>(<span class="params">dom,json,time,callBack</span>)</span>&#123;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">        逻辑分析：</span></span><br><span class="line"><span class="comment">            定义间隔定时器，循环动画到目标值</span></span><br><span class="line"><span class="comment">            既然是循环动画，那么每一次动画都是一个步长</span></span><br><span class="line"><span class="comment">            步长值 = 总距离 / 总次数</span></span><br><span class="line"><span class="comment">            总距离 = 目标值 - 初始值</span></span><br><span class="line"><span class="comment">            总次数 = 总时间 / 定时器间隔时间</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计数器</span></span><br><span class="line">        <span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 定义间隔时间</span></span><br><span class="line">        <span class="keyword">var</span> interval = <span class="number">20</span>;</span><br><span class="line">        <span class="comment">// 总次数 = 总时间 / 间隔时间</span></span><br><span class="line">        <span class="keyword">var</span> allCount = time / interval;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取元素的总距离，就是用目标值 - 初始值</span></span><br><span class="line">        <span class="comment">// json里面传递的都是目标值</span></span><br><span class="line">        <span class="comment">// 定义一个nowJson 用于保存元素的初始值</span></span><br><span class="line">        <span class="keyword">var</span> nowJson = &#123;&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> json)&#123;</span><br><span class="line">        <span class="comment">// console.log(i);   // left top</span></span><br><span class="line">        <span class="comment">// nowJson[i] = getComputedStyle(dom)[i];  // &#123;left: "50px", top: "50px"&#125; 字符串类型</span></span><br><span class="line">        <span class="comment">// 转为number类型</span></span><br><span class="line">        nowJson[i] = <span class="built_in">parseInt</span>(getComputedStyle(dom)[i]);   <span class="comment">// &#123;left: 50, top: 50&#125;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// console.log(nowJson);</span></span><br><span class="line">        <span class="comment">// 循环完毕之后初始值也就有了</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算总距离，再得到步长值</span></span><br><span class="line">        <span class="keyword">var</span> stepJson = &#123;&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> json)&#123;</span><br><span class="line">            <span class="comment">// 步长值 = （目标值 - 初始值）/ 总次数</span></span><br><span class="line">            stepJson[i] = (json[i] - nowJson[i]) / allCount</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// console.log(stepJson);   // &#123;left: 19, top: 9&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义定时器</span></span><br><span class="line">    <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 计数器++</span></span><br><span class="line">        count ++;</span><br><span class="line">        <span class="comment">// 改变dom的定位值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> json)&#123;</span><br><span class="line">            <span class="comment">// 当前值 = 初始值 + 步长值 * 次数</span></span><br><span class="line">            dom.style[i] = nowJson[i] + stepJson[i] * count + <span class="string">"px"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判断是否到达边界</span></span><br><span class="line">        <span class="keyword">if</span> (count &gt;= allCount)&#123;</span><br><span class="line">            <span class="comment">// 停止定时器</span></span><br><span class="line">            clearInterval(timer);</span><br><span class="line">            <span class="comment">// 执行回调函数 短路语法 存在callBack 执行后面的，不存在就执行前面的</span></span><br><span class="line">            callBack &amp;&amp; callBack();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, interval);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMAUxK.png" alt="UMAUxK.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-01</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
      </tags>
  </entry>
  <entry>
    <title>三、jquery中的元素操作</title>
    <url>/post/4ce50e01.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="三、jquery中的元素操作"><a href="#三、jquery中的元素操作" class="headerlink" title="三、jquery中的元素操作"></a>三、jquery中的元素操作</h1><h2 id="3-1-创建元素"><a href="#3-1-创建元素" class="headerlink" title="3.1  创建元素"></a>3.1 创建元素</h2><p>可以使用$()函数的功能来创建元素</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">var $div = $("<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'aaa'</span>, <span class="attr">id</span>=<span class="string">'aaa'</span>, <span class="attr">data-info</span>=<span class="string">'nihao'</span>&gt;</span>今天天气很好<span class="tag">&lt;/<span class="name">div</span>&gt;</span>");</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/Umig58.png" alt="Umig58.png"></p><h2 id="3-2-上树"><a href="#3-2-上树" class="headerlink" title="3.2  上树"></a>3.2 上树</h2><ul><li><p>jquery中的上树方法有很多种，可以是：</p><ul><li><p>父元素选择子元素</p></li><li><p>子元素选择父元素</p></li><li><p>兄弟选择兄弟</p></li></ul></li></ul><h3 id="3-2-1-父元素选择子元素"><a href="#3-2-1-父元素选择子元素" class="headerlink" title="3.2.1  父元素选择子元素"></a>3.2.1 父元素选择子元素</h3><ul><li><p>$(box).append(selector|jquery|element)：往父元素的后面追加元素</p></li><li><p>$(box).prepend(selector|jquery|element)：往父元素的前面追加元素</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 父元素选择子元素,追加到后面</span></span><br><span class="line"><span class="keyword">var</span> <span class="variable">$list</span> = $(<span class="string">"#list"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 原生元素</span></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">li</span> = document.createElement(<span class="string">"li"</span>);</span><br><span class="line"><span class="comment">// 添加内部文本</span></span><br><span class="line"><span class="keyword">li</span>.innerHTML = 1;</span><br><span class="line"><span class="variable">$list</span>.<span class="keyword">append</span>(<span class="keyword">li</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// jquery对象</span></span><br><span class="line"><span class="variable">$list</span>.<span class="keyword">append</span>($(<span class="string">"&lt;li&gt;2&lt;/li&gt;"</span>));</span><br><span class="line"><span class="comment">// html</span></span><br><span class="line"><span class="variable">$list</span>.<span class="keyword">append</span>(<span class="string">"&lt;li&gt;3&lt;/li&gt;"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/Umib5T.png" alt="Umib5T.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 父元素选择子元素,追加到前面</span></span><br><span class="line"><span class="keyword">var</span> <span class="variable">$list</span> = $(<span class="string">"#list"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 原生元素</span></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">li</span> = document.createElement(<span class="string">"li"</span>);</span><br><span class="line"><span class="comment">// 添加内部文本</span></span><br><span class="line"><span class="keyword">li</span>.innerHTML = 1;</span><br><span class="line"><span class="variable">$list</span>.prepend(<span class="keyword">li</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// jquery对象</span></span><br><span class="line"><span class="variable">$list</span>.prepend($(<span class="string">"&lt;li&gt;2&lt;/li&gt;"</span>));</span><br><span class="line"><span class="comment">// html</span></span><br><span class="line"><span class="variable">$list</span>.prepend(<span class="string">"&lt;li&gt;3&lt;/li&gt;"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmF9Vx.png" alt="UmF9Vx.png"></p><h3 id="3-2-2-子元素选择父元素"><a href="#3-2-2-子元素选择父元素" class="headerlink" title="3.2.2  子元素选择父元素"></a>3.2.2 子元素选择父元素</h3><ul><li><p>$(box).appendTo(selector|jquery|element)：往父元素的后面追加元素</p></li><li><p>$(box).prependTo(selector|jquery|element)：往父元素的前面追加元素</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 子元素选择父元素，追加到后面</span></span><br><span class="line"><span class="keyword">var</span> <span class="symbol">$list</span> = $(<span class="string">"#list"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="symbol">$li</span>1 = $(<span class="string">"&lt;li&gt;1&lt;/li&gt;"</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="symbol">$li</span>2 = $(<span class="string">"&lt;li&gt;2&lt;/li&gt;"</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="symbol">$li</span>3 = $(<span class="string">"&lt;li&gt;3&lt;/li&gt;"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 原生元素</span></span><br><span class="line"><span class="symbol">$li</span>1.appendTo(document.getElementById(<span class="string">"list"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// jquery对象</span></span><br><span class="line"><span class="symbol">$li</span>2.appendTo($(<span class="string">"#list"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 选择器</span></span><br><span class="line"><span class="symbol">$li</span>3.appendTo(<span class="string">"#list"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmFJMj.png" alt="UmFJMj.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 子元素选择父元素，追加到前面</span></span><br><span class="line"><span class="keyword">var</span> <span class="symbol">$list</span> = $(<span class="string">"#list"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> <span class="symbol">$li</span>1 = $(<span class="string">"&lt;li&gt;1&lt;/li&gt;"</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="symbol">$li</span>2 = $(<span class="string">"&lt;li&gt;2&lt;/li&gt;"</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="symbol">$li</span>3 = $(<span class="string">"&lt;li&gt;3&lt;/li&gt;"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 原生元素</span></span><br><span class="line"><span class="symbol">$li</span>1.prependTo(document.getElementById(<span class="string">"list"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// jquery对象</span></span><br><span class="line"><span class="symbol">$li</span>2.prependTo($(<span class="string">"#list"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 选择器</span></span><br><span class="line"><span class="symbol">$li</span>3.prependTo(<span class="string">"#list"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmF9Vx.png" alt="UmF9Vx.png"></p><p>结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"four"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>6<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>7<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>8<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建一个li</span></span><br><span class="line"><span class="keyword">var</span> <span class="symbol">$li</span> = $(<span class="string">"&lt;li&gt;111&lt;/li&gt;"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将li插入到four的前面作为它的兄弟节点存在</span></span><br><span class="line"><span class="symbol">$li</span>.insertBefore($(<span class="string">"#four"</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmF2e1.png" alt="UmF2e1.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建一个li</span></span><br><span class="line"><span class="keyword">var</span> <span class="symbol">$li</span> = $(<span class="string">"&lt;li&gt;111&lt;/li&gt;"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将li插入到four的后面作为它的兄弟节点存在</span></span><br><span class="line"><span class="symbol">$li</span>.insertAfter($(<span class="string">"#four"</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmFhFK.png" alt="UmFhFK.png"></p><h3 id="3-2-3-兄弟之间的插入"><a href="#3-2-3-兄弟之间的插入" class="headerlink" title="3.2.3  兄弟之间的插入"></a>3.2.3 兄弟之间的插入</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 在four的后面插入某个元素</span></span><br><span class="line"><span class="keyword">var</span> <span class="symbol">$four</span> = $(<span class="string">"#four"</span>);</span><br><span class="line"><span class="symbol">$four</span>.after(<span class="string">"&lt;p&gt;哈哈哈，我是一个p元素&lt;/p&gt;"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在four的前面插入某个元素</span></span><br><span class="line"><span class="symbol">$four</span>.before(<span class="string">"&lt;div&gt;呵呵，我是一个div&lt;/div&gt;"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmF5WD.png" alt="UmF5WD.png"></p><h2 id="3-3-wrap"><a href="#3-3-wrap" class="headerlink" title="3.3  wrap"></a>3.3 wrap</h2><p>wrap 让某个元素的外层多一层元素</p><p>结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>B<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>C<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>D<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>E<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// wrap 让某个元素的外层多一层元素</span></span><br><span class="line">$(<span class="string">"p"</span>).wrap(<span class="string">"&lt;div&gt;&lt;/div&gt;"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmF7yd.png" alt="UmF7yd.png"></p><h2 id="3-4-wrapAll"><a href="#3-4-wrapAll" class="headerlink" title="3.4  wrapAll"></a>3.4 wrapAll</h2><p>wrapAll 让所有元素的外层多一层元素</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// wrapAll 让所有元素的外层多一层元素</span></span><br><span class="line"><span class="constructor">$(<span class="string">"p"</span>)</span>.wrap<span class="constructor">All(<span class="string">"&lt;div&gt;&lt;/div&gt;"</span>)</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmFxfS.png" alt="UmFxfS.png"></p><h2 id="3-5-unwrap"><a href="#3-5-unwrap" class="headerlink" title="3.5  unwrap"></a>3.5 unwrap</h2><p>unwrap 将匹配到的元素去掉一层父元素</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XQUERY"><figure class="iseeu highlight /xquery"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>B<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>C<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"p1"</span>&gt;</span>我是一个p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>D<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>E<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">// unwrap 将匹配到的元素去掉一层父元素</span><br><span class="line">$(<span class="string">"#p1"</span>).unwrap();</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/Umk9yj.png" alt="Umk9yj.png"></p><h2 id="3-6-replaceWith和replaceAll"><a href="#3-6-replaceWith和replaceAll" class="headerlink" title="3.6  replaceWith和replaceAll"></a>3.6 replaceWith和replaceAll</h2><p>结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>A<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>B<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>C<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>D<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>E<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// replaceWith 将匹配到的元素替换掉指定元素</span></span><br><span class="line"><span class="constructor">$(<span class="string">"p"</span>)</span>.replace<span class="constructor">With(<span class="string">"&lt;div&gt;123&lt;/div&gt;"</span>)</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmkVYT.png" alt="UmkVYT.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// replaceAll 将指定的元素替换掉匹配的元素</span></span><br><span class="line">$(<span class="string">"&lt;div&gt;456&lt;/div&gt;"</span>).replaceAll($(<span class="string">"p"</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/Umknl4.png" alt="Umknl4.png"></p><h2 id="3-7-empty、remove"><a href="#3-7-empty、remove" class="headerlink" title="3.7  empty、remove"></a>3.7 empty、remove</h2><p>结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// empty 表示清空后代，但是自己还在</span></span><br><span class="line">$(<span class="string">"#box"</span>).empty();</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmkJfO.png" alt="UmkJfO.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// remove 表示自杀，自己和后代都没有了</span></span><br><span class="line">$(<span class="string">"#box"</span>).remove();</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmkQmR.png" alt="UmkQmR.png"></p><h2 id="3-8-clone"><a href="#3-8-clone" class="headerlink" title="3.8  clone"></a>3.8 clone</h2><ul><li><p>clone(boolean)</p><ul><li><p>boolean：是一个布尔值</p></li><li><p>默认是false的时候，天生连同自己的后代一同复制</p></li><li><p>true的时候，连同事件一起复制</p></li></ul></li></ul><p><img src="https://s1.ax1x.com/2020/07/09/UmkB7t.png" alt="UmkB7t.png"></p><p>结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用clone 复制box</span></span><br><span class="line">$(<span class="string">"#box"</span>).after($(<span class="string">"#box"</span>).clone());</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/Umkc9S.png" alt="Umkc9S.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用clone 传递参数true</span></span><br><span class="line">$(<span class="string">"#box"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    alert(<span class="number">123</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#box"</span>).after($(<span class="string">"#box"</span>).clone(<span class="literal">true</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/10/UMAFbQ.png" alt="UMAFbQ.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-01</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>元素操作</tag>
      </tags>
  </entry>
  <entry>
    <title>二、元素操作</title>
    <url>/post/53967fa8.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="二、元素操作"><a href="#二、元素操作" class="headerlink" title="二、元素操作"></a>二、元素操作</h1><h2 id="2-1-创建元素document-createElement-type"><a href="#2-1-创建元素document-createElement-type" class="headerlink" title="2.1  创建元素document.createElement(type)"></a>2.1 创建元素document.createElement(type)</h2><p>使用方式：</p><ul><li><p>document.createElement(type)</p><ul><li><p>type:元素类型（标签名字符串）</p></li><li><p>返回值：创建出来的元素</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建元素</span></span><br><span class="line"><span class="comment">// 我们可以使用DOM提供相应的API，来创建元素</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="built_in">document</span>.createElement(<span class="string">"p"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(p);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmPfn1.png" alt="UmPfn1.png"></p><p><strong>孤儿节点，不在DOM树上</strong></p><h2 id="2-2-上树father-appendChild-child"><a href="#2-2-上树father-appendChild-child" class="headerlink" title="2.2  上树father.appendChild(child)"></a>2.2 上树father.appendChild(child)</h2><p>使用方式：</p><ul><li><p>father.appendChild(child)</p><ul><li><p>child：要追加的子节点</p></li><li><p>father：父节点</p></li><li><p>返回值：child</p></li><li><p>最终效果：将child追加到father中，作为father的childNodes中的最后一个子元素</p></li></ul></li></ul><p>结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"box"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DART"><figure class="iseeu highlight /dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建元素</span></span><br><span class="line"><span class="comment">//创建元素</span></span><br><span class="line"><span class="keyword">var</span> p = <span class="built_in">document</span>.createElement(<span class="string">"p"</span>);</span><br><span class="line"><span class="comment">// 获取box</span></span><br><span class="line"><span class="keyword">var</span> box =<span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="comment">// 将创建出来的p元素追加到box中</span></span><br><span class="line">box.appendChild(p);</span><br></pre></td></tr></table></figure></div><p>结果：</p><p><img src="https://s1.ax1x.com/2020/07/09/UmP476.png" alt="UmP476.png"></p><h2 id="2-3-下树father-removeChild-child"><a href="#2-3-下树father-removeChild-child" class="headerlink" title="2.3  下树father.removeChild(child)"></a>2.3 下树father.removeChild(child)</h2><p>使用方式：</p><ul><li><p>father.removeChild(child)</p><ul><li><p>child：要移除的子节点</p></li><li><p>father：父节点</p></li><li><p>返回值：child</p></li><li><p>最终效果：child从father的子节点中移除</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击btn让p元素下树</span></span><br><span class="line"><span class="comment">// 获取btn</span></span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    box.removeChild(p);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmPThD.png" alt="UmPThD.png"></p><h2 id="2-4-插入father-insertBefore-newChild-oldChild"><a href="#2-4-插入father-insertBefore-newChild-oldChild" class="headerlink" title="2.4  插入father.insertBefore(newChild,oldChild)"></a>2.4 插入father.insertBefore(newChild,oldChild)</h2><ul><li><p>father.insertBefore(newChild,oldChild)</p><ul><li><p>newChild：要插入的元素</p></li><li><p>oldChild：参照元素（oldChild为null时，效果等价于appendChild方法）</p></li><li><p>返回值：newChild</p></li><li><p>最终效果：newChild插入到oldChild前面，作为它的兄弟节点存在</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建元素</span></span><br><span class="line">var li = document.create<span class="constructor">Element(<span class="string">"li"</span>)</span>;</span><br><span class="line"><span class="comment">// 添加内部文本</span></span><br><span class="line">li.innerHTML = <span class="number">11</span>;</span><br><span class="line"><span class="comment">// 获取ul</span></span><br><span class="line">var ul = document.get<span class="constructor">ElementById(<span class="string">"list"</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过ul调用insertBefore方法</span></span><br><span class="line">ul.insert<span class="constructor">Before(<span class="params">li</span>, <span class="params">null</span>)</span>;  <span class="comment">// 第二个参数可以接受null，效果等价于appendChild方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取ul的所有子节点</span></span><br><span class="line">var arr = <span class="constructor">ChildNodes(<span class="params">ul</span>)</span>;</span><br><span class="line">console.log(arr);</span><br><span class="line">ul.insert<span class="constructor">Before(<span class="params">li</span>,<span class="params">arr</span>[5])</span>;  <span class="comment">// 第一个参数是要插入的元素，第二个参数是参照元素，就是你要将li插入到哪个元素的前面去</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmiSN8.png" alt="UmiSN8.png"></p><h2 id="2-5-替换father-replaceChild-newChild-oldChild"><a href="#2-5-替换father-replaceChild-newChild-oldChild" class="headerlink" title="2.5  替换father.replaceChild(newChild,oldChild)"></a>2.5 替换father.replaceChild(newChild,oldChild)</h2><p>使用方式：</p><ul><li><p>father.replaceChild(newChild,oldChild)</p><ul><li><p>newChild：要替换上的元素</p></li><li><p>oldChild：被替换下的元素</p></li><li><p>返回值：oldChild</p></li><li><p>最终效果：newChild替换掉oldChild</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建元素</span></span><br><span class="line"><span class="keyword">var</span> li = <span class="built_in">document</span>.createElement(<span class="string">"li"</span>);</span><br><span class="line"><span class="comment">// 添加内部文本</span></span><br><span class="line">li.innerHTML = <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取所有的li</span></span><br><span class="line"><span class="keyword">var</span> lis = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"li"</span>);</span><br><span class="line"><span class="comment">// 获取ul</span></span><br><span class="line"><span class="keyword">var</span> ul = <span class="built_in">document</span>.getElementById(<span class="string">"list"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将创建出来的li元素，在3s后替换掉lis中的某一项</span></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// ul.replaceChild(li,lis[2]);</span></span><br><span class="line">    <span class="keyword">var</span> child = ul.replaceChild(li,lis[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">console</span>.log(child);  <span class="comment">// &lt;li&gt;3&lt;/li&gt;</span></span><br><span class="line">&#125;,<span class="number">3000</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmiEBq.png" alt="UmiEBq.png"></p><h2 id="2-6-克隆node-cloneNode-boolean"><a href="#2-6-克隆node-cloneNode-boolean" class="headerlink" title="2.6  克隆node.cloneNode(boolean)"></a>2.6 克隆node.cloneNode(boolean)</h2><p>使用方式：</p><ul><li><p>node.cloneNode(boolean)</p><ul><li><p>接受一个参数就是布尔值：</p><ul><li><p>默认是false，只复制自身</p></li><li><p>当传递true的时候，则连同子节点一同复制</p></li></ul></li></ul></li><li><p>不传递参数，默认false，只复制自身：</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取ul</span></span><br><span class="line"><span class="keyword">var</span> ul = document.getElementsByTagName(<span class="string">"ul"</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="comment">// 克隆ul</span></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">new</span><span class="type">Ul</span> = ul.cloneNode();</span><br><span class="line">console.log(<span class="keyword">new</span><span class="type">Ul</span>);</span><br></pre></td></tr></table></figure></div><p>只复制自身，孤儿节点：</p><p><img src="https://s1.ax1x.com/2020/07/09/UmiM34.png" alt="UmiM34.png"></p><ul><li>传递true，连同子节点一同复制：</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取ul</span></span><br><span class="line"><span class="keyword">var</span> ul = document.getElementsByTagName(<span class="string">"ul"</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="comment">// 传递true</span></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">new</span><span class="type">Ul</span> = ul.cloneNode(<span class="literal">true</span>);</span><br><span class="line">console.log(<span class="keyword">new</span><span class="type">Ul</span>);</span><br></pre></td></tr></table></figure></div><p>连同子节点一同复制，但仍是孤儿节点：</p><p><img src="https://s1.ax1x.com/2020/07/09/Umi3uR.png" alt="Umi3uR.png"></p><ul><li>上树：</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HAXE"><figure class="iseeu highlight /haxe"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 上树</span></span><br><span class="line">document.body.appendChild(<span class="keyword">new</span><span class="type">Ul</span>);</span><br></pre></td></tr></table></figure></div><p>追加到body中的最后一个字节点：</p><p><img src="https://s1.ax1x.com/2020/07/09/UmiYE6.png" alt="UmiYE6.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-01</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>元素操作</tag>
      </tags>
  </entry>
  <entry>
    <title>一、DOM</title>
    <url>/post/701aa0b2.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="一、DOM"><a href="#一、DOM" class="headerlink" title="一、DOM"></a>一、DOM</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HSP"><figure class="iseeu highlight /hsp"><table><tr><td class="code"><pre><span class="line">可以通过DOM的getElementById来获取元素</span><br><span class="line">可以通过DOM的<span class="keyword">onclick</span>、onmouseenter、onmouseleave等来添加事件</span><br><span class="line">可以通过DOM的style来设置样式</span><br><span class="line">……</span><br></pre></td></tr></table></figure></div><h2 id="1-1-DOM的组成"><a href="#1-1-DOM的组成" class="headerlink" title="1.1  DOM的组成"></a>1.1 DOM的组成</h2><p>DOM是由节点组成的。元素/标签（在html中称为标签，在js中称为元素）</p><ul><li><p>节点一共分为12种：</p><ul><li><p>我们需要记住的有4种：</p><ul><li><p>1 元素类型</p></li><li><p>3 文本类型</p></li><li><p>8 注释类型</p></li><li><p>9 文档类型</p></li></ul></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRMSH"><figure class="iseeu highlight /crmsh"><table><tr><td class="code"><pre><span class="line">元素节点            　　<span class="keyword">Node</span>.<span class="title">ELEMENT_NODE</span>(<span class="number">1</span>)</span><br><span class="line">属性节点            　　<span class="keyword">Node</span>.<span class="title">ATTRIBUTE_NODE</span>(<span class="number">2</span>)</span><br><span class="line">文本节点            　　<span class="keyword">Node</span>.<span class="title">TEXT_NODE</span>(<span class="number">3</span>)</span><br><span class="line">CDATA节点              <span class="keyword">Node</span>.<span class="title">CDATA_SECTION_NODE</span>(<span class="number">4</span>)</span><br><span class="line">实体引用名称节点    　　<span class="keyword">Node</span>.<span class="title">ENTRY_REFERENCE_NODE</span>(<span class="number">5</span>)</span><br><span class="line">实体名称节点        　　<span class="keyword">Node</span>.<span class="title">ENTITY_NODE</span>(<span class="number">6</span>)</span><br><span class="line">处理指令节点        　　<span class="keyword">Node</span>.<span class="title">PROCESSING_INSTRUCTION_NODE</span>(<span class="number">7</span>)</span><br><span class="line">注释节点            　  <span class="keyword">Node</span>.<span class="title">COMMENT_NODE</span>(<span class="number">8</span>)</span><br><span class="line">文档节点            　  <span class="keyword">Node</span>.<span class="title">DOCUMENT_NODE</span>(<span class="number">9</span>)</span><br><span class="line">文档类型节点        　　<span class="keyword">Node</span>.<span class="title">DOCUMENT_TYPE_NODE</span>(<span class="number">10</span>)</span><br><span class="line">文档片段节点        　　<span class="keyword">Node</span>.<span class="title">DOCUMENT_FRAGMENT_NODE</span>(<span class="number">11</span>)</span><br><span class="line">DTD声明节点            <span class="keyword">Node</span>.<span class="title">NOTATION_NODE</span>(<span class="number">12</span>)</span><br></pre></td></tr></table></figure></div><h2 id="1-2-节点的类型nodeType"><a href="#1-2-节点的类型nodeType" class="headerlink" title="1.2 节点的类型nodeType"></a>1.2 节点的类型<code>nodeType</code></h2><p>结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 我是一个伟大的注释 --&gt;</span></span><br><span class="line">    你好</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"one"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>执行代码：</p><blockquote><p>元素.nodeType:</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="comment">// 查看box的节点类型</span></span><br><span class="line"><span class="built_in">console</span>.log(box.nodeType);  <span class="comment">// 这里输出 1  是元素类型</span></span><br></pre></td></tr></table></figure></div><blockquote><p>文本.nodeType：</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 查看box的所有子节点</span></span><br><span class="line"><span class="keyword">var</span> box_children = box.childNodes;</span><br><span class="line"><span class="comment">// 循环输出所有节点</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; box_children.length ; i++)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(box_children[i] , box_children[i].nodeType);</span><br><span class="line">&#125; <span class="comment">// 这里输出 3  是文本类型</span></span><br></pre></td></tr></table></figure></div><blockquote><p>注释.nodeType：</p></blockquote><blockquote><p>文档.nodeType：</p></blockquote><p><img src="https://s1.ax1x.com/2020/07/09/UmPCO1.png" alt="UmPCO1.png"></p><h2 id="1-3-childNodes属性"><a href="#1-3-childNodes属性" class="headerlink" title="1.3  childNodes属性"></a>1.3 childNodes属性</h2><p>childNodes属性：一个节点的所有子节点的集合</p><p>它指向调用该属性的节点的所有子节点的集合，它是一个类数组对象，类型NodeList</p><p>结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"one"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    你好</span><br><span class="line">    <span class="comment">&lt;!-- 我是一个伟大的注释 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmPEFO.png" alt="UmPEFO.png"></p><p>经过观察，我们明明写了3个节点，但是在输出的时候出现了5个节点：</p><p><img src="https://s1.ax1x.com/2020/07/09/UmPl0P.png" alt="UmPl0P.png"></p><p>这是因为，<strong>高级浏览器会将空白折叠现象形成的空白符当做一个文本类型的节点存在</strong>。</p><p>然后我们再到IE中去观察：</p><ul><li><p>由于IE低版本中的控制台打不开，我们输出：console.log(box.childNodes.length);</p></li><li><p>结果为3，此时IE反而比高级浏览器好用。</p></li></ul><h2 id="1-4-封装轮子统一浏览器的变现"><a href="#1-4-封装轮子统一浏览器的变现" class="headerlink" title="1.4  封装轮子统一浏览器的变现"></a>1.4 封装轮子统一浏览器的变现</h2><p>我们想要输出box的所有子节点，但是childNodes属性，存在兼容问题，在IE中和在高级浏览器中表现形式不一致</p><p>所以我们需要想办法解决：直接删除空格部分：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"one"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>你好<span class="comment">&lt;!-- 我是一个伟大的注释 --&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmPJfg.png" alt="UmPJfg.png"></p><p>还可以封装一个轮子统一浏览器的变现：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个函数来解决兼容行问题</span></span><br><span class="line"><span class="comment">// 给定一个元素，获取该元素的，所有子节点，并且去掉空白符</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ChildNodes</span>(<span class="params">dom</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 定义一个空数组</span></span><br><span class="line">    <span class="keyword">var</span> arr = [];</span><br><span class="line">    <span class="comment">// 查看元素所有的子节点类型，有没有文本类型</span></span><br><span class="line">    <span class="comment">// 如果有文本类型，还要查看是否是空白文本</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; dom.childNodes.length ; i++)&#123;</span><br><span class="line">        <span class="comment">// 查看节点类型</span></span><br><span class="line">        <span class="built_in">console</span>.log(dom.childNodes[i].nodeType);</span><br><span class="line">        <span class="keyword">if</span> (dom.childNodes[i].nodeType === <span class="number">3</span>)&#123;</span><br><span class="line">            <span class="comment">// 说明是文本类型</span></span><br><span class="line">            <span class="comment">// 查看是否是空文本</span></span><br><span class="line">            <span class="comment">// 通过data属性可以查看文本内容</span></span><br><span class="line">            <span class="comment">// 定义正则表达式</span></span><br><span class="line">            <span class="keyword">var</span> reg = <span class="regexp">/^\s+$/</span>;</span><br><span class="line">            <span class="comment">// 验证</span></span><br><span class="line">            <span class="keyword">if</span> (reg.test(dom.childNodes[i].data))&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"第"</span> + i + <span class="string">"项是纯空白"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 不是空白符，就要进入数组中</span></span><br><span class="line">                arr.push(dom.childNodes[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 不是文本类型的，直接进入数组</span></span><br><span class="line">            arr.push(dom.childNodes[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 循环完毕，返回数组</span></span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line"><span class="keyword">var</span> children = ChildNodes(box);</span><br><span class="line"><span class="built_in">console</span>.log(children);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/09/UmPNlj.png" alt="UmPNlj.png"></p><p>后期可以使用工程化来压缩</p><h2 id="1-5-节点属性"><a href="#1-5-节点属性" class="headerlink" title="1.5  节点属性"></a>1.5 节点属性</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MEL"><figure class="iseeu highlight /mel"><table><tr><td class="code"><pre><span class="line"><span class="keyword">nodeType</span>：节点的类型</span><br><span class="line">nodeName：节点的名称</span><br><span class="line">nodeValue：节点的值</span><br></pre></td></tr></table></figure></div><p>结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"one"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    你好,世界</span><br><span class="line">    <span class="comment">&lt;!-- 我是一个注释 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>执行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">// 获取元素</span><br><span class="line"><span class="built_in">var</span> <span class="built_in">box</span> = document.getElementById(<span class="string">"box"</span>);</span><br><span class="line">// 输出<span class="built_in">box</span>的所有子节点</span><br><span class="line"><span class="built_in">var</span> arr = ChildNodes(<span class="built_in">box</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">var</span> i = <span class="number">0</span> ; i &lt; arr.<span class="built_in">length</span> ; i++)&#123;</span><br><span class="line">    // console.<span class="built_in">log</span>(arr[i].nodeType);        nodeType属性标记该节点的类型</span><br><span class="line">    // console.<span class="built_in">log</span>(arr[i].nodeName);        nodeType属性标记该节点的名称</span><br><span class="line">    // console.<span class="built_in">log</span>(arr[i].nodeValue);       nodeType属性标记该节点的值</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"节点属性:"</span>, arr[i].nodeType, <span class="string">"节点名称："</span>, arr[i].nodeName, <span class="string">"节点值:"</span>, arr[i].nodeValue);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>结果：</p><p><img src="https://s1.ax1x.com/2020/07/09/UmPyhF.png" alt="UmPyhF.png"></p><ul><li><p>nodeName：节点的名称：</p><ul><li><p>元素类型的节点名称，是元素标签名称大写字符串</p></li><li><p>文本类型的节点名称，永远是#text字符串</p></li><li><p>注释类型的节点名称，永远是#comment字符串</p></li><li><p>文档类型的节点名称，是#document</p></li></ul></li><li><p>nodeValue：节点的值：</p><ul><li><p>元素类型的节点值，是null</p></li><li><p>文本类型的节点值，是书写的文本内容（包含里面的空格）</p></li><li><p>注释类型的节点值，是注释的内容（包含里面的空格）</p></li><li><p>文档类型的节点值，是null</p></li></ul></li></ul><h2 id="1-6-节点关系"><a href="#1-6-节点关系" class="headerlink" title="1.6  节点关系"></a>1.6 节点关系</h2><p>一共分为3种：</p><blockquote><p>父子、子父、兄弟</p></blockquote><p>父子：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">father<span class="selector-class">.childNodes</span>[index]  <span class="comment">// 获取某一个儿子节点</span></span><br><span class="line">father<span class="selector-class">.firstChild</span>         <span class="comment">// 获取第一个儿子节点</span></span><br><span class="line">father<span class="selector-class">.lastChild</span>          <span class="comment">//  获取最后一个儿子节点</span></span><br></pre></td></tr></table></figure></div><p>子父：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">child<span class="selector-class">.parentNode</span>   <span class="comment">// 父节点</span></span><br></pre></td></tr></table></figure></div><p>兄弟：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRMSH"><figure class="iseeu highlight /crmsh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">node</span>.<span class="title">previousSibling</span>  // 获取上一个兄弟节点</span><br><span class="line"><span class="keyword">node</span>.<span class="title">nextSibling</span>       // 获取下一个兄弟节点</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS进阶-01</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
      </tags>
  </entry>
  <entry>
    <title>二十九、案例:碎图轮播图</title>
    <url>/post/fb0ebc50.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十九、jquery项目-碎图轮播图"><a href="#二十九、jquery项目-碎图轮播图" class="headerlink" title="二十九、jquery项目:碎图轮播图"></a>二十九、jquery项目:碎图轮播图</h1><p><img src="https://s1.ax1x.com/2020/07/08/UZU4KA.png" alt="UZU4KA.png"></p><h2 id="29-1-html"><a href="#29-1-html" class="headerlink" title="29.1  html"></a>29.1 html</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>DsignStudio<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 清楚默认样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/reset.css"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/index.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- header部分 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>DesignStudio<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"cur"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>About<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Services<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Gallery<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Privacy<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>Contacts<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- content部分 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel"</span> <span class="attr">id</span>=<span class="string">"carousel"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"circles"</span> <span class="attr">id</span>=<span class="string">"circles"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"cur"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>01<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>02<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>03<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>04<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"imgs"</span> <span class="attr">id</span>=<span class="string">"imgs"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/slider-img1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mask"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"close"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>GoodCook1<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>ONLINE COOKING RECIPES<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Esse cillum dolore eu fugiat nilla pariatur<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>excepteur sint occaecat cupidatat non<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>priident, sunt in culpa qui officia<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>deserunt mollit anim.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">class</span>=<span class="string">"more"</span>&gt;</span>Read More<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/slider-img2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mask"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"close"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>GoodCook2<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>ONLINE COOKING RECIPES<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Esse cillum dolore eu fugiat nilla pariatur<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>excepteur sint occaecat cupidatat non<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>priident, sunt in culpa qui officia<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>deserunt mollit anim.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">class</span>=<span class="string">"more"</span>&gt;</span>Read More<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/slider-img3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mask"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"close"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>GoodCook3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>ONLINE COOKING RECIPES<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Esse cillum dolore eu fugiat nilla pariatur<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>excepteur sint occaecat cupidatat non<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>priident, sunt in culpa qui officia<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>deserunt mollit anim.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">class</span>=<span class="string">"more"</span>&gt;</span>Read More<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/slider-img4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mask"</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"close"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>GoodCook4<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">h4</span>&gt;</span>ONLINE COOKING RECIPES<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"txt"</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Esse cillum dolore eu fugiat nilla pariatur<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>excepteur sint occaecat cupidatat non<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>priident, sunt in culpa qui officia<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                        <span class="tag">&lt;<span class="name">p</span>&gt;</span>deserunt mollit anim.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">class</span>=<span class="string">"more"</span>&gt;</span>Read More<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/index.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="29-2-css"><a href="#29-2-css" class="headerlink" title="29.2  css"></a>29.2 css</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 公共样式 */</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#60B001</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">980px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">"Arial"</span>, <span class="string">"Microsoft Yahei"</span>, <span class="string">"SimSun"</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">22px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* header部分 */</span></span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">196px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#080808</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">367px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">72px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">34px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">266px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">47px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/logo.png);</span><br><span class="line">    <span class="attribute">text-indent</span>: -<span class="number">888em</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.nav</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">25px</span> <span class="number">0px</span> <span class="number">26px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">30px</span> <span class="number">0px</span> <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/menu-spacer.png) no-repeat right top;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">55px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.cur</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#60B001</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* content部分 */</span></span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/content-bg.jpg) no-repeat center top;</span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span> <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">120px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">950px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">470px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/slider-bg.png);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.circles</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/pagination-a.png) <span class="number">0px</span> -<span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/pagin-<span class="number">1</span>.png);</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2)</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/pagin-<span class="number">2</span>.png);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(3)</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/pagin-<span class="number">3</span>.png);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(4)</span> <span class="selector-tag">a</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/pagin-<span class="number">4</span>.png);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-class">.cur</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.imgs</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">830px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">431px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.imgs</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">830px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">431px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.imgs</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.imgs</span> <span class="selector-class">.mask</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">370px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/banner-bg.png);</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">61px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.imgs</span> <span class="selector-class">.mask</span> <span class="selector-class">.close</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(../images/close.png);</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.imgs</span> <span class="selector-class">.mask</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">39px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">71px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.imgs</span> <span class="selector-class">.mask</span> <span class="selector-tag">h4</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">34px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.imgs</span> <span class="selector-class">.mask</span> <span class="selector-class">.txt</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">34px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-class">.carousel</span> <span class="selector-class">.imgs</span> <span class="selector-class">.mask</span> <span class="selector-class">.more</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="29-3-js"><a href="#29-3-js" class="headerlink" title="29.3  js"></a>29.3 js</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CLOJURE"><figure class="iseeu highlight /clojure"><table><tr><td class="code"><pre><span class="line">(<span class="name">function</span>()&#123;</span><br><span class="line">    // 我们将所有语句写入IIFE中，可以有效防止各个引入的js文件中变量之间相互污染</span><br><span class="line">    // 获取元素</span><br><span class="line">    var $imgs = $(<span class="string">"#imgs ul li"</span>)<span class="comment">;</span></span><br><span class="line">    var $carousel = $(<span class="string">"#carousel"</span>)<span class="comment">;</span></span><br><span class="line">    var $circles = $(<span class="string">"#circles ol li"</span>)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">    // 创建猫腻图容器 外面有了双引号，里面要用单引号</span><br><span class="line">    var $maoni = $(<span class="string">"&lt;li class='maoni'&gt;&lt;/li&gt;"</span>).appendTo($(<span class="string">"#imgs ul"</span>))<span class="comment">;</span></span><br><span class="line">    // 图片width=830;height=431;均分成<span class="number">3</span>行<span class="number">6</span>列，每一个宽<span class="number">138.33</span>，高<span class="number">143.66</span></span><br><span class="line"></span><br><span class="line">    // 定义一个数组，用于保存<span class="number">18</span>张碎图片</span><br><span class="line">    var arr = (<span class="name">function</span>()&#123;</span><br><span class="line">        // 定义数组</span><br><span class="line">        var temp = []<span class="comment">;</span></span><br><span class="line">        // 将图片分为<span class="number">3</span>*6的形式</span><br><span class="line">        for (<span class="name"><span class="builtin-name">var</span></span> i = <span class="number">0</span> <span class="comment">; i &lt; 3 ; i++)&#123;</span></span><br><span class="line">            for (<span class="name"><span class="builtin-name">var</span></span> j = <span class="number">0</span> <span class="comment">; j &lt; 6 ; j++)&#123;</span></span><br><span class="line">                // 创建<span class="number">18</span>个div追加到猫腻容器中</span><br><span class="line">                temp.push($(<span class="string">"&lt;div&gt;&lt;/div&gt;"</span>).css(&#123;</span><br><span class="line">                    <span class="string">"width"</span>: <span class="number">0</span>,  // <span class="number">138.33</span></span><br><span class="line">                    <span class="string">"height"</span>: <span class="number">0</span>,  // <span class="number">143.66</span></span><br><span class="line">                    // 注意复合属性中的空格</span><br><span class="line">                    <span class="string">"background"</span>: <span class="string">"url(images/slider-img1.jpg) no-repeat "</span> + j * <span class="number">-138.33</span> + <span class="string">"px "</span> + i * <span class="number">-143.66</span> + <span class="string">"px"</span>, </span><br><span class="line">                    <span class="string">"position"</span>: <span class="string">"absolute"</span>,</span><br><span class="line">                    <span class="string">"left"</span>: j * <span class="number">138.33</span>,</span><br><span class="line">                    <span class="string">"top"</span>: i * <span class="number">143.66</span></span><br><span class="line">                &#125;).appendTo($maoni))<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return temp;</span><br><span class="line">    &#125;)()<span class="comment">;</span></span><br><span class="line">    // console.log(<span class="name">arr</span>)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">    // 定义<span class="number">2</span>个信号量</span><br><span class="line">    // 小圆点的信号量</span><br><span class="line">    var small_idx = <span class="number">0</span><span class="comment">;</span></span><br><span class="line">    // 定义大图的信号量</span><br><span class="line">    var big_idx = <span class="number">0</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">    // 函数节流</span><br><span class="line">    // 定义锁</span><br><span class="line">    var lock = <span class="literal">true</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line">    // 定义定时器</span><br><span class="line">    var timer = setInterval(<span class="name">function</span>()&#123;</span><br><span class="line">        // 小圆点信号量改变</span><br><span class="line">        small_idx ++;</span><br><span class="line">        // 判断信号量，保证信号量的有效值</span><br><span class="line">        if(<span class="name">small_idx</span> &gt; $circles.length - <span class="number">1</span>)&#123;</span><br><span class="line">            small_idx = <span class="number">0</span><span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">        // console.log(<span class="name">small_idx</span>)<span class="comment">;</span></span><br><span class="line">        // 自执行函数this指向window，要改变this指向(谁调用指向谁)</span><br><span class="line">        change.call($circles.eq(<span class="name">small_idx</span>))<span class="comment">;</span></span><br><span class="line">    &#125;,<span class="number">6000</span>)<span class="comment">;</span></span><br><span class="line">    // 当鼠标进入carousel停止定时器</span><br><span class="line">    $carousel.mouseenter(<span class="name">function</span>()&#123;//console.log(<span class="name">this</span>)</span><br><span class="line">        // 清除定时器</span><br><span class="line">        clearInterval(<span class="name">timer</span>)<span class="comment">;</span></span><br><span class="line">    &#125;)<span class="comment">;</span></span><br><span class="line">    // 当鼠标离开 重启定时器</span><br><span class="line">    $carousel.mouseleave(<span class="name">function</span>()&#123;</span><br><span class="line">        // 设表先关</span><br><span class="line">        clearInterval(<span class="name">timer</span>)<span class="comment">;</span></span><br><span class="line">        // timer 重新赋值</span><br><span class="line">        timer = setInterval(<span class="name">function</span>()&#123;</span><br><span class="line">            // 小圆点信号量改变</span><br><span class="line">            small_idx ++;</span><br><span class="line">            // 判断信号量，保证信号量的有效值</span><br><span class="line">            if(<span class="name">small_idx</span> &gt; $circles.length - <span class="number">1</span>)&#123;</span><br><span class="line">                small_idx = <span class="number">0</span><span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">            // console.log(<span class="name">small_idx</span>)<span class="comment">;</span></span><br><span class="line">            // 自执行函数this指向window，要改变this指向(谁调用指向谁)</span><br><span class="line">            change.call($circles.eq(<span class="name">small_idx</span>))<span class="comment">;</span></span><br><span class="line">        &#125;,<span class="number">6000</span>)<span class="comment">;</span></span><br><span class="line">    &#125;)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">    // 添加点击事件</span><br><span class="line">    $circles.click(<span class="name">change</span>)<span class="comment">;</span></span><br><span class="line">    // 定义一个函数用于复用</span><br><span class="line">    function change()&#123;</span><br><span class="line">        // 如果lock是<span class="literal">false</span> 什么都不做</span><br><span class="line">        if(<span class="name">!lock</span>)&#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        // 关闭锁</span><br><span class="line">        lock = <span class="literal">false</span><span class="comment">;</span></span><br><span class="line">        // 改变小圆点的信号量</span><br><span class="line">        small_idx = $(<span class="name">this</span>).index()<span class="comment">;</span></span><br><span class="line">        // console.log(<span class="name">small_idx</span>)<span class="comment">;</span></span><br><span class="line">        // 当小圆点的信号量等于大图的信号量时，什么也不做</span><br><span class="line">        if(<span class="name">small_idx</span> === big_idx)&#123;</span><br><span class="line">            // 开锁</span><br><span class="line">            lock = <span class="literal">true</span><span class="comment">;</span></span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        // 当前小圆点加cur</span><br><span class="line">        $(<span class="name">this</span>).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>)<span class="comment">;</span></span><br><span class="line">        // 原来大图蒙版消失</span><br><span class="line">        $(<span class="string">".mask"</span>).eq(<span class="name">big_idx</span>).stop(<span class="name">true</span>).fadeOut(<span class="number">1000</span>)<span class="comment">;</span></span><br><span class="line">        // 猫腻图出现</span><br><span class="line">        $maoni.addClass(<span class="string">"active"</span>)<span class="comment">;</span></span><br><span class="line">        // 轮换猫腻图</span><br><span class="line">        $.each(<span class="name">arr</span>,function(<span class="name">index</span>, value)&#123;</span><br><span class="line">            // console.log(<span class="name">value</span>)<span class="comment">;</span></span><br><span class="line">            // 让对应小圆点信号量的大图的猫腻图出现</span><br><span class="line">            // 设置随机出现 范围：&gt;=0 &lt;3300</span><br><span class="line">            // console.log(<span class="name">small_idx</span> + <span class="number">1</span>)<span class="comment">;</span></span><br><span class="line">            value.css(<span class="string">"backgroundImage"</span>, <span class="string">"url(images/slider-img"</span> + (<span class="name">small_idx</span> + <span class="number">1</span>) + <span class="string">".jpg)"</span>).animate(&#123;</span><br><span class="line">                <span class="string">"width"</span>: <span class="number">138.33</span>,</span><br><span class="line">                <span class="string">"height"</span>: <span class="number">143.66</span></span><br><span class="line">            &#125;,<span class="number">300</span> + Math.random() * <span class="number">3000</span>)<span class="comment">;</span></span><br><span class="line">        &#125;)<span class="comment">;</span></span><br><span class="line">        // 定义延时器。在所有碎图片完成之后要做的事情：真图出现</span><br><span class="line">        setTimeout(<span class="name">function</span>()&#123;</span><br><span class="line">            // 当所有碎图显示之后，width，height 要变为<span class="number">0</span></span><br><span class="line">            // 使用$.each</span><br><span class="line">            $.each(<span class="name">arr</span>,function(<span class="name">index</span>, value)&#123;</span><br><span class="line">                value.css(&#123;</span><br><span class="line">                    <span class="string">"width"</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="string">"height"</span>: <span class="number">0</span></span><br><span class="line">                &#125;)<span class="comment">;</span></span><br><span class="line">            &#125;)<span class="comment">;</span></span><br><span class="line">            // 猫腻图显示之后，应该出现真图</span><br><span class="line">            // 改变大图的信号量</span><br><span class="line">            big_idx = small_idx;</span><br><span class="line">            // 大图出现，加active，所有兄弟包括猫腻图去掉active</span><br><span class="line">            $imgs.eq(<span class="name">big_idx</span>).addClass(<span class="string">"active"</span>).siblings().removeClass(<span class="string">"active"</span>)<span class="comment">;</span></span><br><span class="line">            // 定义大图的蒙版淡入</span><br><span class="line">            $(<span class="string">".mask"</span>).eq(<span class="name">big_idx</span>).fadeOut(<span class="number">0</span>).stop(<span class="name">true</span>).fadeIn(<span class="number">1000</span>)<span class="comment">;</span></span><br><span class="line">            // 所有事情完毕之后，开锁</span><br><span class="line">            lock = <span class="literal">true</span><span class="comment">;</span></span><br><span class="line">        &#125;,<span class="number">3300</span>)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 点击close，让对应的蒙版mask消失</span><br><span class="line">    $(<span class="string">".close"</span>).click(<span class="name">function</span>()&#123;</span><br><span class="line">        $(<span class="name">this</span>).parent().fadeOut(<span class="number">1000</span>)<span class="comment">;</span></span><br><span class="line">    &#125;)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">    // 页面加载的时，第一个蒙版淡入 淡入的对象需要有display:none; 可以先淡出，让其自动拥有display:none;样式</span><br><span class="line">    $(<span class="string">".mask"</span>).eq(<span class="number">0</span>).fadeOut(<span class="number">0</span>).stop(<span class="name">true</span>).fadeIn(<span class="number">1000</span>)<span class="comment">;</span></span><br><span class="line">&#125;)()<span class="comment">;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>轮播图</tag>
      </tags>
  </entry>
  <entry>
    <title>二十八、each()方法</title>
    <url>/post/dd22da61.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十八、each-方法"><a href="#二十八、each-方法" class="headerlink" title="二十八、each()方法"></a>二十八、each()方法</h1><h2 id="28-1-第一种使用方式：对象-each-funvtion"><a href="#28-1-第一种使用方式：对象-each-funvtion" class="headerlink" title="28.1  第一种使用方式：对象.each(funvtion(){})"></a>28.1 第一种使用方式：<code>对象.each(funvtion(){})</code></h2><p><code>对象.each(funvtion(){})</code> 接受一个参数就是匿名函数</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用each遍历</span></span><br><span class="line">$(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UZNztO.png" alt="UZNztO.png"></p><h2 id="28-2-第二种使用方式-each-target-fn"><a href="#28-2-第二种使用方式-each-target-fn" class="headerlink" title="28.2  第二种使用方式: $.each(target,fn)"></a>28.2 第二种使用方式: <code>$.each(target,fn)</code></h2><ul><li><p>$.each(target,fn)</p><ul><li><p><strong>一般用于遍历数组或者遍历对象的时候</strong></p></li><li><p>target：要遍历的目标</p></li><li><p>fn：执行的函数</p></li><li><p>函数中有2个参数：</p><ul><li><p>第一个参数：索引值</p></li><li><p>第二个参数：成员值</p></li></ul></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>,<span class="string">"d"</span>];</span><br><span class="line"><span class="comment">// 使用each方法的第二种方式</span></span><br><span class="line">$.each(arr, <span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(index, value);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UZN0Tf.png" alt="UZN0Tf.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a: <span class="string">"1"</span>,</span><br><span class="line">    b: <span class="string">"2"</span>,</span><br><span class="line">    c: <span class="string">"3"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 遍历对象</span></span><br><span class="line">$.each(obj, <span class="function"><span class="keyword">function</span>(<span class="params">key, value</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(key, value);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UZNclj.png" alt="UZNclj.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>call</tag>
        <tag>each</tag>
      </tags>
  </entry>
  <entry>
    <title>二十七、this()方法</title>
    <url>/post/a8575354.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十七-this-方法"><a href="#二十七-this-方法" class="headerlink" title="二十七  this()方法"></a>二十七 this()方法</h1><h2 id="27-1-this表示触发事件的对象"><a href="#27-1-this表示触发事件的对象" class="headerlink" title="27.1  this表示触发事件的对象"></a>27.1 this表示触发事件的对象</h2><p>each()方法的参数是一个函数，函数中的this表示遍历到的该对象。</p><p>普通函数中也有this，如果当前函数自执行，this指向window。</p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加点击事件</span></span><br><span class="line">$(<span class="string">"#btn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);  <span class="comment">// &lt;button id="btn"&gt;点我执行代码&lt;/button&gt;</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>);  <span class="comment">// Window &#123;parent: Window, opener: null, top: Window, length: 0, frames: Window, …&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 执行函数</span></span><br><span class="line">fn();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个对象</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a : fn</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 现在fn中的this指向obj</span></span><br><span class="line">obj.a();  <span class="comment">// &#123;a: ƒ&#125;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UV4VmV.png" alt="UV4VmV.png"></p><h2 id="27-2-改变函数的this指向，可以使用call-方法"><a href="#27-2-改变函数的this指向，可以使用call-方法" class="headerlink" title="27.2  改变函数的this指向，可以使用call()方法"></a>27.2 改变函数的this指向，可以使用call()方法</h2><p>使用方式：</p><blockquote><p>fn.call() 接受的参数就是要改变的this指向。（可以接收多个参数）</p></blockquote><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个函数</span></span><br><span class="line">function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">    console.log(<span class="keyword">this</span>);  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用call()方法改变函数中的this指向</span></span><br><span class="line"><span class="comment">// 做了2件事，执行函数 改变this指向 </span></span><br><span class="line"><span class="function"><span class="keyword">fun</span>.<span class="title">call</span><span class="params">($(<span class="string">"#btn"</span>)</span></span>);  </span><br><span class="line"><span class="function"><span class="keyword">fun</span>.<span class="title">call</span><span class="params">(document)</span></span>; </span><br><span class="line"><span class="function"><span class="keyword">fun</span>.<span class="title">call</span><span class="params">(document.body)</span></span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UZNnyR.png" alt="UZNnyR.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>this</tag>
        <tag>call</tag>
      </tags>
  </entry>
  <entry>
    <title>二十六、函数节流</title>
    <url>/post/da83697.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十六、函数节流"><a href="#二十六、函数节流" class="headerlink" title="二十六、函数节流"></a>二十六、函数节流</h1><h2 id="26-1-函数节流，设一个变量lock"><a href="#26-1-函数节流，设一个变量lock" class="headerlink" title="26.1  函数节流，设一个变量lock"></a>26.1 函数节流，设一个变量<code>lock</code></h2><p>函数节流：</p><blockquote><p>可以使一些频繁触发的函数事件受到限制，可以使函数在一定的时间之内满足，或者满足某些条件之后再去执行。</p></blockquote><ul><li><p>设一个变量lock，取值是布尔值</p><ul><li><p>var lock = true 函数可以执行</p></li><li><p>lock = false 函数不可以执行</p></li></ul></li></ul><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义锁</span></span><br><span class="line"><span class="keyword">var</span> lock = <span class="literal">true</span>;</span><br><span class="line">$(<span class="string">"#btn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 函数节流</span></span><br><span class="line">    <span class="keyword">if</span>(!lock)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">		<span class="comment">// 遇见return，终止代码执行</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 进入之后，关闭锁</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">    lock = <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UVh4eK.png" alt="UVh4eK.png"></p><p>第一次点击，出现2,3</p><p>第二次开始，只出现1</p><h2 id="26-2-延时器setTimeout-fn-time"><a href="#26-2-延时器setTimeout-fn-time" class="headerlink" title="26.2  延时器setTimeout(fn,time)"></a>26.2 延时器setTimeout(fn,time)</h2><p>可以比喻成定时炸弹，在一定的时间只会执行一次。</p><p>使用方式：</p><ul><li><p>setTimeout(fn,time)</p><ul><li><p>fn：要执行的函数</p></li><li><p>time：要延迟的时间</p></li><li><p>是window属性，window可以省略</p></li></ul></li></ul><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义锁</span></span><br><span class="line"><span class="keyword">var</span> lock = <span class="literal">true</span>;</span><br><span class="line">$(<span class="string">"#btn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 函数节流</span></span><br><span class="line">    <span class="keyword">if</span>(!lock)&#123;</span><br><span class="line">        <span class="comment">// 遇见return，终止代码执行</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 进入之后，关闭锁</span></span><br><span class="line">    lock = <span class="literal">false</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line">    <span class="comment">// 在3s之后打开锁，使用延时器</span></span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 打开锁</span></span><br><span class="line">        lock = <span class="literal">true</span>;</span><br><span class="line">    &#125;,<span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UV4pFg.png" alt="UV4pFg.png"></p><p>第一次点击，出现3</p><p>3s内再次点击，不会出现3</p><p>3s后再次点击，出现3</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>函数节流</tag>
        <tag>延时器</tag>
      </tags>
  </entry>
  <entry>
    <title>二十五、异形滚动参与多元素的运动</title>
    <url>/post/a1513a02.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十五、异形滚动参与多元素的运动"><a href="#二十五、异形滚动参与多元素的运动" class="headerlink" title="二十五、异形滚动参与多元素的运动"></a>二十五、异形滚动参与多元素的运动</h1><p><img src="https://s1.ax1x.com/2020/07/08/UVhnxI.png" alt="UVhnxI.png"></p><h2 id="25-1-DOM"><a href="#25-1-DOM" class="headerlink" title="25.1  DOM"></a>25.1 DOM</h2><p>添加多个元素</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no0"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/0.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no1"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no2"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no3"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no4"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no5"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no6"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/6.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"waiting"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/7.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"waiting"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/8.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"waiting"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/9.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="25-2-css"><a href="#25-2-css" class="headerlink" title="25.2  css"></a>25.2 css</h2><p>添加的多的元素，设置为隐藏</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.waiting</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="25-3-jquery"><a href="#25-3-jquery" class="headerlink" title="25.3  jquery"></a>25.3 jquery</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义数组 将所有li的状态保存起来</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 一般常量用大写字母表示</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var JSONARR = [];</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 使用for循环 将所有li的状态保存 每一个li都是单独的个体，都有自己的 width height left top</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// for (var i = 0 ; i &lt; 7 ; i++)&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     JSONARR.push(&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         "width": $(".no" + i).css("width"),</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         "height": $(".no" + i).css("height"),</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         "left": $(".no" + i).css("left"),</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//         "top": $(".no" + i).css("top")</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     &#125;);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 将JSONARR[]h和for循环合并优化</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> JSONARR = (<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> temp = [];</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">7</span> ; i++)&#123;</span></span><br><span class="line">            temp.push(&#123;</span><br><span class="line"><span class="javascript">                <span class="string">"width"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"width"</span>),</span></span><br><span class="line"><span class="javascript">                <span class="string">"height"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"height"</span>),</span></span><br><span class="line"><span class="javascript">                <span class="string">"left"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"left"</span>),</span></span><br><span class="line"><span class="javascript">                <span class="string">"top"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"top"</span>)</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> temp;</span></span><br><span class="line">    &#125;)();</span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(JSONARR); 数组中保存7个对象</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义数组 用于保存所有li的类名</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var classNameArr = ["no0","no1","no2","no3","no4","no5","no6"];</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var classNameArr = [];</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 循环所有的li元素并保存类名</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// $("li").each(function(i)&#123;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">//     classNameArr.push($(this).attr("class"));</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// &#125;);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 将散的语句合并</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> classNameArr = (<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> temp = [];</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            temp.push($(<span class="keyword">this</span>).attr(<span class="string">"class"</span>));</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> temp;</span></span><br><span class="line">    &#125;)();</span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(classNameArr);</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 右按钮点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#rightBtn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> ($(<span class="string">"li"</span>).is(<span class="string">":animated"</span>))&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 让.noX运动到.noX-1的位置</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt; <span class="number">7</span> ; i++)&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">".no"</span> + i).animate(JSONARR[i - <span class="number">1</span>],<span class="number">600</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 不能让.no0穿堂而过，应该是瞬移</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// $(".no0").css(JSONARR[6]);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当点击一次之后不能继续点击，分析原因：类名和样式不统一</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 为了让类名和样式相统一 轮换类名</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 点击的时候</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no0 no1 no2 no3 no4 no5 no6 原始位置</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no6 no0 no1 no2 no3 no4 no5 点击一次</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no5 no6 no0 no1 no2 no3 no4 点击二次</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 将数组的最后一位删除，放到数组的第一位</span></span></span><br><span class="line">        classNameArr.unshift(classNameArr.pop());</span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(classNameArr);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// for (var i = 0 ; i &lt; 7 ; i++)&#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     $("li").eq(i).attr("class",classNameArr[i]);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).attr(<span class="string">"class"</span>,classNameArr[i]);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 由于.no6 是由.waiting&#123;display:none;&#125;变来的，此时.no6只有display:none;的样式和最初始样式</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 为了防止出现bug，我们强制给.no6添加行内样式</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no6"</span>).css(JSONARR[<span class="number">6</span>]);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 左按钮点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#leftBtn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> ($(<span class="string">"li"</span>).is(<span class="string">":animated"</span>))&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 让.noX运动到.noX+1的位置</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">6</span> ; i++)&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">".no"</span> + i).animate(JSONARR[i + <span class="number">1</span>],<span class="number">600</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 不能让.no6穿堂而过，应该是瞬移</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// $(".no6").css(JSONARR[0]);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当点击一次之后不能继续点击，分析原因：类名和样式不统一</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 为了让类名和样式相统一 轮换类名</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 点击的时候</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no0 no1 no2 no3 no4 no5 no6 原始位置</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no1 no2 no3 no4 no5 no6 no0 点击一次</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no2 no3 no4 no5 no6 no0 no1 点击二次</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 将数组的第一位删除，放到数组的最后一位</span></span></span><br><span class="line">        classNameArr.push(classNameArr.shift());</span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(classNameArr);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).attr(<span class="string">"class"</span>,classNameArr[i]);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 由于.no0 是由.waiting&#123;display:none;&#125;变来的，此时.no0只有display:none;的样式和最初始样式</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 为了防止出现bug，我们强制给.no0添加行内样式</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no0"</span>).css(JSONARR[<span class="number">0</span>]);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="25-4-jquery-代码优化后"><a href="#25-4-jquery-代码优化后" class="headerlink" title="25.4  jquery 代码优化后"></a>25.4 jquery 代码优化后</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义数组 将所有li的状态保存起来</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 一般常量用大写字母表示</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 将JSONARR[]h和for循环合并优化</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> JSONARR = (<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> temp = [];</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">7</span> ; i++)&#123;</span></span><br><span class="line">            temp.push(&#123;</span><br><span class="line"><span class="javascript">                <span class="string">"width"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"width"</span>),</span></span><br><span class="line"><span class="javascript">                <span class="string">"height"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"height"</span>),</span></span><br><span class="line"><span class="javascript">                <span class="string">"left"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"left"</span>),</span></span><br><span class="line"><span class="javascript">                <span class="string">"top"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"top"</span>)</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> temp;</span></span><br><span class="line">    &#125;)();</span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义数组 用于保存所有li的类名</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 将散的语句合并</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> classNameArr = (<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> temp = [];</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            temp.push($(<span class="keyword">this</span>).attr(<span class="string">"class"</span>));</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> temp;</span></span><br><span class="line">    &#125;)();</span><br><span class="line"><span class="actionscript">    <span class="comment">// 右按钮点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#rightBtn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> ($(<span class="string">"li"</span>).is(<span class="string">":animated"</span>))&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 让.noX运动到.noX-1的位置</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt; <span class="number">7</span> ; i++)&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">".no"</span> + i).animate(JSONARR[i - <span class="number">1</span>],<span class="number">600</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">        classNameArr.unshift(classNameArr.pop());</span><br><span class="line"><span class="javascript">        $(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).attr(<span class="string">"class"</span>,classNameArr[i]);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 由于.no6 是由.waiting&#123;display:none;&#125;变来的，此时.no6只有display:none;的样式和最初始样式</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 为了防止出现bug，我们强制给.no6添加行内样式</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no6"</span>).css(JSONARR[<span class="number">6</span>]);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 左按钮点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#leftBtn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> ($(<span class="string">"li"</span>).is(<span class="string">":animated"</span>))&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 让.noX运动到.noX+1的位置</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">6</span> ; i++)&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">".no"</span> + i).animate(JSONARR[i + <span class="number">1</span>],<span class="number">600</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">        classNameArr.push(classNameArr.shift());</span><br><span class="line"><span class="javascript">        $(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).attr(<span class="string">"class"</span>,classNameArr[i]);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="javascript">        $(<span class="string">".no0"</span>).css(JSONARR[<span class="number">0</span>]);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
        <tag>滚动</tag>
        <tag>轮播图</tag>
      </tags>
  </entry>
  <entry>
    <title>二十四、异形滚动轮播图（样式轮替轮播图）</title>
    <url>/post/8e915c9b.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十四、异形滚动轮播图（样式轮替轮播图）"><a href="#二十四、异形滚动轮播图（样式轮替轮播图）" class="headerlink" title="二十四、异形滚动轮播图（样式轮替轮播图）"></a>二十四、异形滚动轮播图（样式轮替轮播图）</h1><p><img src="https://s1.ax1x.com/2020/07/08/UVtz3d.png" alt="UVtz3d.png"></p><h2 id="24-1-DOM"><a href="#24-1-DOM" class="headerlink" title="24.1  DOM"></a>24.1 DOM</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel"</span> <span class="attr">id</span>=<span class="string">"carousel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no0"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/0.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no1"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no2"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no3"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no4"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no5"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no6"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/shuzi/6.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">id</span>=<span class="string">"leftBtn"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">id</span>=<span class="string">"rightBtn"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="24-2-css"><a href="#24-2-css" class="headerlink" title="24.2  css"></a>24.2 css</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    ul, ol &#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> &#123;</span></span><br><span class="line">        position: relative;</span><br><span class="line">        width: 670px;</span><br><span class="line">        height: 221px;</span><br><span class="line">        margin: 50px auto;</span><br><span class="line">        background: url(images/shuzi/bg.png);</span><br><span class="line"><span class="css">        <span class="comment">/* overflow: hidden; */</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 70px;</span><br><span class="line">        height: 50px;</span><br><span class="line">        left: -120px;</span><br><span class="line">        top: 70px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no1</span> &#123;</span></span><br><span class="line">        width: 90px;</span><br><span class="line">        height: 60px;</span><br><span class="line">        left: 20px;</span><br><span class="line">        top: 60px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no2</span> &#123;</span></span><br><span class="line">        width: 112px;</span><br><span class="line">        height: 80px;</span><br><span class="line">        left: 121px;</span><br><span class="line">        top: 30px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no3</span> &#123;</span></span><br><span class="line">        width: 156px;</span><br><span class="line">        height: 100px;</span><br><span class="line">        left: 250px;</span><br><span class="line">        top: 16px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no4</span> &#123;</span></span><br><span class="line">        width: 112px;</span><br><span class="line">        height: 84px;</span><br><span class="line">        left: 430px;</span><br><span class="line">        top: 30px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no5</span> &#123;</span></span><br><span class="line">        width: 90px;</span><br><span class="line">        height: 60px;</span><br><span class="line">        left: 560px;</span><br><span class="line">        top: 60px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no6</span> &#123;</span></span><br><span class="line">        width: 70px;</span><br><span class="line">        height: 50px;</span><br><span class="line">        left: 710px;</span><br><span class="line">        top: 70px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-class">.btns</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 44px;</span><br><span class="line">        height: 44px;</span><br><span class="line">        top: 150px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-class">.btns</span> <span class="selector-tag">a</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">        left: 25px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-class">.btns</span> <span class="selector-tag">a</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line">        right: 25px;</span><br><span class="line">    &#125;</span><br><span class="line">    img &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="24-3-jquery"><a href="#24-3-jquery" class="headerlink" title="24.3  jquery"></a>24.3 jquery</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义数组 将所有li的状态保存起来</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 一般常量用大写字母表示</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> JSONARR = [];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 使用for循环 将所有li的状态保存 每一个li都是单独的个体，都有自己的 width height left top</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">7</span> ; i++)&#123;</span></span><br><span class="line">        JSONARR.push(&#123;</span><br><span class="line"><span class="javascript">            <span class="string">"width"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"width"</span>),</span></span><br><span class="line"><span class="javascript">            <span class="string">"height"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"height"</span>),</span></span><br><span class="line"><span class="javascript">            <span class="string">"left"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"left"</span>),</span></span><br><span class="line"><span class="javascript">            <span class="string">"top"</span>: $(<span class="string">".no"</span> + i).css(<span class="string">"top"</span>),</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// console.log(JSONARR); 数组中保存7个对象</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义数组 用于保存所有li的类名</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> classNameArr = [<span class="string">"no0"</span>,<span class="string">"no1"</span>,<span class="string">"no2"</span>,<span class="string">"no3"</span>,<span class="string">"no4"</span>,<span class="string">"no5"</span>,<span class="string">"no6"</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 右按钮点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#rightBtn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> ($(<span class="string">"li"</span>).is(<span class="string">":animated"</span>))&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 让.noX运动到.noX-1的位置</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no1"</span>).animate(JSONARR[<span class="number">0</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no2"</span>).animate(JSONARR[<span class="number">1</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no3"</span>).animate(JSONARR[<span class="number">2</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no4"</span>).animate(JSONARR[<span class="number">3</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no5"</span>).animate(JSONARR[<span class="number">4</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no6"</span>).animate(JSONARR[<span class="number">5</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 不能让.no0穿堂而过，应该是瞬移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no0"</span>).css(JSONARR[<span class="number">6</span>]);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当点击一次之后不能继续点击，分析原因：类名和样式不统一</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 为了让类名和样式相统一 轮换类名</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 点击的时候</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no0 no1 no2 no3 no4 no5 no6 原始位置</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no6 no0 no1 no2 no3 no4 no5 点击一次</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no5 no6 no0 no1 no2 no3 no4 点击二次</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 将数组的最后一位删除，放到数组的第一位</span></span></span><br><span class="line">        classNameArr.unshift(classNameArr.pop());</span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(classNameArr);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">7</span> ; i++)&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"li"</span>).eq(i).attr(<span class="string">"class"</span>,classNameArr[i]);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 左按钮点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#leftBtn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> ($(<span class="string">"li"</span>).is(<span class="string">":animated"</span>))&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 让.noX运动到.noX+1的位置</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no0"</span>).animate(JSONARR[<span class="number">1</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no1"</span>).animate(JSONARR[<span class="number">2</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no2"</span>).animate(JSONARR[<span class="number">3</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no3"</span>).animate(JSONARR[<span class="number">4</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no4"</span>).animate(JSONARR[<span class="number">5</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no5"</span>).animate(JSONARR[<span class="number">6</span>],<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 不能让.no6穿堂而过，应该是瞬移</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".no6"</span>).css(JSONARR[<span class="number">0</span>]);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当点击一次之后不能继续点击，分析原因：类名和样式不统一</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 为了让类名和样式相统一 轮换类名</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 点击的时候</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no0 no1 no2 no3 no4 no5 no6 原始位置</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no1 no2 no3 no4 no5 no6 no0 点击一次</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// no2 no3 no4 no5 no6 no0 no1 点击二次</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 将数组的第一位删除，放到数组的最后一位</span></span></span><br><span class="line">        classNameArr.push(classNameArr.shift());</span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(classNameArr);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">7</span> ; i++)&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="string">"li"</span>).eq(i).attr(<span class="string">"class"</span>,classNameArr[i]);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
        <tag>滚动</tag>
        <tag>轮播图</tag>
      </tags>
  </entry>
  <entry>
    <title>二十三、篮球积分系统（数组思维）</title>
    <url>/post/cabb0239.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十三、篮球积分系统（数组思维）"><a href="#二十三、篮球积分系统（数组思维）" class="headerlink" title="二十三、篮球积分系统（数组思维）"></a>二十三、篮球积分系统（数组思维）</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义分数数组 用于保存分数</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> scoreArr = [<span class="number">0</span>, <span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义数组 用于保存对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> h2Arr = [$(<span class="string">"#fenA"</span>), $(<span class="string">"#fenB"</span>)];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义信号量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> idx = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 给A队和B队添加点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"input"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log($(this).index()); A队为0 B队为1</span></span></span><br><span class="line"><span class="javascript">        idx = $(<span class="keyword">this</span>).index();</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 给btn1添加点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// idx = 0，给A队加分  idx = 1，给B队加分</span></span></span><br><span class="line">        scoreArr[idx] += 1;</span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(scoreArr);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 体现在元素身上</span></span></span><br><span class="line">        h2Arr[idx].html(scoreArr[idx]);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 给btn2添加点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// idx = 0，给A队加分  idx = 1，给B队加分</span></span></span><br><span class="line">        scoreArr[idx] += 2;</span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(scoreArr);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 体现在元素身上</span></span></span><br><span class="line">        h2Arr[idx].html(scoreArr[idx]);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 给btn3添加点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#btn3"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// idx = 0，给A队加分  idx = 1，给B队加分</span></span></span><br><span class="line">        scoreArr[idx] += 3;</span><br><span class="line"><span class="actionscript">        <span class="comment">// console.log(scoreArr);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 体现在元素身上</span></span></span><br><span class="line">        h2Arr[idx].html(scoreArr[idx]);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>数组</tag>
        <tag>animate</tag>
      </tags>
  </entry>
  <entry>
    <title>二十二、篮球积分系统（普通思维）</title>
    <url>/post/12961f8.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十二、篮球积分系统（普通思维）"><a href="#二十二、篮球积分系统（普通思维）" class="headerlink" title="二十二、篮球积分系统（普通思维）"></a>二十二、篮球积分系统（普通思维）</h1><p><img src="https://s1.ax1x.com/2020/07/08/UVt59J.png" alt="UVt59J.png"></p><h2 id="22-1-DOM"><a href="#22-1-DOM" class="headerlink" title="22.1  DOM"></a>22.1 DOM</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fen"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">"fenA"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>-<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">"fenB"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">h2</span> <span class="attr">id</span>=<span class="string">"fenA"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btns"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"duiA"</span> <span class="attr">name</span>=<span class="string">"dui"</span> <span class="attr">checked</span>&gt;</span>A队</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"duiB"</span> <span class="attr">name</span>=<span class="string">"dui"</span>&gt;</span>B队</span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn1"</span>&gt;</span>加1分<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn2"</span>&gt;</span>加2分<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"btn3"</span>&gt;</span>加3分<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="22-2-css"><a href="#22-2-css" class="headerlink" title="22.2  css"></a>22.2 css</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.fen</span> &#123;</span></span><br><span class="line">        overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    h2 &#123;</span><br><span class="line">        float: left;</span><br><span class="line">        font-size: 100px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="22-3-jquery"><a href="#22-3-jquery" class="headerlink" title="22.3  jquery"></a>22.3 jquery</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义变量 用于保存分数</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> fenshuA = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> fenshuB = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 添加点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 判断是给A队还是B队加分</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>($(<span class="string">"#duiA"</span>).is(<span class="string">":checked"</span>))&#123;</span></span><br><span class="line">            fenshuA += 1;</span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log(fenshuA);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#fenA"</span>).html(fenshuA);</span></span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// B队被选中</span></span></span><br><span class="line">            fenshuB += 1;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#fenB"</span>).html(fenshuB);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// btn2添加点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 判断是给A队还是B队加分</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>($(<span class="string">"#duiA"</span>).is(<span class="string">":checked"</span>))&#123;</span></span><br><span class="line">            fenshuA += 2;</span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log(fenshuA);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#fenA"</span>).html(fenshuA);</span></span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// B队被选中</span></span></span><br><span class="line">            fenshuB += 2;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#fenB"</span>).html(fenshuB);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// btn3添加点击事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"#btn3"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 判断是给A队还是B队加分</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>($(<span class="string">"#duiA"</span>).is(<span class="string">":checked"</span>))&#123;</span></span><br><span class="line">            fenshuA += 3;</span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log(fenshuA);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#fenA"</span>).html(fenshuA);</span></span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// B队被选中</span></span></span><br><span class="line">            fenshuB += 3;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="javascript">            $(<span class="string">"#fenB"</span>).html(fenshuB);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
      </tags>
  </entry>
  <entry>
    <title>二十一、手风琴蒙版效果</title>
    <url>/post/7744d2fb.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十一、手风琴蒙版效果"><a href="#二十一、手风琴蒙版效果" class="headerlink" title="二十一、手风琴蒙版效果"></a>二十一、手风琴蒙版效果</h1><p><img src="https://s1.ax1x.com/2020/07/08/UVt3pd.png" alt="UVt3pd.png"></p><h2 id="20-1-DOM"><a href="#20-1-DOM" class="headerlink" title="20.1  DOM"></a>20.1 DOM</h2><p>给每一个<code>li</code>加一个<code>div</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"carousel"</span> <span class="built_in">id</span>=<span class="string">"carousel"</span>&gt;</span><br><span class="line">    &lt;ul <span class="built_in">class</span>=<span class="string">"unit"</span> <span class="built_in">id</span>=<span class="string">"unit"</span>&gt;</span><br><span class="line">        &lt;li <span class="built_in">class</span>=<span class="string">"no0"</span> <span class="built_in">id</span>=<span class="string">"no0"</span>&gt;&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"mask"</span>&gt;&lt;/<span class="keyword">div</span>&gt;&lt;img src=<span class="string">"images/lunbo/1.jpg"</span> alt=<span class="string">""</span>&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li <span class="built_in">class</span>=<span class="string">"no1"</span> <span class="built_in">id</span>=<span class="string">"no1"</span>&gt;&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"mask"</span>&gt;&lt;/<span class="keyword">div</span>&gt;&lt;img src=<span class="string">"images/lunbo/2.jpg"</span> alt=<span class="string">""</span>&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li <span class="built_in">class</span>=<span class="string">"no2"</span> <span class="built_in">id</span>=<span class="string">"no2"</span>&gt;&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"mask"</span>&gt;&lt;/<span class="keyword">div</span>&gt;&lt;img src=<span class="string">"images/lunbo/3.jpg"</span> alt=<span class="string">""</span>&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li <span class="built_in">class</span>=<span class="string">"no3"</span> <span class="built_in">id</span>=<span class="string">"no3"</span>&gt;&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"mask"</span>&gt;&lt;/<span class="keyword">div</span>&gt;&lt;img src=<span class="string">"images/lunbo/4.jpg"</span> alt=<span class="string">""</span>&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li <span class="built_in">class</span>=<span class="string">"no4"</span> <span class="built_in">id</span>=<span class="string">"no4"</span>&gt;&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"mask"</span>&gt;&lt;/<span class="keyword">div</span>&gt;&lt;img src=<span class="string">"images/lunbo/5.jpg"</span> alt=<span class="string">""</span>&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><h2 id="20-2-css"><a href="#20-2-css" class="headerlink" title="20.2  css"></a>20.2 css</h2><p>给每一个<code>li</code>里的<code>div</code>添加：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.mask</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="20-3-jquery"><a href="#20-3-jquery" class="headerlink" title="20.3  jquery"></a>20.3 jquery</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素 命名时加上$提醒我们是一个jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $carousel = $(<span class="string">"#carousel"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 添加鼠标移入事件</span></span></span><br><span class="line"><span class="javascript">    $(<span class="string">"li"</span>).mouseenter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"li"</span>).stop(<span class="literal">true</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 定义变量 用于保存触发事件的对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> idx = $(<span class="keyword">this</span>).index();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 小于或者等于当前序号的图片，向左移动 与70相关</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"li:lt("</span> + (idx + <span class="number">1</span>) + <span class="string">")"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log(i) // 表示遍历到的该对象的序号</span></span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).animate(&#123;<span class="string">"left"</span>: <span class="number">70</span> * i&#125;,<span class="number">500</span>);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 大于idx的图片应该向右移动 与100相关</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"li:gt("</span> + idx + <span class="string">")"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// console.log(i) // 表示遍历到的选中该对象的序号（永远从0开始）</span></span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).animate(&#123;<span class="string">"left"</span>: <span class="number">220</span> + <span class="number">70</span> * (idx + i)&#125;,<span class="number">500</span>);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前蒙版消失</span></span></span><br><span class="line"><span class="javascript">        $(<span class="keyword">this</span>).children(<span class="string">".mask"</span>).stop(<span class="literal">true</span>).fadeOut(<span class="number">500</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前蒙版恢复</span></span></span><br><span class="line"><span class="javascript">        $(<span class="keyword">this</span>).siblings().children(<span class="string">".mask"</span>).stop(<span class="literal">true</span>).fadeIn(<span class="number">500</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">// 给carousel添加鼠标离开事件</span></span></span><br><span class="line"><span class="actionscript">    $carousel.mouseleave(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"li"</span>).stop(<span class="literal">true</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).animate(&#123;<span class="string">"left"</span>: <span class="number">100</span> * i&#125;,<span class="number">500</span>);</span></span><br><span class="line">        &#125;);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 所有蒙版恢复</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">".mask"</span>).stop(<span class="literal">true</span>).fadeIn(<span class="number">500</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
        <tag>手风琴</tag>
        <tag>蒙版</tag>
      </tags>
  </entry>
  <entry>
    <title>二十、手风琴效果</title>
    <url>/post/59c74fea.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十、手风琴效果"><a href="#二十、手风琴效果" class="headerlink" title="二十、手风琴效果"></a>二十、手风琴效果</h1><p><img src="https://s1.ax1x.com/2020/07/08/UVtmm6.png" alt="UVtmm6.png"></p><ul><li><p>分析：</p><ul><li><p>我们将最外层容器宽定为500px，里面有5张图片，每一张平均分配的位置是100px。</p></li><li><p>当鼠标移入后，当前图片展开，占220px，其他图片要压缩，每张平均分配70px。</p></li></ul></li></ul><h2 id="20-1-DOM"><a href="#20-1-DOM" class="headerlink" title="20.1  DOM"></a>20.1 DOM</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel"</span> <span class="attr">id</span>=<span class="string">"carousel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"unit"</span> <span class="attr">id</span>=<span class="string">"unit"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no0"</span> <span class="attr">id</span>=<span class="string">"no0"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no1"</span> <span class="attr">id</span>=<span class="string">"no1"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no2"</span> <span class="attr">id</span>=<span class="string">"no2"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no3"</span> <span class="attr">id</span>=<span class="string">"no3"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no4"</span> <span class="attr">id</span>=<span class="string">"no4"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="20-2-css"><a href="#20-2-css" class="headerlink" title="20.2  css"></a>20.2 css</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 清楚默认样式 */</span></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span>, <span class="selector-tag">ol</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.carousel</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no1</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no2</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no3</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.carousel</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no4</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">400px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="20-3-jquery"><a href="#20-3-jquery" class="headerlink" title="20.3  jquery"></a>20.3 jquery</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">&lt;!-- 引入jquery包 --&gt;</span><br><span class="line">&lt;script src=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 获取元素 命名时加上$提醒我们是一个jquery对象</span></span><br><span class="line">    <span class="keyword">var</span> $no0 = $(<span class="string">"#no0"</span>);</span><br><span class="line">    <span class="keyword">var</span> $no1 = $(<span class="string">"#no1"</span>);</span><br><span class="line">    <span class="keyword">var</span> $no2 = $(<span class="string">"#no2"</span>);</span><br><span class="line">    <span class="keyword">var</span> $no3 = $(<span class="string">"#no3"</span>);</span><br><span class="line">    <span class="keyword">var</span> $no4 = $(<span class="string">"#no4"</span>);</span><br><span class="line">    <span class="keyword">var</span> $carousel = $(<span class="string">"#carousel"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加鼠标移入事件</span></span><br><span class="line">    $no0.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 防流氓</span></span><br><span class="line">        $(<span class="string">"li"</span>).stop(<span class="keyword">true</span>);</span><br><span class="line">        $no1.animate(&#123;<span class="string">"left"</span>: <span class="number">220</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no2.animate(&#123;<span class="string">"left"</span>: <span class="number">220</span> + <span class="number">70</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no3.animate(&#123;<span class="string">"left"</span>: <span class="number">220</span> + <span class="number">70</span> * <span class="number">2</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no4.animate(&#123;<span class="string">"left"</span>: <span class="number">220</span> + <span class="number">70</span> * <span class="number">3</span>&#125;,<span class="number">500</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $no1.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 防流氓</span></span><br><span class="line">        $(<span class="string">"li"</span>).stop(<span class="keyword">true</span>);</span><br><span class="line">        $no1.animate(&#123;<span class="string">"left"</span>: <span class="number">70</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no2.animate(&#123;<span class="string">"left"</span>: <span class="number">220</span> + <span class="number">70</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no3.animate(&#123;<span class="string">"left"</span>: <span class="number">220</span> + <span class="number">70</span> * <span class="number">2</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no4.animate(&#123;<span class="string">"left"</span>: <span class="number">220</span> + <span class="number">70</span> * <span class="number">3</span>&#125;,<span class="number">500</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $no2.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 防流氓</span></span><br><span class="line">        $(<span class="string">"li"</span>).stop(<span class="keyword">true</span>);</span><br><span class="line">        $no1.animate(&#123;<span class="string">"left"</span>: <span class="number">70</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no2.animate(&#123;<span class="string">"left"</span>: <span class="number">70</span> * <span class="number">2</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no3.animate(&#123;<span class="string">"left"</span>: <span class="number">220</span> + <span class="number">70</span> * <span class="number">2</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no4.animate(&#123;<span class="string">"left"</span>: <span class="number">220</span> + <span class="number">70</span> * <span class="number">3</span>&#125;,<span class="number">500</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $no3.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 防流氓</span></span><br><span class="line">        $(<span class="string">"li"</span>).stop(<span class="keyword">true</span>);</span><br><span class="line">        $no1.animate(&#123;<span class="string">"left"</span>: <span class="number">70</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no2.animate(&#123;<span class="string">"left"</span>: <span class="number">70</span> * <span class="number">2</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no3.animate(&#123;<span class="string">"left"</span>: <span class="number">70</span> * <span class="number">3</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no4.animate(&#123;<span class="string">"left"</span>: <span class="number">220</span> + <span class="number">70</span> * <span class="number">3</span>&#125;,<span class="number">500</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $no4.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 防流氓</span></span><br><span class="line">        $(<span class="string">"li"</span>).stop(<span class="keyword">true</span>);</span><br><span class="line">        $no1.animate(&#123;<span class="string">"left"</span>: <span class="number">70</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no2.animate(&#123;<span class="string">"left"</span>: <span class="number">70</span> * <span class="number">2</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no3.animate(&#123;<span class="string">"left"</span>: <span class="number">70</span> * <span class="number">3</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no4.animate(&#123;<span class="string">"left"</span>: <span class="number">70</span> * <span class="number">4</span>&#125;,<span class="number">500</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 给carousel添加鼠标离开事件</span></span><br><span class="line">    $carousel.mouseleave(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 防流氓</span></span><br><span class="line">        $(<span class="string">"li"</span>).stop(<span class="keyword">true</span>);</span><br><span class="line">        $no1.animate(&#123;<span class="string">"left"</span>: <span class="number">100</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no2.animate(&#123;<span class="string">"left"</span>: <span class="number">100</span> * <span class="number">2</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no3.animate(&#123;<span class="string">"left"</span>: <span class="number">100</span> * <span class="number">3</span>&#125;,<span class="number">500</span>);</span><br><span class="line">        $no4.animate(&#123;<span class="string">"left"</span>: <span class="number">100</span> * <span class="number">4</span>&#125;,<span class="number">500</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
        <tag>手风琴</tag>
      </tags>
  </entry>
  <entry>
    <title>十九、间歇模型布局</title>
    <url>/post/2301f743.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十九、间歇模型布局"><a href="#十九、间歇模型布局" class="headerlink" title="十九、间歇模型布局"></a>十九、间歇模型布局</h1><p><img src="https://s1.ax1x.com/2020/07/08/UVYJdU.png" alt="UVYJdU.png"></p><p>我们想让轮播图显示3张图片，我们的编程思路是使用定时器。我们想要使图片每2s更换一次，然后完成动画的时间是600ms。那么定时器的时间应该是它们的加和2600ms。</p><p><img src="https://s1.ax1x.com/2020/07/08/UVY5OP.png" alt="UVY5OP.png"></p><h2 id="19-1-DOM"><a href="#19-1-DOM" class="headerlink" title="19.1  DOM"></a>19.1 DOM</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel"</span> <span class="attr">id</span>=<span class="string">"carousel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"unit"</span> <span class="attr">id</span>=<span class="string">"unit"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/mingxing/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/mingxing/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/mingxing/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/mingxing/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/mingxing/5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/mingxing/6.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/mingxing/7.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/mingxing/8.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/mingxing/9.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="19-2-css"><a href="#19-2-css" class="headerlink" title="19.2  css"></a>19.2 css</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    ul, ol &#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line">    a &#123;</span><br><span class="line">        text-decoration: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> &#123;</span></span><br><span class="line">        width: 640px;</span><br><span class="line">        height: 200px;</span><br><span class="line">        margin: 50px auto;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 3<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* unit的高度要足够高，并且能够盛放3张图片 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.unit</span> &#123;</span></span><br><span class="line">        width: 660px;</span><br><span class="line">        height: 50000px;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 0;</span><br><span class="line">        left: 0;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.unit</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 200px;</span><br><span class="line">        margin-right: 20px;</span><br><span class="line">        margin-bottom: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="19-3-jquery"><a href="#19-3-jquery" class="headerlink" title="19.3  jquery"></a>19.3 jquery</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素 命名时加上$提醒我们是一个jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $unit = $(<span class="string">"#unit"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $carousel = $(<span class="string">"#carousel"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> length = $unit.children(<span class="string">"li"</span>).length;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var length = $unit.find("li").length;</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义信号量 对应的是每一行：0、1、2</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> idx = <span class="number">0</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 克隆第一行（小于3），追加到unit的最后</span></span></span><br><span class="line"><span class="actionscript">    $unit.children(<span class="string">"li:lt(3)"</span>).clone().appendTo($unit);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 开启定时器</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> timer = setInterval(rightBtn,<span class="number">2600</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 当鼠标移入carousel停止定时器</span></span></span><br><span class="line"><span class="actionscript">    $carousel.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 清除定时器</span></span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 当鼠标离开carousel重启定时器</span></span></span><br><span class="line"><span class="actionscript">    $carousel.mouseleave(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设表先关 用户会多次鼠标进入离开，会多次开启定时器，所以要先关掉定时器再重启</span></span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 重启定时器 重新赋值timer</span></span></span><br><span class="line">        timer = setInterval(rightBtn,2600);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义一个函数，相当于右按钮点击事件</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">rightBtn</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 没有左右按钮，不需要防流氓</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 右按钮的拉动策略：先拉动，再瞬移</span></span></span><br><span class="line">        idx++;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 拉动</span></span></span><br><span class="line"><span class="actionscript">        $unit.animate(&#123;<span class="string">"top"</span>: <span class="number">-220</span> * idx&#125;,<span class="number">600</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 当猫腻图完全显示之后，验证信号量</span></span></span><br><span class="line">            if(idx &gt; length / 3 - 1)&#123;</span><br><span class="line">                idx = 0;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 瞬间移动到真图</span></span></span><br><span class="line"><span class="actionscript">                $unit.css(<span class="string">"top"</span>,<span class="number">0</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;   </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="19-4-如果length不能整除，则猫腻图会钻空子，自动补全上面多余的位置"><a href="#19-4-如果length不能整除，则猫腻图会钻空子，自动补全上面多余的位置" class="headerlink" title="19.4  如果length不能整除，则猫腻图会钻空子，自动补全上面多余的位置"></a>19.4 如果length不能整除，则猫腻图会钻空子，自动补全上面多余的位置</h2><p><img src="https://s1.ax1x.com/2020/07/08/UVYXSs.png" alt="UVYXSs.png"></p><p>解决方法：</p><p>对length取余，多几个空位置，补几个<code>&lt;li&gt;&lt;/li&gt;</code>标签</p><p><img src="https://s1.ax1x.com/2020/07/08/UVtSmV.png" alt="UVtSmV.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素 命名时加上$提醒我们是一个jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $unit = $(<span class="string">"#unit"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $carousel = $(<span class="string">"#carousel"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> length = $unit.children(<span class="string">"li"</span>).length;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// var length = $unit.find("li").length;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 补充空li 保证每一行有3张图片</span></span></span><br><span class="line">    if(length % 3 === 1)&#123;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 补充2个空li</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        $("<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>").appendTo($unit);</span></span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(length % <span class="number">3</span> ===<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 补充1个空li</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">"&lt;li&gt;&lt;/li&gt;"</span>).appendTo($unit);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义信号量 对应的是每一行：0、1、2</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> idx = <span class="number">0</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 克隆第一行（小于3），追加到unit的最后</span></span></span><br><span class="line"><span class="actionscript">    $unit.children(<span class="string">"li:lt(3)"</span>).clone().appendTo($unit);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 开启定时器</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> timer = setInterval(rightBtn,<span class="number">2600</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 当鼠标移入carousel停止定时器</span></span></span><br><span class="line"><span class="actionscript">    $carousel.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 清除定时器</span></span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 当鼠标离开carousel重启定时器</span></span></span><br><span class="line"><span class="actionscript">    $carousel.mouseleave(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设表先关 用户会多次鼠标进入离开，会多次开启定时器，所以要先关掉定时器再重启</span></span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 重启定时器 重新赋值timer</span></span></span><br><span class="line">        timer = setInterval(rightBtn,2600);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义一个函数，相当于右按钮点击事件</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">rightBtn</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 没有左右按钮，不需要防流氓</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 右按钮的拉动策略：先拉动，再瞬移</span></span></span><br><span class="line">        idx++;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 拉动</span></span></span><br><span class="line"><span class="actionscript">        $unit.animate(&#123;<span class="string">"top"</span>: <span class="number">-100</span> * idx&#125;,<span class="number">600</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 当猫腻图完全显示之后，验证信号量</span></span></span><br><span class="line">            if(idx &gt; $unit.children().length / 3 - 2)&#123;</span><br><span class="line">                idx = 0;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 瞬间移动到真图</span></span></span><br><span class="line"><span class="actionscript">                $unit.css(<span class="string">"top"</span>,<span class="number">0</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;   </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
        <tag>间歇模型</tag>
      </tags>
  </entry>
  <entry>
    <title>十八、三位置法</title>
    <url>/post/c7a712a8.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十八、三位置法"><a href="#十八、三位置法" class="headerlink" title="十八、三位置法"></a>十八、三位置法</h1><ul><li><p>滚动轮播图小圆点事件存在一个弊端：</p><ul><li>当鼠标隔几张图片跳转到其他图片时，会将中间的图片都过一遍。</li></ul></li><li><p>三位置法小圆点事件存在一个弊端：</p><ul><li>当鼠标在小圆点上来回移动，防流氓stop(true)无法杜绝动画</li></ul></li></ul><p><img src="https://s1.ax1x.com/2020/07/08/UVYZdS.png" alt="UVYZdS.png"></p><h2 id="18-1-css"><a href="#18-1-css" class="headerlink" title="18.1  css"></a>18.1 css</h2><p>更改内容：</p><p>① 删除：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 滚动轮播图的关键是所有图片并排在一起 </span></span><br><span class="line"><span class="comment">    unit的宽要足够</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-class">.carousel</span> <span class="selector-class">.unit</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">9999px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>②更改：让所有图片移动到显示位置之后，然后让第一张出现</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 候场位置 */</span></span><br><span class="line"><span class="selector-class">.carousel</span> <span class="selector-class">.unit</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">220px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 登场位置 */</span></span><br><span class="line"><span class="selector-class">.carousel</span> <span class="selector-class">.unit</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="18-2-jquery"><a href="#18-2-jquery" class="headerlink" title="18.2  jquery"></a>18.2 jquery</h2><p>不使用猫腻图</p><p>先将图片放到候场位置，再拉动</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素 命名时加上$提醒我们是一个jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $leftBtn = $(<span class="string">"#leftBtn"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $rightBtn = $(<span class="string">"#rightBtn"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $imgs = $(<span class="string">"#unit li"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $circles = $(<span class="string">"#circles ol li"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $carousel = $(<span class="string">"#carousel"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义length</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> length = $circles.length;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义信号量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> idx = <span class="number">0</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 开启定时器 平时图片轮播，相当于右按钮事件</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> timer = setInterval(rightBtn, <span class="number">2000</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标移入 清除定时器</span></span></span><br><span class="line"><span class="actionscript">    $carousel.mouseenter(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标离开 开启定时器</span></span></span><br><span class="line"><span class="actionscript">    $carousel.mouseleave(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设表先关</span></span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 重新赋值timer</span></span></span><br><span class="line">        timer = setInterval(rightBtn, 2000);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 右按钮点击事件 将函数提取出来</span></span></span><br><span class="line">    $rightBtn.click(rightBtn);</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">rightBtn</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> ($imgs.is(<span class="string">":animated"</span>)) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前图片退场 想要右边的图片 向左拉</span></span></span><br><span class="line"><span class="actionscript">        $imgs.eq(idx).animate(&#123;<span class="string">"left"</span>: <span class="number">-220</span>&#125;,<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 信号量改变</span></span></span><br><span class="line">        idx++;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 边界判定</span></span></span><br><span class="line">        if (idx &gt; length - 1) &#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// idx归0</span></span></span><br><span class="line">            idx = 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 下一张图片登场 先将图片放到候场位置，再拉动</span></span></span><br><span class="line"><span class="actionscript">        $imgs.eq(idx).css(<span class="string">"left"</span>,<span class="number">220</span>).animate(&#123;<span class="string">"left"</span>: <span class="number">0</span>&#125;,<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前小圆点加cur 它的兄弟去掉cur</span></span></span><br><span class="line"><span class="actionscript">        $circles.eq(idx).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(idx);  <span class="comment">// 查看图片顺序       </span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 左按钮点击事件</span></span></span><br><span class="line">    $leftBtn.click(leftBtn);</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">leftBtn</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (!$imgs.is(<span class="string">":animated"</span>)) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 当前图片退场 想要左边的图片 当前图片向右拉</span></span></span><br><span class="line"><span class="actionscript">            $imgs.eq(idx).animate(&#123;<span class="string">"left"</span>: <span class="number">220</span>&#125;,<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 信号量改变</span></span></span><br><span class="line">            idx--;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 边界判定</span></span></span><br><span class="line">            if (idx &lt; 0) &#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// idx归0</span></span></span><br><span class="line">                idx = length - 1;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 下一张图片登场 先将图片放到候场位置，再拉动</span></span></span><br><span class="line"><span class="actionscript">            $imgs.eq(idx).css(<span class="string">"left"</span>,<span class="number">-220</span>).animate(&#123;<span class="string">"left"</span>: <span class="number">0</span>&#125;,<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 当前小圆点加cur 它的兄弟去掉cur</span></span></span><br><span class="line"><span class="actionscript">            $circles.eq(idx).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(idx);  <span class="comment">// 查看图片顺序     </span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 小圆点事件 鼠标移入</span></span></span><br><span class="line"><span class="actionscript">    $circles.mouseenter(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 定义一个变量用于保存触发事件的序号，与当前信号量作比较</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> i = $(<span class="keyword">this</span>).index();</span></span><br><span class="line">        if (i &gt; idx)&#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 此时相当于右按钮事件，图片应从右边进入</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 当前图片退场 想要右边的图片 向左拉</span></span></span><br><span class="line"><span class="actionscript">            $imgs.eq(idx).stop(<span class="literal">true</span>).animate(&#123;<span class="string">"left"</span>: <span class="number">-220</span>&#125;,<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 信号量改变</span></span></span><br><span class="line">            idx = i;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 新图片登场 先将图片放到候场位置，再拉动</span></span></span><br><span class="line"><span class="actionscript">            $imgs.eq(idx).css(<span class="string">"left"</span>,<span class="number">220</span>).stop(<span class="literal">true</span>).animate(&#123;<span class="string">"left"</span>: <span class="number">0</span>&#125;,<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(idx);  <span class="comment">// 查看图片顺序   </span></span></span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i &lt; idx)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 此时相当于左按钮事件，图片应从左边进入</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 当前图片退场 想要左边的图片 向右拉</span></span></span><br><span class="line"><span class="actionscript">            $imgs.eq(idx).stop(<span class="literal">true</span>).animate(&#123;<span class="string">"left"</span>: <span class="number">220</span>&#125;,<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 信号量改变</span></span></span><br><span class="line">            idx = i;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 新图片登场 先将图片放到候场位置，再拉动</span></span></span><br><span class="line"><span class="actionscript">            $imgs.eq(idx).css(<span class="string">"left"</span>,<span class="number">-220</span>).stop(<span class="literal">true</span>).animate(&#123;<span class="string">"left"</span>: <span class="number">0</span>&#125;,<span class="number">600</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(idx);  <span class="comment">// 查看图片顺序 </span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 当前小圆点加cur 它的兄弟去掉cur</span></span></span><br><span class="line"><span class="javascript">            $(<span class="keyword">this</span>).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
        <tag>滚动</tag>
        <tag>轮播图</tag>
        <tag>三位置法</tag>
      </tags>
  </entry>
  <entry>
    <title>十七、滚动轮播图</title>
    <url>/post/d90c419.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十七、滚动轮播图"><a href="#十七、滚动轮播图" class="headerlink" title="十七、滚动轮播图"></a>十七、滚动轮播图</h1><p><img src="https://s1.ax1x.com/2020/07/08/UVJXqK.png" alt="UVJXqK.png"></p><h2 id="17-1-DOM"><a href="#17-1-DOM" class="headerlink" title="17.1  DOM"></a>17.1 DOM</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"carousel"</span> <span class="attr">id</span>=<span class="string">"carousel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"unit"</span> <span class="attr">id</span>=<span class="string">"unit"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">id</span>=<span class="string">"leftBtn"</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">id</span>=<span class="string">"rightBtn"</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"circles"</span> <span class="attr">id</span>=<span class="string">"circles"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"cur"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="17-2-css"><a href="#17-2-css" class="headerlink" title="17.2  css"></a>17.2 css</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    ul, ol &#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line">    a &#123;</span><br><span class="line">        text-decoration: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> &#123;</span></span><br><span class="line">        width: 220px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        margin: 50px auto;</span><br><span class="line">        border: 5px solid red;</span><br><span class="line">        position: relative;</span><br><span class="line"><span class="css">        <span class="comment">/* 超出部分 溢出隐藏 */</span></span></span><br><span class="line">        overflow: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    /* 滚动轮播图的关键是所有图片并排在一起 </span><br><span class="line">        unit的宽要足够</span><br><span class="line">    */</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-class">.unit</span> &#123;</span></span><br><span class="line">        width: 9999px;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.carousel</span> <span class="selector-class">.unit</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        width: 220px;</span><br><span class="line">        height: 150px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 30px;</span><br><span class="line">        height: 40px;</span><br><span class="line">        top: 50%;</span><br><span class="line">        margin-top: -20px;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.5</span>);</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">        font-size: 20px;</span><br><span class="line">        line-height: 40px;</span><br><span class="line">        text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">        left: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line">        right: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.circles</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 140px;</span><br><span class="line">        height: 20px;</span><br><span class="line">        left: 50%;</span><br><span class="line">        margin-left: -70px;</span><br><span class="line">        bottom: 15px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> &#123;</span></span><br><span class="line">        width: 150px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        width: 20px;</span><br><span class="line">        height: 20px;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line">        border-radius: 50%;</span><br><span class="line">        font-size: 15px;</span><br><span class="line">        line-height: 20px;</span><br><span class="line">        text-align: center;</span><br><span class="line">        cursor: pointer;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-class">.cur</span> &#123;</span></span><br><span class="line">        background-color: orange;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="17-3-jquery"><a href="#17-3-jquery" class="headerlink" title="17.3  jquery"></a>17.3 jquery</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 获取元素 命名时加上$提醒我们是一个jquery对象</span></span><br><span class="line">    <span class="keyword">var</span> <span class="symbol">$left</span>Btn = $(<span class="string">"#leftBtn"</span>);</span><br><span class="line">    <span class="keyword">var</span> <span class="symbol">$rig</span>htBtn = $(<span class="string">"#rightBtn"</span>);</span><br><span class="line">    <span class="keyword">var</span> <span class="symbol">$u</span>nit = $(<span class="string">"#unit"</span>);</span><br><span class="line">    <span class="keyword">var</span> <span class="symbol">$circles</span> = $(<span class="string">"#circles ol li"</span>);</span><br><span class="line">    <span class="keyword">var</span> <span class="symbol">$carousel</span> = $(<span class="string">"#carousel"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义length 只能用$circles</span></span><br><span class="line">    <span class="keyword">var</span> length = <span class="symbol">$circles</span>.length;</span><br><span class="line">    <span class="comment">// 定义信号量</span></span><br><span class="line">    <span class="keyword">var</span> idx = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开启定时器 平时图片轮播，相当于右按钮事件</span></span><br><span class="line">    <span class="keyword">var</span> timer = setInterval(change,<span class="number">2000</span>);</span><br><span class="line">    <span class="comment">// 鼠标移入 清除定时器</span></span><br><span class="line">    <span class="symbol">$carousel</span>.mouseenter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        clearInterval(timer);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 鼠标离开 开启定时器</span></span><br><span class="line">    <span class="symbol">$carousel</span>.mouseleave(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 设表先关</span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line">        <span class="comment">// 重新赋值timer</span></span><br><span class="line">        timer = setInterval(change,<span class="number">2000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 克隆第一张图片 追加到最后一张</span></span><br><span class="line">    <span class="symbol">$u</span>nit.children(<span class="string">"li:first"</span>).clone().appendTo(<span class="symbol">$u</span>nit);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 右按钮点击事件 将函数提取出来</span></span><br><span class="line">    <span class="symbol">$rig</span>htBtn.click(change);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 防流氓</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="symbol">$u</span>nit.is(<span class="string">":animated"</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 拉动策略：先拉动，再瞬移（拉动到克隆的最后一张猫腻图，再瞬移到和第一张相同的图上）   </span></span><br><span class="line">        <span class="comment">// 信号量改变</span></span><br><span class="line">        idx++;</span><br><span class="line">        <span class="comment">// 信号量 有效值：0、1、2、3、4、5（5是猫腻图）</span></span><br><span class="line">        <span class="comment">// 下一张图片滚动出现</span></span><br><span class="line">        <span class="symbol">$u</span>nit.animate(&#123;<span class="string">"left"</span> : - <span class="number">220</span> * idx&#125;,<span class="number">600</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 当猫腻图完全显示之后 验证信号量</span></span><br><span class="line">            <span class="keyword">if</span>(idx &gt; length - <span class="number">1</span>)&#123;</span><br><span class="line">                idx = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">// 瞬间移动到真图</span></span><br><span class="line">                <span class="symbol">$u</span>nit.css(<span class="string">"left"</span>, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 当前小圆点加cur 它的兄弟去掉cur </span></span><br><span class="line">        <span class="comment">// 如果放在回调函数中，idx值能正确显示，但会在切换完图片（600ms）之后给小圆点加cur</span></span><br><span class="line">        <span class="comment">// 0~4是有效值，5对应的是猫腻图 </span></span><br><span class="line">        <span class="comment">// 定义一个变量用于中转信号量 三元表达式</span></span><br><span class="line">        <span class="keyword">var</span> i = idx &lt;= length - <span class="number">1</span> ? idx : <span class="number">0</span>;</span><br><span class="line">        <span class="symbol">$circles</span>.eq(i).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span><br><span class="line">        console.log(i);  <span class="comment">// 查看图片顺序  </span></span><br><span class="line">    &#125;;           </span><br><span class="line">    <span class="comment">// 左按钮点击事件</span></span><br><span class="line">    <span class="symbol">$left</span>Btn.click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 防流氓</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="symbol">$u</span>nit.is(<span class="string">":animated"</span>)) &#123;</span><br><span class="line">            <span class="comment">// 拉动策略：先瞬移，再拉动（先瞬移到克隆的最后一张猫腻图，再拉动到下一张）   </span></span><br><span class="line">            <span class="comment">// 信号量改变</span></span><br><span class="line">            idx--;</span><br><span class="line">            <span class="comment">// 边界判断 信号量 有效值：0、1、2、3、4、5（5是猫腻图）</span></span><br><span class="line">            <span class="keyword">if</span> (idx &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                idx = length - <span class="number">1</span>;</span><br><span class="line">                <span class="comment">// 瞬间移动到猫腻图</span></span><br><span class="line">                <span class="symbol">$u</span>nit.css(<span class="string">"left"</span>, - <span class="number">220</span> * length);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// 上一张图片滚动出现</span></span><br><span class="line">            <span class="symbol">$u</span>nit.animate(&#123; <span class="string">"left"</span>: - <span class="number">220</span> * idx &#125;, <span class="number">600</span>);</span><br><span class="line">            <span class="comment">// 当前小圆点加cur 它的兄弟去掉cur </span></span><br><span class="line">            <span class="symbol">$circles</span>.eq(idx).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span><br><span class="line">            console.log(idx);  <span class="comment">// 查看图片顺序 </span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 小圆点事件 鼠标移入</span></span><br><span class="line">    <span class="symbol">$circles</span>.mouseenter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 改变信号量</span></span><br><span class="line">        idx = $(this).index();</span><br><span class="line">        <span class="comment">// 当前图片出现 防流氓 stop(true)</span></span><br><span class="line">        <span class="symbol">$u</span>nit.stop(<span class="literal">true</span>).animate(&#123; <span class="string">"left"</span>: - <span class="number">220</span> * idx &#125;,<span class="number">600</span>);</span><br><span class="line">        <span class="comment">// 当前小圆点加cur</span></span><br><span class="line">        $(this).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
        <tag>滚动</tag>
        <tag>轮播图</tag>
      </tags>
  </entry>
  <entry>
    <title>十六、呼吸轮播图的变种（中间加入蒙版）</title>
    <url>/post/c563d584.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十六、呼吸轮播图的变种（中间加入蒙版）"><a href="#十六、呼吸轮播图的变种（中间加入蒙版）" class="headerlink" title="十六、呼吸轮播图的变种（中间加入蒙版）"></a>十六、呼吸轮播图的变种（中间加入蒙版）</h1><p><img src="https://s1.ax1x.com/2020/07/08/UVJ7G9.png" alt="UVJ7G9.png"></p><h2 id="16-1-DOM"><a href="#16-1-DOM" class="headerlink" title="16.1  DOM"></a>16.1 DOM</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"carousel"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo2/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo2/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo2/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo2/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">id</span>=<span class="string">"leftBtn"</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">id</span>=<span class="string">"rightBtn"</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"circles"</span> <span class="attr">id</span>=<span class="string">"circles"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"cur"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="16-2-css-蒙版加在CSS中"><a href="#16-2-css-蒙版加在CSS中" class="headerlink" title="16.2  css 蒙版加在CSS中"></a>16.2 css 蒙版加在CSS中</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    ul, ol &#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line">    a &#123;</span><br><span class="line">        text-decoration: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">        width: 880px;</span><br><span class="line">        height: 550px;</span><br><span class="line">        margin: 50px auto;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">        position: relative;</span><br><span class="line"><span class="css">        <span class="comment">/* 蒙版 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.2</span>);</span></span><br><span class="line"><span class="css">        <span class="comment">/* 蒙版也可以是背景图 */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* background: url(images/lunbo2/5.jpg); */</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* 呼吸轮播图的关键是所有图片摞在一起 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">        display: block;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 30px;</span><br><span class="line">        height: 60px;</span><br><span class="line">        top: 50%;</span><br><span class="line">        margin-top: -30px;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.5</span>);</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">        font-size: 20px;</span><br><span class="line">        line-height: 60px;</span><br><span class="line">        text-align: center;</span><br><span class="line"><span class="css">        <span class="comment">/* 大于小于号开口变大 */</span></span></span><br><span class="line">        font-family: consolas;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">        left: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line">        right: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.circles</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 110px;</span><br><span class="line">        height: 20px;</span><br><span class="line">        left: 50%;</span><br><span class="line">        margin-left: -55px;</span><br><span class="line">        bottom: 30px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> &#123;</span></span><br><span class="line">        width: 120px;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        width: 20px;</span><br><span class="line">        height: 20px;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">        background-color: white;</span><br><span class="line">        line-height: 20px;</span><br><span class="line">        text-align: center;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line"><span class="css">        <span class="comment">/* 鼠标样式 小手 */</span></span></span><br><span class="line">        cursor: pointer;</span><br><span class="line">    &#125;</span><br><span class="line">    /* .box .circles ol li:last-child &#123;</span><br><span class="line">        margin-right: 0;</span><br><span class="line">    &#125; */</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-class">.cur</span> &#123;</span></span><br><span class="line">        background-color: orange;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="16-3-jquery-上一张和下一张的淡入淡出加回调函数"><a href="#16-3-jquery-上一张和下一张的淡入淡出加回调函数" class="headerlink" title="16.3  jquery 上一张和下一张的淡入淡出加回调函数"></a>16.3 jquery 上一张和下一张的淡入淡出加回调函数</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素 命名时加上$提醒我们是一个jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $leftBtn = $(<span class="string">"#leftBtn"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $rightBtn = $(<span class="string">"#rightBtn"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $imgs = $(<span class="string">"#carousel li"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $circles = $(<span class="string">"#circles ol li"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $box = $(<span class="string">"#box"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义length</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> length = $imgs.length;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义信号量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> idx = <span class="number">0</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 开启定时器 平时图片轮播，相当于右按钮事件</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> timer = setInterval(change,<span class="number">2000</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标移入 清除定时器</span></span></span><br><span class="line"><span class="actionscript">    $box.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标离开 开启定时器</span></span></span><br><span class="line"><span class="actionscript">    $box.mouseleave(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设表先关</span></span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 重新赋值timer</span></span></span><br><span class="line">        timer = setInterval(change,2000);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 右按钮点击事件 将函数提取出来</span></span></span><br><span class="line">    $rightBtn.click(change);</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>($imgs.is(<span class="string">":animated"</span>))&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;   </span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前图片淡出 回调函数 完全淡出之后，下一张图片再淡入</span></span></span><br><span class="line"><span class="actionscript">        $imgs.eq(idx).fadeOut(<span class="number">600</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 信号量改变</span></span></span><br><span class="line">            idx++;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 边界判定</span></span></span><br><span class="line">            if (idx &gt; length - 1) &#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// idx归0</span></span></span><br><span class="line">                idx = 0;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 下一张图片淡入</span></span></span><br><span class="line">            $imgs.eq(idx).fadeIn(600);</span><br><span class="line"><span class="actionscript">            <span class="comment">// 当前小圆点加cur 它的兄弟去掉cur</span></span></span><br><span class="line"><span class="actionscript">            $circles.eq(idx).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(idx);  <span class="comment">// 查看图片顺序  </span></span></span><br><span class="line">        &#125;);           </span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 左按钮点击事件</span></span></span><br><span class="line"><span class="actionscript">    $leftBtn.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (!$imgs.is(<span class="string">":animated"</span>)) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 当前图片淡出 回调函数 完全淡出之后，上一张图片再淡入</span></span></span><br><span class="line"><span class="actionscript">            $imgs.eq(idx).fadeOut(<span class="number">600</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 信号量改变</span></span></span><br><span class="line">                idx--;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 边界判定</span></span></span><br><span class="line">                if (idx &lt; 0) &#123;</span><br><span class="line">                    idx = length - 1;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 上一张图片淡入</span></span></span><br><span class="line">                $imgs.eq(idx).fadeIn(600);</span><br><span class="line"><span class="actionscript">                <span class="comment">// 当前小圆点加cur 它的兄弟去掉cur</span></span></span><br><span class="line"><span class="actionscript">                $circles.eq(idx).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(idx);  <span class="comment">// 查看图片顺序</span></span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 小圆点事件 鼠标移入</span></span></span><br><span class="line"><span class="actionscript">    $circles.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 之前图片消失 防流氓，立即切换</span></span></span><br><span class="line"><span class="actionscript">        $imgs.eq(idx).stop(<span class="literal">true</span>).fadeOut(<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 改变信号量</span></span></span><br><span class="line"><span class="javascript">        idx = $(<span class="keyword">this</span>).index();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前图片出现 防流氓，立即切换</span></span></span><br><span class="line"><span class="actionscript">        $imgs.eq(idx).stop(<span class="literal">true</span>).fadeIn(<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前小圆点加cur</span></span></span><br><span class="line"><span class="javascript">        $(<span class="keyword">this</span>).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
        <tag>蒙版</tag>
        <tag>轮播图</tag>
      </tags>
  </entry>
  <entry>
    <title>十五、案例：安徽龙禧（banner轮播图）</title>
    <url>/post/bf12a2c6.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十五、案例：安徽龙禧（banner轮播图）"><a href="#十五、案例：安徽龙禧（banner轮播图）" class="headerlink" title="十五、案例：安徽龙禧（banner轮播图）"></a>十五、案例：安徽龙禧（banner轮播图）</h1><p><img src="https://s1.ax1x.com/2020/07/08/UVJfbT.png" alt="UVJfbT.png"></p><h2 id="15-1-DOM"><a href="#15-1-DOM" class="headerlink" title="15.1  DOM"></a>15.1 DOM</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- header开始 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 同级的header 压盖住banner 绝对定位 子绝父相 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">inner</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- inner位置固定 版心 作为绝对定位参考盒子 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- logo 使用 h1 标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>安徽龙禧<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 导航 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>西柚媒体<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>See you<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"chance"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>创世文化<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>See you<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>数字商屏<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>See you<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>柚货<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>See you<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>全诚推广<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>See you<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>整合传播<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>See you<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>关于龙禧<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span>&gt;</span>See you<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- banner --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span> <span class="attr">id</span>=<span class="string">"banner"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 呼吸轮播图 绝对定位 脱标 让出标准流的位置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pic"</span> <span class="attr">id</span>=<span class="string">"imgs"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/banner1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/banner2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/banner3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/banner4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 版心 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 小圆点 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"circles"</span> <span class="attr">id</span>=<span class="string">"circles"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"cur"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="15-2-css"><a href="#15-2-css" class="headerlink" title="15.2  css"></a>15.2 css</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="params">&lt;!-- 清楚默认样式 --&gt;</span></span><br><span class="line"><span class="params">&lt;link rel="stylesheet" href="css/reset.css"&gt;</span></span><br><span class="line"><span class="params">&lt;!-- 引入样式 --&gt;</span></span><br><span class="line"><span class="params">&lt;link rel="stylesheet" href="css/index.css"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 公共样式 */</span></span><br><span class="line"><span class="comment">/* 版心 inner */</span></span><br><span class="line">.<span class="class">inner </span>&#123;</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">1000</span>px;</span><br><span class="line">    <span class="comment">/* 块级元素水平居中 */</span></span><br><span class="line"><span class="symbol">    margin:</span> <span class="number">0</span> auto;</span><br><span class="line">    <span class="comment">/* 相对定位 不脱离标准文档流 不设置left或top，位置不会改变 */</span></span><br><span class="line"><span class="symbol">    position:</span> relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class">a </span>&#123;</span><br><span class="line">    text-decoration: none;</span><br><span class="line"><span class="symbol">    color:</span> <span class="meta">#665E73;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* header 开始 */</span></span><br><span class="line">.<span class="class">header </span>&#123;</span><br><span class="line">    <span class="comment">/* 压盖 绝对定位 */</span></span><br><span class="line"><span class="symbol">    position:</span> absolute;</span><br><span class="line"><span class="symbol">    left:</span> <span class="number">0</span>px;</span><br><span class="line"><span class="symbol">    top:</span> <span class="number">19</span>px;</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">992</span>px;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">103</span>px;</span><br><span class="line">    z-index: <span class="number">9999</span>;</span><br><span class="line">&#125;</span><br><span class="line">.header .<span class="class">logo </span>&#123;</span><br><span class="line">    <span class="comment">/* logo 和 nav 同级元素 并排显示设置宽高 浮动 */</span></span><br><span class="line">    <span class="comment">/* 子盒子浮动要看看父盒子 height或overflow */</span></span><br><span class="line"><span class="symbol">    float:</span> left;</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">151</span>px;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">103</span>px;</span><br><span class="line"><span class="symbol">    overflow:</span> hidden;</span><br><span class="line">&#125;</span><br><span class="line">.header .logo <span class="class">a </span>&#123;</span><br><span class="line">    <span class="comment">/* a 行内元素 想设置宽高 转块 */</span></span><br><span class="line"><span class="symbol">    display:</span> block;</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">100</span>%;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">100</span>%;</span><br><span class="line"><span class="symbol">    background:</span> url(..<span class="meta-keyword">/images/</span>logo.png);</span><br><span class="line">    <span class="comment">/* 用户不能看到文字  挤出原位置后 父盒子溢出隐藏*/</span></span><br><span class="line">    <span class="comment">/* 首行缩进或用padding挤 */</span></span><br><span class="line">    text-indent: <span class="number">-999</span>em;</span><br><span class="line">&#125;</span><br><span class="line">.header .<span class="class">nav </span>&#123;</span><br><span class="line">    <span class="comment">/* 同级元素要浮动都浮动 h1 浮动 nav也一定浮动 */</span></span><br><span class="line"><span class="symbol">    float:</span> left;</span><br><span class="line">    <span class="comment">/* 浮动元素脱标 不再区分块级和行内 不设置宽度 内容撑开 */</span></span><br><span class="line"><span class="symbol">    height:</span> <span class="number">91</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.header .nav ul <span class="class">li </span>&#123;</span><br><span class="line">    <span class="comment">/* 浮动float是盒子属性不能继承 祖先浮动和盒子没有任何关系 */</span></span><br><span class="line"><span class="symbol">    float:</span> left;</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">120</span>px;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">91</span>px;</span><br><span class="line">    border-right: <span class="number">1</span>px solid <span class="meta">#EBEBEB;</span></span><br><span class="line">    <span class="comment">/* 为了实现 a:hover效果：下方留一点白色 需要将白色背景添加在li标签上 */</span></span><br><span class="line">    background-color: <span class="meta">#fff;</span></span><br><span class="line">&#125;</span><br><span class="line">.header .nav ul li.<span class="class">chance </span>&#123;</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">114</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.header .nav ul li <span class="class">a </span>&#123;</span><br><span class="line"><span class="symbol">    display:</span> block;</span><br><span class="line">    <span class="comment">/* 块级元素 不设置宽度 自动撑满父盒子的内容宽 */</span></span><br><span class="line"><span class="symbol">    height:</span> <span class="number">67</span>px;</span><br><span class="line">    padding-top: <span class="number">24</span>px;</span><br><span class="line">    line-height: <span class="number">35</span>px;</span><br><span class="line">    font-size: <span class="number">15</span>px;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.header .nav ul li a <span class="class">span </span>&#123;</span><br><span class="line"><span class="symbol">    display:</span> block;</span><br><span class="line">&#125;</span><br><span class="line">.header .nav ul li a span:last-<span class="class">child </span>&#123;</span><br><span class="line">    font-size: <span class="number">12</span>px;</span><br><span class="line">    line-height: <span class="number">14</span>px;</span><br><span class="line"><span class="symbol">    color:</span> <span class="meta">#C7CBD7;</span></span><br><span class="line">&#125;</span><br><span class="line">.header .nav ul li a:<span class="class">hover </span>&#123;</span><br><span class="line">    <span class="comment">/* a 标签 书写的样式都会渲染在4个伪类上 */</span></span><br><span class="line">    border-top: <span class="number">4</span>px solid <span class="meta">#F28D00;</span></span><br><span class="line">    <span class="comment">/* 白色背景不能渲染在 a标签上 因为hover会将 a相同的效果层叠掉 */</span></span><br><span class="line">    background-color: <span class="meta">#F9F9F9;</span></span><br><span class="line">    <span class="comment">/* 位置微调 相对定位 相对于原位置进行偏移 */</span></span><br><span class="line"><span class="symbol">    position:</span> relative;</span><br><span class="line"><span class="symbol">    top:</span> <span class="number">-4</span>px;</span><br><span class="line"><span class="symbol">    left:</span> <span class="number">0</span>px;</span><br><span class="line">    <span class="comment">/* 显示hover 最终占有高度是91px 将height内减 */</span></span><br><span class="line"><span class="symbol">    height:</span> <span class="number">63</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* banner 开始 */</span></span><br><span class="line">.<span class="class">banner </span>&#123;</span><br><span class="line">    <span class="comment">/* 标准流 */</span></span><br><span class="line"><span class="symbol">    width:</span> <span class="number">100</span>%;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">665</span>px;</span><br><span class="line"><span class="symbol">    position:</span> relative;</span><br><span class="line">    <span class="comment">/* 超出的 pic 溢出隐藏 */</span></span><br><span class="line"><span class="symbol">    overflow:</span> hidden;</span><br><span class="line">&#125;</span><br><span class="line">.banner .<span class="class">pic </span>&#123;</span><br><span class="line">    <span class="comment">/* 绝对定位元素 水平居中 让大盒子设置居中 内部的所有子元素都跟着一起移动 */</span></span><br><span class="line">    <span class="comment">/* 大盒子宽度设置为图片宽度 1920px */</span></span><br><span class="line"><span class="symbol">    width:</span> <span class="number">1920</span>px;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">665</span>px;</span><br><span class="line"><span class="symbol">    position:</span> absolute;</span><br><span class="line"><span class="symbol">    left:</span> <span class="number">50</span>%;</span><br><span class="line">    margin-left: <span class="number">-960</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.banner .pic ul <span class="class">li </span>&#123;</span><br><span class="line">    <span class="comment">/* 呼吸轮播图 所有图片摞在一起 */</span></span><br><span class="line"><span class="symbol">    position:</span> absolute;</span><br><span class="line"><span class="symbol">    top:</span> <span class="number">0</span>px;</span><br><span class="line"><span class="symbol">    left:</span> <span class="number">0</span>px;</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">1920</span>px;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">665</span>px;</span><br><span class="line">    <span class="comment">/* 绝对定位后面的压盖住前面的 */</span></span><br><span class="line"><span class="symbol">    display:</span> none;</span><br><span class="line">&#125;</span><br><span class="line">.banner .pic ul li:first-<span class="class">child </span>&#123;</span><br><span class="line">    <span class="comment">/* 默认显示第一张图片 */</span></span><br><span class="line"><span class="symbol">    display:</span> block;</span><br><span class="line">&#125;</span><br><span class="line">.banner .inner .<span class="class">circles </span>&#123;</span><br><span class="line"><span class="symbol">    position:</span> absolute;</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">15</span>px;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">270</span>px;</span><br><span class="line">    <span class="comment">/* 渲染小棍 */</span></span><br><span class="line"><span class="symbol">    background:</span> url(..<span class="meta-keyword">/images/</span>list_boxbg.png) repeat-y center top;</span><br><span class="line">    z-index: <span class="number">99</span>;</span><br><span class="line">    <span class="comment">/* inner是circles的参考盒子 inner没有高度 不能使用bottom 只能使用top */</span></span><br><span class="line"><span class="symbol">    left:</span> <span class="number">0</span>px;</span><br><span class="line"><span class="symbol">    top:</span> <span class="number">218</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.banner .inner .circles ol <span class="class">li </span>&#123;</span><br><span class="line">    <span class="comment">/* 渲染小圆点 */</span></span><br><span class="line"><span class="symbol">    width:</span> <span class="number">15</span>px;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">15</span>px;</span><br><span class="line"><span class="symbol">    background:</span> url(..<span class="meta-keyword">/images/</span>num_bg.png);</span><br><span class="line">    <span class="comment">/* 同级元素有间隔 */</span></span><br><span class="line">    margin-bottom: <span class="number">70</span>px;</span><br><span class="line"><span class="symbol">    position:</span> relative;</span><br><span class="line">&#125;</span><br><span class="line">.banner .inner .circles ol li <span class="class">a </span>&#123;</span><br><span class="line">    <span class="comment">/* 调整位置 */</span></span><br><span class="line"><span class="symbol">    width:</span> <span class="number">104</span>px;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">43</span>px;</span><br><span class="line"><span class="symbol">    background:</span> url(..<span class="meta-keyword">/images/</span>num_hover.png);</span><br><span class="line"><span class="symbol">    position:</span> absolute;</span><br><span class="line"><span class="symbol">    left:</span> <span class="number">-76</span>px;</span><br><span class="line"><span class="symbol">    top:</span> <span class="number">-12</span>px;</span><br><span class="line"><span class="symbol">    display:</span> none;</span><br><span class="line">&#125;</span><br><span class="line">.banner .inner .circles ol li:nth-child(<span class="number">2</span>) <span class="class">a </span>&#123;</span><br><span class="line"><span class="symbol">    background:</span> url(..<span class="meta-keyword">/images/</span>num_hover2.png);</span><br><span class="line">&#125;</span><br><span class="line">.banner .inner .circles ol li:nth-child(<span class="number">3</span>) <span class="class">a </span>&#123;</span><br><span class="line"><span class="symbol">    background:</span> url(..<span class="meta-keyword">/images/</span>num_hover3.png);</span><br><span class="line">&#125;</span><br><span class="line">.banner .inner .circles ol li:last-child(<span class="number">4</span>) <span class="class">a </span>&#123;</span><br><span class="line"><span class="symbol">    background:</span> url(..<span class="meta-keyword">/images/</span>num_hover4.png);</span><br><span class="line">&#125;</span><br><span class="line">.banner .inner .circles ol li.cur <span class="class">a </span>&#123;</span><br><span class="line">    <span class="comment">/* 指定元素显示小图标 */</span></span><br><span class="line"><span class="symbol">    display:</span> block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="15-3-jquery"><a href="#15-3-jquery" class="headerlink" title="15.3  jquery"></a>15.3 jquery</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素 命名时加上$提醒我们是一个jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $imgs = $(<span class="string">"#imgs ul li"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $circles = $(<span class="string">"#circles ol li"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $banner = $(<span class="string">"#banner"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义length</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> length = $circles.length;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义信号量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> idx = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义定时器</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> timer = setInterval(rightBtn,<span class="number">2000</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标移入 清除定时器</span></span></span><br><span class="line"><span class="actionscript">    $banner.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标离开 重新开启定时器</span></span></span><br><span class="line"><span class="actionscript">    $banner.mouseleave(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设表先关</span></span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 重新赋值timer</span></span></span><br><span class="line">        timer = setInterval(rightBtn,2000);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义函数 书写右按钮事件 同时可用于复用</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">rightBtn</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓 左右按钮防流氓 用 .is(":animated")方法</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当图片运动的时候，什么也不做</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>($imgs.is(<span class="string">":animated"</span>))&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前图片淡出</span></span></span><br><span class="line">        $imgs.eq(idx).fadeOut(600);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 信号量改变</span></span></span><br><span class="line">        idx++;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 边界判定</span></span></span><br><span class="line">        if(idx &gt; length -1)&#123;</span><br><span class="line">            idx = 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 下一张图片淡入</span></span></span><br><span class="line">        $imgs.eq(idx).fadeIn(600);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前小圆点加cur 其它去cur</span></span></span><br><span class="line"><span class="actionscript">        $circles.eq(idx).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 小圆点事件 防流氓 stop(true)</span></span></span><br><span class="line"><span class="actionscript">    $circles.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前图片消失</span></span></span><br><span class="line"><span class="actionscript">        $imgs.eq(idx).stop(<span class="literal">true</span>).fadeOut(<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 信号量改变</span></span></span><br><span class="line"><span class="javascript">        idx = $(<span class="keyword">this</span>).index();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 下一张图片淡入</span></span></span><br><span class="line"><span class="actionscript">        $imgs.eq(idx).stop(<span class="literal">true</span>).fadeIn(<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 小圆点加cur</span></span></span><br><span class="line"><span class="javascript">        $(<span class="keyword">this</span>).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
        <tag>轮播图</tag>
      </tags>
  </entry>
  <entry>
    <title>十四、animate()函数</title>
    <url>/post/f03ca4ff.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十四、animate-函数"><a href="#十四、animate-函数" class="headerlink" title="十四、animate()函数"></a>十四、animate()函数</h1><h2 id="14-1-概述"><a href="#14-1-概述" class="headerlink" title="14.1  概述"></a>14.1 概述</h2><p>animate()是基于重点状态的动画</p><ul><li><p>animate()：接收2个参数</p><ul><li><p>第一个参数：json 表示终点状态</p></li><li><p>第二个参数：完成动画的时间。单位ms，省略不写</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 让所有的p移动到left：500px;的位置</span></span><br><span class="line"><span class="comment">// 选中所有的p，json&#123;"left" : 500&#125; left值改为500，动画未完成时间为2s</span></span><br><span class="line">$("<span class="selector-tag">p</span>")<span class="selector-class">.animate</span>(&#123;"<span class="attribute">left</span>" : <span class="number">500</span>&#125;, <span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAjYnJ.png" alt="UAjYnJ.png"></p><h2 id="14-2-能够参与动画的属性"><a href="#14-2-能够参与动画的属性" class="headerlink" title="14.2  能够参与动画的属性"></a>14.2 能够参与动画的属性</h2><ul><li><p>所有数值型的属性都可以参与动画</p><ul><li><p>width</p></li><li><p>height</p></li><li><p>border</p></li><li><p>left、right、top、bottom</p></li><li><p>border-radius</p></li><li><p>……</p></li></ul></li><li><p>不能参与动画的属性：</p><ul><li><p>background-color</p></li><li><p>background-position</p></li><li><p>css3的一些复杂属性（transform）</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).animate(&#123;</span><br><span class="line">    <span class="string">"width"</span> : 200,</span><br><span class="line">    <span class="string">"height"</span> : 200,</span><br><span class="line">    <span class="string">"border-radius"</span> : "50<span class="type">px</span><span class="string">",</span></span><br><span class="line"><span class="string">    "</span>backgroundColor<span class="string">" : "</span>blue<span class="string">",  // 不能参与动画</span></span><br><span class="line"><span class="string">    "</span>left<span class="string">" : 500</span></span><br><span class="line"><span class="string">&#125;,2000);</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAjdtx.png" alt="UAjdtx.png"></p><h2 id="14-3-动画的执行顺序"><a href="#14-3-动画的执行顺序" class="headerlink" title="14.3  动画的执行顺序"></a>14.3 动画的执行顺序</h2><h3 id="14-3-1-同一元素的不同animate，是按照绑定顺序执行的"><a href="#14-3-1-同一元素的不同animate，是按照绑定顺序执行的" class="headerlink" title="14.3.1  同一元素的不同animate，是按照绑定顺序执行的"></a>14.3.1 同一元素的不同animate，是按照绑定顺序执行的</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 绑定第一个动画</span></span><br><span class="line">$(<span class="string">"p"</span>).animate(&#123;<span class="string">"left"</span> : <span class="number">500</span>&#125;,<span class="number">2000</span>);</span><br><span class="line"><span class="comment">// 绑定第二个动画</span></span><br><span class="line">$(<span class="string">"p"</span>).animate(&#123;<span class="string">"top"</span> : <span class="number">200</span>&#125;,<span class="number">2000</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAj6nH.png" alt="UAj6nH.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).animate(&#123;</span><br><span class="line">    <span class="string">"left"</span> : 500,</span><br><span class="line">    <span class="string">"top"</span> : 200</span><br><span class="line">&#125;,<span class="number">2000</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAj49f.png" alt="UAj49f.png"></p><h3 id="14-3-2-不同元素的animate的执行顺序"><a href="#14-3-2-不同元素的animate的执行顺序" class="headerlink" title="14.3.2  不同元素的animate的执行顺序"></a>14.3.2 不同元素的animate的执行顺序</h3><p>不同元素的animate的执行顺序，同时执行</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 分别绑定动画</span></span><br><span class="line">$(<span class="string">"p"</span>).animate(&#123;<span class="string">"left"</span> : <span class="number">500</span>&#125;,<span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#box"</span>).animate(&#123;<span class="string">"left"</span> : <span class="number">500</span>&#125;,<span class="number">2000</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UV86oQ.png" alt="UV86oQ.png"></p><h3 id="14-3-3-animate-和css-的执行顺序"><a href="#14-3-3-animate-和css-的执行顺序" class="headerlink" title="14.3.3  animate()和css()的执行顺序"></a>14.3.3 animate()和css()的执行顺序</h3><ul><li><p>animate()需要花费时间</p></li><li><p>css()瞬间完成</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).animate(&#123;<span class="string">"left"</span> : 500&#125;,2000).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UV84yV.png" alt="UV84yV.png"></p><h2 id="14-4-回调函数"><a href="#14-4-回调函数" class="headerlink" title="14.4  回调函数"></a>14.4 回调函数</h2><h3 id="14-4-1-异步语句"><a href="#14-4-1-异步语句" class="headerlink" title="14.4.1  异步语句"></a>14.4.1 异步语句</h3><p>类似于animate()这种需要花费时间的语句，如果后面还有其他js代码，这些代码会立即执行。不会死等animate()函数执行完毕之后再去执行。</p><p>异步语句都有一个回调函数，异步语句执行完毕之后要做的事要写在回调函数当中。</p><p>比如：做一个肉菜，第一步需要解冻肉。</p><p>把肉放在微波炉中进行解冻需要10min。在这期间，我们还可以洗菜、……，等到微波炉叮一声之后（叮之后就是回调函数），将肉拿出，开始做肉菜，做肉菜就是要写在回调函数中。</p><p><code>animate()</code> <code>show(1000)</code> <code>hide(1000)</code> <code>slideDown()</code> <code>slideUp()</code> <code>fadeIn()</code> <code>fadeout()</code>这些都是异步语句，都需要花费时间。</p><h3 id="14-4-2-回调函数"><a href="#14-4-2-回调函数" class="headerlink" title="14.4.2  回调函数"></a>14.4.2 回调函数</h3><ul><li><p>animate({},time,callback)</p><ul><li><p>第一个参数：json</p></li><li><p>第二个参数：time 完成动画的时间</p></li><li><p>callBack：回调函数</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 让box运动完毕之后改变box的背景颜色</span></span><br><span class="line">$(<span class="string">"#box"</span>).animate(&#123;<span class="string">"left"</span> : <span class="number">500</span>&#125;,<span class="number">2000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UV87o4.png" alt="UV87o4.png"></p><p>比如fadeIn()也可以书写回调函数：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 淡入时间为2s，淡入之后立即变色</span></span><br><span class="line">$(<span class="string">"#box"</span>).fadeIn(<span class="number">2000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UV8LWR.png" alt="UV8LWR.png"></p><h2 id="14-5-delay-延迟"><a href="#14-5-delay-延迟" class="headerlink" title="14.5  delay()延迟"></a>14.5 delay()延迟</h2><p>delay()：表示延迟，<strong>只能书写在动画的前面</strong>，参数就是要延迟的时间。</p><p><code>animate()</code> <code>show(1000)</code> <code>hide(1000)</code> <code>slideDown()</code> <code>slideUp()</code> <code>fadeIn()</code> <code>fadeout()</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击btn，让box延迟2s再执行动画</span></span><br><span class="line">$(<span class="string">"#btn"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).delay(<span class="number">2000</span>).animate(&#123;<span class="string">"left"</span> : <span class="number">500</span>&#125;,<span class="number">2000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UV8xOK.png" alt="UV8xOK.png"></p><p><strong>利用delay()可以控制元素的进场顺序</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 控制元素进场顺序</span></span><br><span class="line">$(<span class="string">"p"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).delay(<span class="number">500</span> * i).show(<span class="number">0</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UVGiYd.png" alt="UVGiYd.png"></p><h2 id="14-6-stop-立即停止动画"><a href="#14-6-stop-立即停止动画" class="headerlink" title="14.6  stop()立即停止动画"></a>14.6 stop()立即停止动画</h2><ul><li><p>stop()：表示让运动的元素立即停止动画</p><ul><li><p>接收2个参数：都是布尔值 默认值都是false</p></li><li><p>参数1：是否清空当前的动画队列</p></li><li><p>参数2：是否立即完成当前动画</p></li></ul></li><li><p>stop(false,false) 等价方式stop() 表示立即进入下一个动画，立即停止当前动画</p></li><li><p>stop(false,true) 表示立即进入下一个动画，立即停止并完成当前动画</p></li><li><p>stop(true,true) 表示清空当前动画队列，立即停止并完成当前动画</p></li><li><p><strong>stop(true,false) 等价方式stop(true) 表示清空当前动画队列，立即停止当前动画（最常用，点哪停哪，后面动画不再执行）</strong></p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).animate(&#123;<span class="string">"left"</span>: <span class="number">500</span>&#125;,<span class="number">2000</span>);</span><br><span class="line">$(<span class="string">"#box"</span>).animate(&#123;<span class="string">"top"</span>: <span class="number">500</span>&#125;,<span class="number">2000</span>);</span><br><span class="line">$(<span class="string">"#box"</span>).animate(&#123;<span class="string">"left"</span>: <span class="number">50</span>&#125;,<span class="number">2000</span>);</span><br><span class="line">$(<span class="string">"#box"</span>).animate(&#123;<span class="string">"top"</span>: <span class="number">50</span>&#125;,<span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// stop(false,false) 等价方式stop() 表示立即进入下一个动画，立即停止当前动画</span></span><br><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).stop();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// stop(false,true) 表示立即进入下一个动画，立即停止并完成当前动画</span></span><br><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).stop(<span class="literal">false</span>,<span class="literal">true</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// stop(true,true)  表示清空当前动画队列，立即停止并完成当前动画</span></span><br><span class="line">$(<span class="string">"#btn3"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).stop(<span class="literal">true</span>,<span class="literal">true</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// stop(true,false) 等价方式stop(true) 表示清空当前动画队列，立即停止当前动画   </span></span><br><span class="line">$(<span class="string">"#btn4"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).stop(<span class="literal">true</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UVGQYj.png" alt="UVGQYj.png"></p><h2 id="14-7-防止动画积累"><a href="#14-7-防止动画积累" class="headerlink" title="14.7  防止动画积累"></a>14.7 防止动画积累</h2><p>一个元素身上可以存在多个动画事件，尤其是在不经意间就会造成动画积累，此时我们就要防止动画积累（也叫做“防流氓”）。</p><p>比如：现在有一支队伍，接到了命令，要前往广州，再去广州的路上又接到了命令，回北京。此时这支队伍有两个选择：</p><p>① 立即执行新的任务，放弃原有任务</p><blockquote><p>利用stop(true)可以实现</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 去广州</span></span><br><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).stop(<span class="literal">true</span>).animate(&#123;<span class="string">"left"</span>:<span class="number">1000</span>&#125;,<span class="number">2000</span>);</span><br><span class="line">&#125;); </span><br><span class="line"><span class="comment">// 回北京</span></span><br><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).stop(<span class="literal">true</span>).animate(&#123; <span class="string">"left"</span>: <span class="number">50</span> &#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>② 只有当元素不运动的时候，才接收新的任务</p><ul><li><p>is()方法：表示元素是否具备某种状态</p><ul><li>is(“:animated”) 表示当元素运动的时候返回true，当元素不运动的时候返回false</li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 当元素运动的时候，不接受新的任务</span></span><br><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 当元素运动的时候，不接受任务</span></span><br><span class="line">    <span class="keyword">if</span>($(<span class="string">"#box"</span>).is(<span class="string">":animated"</span>))&#123;</span><br><span class="line">        <span class="comment">// 停止执行代码</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 当元素不运动的时候，才接受新的任务</span></span><br><span class="line">    $(<span class="string">"#box"</span>).animate(&#123;<span class="string">"left"</span>:<span class="number">1000</span>&#125;,<span class="number">2000</span>);</span><br><span class="line">&#125;); </span><br><span class="line"><span class="comment">// 当元素不运动的时候，才接受新的任务</span></span><br><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// !true   </span></span><br><span class="line">    <span class="keyword">if</span>(!$(<span class="string">"#box"</span>).is(<span class="string">":animated"</span>))&#123;</span><br><span class="line">        $(<span class="string">"#box"</span>).animate(&#123;<span class="string">"left"</span>:<span class="number">50</span>&#125;,<span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/08/UVGG60.png" alt="UVGG60.png"></p><h2 id="14-8-案例：呼吸轮播图"><a href="#14-8-案例：呼吸轮播图" class="headerlink" title="14.8  案例：呼吸轮播图"></a>14.8 案例：呼吸轮播图</h2><p><img src="https://s1.ax1x.com/2020/07/08/UVJpj0.png" alt="UVJpj0.png"></p><h3 id="14-8-1-DOM"><a href="#14-8-1-DOM" class="headerlink" title="14.8.1  DOM"></a>14.8.1 DOM</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"carouse"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"imgs"</span> <span class="attr">id</span>=<span class="string">"imgs"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">id</span>=<span class="string">"leftBtn"</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">id</span>=<span class="string">"rightBtn"</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"circles"</span> <span class="attr">id</span>=<span class="string">"circles"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"cur"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>5<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="14-8-2-css"><a href="#14-8-2-css" class="headerlink" title="14.8.2  css"></a>14.8.2 css</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    ul, ol &#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">        padding: 0;</span><br><span class="line">        margin: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    a &#123;</span><br><span class="line">        text-decoration: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">        width: 220px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        margin: 50px auto;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* 呼吸轮播图的关键是所有图片摞在一起 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.imgs</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.imgs</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">        display: block;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 20px;</span><br><span class="line">        height: 40px;</span><br><span class="line">        top: 50%;</span><br><span class="line">        margin-top: -20px;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.5</span>);</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">        font-size: 20px;</span><br><span class="line">        line-height: 40px;</span><br><span class="line">        text-align: center;</span><br><span class="line"><span class="css">        <span class="comment">/* 大于小于号开口变大 */</span></span></span><br><span class="line">        font-family: consolas;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">        left: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line">        right: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.circles</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 140px;</span><br><span class="line">        height: 20px;</span><br><span class="line">        left: 50%;</span><br><span class="line">        margin-left: -70px;</span><br><span class="line">        bottom: 15px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> &#123;</span></span><br><span class="line">        width: 150px;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        float: left;</span><br><span class="line">        width: 20px;</span><br><span class="line">        height: 20px;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">        background-color: blue;</span><br><span class="line">        line-height: 20px;</span><br><span class="line">        text-align: center;</span><br><span class="line">        border-radius: 50%;</span><br><span class="line">    &#125;</span><br><span class="line">    /* .box .circles ol li:last-child &#123;</span><br><span class="line">        margin-right: 0;</span><br><span class="line">    &#125; */</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.circles</span> <span class="selector-tag">ol</span> <span class="selector-tag">li</span><span class="selector-class">.cur</span> &#123;</span></span><br><span class="line">        background-color: orange;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="14-8-3-jquery"><a href="#14-8-3-jquery" class="headerlink" title="14.8.3  jquery"></a>14.8.3 jquery</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素 命名时加上$提醒我们是一个jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $leftBtn = $(<span class="string">"#leftBtn"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $rightBtn = $(<span class="string">"#rightBtn"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $imgs = $(<span class="string">"#imgs ul li"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $circles = $(<span class="string">"#circles ol li"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $carouse = $(<span class="string">"#carouse"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义length</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> length = $imgs.length;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义信号量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> idx = <span class="number">0</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 开启定时器 平时图片轮播，相当于右按钮事件</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> timer = setInterval(change,<span class="number">2000</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标移入 清除定时器</span></span></span><br><span class="line"><span class="actionscript">    $carouse.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标离开 开启定时器</span></span></span><br><span class="line"><span class="actionscript">    $carouse.mouseleave(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设表先关</span></span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 重新赋值timer</span></span></span><br><span class="line">        timer = setInterval(change,2000);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 右按钮点击事件 将函数提取出来</span></span></span><br><span class="line">    $rightBtn.click(change);</span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>($imgs.is(<span class="string">":animated"</span>))&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span>;</span></span><br><span class="line">        &#125;   </span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前图片淡出</span></span></span><br><span class="line">        $imgs.eq(idx).fadeOut(600);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 信号量改变</span></span></span><br><span class="line">        idx++;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 边界判定</span></span></span><br><span class="line">        if (idx &gt; length - 1) &#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// idx归0</span></span></span><br><span class="line">            idx = 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 下一张图片淡入</span></span></span><br><span class="line">        $imgs.eq(idx).fadeIn(600);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前小圆点加cur 它的兄弟去掉cur</span></span></span><br><span class="line"><span class="actionscript">        $circles.eq(idx).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(idx);  <span class="comment">// 查看图片顺序       </span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 左按钮点击事件</span></span></span><br><span class="line"><span class="actionscript">    $leftBtn.click(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 防流氓</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span> (!$imgs.is(<span class="string">":animated"</span>)) &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 当前图片淡出</span></span></span><br><span class="line">            $imgs.eq(idx).fadeOut(600);</span><br><span class="line"><span class="actionscript">            <span class="comment">// 信号量改变</span></span></span><br><span class="line">            idx--;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 边界判定</span></span></span><br><span class="line">            if (idx &lt; 0) &#123;</span><br><span class="line">                idx = length - 1;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 上一张图片淡入</span></span></span><br><span class="line">            $imgs.eq(idx).fadeIn(600);</span><br><span class="line"><span class="actionscript">            <span class="comment">// 当前小圆点加cur 它的兄弟去掉cur</span></span></span><br><span class="line"><span class="actionscript">            $circles.eq(idx).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(idx);  <span class="comment">// 查看图片顺序</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 小圆点事件 鼠标移入</span></span></span><br><span class="line"><span class="actionscript">    $circles.mouseenter(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 之前图片消失 防流氓，立即切换</span></span></span><br><span class="line"><span class="actionscript">        $imgs.eq(idx).stop(<span class="literal">true</span>).fadeOut(<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 改变信号量</span></span></span><br><span class="line"><span class="javascript">        idx = $(<span class="keyword">this</span>).index();</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前图片出现 防流氓，立即切换</span></span></span><br><span class="line"><span class="actionscript">        $imgs.eq(idx).stop(<span class="literal">true</span>).fadeIn(<span class="number">600</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前小圆点加cur</span></span></span><br><span class="line"><span class="javascript">        $(<span class="keyword">this</span>).addClass(<span class="string">"cur"</span>).siblings().removeClass(<span class="string">"cur"</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>animate</tag>
      </tags>
  </entry>
  <entry>
    <title>十三、序号的问题</title>
    <url>/post/4b7a96a8.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十三、序号的问题"><a href="#十三、序号的问题" class="headerlink" title="十三、序号的问题"></a>十三、序号的问题</h1><h2 id="13-1-eq"><a href="#13-1-eq" class="headerlink" title="13.1  eq()"></a>13.1 eq()</h2><p>序号从0开始</p><p>eq()：选中元素大队列的排名，<strong>与亲兄弟的排名没有直接关系</strong></p><p>选中元素不同，序号也不同</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击div，让它的第一个儿子变色</span></span><br><span class="line">$(<span class="string">"div"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).children().eq(<span class="number">0</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA78Z6.png" alt="UA78Z6.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"div"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"p"</span>).eq(<span class="number">0</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h2 id="13-2-index-亲兄弟的排名"><a href="#13-2-index-亲兄弟的排名" class="headerlink" title="13.2  index()亲兄弟的排名"></a>13.2 index()亲兄弟的排名</h2><p>index()：表示亲兄弟的排名，无视亲兄弟的类型。只要是同一个父节点就是亲兄弟</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XQUERY"><figure class="iseeu highlight /xquery"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="xml"><span class="tag">&lt;<span class="name">li</span>&gt;</span>0<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>1<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"teshu"</span>&gt;</span>4 点击输出亲兄弟的排名<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">// 点击.teshu，输出它在亲兄弟中的排名 </span><br><span class="line">$(<span class="string">".teshu"</span>).click(<span class="keyword">function</span>()&#123;</span><br><span class="line">    console.log($(this).index());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA7NJe.png" alt="UA7NJe.png"></p><p><strong>index()值非常稳定，无视选择器的各种选择</strong>，在亲兄弟中排名是固定的</p><h2 id="13-3-案例：对应思想"><a href="#13-3-案例：对应思想" class="headerlink" title="13.3  案例：对应思想"></a>13.3 案例：对应思想</h2><h3 id="13-3-1-案例1"><a href="#13-3-1-案例1" class="headerlink" title="13.3.1  案例1"></a>13.3.1 案例1</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击box1中的p，让对应的box2中的p变色</span></span><br><span class="line">$(<span class="string">"#box1 p"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box2 p"</span>).eq($(<span class="keyword">this</span>).index()).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA70sI.png" alt="UA70sI.png"></p><h3 id="13-3-2-案例2：选项卡"><a href="#13-3-2-案例2：选项卡" class="headerlink" title="13.3.2  案例2：选项卡"></a>13.3.2 案例2：选项卡</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">hd</span>" <span class="symbol">id</span>="<span class="symbol">hd</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">span</span> <span class="symbol">class</span>="<span class="symbol">cur</span>"&gt;新闻&lt;/<span class="symbol">span</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">span</span>&gt;体育&lt;/<span class="symbol">span</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">span</span>&gt;时尚&lt;/<span class="symbol">span</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">bd</span>" <span class="symbol">id</span>="<span class="symbol">bd</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">active</span>"&gt;新闻&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span>&gt;体育&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span>&gt;时尚&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">&lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">hd</span>" <span class="symbol">id</span>="<span class="symbol">hd</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">span</span> <span class="symbol">class</span>="<span class="symbol">cur</span>"&gt;新闻&lt;/<span class="symbol">span</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">span</span>&gt;体育&lt;/<span class="symbol">span</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">span</span>&gt;时尚&lt;/<span class="symbol">span</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">bd</span>" <span class="symbol">id</span>="<span class="symbol">bd</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">active</span>"&gt;新闻&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span>&gt;体育&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span>&gt;时尚&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/* 清楚默认样式 */</span><br><span class="line">* &#123;</span><br><span class="line">    margin: <span class="number">0</span>;</span><br><span class="line">    padding: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.box &#123;</span><br><span class="line">    width: <span class="number">300</span>px;</span><br><span class="line">    height: <span class="number">300</span>px;</span><br><span class="line">    border: <span class="number">1</span>px solid #<span class="number">000</span>;</span><br><span class="line">    margin: <span class="number">50</span>px <span class="built_in">auto</span>;</span><br><span class="line">&#125;</span><br><span class="line">.box .hd &#123;</span><br><span class="line">    height: <span class="number">40</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.box .hd span &#123;</span><br><span class="line">    <span class="built_in">float</span>: left;</span><br><span class="line">    width: <span class="number">99</span>px;</span><br><span class="line">    height: <span class="number">39</span>px;</span><br><span class="line">    border-right: <span class="number">1</span>px solid #<span class="number">000</span>;</span><br><span class="line">    border-bottom: <span class="number">1</span>px solid #<span class="number">000</span>;</span><br><span class="line">    line-height: <span class="number">39</span>px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    background-color: #eee;</span><br><span class="line">&#125;</span><br><span class="line">.box .hd span:last-child &#123;</span><br><span class="line">    border-right: none;</span><br><span class="line">&#125;</span><br><span class="line">.box .hd span.cur &#123;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line">.box .bd &#123;</span><br><span class="line">    height: <span class="number">260</span>px;</span><br><span class="line">&#125;</span><br><span class="line">.box .bd div &#123;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br><span class="line">.box .bd div.active &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 当鼠标移入hd里的span，当前span加cur类名，让bd中的div加active类名</span></span><br><span class="line"><span class="comment">// 绑定鼠标移入事件</span></span><br><span class="line">$(<span class="string">"#hd span"</span>).mouseenter(function()&#123;</span><br><span class="line">    <span class="comment">// 当前span加cur</span></span><br><span class="line">    $(<span class="keyword">this</span>).addClass(<span class="string">"cur"</span>);</span><br><span class="line">    <span class="comment">// 排他 让其他兄弟去掉cur</span></span><br><span class="line">    $(<span class="keyword">this</span>).siblings().removeClass(<span class="string">"cur"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// bd中div加active 排他 让其他兄弟去掉active</span></span><br><span class="line">    $(<span class="string">"#bd div"</span>).eq($(<span class="keyword">this</span>).index()).addClass(<span class="string">"active"</span>).siblings().removeClass(<span class="string">"active"</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA7yo8.png" alt="UA7yo8.png"></p><p>解决方法：</p><p><strong>使用节点操作</strong>，在bd中div加active ，排他 让其他兄弟去掉active</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 节点操作</span></span><br><span class="line"><span class="constructor">$(<span class="params">this</span>)</span>.parent(<span class="string">".hd"</span>).siblings(<span class="string">".bd"</span>).children(<span class="string">"div"</span>).eq(<span class="constructor">$(<span class="params">this</span>)</span>.index<span class="literal">()</span>).add<span class="constructor">Class(<span class="string">"active"</span>)</span>.siblings<span class="literal">()</span>.remove<span class="constructor">Class(<span class="string">"active"</span>)</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA7Rzj.png" alt="UA7Rzj.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 连续打点写法</span></span><br><span class="line"><span class="constructor">$(<span class="string">"#hd span"</span>)</span>.mouseenter(<span class="keyword">function</span> <span class="literal">()</span> &#123;</span><br><span class="line">    <span class="constructor">$(<span class="params">this</span>)</span>.add<span class="constructor">Class(<span class="string">"cur"</span>)</span></span><br><span class="line">    .siblings<span class="literal">()</span>.remove<span class="constructor">Class(<span class="string">"cur"</span>)</span></span><br><span class="line">    .parent<span class="literal">()</span>.siblings<span class="literal">()</span>.children<span class="literal">()</span>.eq(<span class="constructor">$(<span class="params">this</span>)</span>.index<span class="literal">()</span>)</span><br><span class="line">    .add<span class="constructor">Class(<span class="string">"active"</span>)</span>.siblings<span class="literal">()</span>.remove<span class="constructor">Class(<span class="string">"active"</span>)</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h2 id="13-3-each-每一个"><a href="#13-3-each-每一个" class="headerlink" title="13.3  each()每一个"></a>13.3 each()每一个</h2><p><strong>只要看到“每一个”要做什么事情，首先要想到each()方法</strong></p><ul><li><p>each()：表示“每一个”。</p><ul><li><p>用于循环、遍历所匹配到的每一个元素。</p></li><li><p>接收一个参数就是：匿名函数</p></li></ul></li></ul><h3 id="13-3-1-函数当中有一个this，表示遍历到的该对象"><a href="#13-3-1-函数当中有一个this，表示遍历到的该对象" class="headerlink" title="13.3.1  函数当中有一个this，表示遍历到的该对象"></a>13.3.1 函数当中有一个this，表示遍历到的该对象</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 让每一个div中的第一个儿子颜色改变</span></span><br><span class="line">$(<span class="string">"div"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).children().eq(<span class="number">0</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA7HFU.png" alt="UA7HFU.png"></p><h4 id="案例：隔列变色"><a href="#案例：隔列变色" class="headerlink" title="案例：隔列变色"></a>案例：隔列变色</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 隔列变色 每一行的偶数（even 从0开始数）列改为red，奇数（odd）列改为blue</span></span><br><span class="line">$(<span class="string">"tr"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).children(<span class="string">"td:even"</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>);</span><br><span class="line">    $(<span class="keyword">this</span>).children(<span class="string">"td:odd"</span>).css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA7qW4.png" alt="UA7qW4.png"></p><h3 id="13-3-2-函数中有一个参数i（index），表示遍历到该对象的序号"><a href="#13-3-2-函数中有一个参数i（index），表示遍历到该对象的序号" class="headerlink" title="13.3.2  函数中有一个参数i（index），表示遍历到该对象的序号"></a>13.3.2 函数中有一个参数i（index），表示遍历到该对象的序号</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 输出函数中的参数 i</span></span><br><span class="line">$(<span class="string">".teshu"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAjn7n.png" alt="UAjn7n.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>序号</tag>
      </tags>
  </entry>
  <entry>
    <title>十二、节点操作</title>
    <url>/post/6a1204b9.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十二、节点操作"><a href="#十二、节点操作" class="headerlink" title="十二、节点操作"></a>十二、节点操作</h1><h2 id="12-1-this-触发事件的对象"><a href="#12-1-this-触发事件的对象" class="headerlink" title="12.1  this 触发事件的对象"></a>12.1 this 触发事件的对象</h2><p>this在js中表示触发事件的对象。</p><ul><li><p>在jquery中有三个是不需要添加双引号的</p><ul><li><p>$(this)</p></li><li><p>$(document)</p></li><li><p>$(window)</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击哪个p，让哪个p背景颜色改变</span></span><br><span class="line">$(<span class="string">"p"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// pink 为 rgb(255, 192, 203)</span></span><br><span class="line">    <span class="keyword">if</span>($(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>) == <span class="string">"rgb(255, 192, 203)"</span>)&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>,<span class="string">"pink"</span>);</span><br><span class="line">    &#125;;   </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UATcvR.png" alt="UATcvR.png"></p><h2 id="12-2-parent-父节点"><a href="#12-2-parent-父节点" class="headerlink" title="12.2  parent()父节点"></a>12.2 parent()父节点</h2><p>parent()：</p><blockquote><p>父节点 只会选中父元素，不会选中其他祖先元素</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击哪个p，让它的父节点背景色改变</span></span><br><span class="line">$(<span class="string">"p"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).parent().css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAThVK.png" alt="UAThVK.png"></p><h2 id="12-3-siblings-兄弟节点"><a href="#12-3-siblings-兄弟节点" class="headerlink" title="12.3  siblings() 兄弟节点"></a>12.3 siblings() 兄弟节点</h2><p>siblings()：</p><blockquote><p>兄弟节点（同一个父元素）</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击哪个p，让它的亲兄弟背景色改变</span></span><br><span class="line">$(<span class="string">"p"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).siblings().css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>h3为行内元素</p><p><img src="https://s1.ax1x.com/2020/07/07/UAT72d.png" alt="UAT72d.png"></p><h2 id="12-4-children-儿子节点"><a href="#12-4-children-儿子节点" class="headerlink" title="12.4  children() 儿子节点"></a>12.4 children() 儿子节点</h2><p>children() ：</p><blockquote><p>所有亲儿子节点</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击哪个div，让它的所有亲儿子背景色改变</span></span><br><span class="line">$(<span class="string">"div"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).children().css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UATqKI.png" alt="UATqKI.png"></p><h2 id="12-5-不常用的节点操作"><a href="#12-5-不常用的节点操作" class="headerlink" title="12.5  不常用的节点操作"></a>12.5 不常用的节点操作</h2><h3 id="12-5-1-next-下一个兄弟节点"><a href="#12-5-1-next-下一个兄弟节点" class="headerlink" title="12.5.1  next() 下一个兄弟节点"></a>12.5.1 next() 下一个兄弟节点</h3><p>next() 下一个兄弟节点</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击哪个div，让它的下一个兄弟背景色改变</span></span><br><span class="line">$(<span class="string">"div"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).next().css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UATOqP.png" alt="UATOqP.png"></p><h3 id="12-5-2-nextAll-后面所有兄弟节点"><a href="#12-5-2-nextAll-后面所有兄弟节点" class="headerlink" title="12.5.2  nextAll() 后面所有兄弟节点"></a>12.5.2 nextAll() 后面所有兄弟节点</h3><p>nextAll() 后面所有兄弟节点</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击哪个p，让它的后面所有兄弟背景色改变</span></span><br><span class="line">$(<span class="string">"p"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).nextAll().css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UATva8.png" alt="UATva8.png"></p><h3 id="12-5-3-prev-上一个兄弟节点"><a href="#12-5-3-prev-上一个兄弟节点" class="headerlink" title="12.5.3  prev() 上一个兄弟节点"></a>12.5.3 prev() 上一个兄弟节点</h3><p>prev()：</p><blockquote><p>上一个兄弟节点</p></blockquote><h3 id="12-5-4-prevAll-前面所有兄弟节点"><a href="#12-5-4-prevAll-前面所有兄弟节点" class="headerlink" title="12.5.4  prevAll() 前面所有兄弟节点"></a>12.5.4 prevAll() 前面所有兄弟节点</h3><p>prevAll()：</p><blockquote><p>前面所有兄弟节点</p></blockquote><h3 id="12-5-5-parents-所有祖先节点"><a href="#12-5-5-parents-所有祖先节点" class="headerlink" title="12.5.5  parents() 所有祖先节点"></a>12.5.5 parents() 所有祖先节点</h3><p>parents()：</p><blockquote><p>所有祖先节点，也可以传递参数，指定父节点</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击哪个p，让它的所有所有祖先节点背景色改变</span></span><br><span class="line">$(<span class="string">"p"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).parents().css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA7iMn.png" alt="UA7iMn.png"></p><h3 id="12-5-6-find-所有后代节点"><a href="#12-5-6-find-所有后代节点" class="headerlink" title="12.5.6  find() 所有后代节点"></a>12.5.6 find() 所有后代节点</h3><p>find() ：</p><blockquote><p>所有后代节点，可以传递参数，指定儿子节点</p></blockquote><p><strong><code>()</code>内必须有参数，否则无效</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#body"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).find(<span class="string">"div"</span>).css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>); </span><br><span class="line">    $(<span class="keyword">this</span>).find(<span class="string">"p"</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>); </span><br><span class="line">    $(<span class="keyword">this</span>).find(<span class="string">"h3"</span>).css(<span class="string">"background-color"</span>,<span class="string">"orange"</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA7VaT.png" alt="UA7VaT.png"></p><h2 id="12-6-练习：连续打点"><a href="#12-6-练习：连续打点" class="headerlink" title="12.6  练习：连续打点"></a>12.6 练习：连续打点</h2><h3 id="12-6-1-分条书写"><a href="#12-6-1-分条书写" class="headerlink" title="12.6.1  分条书写"></a>12.6.1 分条书写</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">    要求：</span></span><br><span class="line"><span class="comment">        点击p，让p元素的背景颜色改变        red</span></span><br><span class="line"><span class="comment">        让p元素的兄弟背景色改变             green</span></span><br><span class="line"><span class="comment">        让p元素的父亲背景颜色改变           orange</span></span><br><span class="line"><span class="comment">        让p元素的父亲的兄弟背景颜色改变      blue</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">$(<span class="string">"p"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>);</span><br><span class="line">    $(<span class="keyword">this</span>).siblings().css(<span class="string">"background-color"</span>,<span class="string">"green"</span>);</span><br><span class="line">    $(<span class="keyword">this</span>).parent().css(<span class="string">"background-color"</span>,<span class="string">"orange"</span>);</span><br><span class="line">    $(<span class="keyword">this</span>).parent().siblings().css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA7Kz9.png" alt="UA7Kz9.png"></p><h3 id="12-6-2-连续打点"><a href="#12-6-2-连续打点" class="headerlink" title="12.6.2  连续打点"></a>12.6.2 连续打点</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>)</span><br><span class="line">    .siblings().css(<span class="string">"background-color"</span>,<span class="string">"green"</span>)</span><br><span class="line">    .parent().css(<span class="string">"background-color"</span>,<span class="string">"orange"</span>)</span><br><span class="line">    .siblings().css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>节点操作</tag>
      </tags>
  </entry>
  <entry>
    <title>十一、常用方法</title>
    <url>/post/a07ba860.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十一、常用方法"><a href="#十一、常用方法" class="headerlink" title="十一、常用方法"></a>十一、常用方法</h1><h2 id="11-1-size"><a href="#11-1-size" class="headerlink" title="11.1  size()"></a>11.1 <code>size()</code></h2><p><code>size()</code>：可以获取元素对象的个数。</p><p>没有参数。</p><p>返回的是包含元素对象的个数，是字符串类型</p><p><strong><code>.size()</code>方法从<code>jQuery 1.8</code>开始被<code>废弃</code>，要用<code>.length</code>代替。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MEL"><figure class="iseeu highlight /mel"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 输出所有p元素的个数</span></span><br><span class="line">console.<span class="keyword">log</span>($(<span class="string">"p"</span>).<span class="keyword">size</span>());  <span class="comment">//jquery-3.4.1.min.js  报错 </span></span><br><span class="line"><span class="comment">// 常用的是length属性</span></span><br><span class="line">console.<span class="keyword">log</span>($(<span class="string">"p"</span>).length);  <span class="comment">// 7</span></span><br></pre></td></tr></table></figure></div><h2 id="11-2-css"><a href="#11-2-css" class="headerlink" title="11.2  css()"></a>11.2 <code>css()</code></h2><h3 id="11-2-1-css-：可以读取元素计算后的样式属性"><a href="#11-2-1-css-：可以读取元素计算后的样式属性" class="headerlink" title="11.2.1  css()：可以读取元素计算后的样式属性"></a>11.2.1 <code>css()</code>：可以读取元素计算后的样式属性</h3><ul><li><p>参数：要读取的属性名。</p></li><li><p>返回值：属性值，是字符串类型。</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 读取特殊元素的宽度</span></span><br><span class="line">console.<span class="built-in">log</span>(<span class="symbol">$</span>(<span class="string">"p.teshu"</span>).css(<span class="string">"width"</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAcyI1.png" alt="UAcyI1.png"></p><h3 id="11-2-2-css-：可以设置元素对象的样式属性"><a href="#11-2-2-css-：可以设置元素对象的样式属性" class="headerlink" title="11.2.2  css()：可以设置元素对象的样式属性"></a>11.2.2 <code>css()</code>：可以设置元素对象的样式属性</h3><h4 id="11-2-2-1-可以设置单一属性"><a href="#11-2-2-1-可以设置单一属性" class="headerlink" title="11.2.2.1  可以设置单一属性"></a>11.2.2.1 可以设置单一属性</h4><ul><li><p>对象.css(“k”,“v”);</p><ul><li><p>k：要设置的属性名</p></li><li><p>v：设置的属性值</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置单一属性</span></span><br><span class="line">$(<span class="string">".teshu"</span>).css(<span class="string">"backgroundColor"</span>,<span class="string">"red"</span>);</span><br><span class="line">$(<span class="string">".teshu"</span>).css(<span class="string">"width"</span>,<span class="number">150</span>);        <span class="comment">// 省略单位，不能加双引号</span></span><br><span class="line">$(<span class="string">".teshu"</span>).css(<span class="string">"height"</span>,<span class="string">"150px"</span>);   <span class="comment">// 不省略单位，必须加双引号</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAcfMD.png" alt="UAcfMD.png"></p><h4 id="11-2-2-2-设置多个属性"><a href="#11-2-2-2-设置多个属性" class="headerlink" title="11.2.2.2  设置多个属性"></a>11.2.2.2 设置多个属性</h4><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">    对象.css(&#123;</span><br><span class="line">        k : <span class="type">v</span>,</span><br><span class="line">        k : <span class="type">v</span>,</span><br><span class="line">        k : <span class="type">v</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">// 设置多个属性</span><br><span class="line">$(<span class="string">".teshu"</span>).css(&#123;</span><br><span class="line">    <span class="string">"width"</span> : 300,</span><br><span class="line">    <span class="string">"height"</span> : "200<span class="type">px</span><span class="string">",</span></span><br><span class="line"><span class="string">    "</span>backgroundColor<span class="string">" : "</span>blue<span class="string">"</span></span><br><span class="line"><span class="string">&#125;);</span></span><br></pre></td></tr></table></figure></div><p>改成单一属性为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 等价方式</span></span><br><span class="line">$(<span class="string">".teshu"</span>).css(<span class="string">"width"</span>,<span class="number">300</span>);</span><br><span class="line">$(<span class="string">".teshu"</span>).css(<span class="string">"height"</span>,<span class="string">"200px"</span>);</span><br><span class="line">$(<span class="string">".teshu"</span>).css(<span class="string">"backgroundColor"</span>,<span class="string">"blue"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAcLz8.png" alt="UAcLz8.png"></p><h2 id="11-3-jquery绑定事件的方式"><a href="#11-3-jquery绑定事件的方式" class="headerlink" title="11.3  jquery绑定事件的方式"></a>11.3 jquery绑定事件的方式</h2><p>jquery绑定事件的方式有2种</p><h3 id="11-3-1-方式一：-dom-on-type-fn"><a href="#11-3-1-方式一：-dom-on-type-fn" class="headerlink" title="11.3.1  方式一：$(dom).on(type,fn)"></a>11.3.1 方式一：<code>$(dom).on(type,fn)</code></h3><ul><li><p>$(dom).on(type,fn)</p><ul><li><p>type：事件类型</p></li><li><p>fn：匿名函数</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">&lt;button id=<span class="string">"btn1"</span>&gt;点我增加宽度&lt;/button&gt;</span><br><span class="line">&lt;button id=<span class="string">"btn2"</span>&gt;点我减小宽度&lt;/button&gt;</span><br><span class="line">&lt;div id=<span class="string">"box"</span> <span class="keyword">class</span>=<span class="string">"box"</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加点击事件</span></span><br><span class="line"><span class="constructor">$(<span class="string">"#btn1"</span>)</span>.on(<span class="string">"click"</span>,<span class="keyword">function</span><span class="literal">()</span>&#123;</span><br><span class="line">    <span class="comment">// css()的特殊用法</span></span><br><span class="line">    <span class="constructor">$(<span class="string">"#box"</span>)</span>.css(<span class="string">"width"</span>,<span class="string">"+=30px"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="constructor">$(<span class="string">"#btn2"</span>)</span>.on(<span class="string">"click"</span>,<span class="keyword">function</span><span class="literal">()</span>&#123;</span><br><span class="line">    <span class="comment">// css()的特殊用法</span></span><br><span class="line">    <span class="constructor">$(<span class="string">"#box"</span>)</span>.css(<span class="string">"width"</span>,<span class="string">"-=30px"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAgAQU.png" alt="UAgAQU.png"></p><h3 id="11-3-2-方式二：对象-click-function"><a href="#11-3-2-方式二：对象-click-function" class="headerlink" title="11.3.2  方式二：对象.click(function(){})"></a>11.3.2 方式二：<code>对象.click(function(){})</code></h3><ul><li><p>对象.click(function(){})</p><ul><li>参数：匿名函数</li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).css(<span class="string">"width"</span>,<span class="string">"+=30px"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h2 id="11-4-show-和hide-和toggle"><a href="#11-4-show-和hide-和toggle" class="headerlink" title="11.4  show()和hide()和toggle()"></a>11.4 show()和hide()和toggle()</h2><h3 id="11-4-1-show-显示的意思"><a href="#11-4-1-show-显示的意思" class="headerlink" title="11.4.1  show()显示的意思"></a>11.4.1 show()显示的意思</h3><p>show()：显示的意思。</p><p>只有当元素的状态是<code>display:none;</code>的时候才可以使用，最终状态是<code>display:block;</code></p><p>可以不写参数，表示“干嘣”效果。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).show();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAgaFI.png" alt="UAgaFI.png"></p><p>还可以写参数，参数就是要完成动画的时间，单位<code>ms</code>，<code>省略不写</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).show(<span class="number">2000</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA5PHS.png" alt="UA5PHS.png"></p><h3 id="11-4-2-hide-隐藏的意思"><a href="#11-4-2-hide-隐藏的意思" class="headerlink" title="11.4.2  hide()隐藏的意思"></a>11.4.2 hide()隐藏的意思</h3><p>hide()：隐藏的意思。</p><p>只有当元素的状态是<code>display:block;</code> 的时候才可以使用，最终状态是<code>display:none;</code></p><p>可以不写参数，表示“干嘣”效果。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).hide();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA5MHU.png" alt="UA5MHU.png"></p><p>还可以写参数，参数就是要完成动画的时间，单位ms，省略不写</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MEL"><figure class="iseeu highlight /mel"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).<span class="keyword">hide</span>(<span class="number">2000</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA5aDK.png" alt="UA5aDK.png"></p><h3 id="11-4-3-toggle-显示、消失切换"><a href="#11-4-3-toggle-显示、消失切换" class="headerlink" title="11.4.3  toggle() 显示、消失切换"></a>11.4.3 toggle() 显示、消失切换</h3><ul><li><p>toggle() ：显示、消失切换</p><ul><li><p>不写参数，也是“干嘣”效果</p></li><li><p>书写参数，单位ms，省略不写</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).toggle();</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).toggle(<span class="number">2000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA5qK0.png" alt="UA5qK0.png"></p><h2 id="11-5-slideDown-和slideUp-和slideToggle"><a href="#11-5-slideDown-和slideUp-和slideToggle" class="headerlink" title="11.5  slideDown()和slideUp()和slideToggle()"></a>11.5 slideDown()和slideUp()和slideToggle()</h2><h3 id="11-5-1-slideDown-和slideUp"><a href="#11-5-1-slideDown-和slideUp" class="headerlink" title="11.5.1  slideDown()和slideUp()"></a>11.5.1 slideDown()和slideUp()</h3><ul><li><p>slideDown()：慢慢展开</p><ul><li><p>只有当元素的状态是display:none;的时候才可以调用，当元素调用该方法的时候，元素的height瞬间为0。</p></li><li><p>然后慢慢的以动画的形式变到元素的初始height。</p></li><li><p>最终状态是display:block;</p></li></ul></li><li><p>slideUp()：徐徐合起</p><ul><li>与slideDown()相反</li></ul></li><li><p><strong>可以不写参数，也是动画的效果，默认是400ms。</strong></p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).slideDown();</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).slideUp();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAI0s0.png" alt="UAI0s0.png"></p><p>可以书写参数，参数就是完成动画的时间，单位ms，省略不写</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="constructor">$(<span class="string">"#box"</span>)</span>.slide<span class="constructor">Down(3000)</span>;</span><br><span class="line"></span><br><span class="line"><span class="constructor">$(<span class="string">"#box"</span>)</span>.slide<span class="constructor">Up(3000)</span>;</span><br></pre></td></tr></table></figure></div><h3 id="11-5-2-slideDown-不一定向下展开"><a href="#11-5-2-slideDown-不一定向下展开" class="headerlink" title="11.5.2  slideDown() 不一定向下展开"></a>11.5.2 slideDown() 不一定向下展开</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">"box"</span> <span class="keyword">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span> <span class="symbol">id</span>="<span class="symbol">p1</span>"&gt;文字文字文字文字文字文字文字文字文字文字文字&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="symbol">div</span> &#123;</span><br><span class="line">    width: <span class="number">153</span>px;</span><br><span class="line">    height: <span class="number">340</span>px;</span><br><span class="line">    border: <span class="number">1</span>px solid #<span class="number">000</span>;</span><br><span class="line">    margin: <span class="number">10</span>px <span class="built_in">auto</span>;</span><br><span class="line">    background: url(images/girl.png);</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">    height: <span class="number">70</span>px;</span><br><span class="line">    background-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">.5</span>);</span><br><span class="line">    color: #fff;</span><br><span class="line">    left: <span class="number">0</span>;</span><br><span class="line">    bottom: <span class="number">0</span>;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加鼠标进入、离开事件</span></span><br><span class="line">$(<span class="string">"#box"</span>).mouseenter(function()&#123;</span><br><span class="line">    $(<span class="string">"#p1"</span>).slideDown(<span class="number">2000</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#box"</span>).mouseleave(function()&#123;</span><br><span class="line">    $(<span class="string">"#p1"</span>).slideUp(<span class="number">2000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAIci4.png" alt="UAIci4.png"></p><h3 id="11-5-3-slideToggle-切换展开、合起"><a href="#11-5-3-slideToggle-切换展开、合起" class="headerlink" title="11.5.3  slideToggle()切换展开、合起"></a>11.5.3 slideToggle()切换展开、合起</h3><p><strong>可以不写参数，也是动画的效果，默认是400ms。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="constructor">$(<span class="string">"#box"</span>)</span>.slide<span class="constructor">Toggle()</span>;</span><br></pre></td></tr></table></figure></div><p><strong>可以书写参数，参数就是完成动画的时间，单位ms，省略不写</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="constructor">$(<span class="string">"#box"</span>)</span>.slide<span class="constructor">Toggle(3000)</span>;</span><br></pre></td></tr></table></figure></div><h2 id="11-6-fadeIn-和fadeOut-和fadeToggle-和fadeTo-淡入和淡出"><a href="#11-6-fadeIn-和fadeOut-和fadeToggle-和fadeTo-淡入和淡出" class="headerlink" title="11.6  fadeIn()和fadeOut()和fadeToggle()和fadeTo()淡入和淡出"></a>11.6 fadeIn()和fadeOut()和fadeToggle()和fadeTo()淡入和淡出</h2><h3 id="11-6-1-fadeIn-和fadeOut"><a href="#11-6-1-fadeIn-和fadeOut" class="headerlink" title="11.6.1  fadeIn()和fadeOut()"></a>11.6.1 fadeIn()和fadeOut()</h3><ul><li><p><strong>可以不书写参数，默认是400ms。也可以书写参数，自定义时间</strong></p></li><li><p>fadeIn()：淡入</p><ul><li><p>只有当元素的状态是display:none;的时候才可以调用，当元素调用该方法的时候，元素的opacity:0;慢慢的以动画的形式变到元素的opacity:1;。</p></li><li><p>最终状态是display:block;</p></li></ul></li><li><p>fadeout()：淡出</p><ul><li>与fadeIn()相反</li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    width: <span class="number">100</span>px;</span><br><span class="line">    height: <span class="number">100</span>px;</span><br><span class="line">    background-color: red;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).fadeIn(<span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).fadeOut(<span class="number">3000</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAIvOP.png" alt="UAIvOP.png"></p><h3 id="11-6-2-fadeToggle-切换淡入淡出"><a href="#11-6-2-fadeToggle-切换淡入淡出" class="headerlink" title="11.6.2  fadeToggle() 切换淡入淡出"></a>11.6.2 fadeToggle() 切换淡入淡出</h3><p>可以不书写参数，默认是<code>400ms</code>。也可以书写参数，自定义时间</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="constructor">$(<span class="string">"#box"</span>)</span>.fade<span class="constructor">Toggle()</span>;</span><br><span class="line"></span><br><span class="line"><span class="constructor">$(<span class="string">"#box"</span>)</span>.fade<span class="constructor">Toggle(3000)</span>;</span><br></pre></td></tr></table></figure></div><h3 id="11-6-3-fadeTo-淡入淡出到指定透明度"><a href="#11-6-3-fadeTo-淡入淡出到指定透明度" class="headerlink" title="11.6.3  fadeTo()淡入淡出到指定透明度"></a>11.6.3 fadeTo()淡入淡出到指定透明度</h3><ul><li><p>fadeTo(1000,0.5)：</p><ul><li><p>第一个参数：动画完成时间</p></li><li><p>第二个参数：指定透明度</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#btn3"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).fadeTo(<span class="number">1000</span>,<span class="number">0.5</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAoemV.png" alt="UAoemV.png"></p><h2 id="11-7-案例：简易呼吸轮播图"><a href="#11-7-案例：简易呼吸轮播图" class="headerlink" title="11.7  案例：简易呼吸轮播图"></a>11.7 案例：简易呼吸轮播图</h2><p><img src="https://s1.ax1x.com/2020/07/07/UAoMY4.png" alt="UAoMY4.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"imgs"</span> <span class="attr">id</span>=<span class="string">"imgs"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btns"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">id</span>=<span class="string">"leftBtn"</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span> <span class="attr">id</span>=<span class="string">"rightBtn"</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    ul &#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line">    a &#123;</span><br><span class="line">        text-decoration: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">        width: 220px;</span><br><span class="line">        height: 150px;</span><br><span class="line">        margin: 50px auto;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">        position: relative;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* 呼吸轮播图的关键是所有图片摞在一起 */</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.imgs</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-class">.imgs</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">        display: block;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">        position: absolute;</span><br><span class="line">        width: 20px;</span><br><span class="line">        height: 40px;</span><br><span class="line">        top: 50%;</span><br><span class="line">        margin-top: -20px;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.5</span>);</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">        font-size: 20px;</span><br><span class="line">        line-height: 40px;</span><br><span class="line">        text-align: center;</span><br><span class="line"><span class="css">        <span class="comment">/* 大于小于号开口变大 */</span></span></span><br><span class="line">        font-family: consolas;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">        left: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.btns</span> <span class="selector-tag">a</span><span class="selector-pseudo">:last-child</span> &#123;</span></span><br><span class="line">        right: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素 命名时加上$提醒我们是一个jquery对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $leftBtn = $(<span class="string">"#leftBtn"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $rightBtn = $(<span class="string">"#rightBtn"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> $imgs = $(<span class="string">"#imgs ul li"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义length</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> length = $imgs.length;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义信号量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> idx = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 右按钮点击事件</span></span></span><br><span class="line"><span class="actionscript">    $rightBtn.click(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前图片淡出</span></span></span><br><span class="line">        $imgs.eq(idx).fadeOut(600);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 信号量改变</span></span></span><br><span class="line">        idx ++;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 边界判定</span></span></span><br><span class="line">        if(idx &gt; length - 1)&#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// idx归0</span></span></span><br><span class="line">            idx = 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 下一张图片淡入</span></span></span><br><span class="line">        $imgs.eq(idx).fadeIn(600);</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(idx);  <span class="comment">// 查看图片顺序</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 左按钮点击事件</span></span></span><br><span class="line"><span class="actionscript">    $leftBtn.click(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 当前图片淡出</span></span></span><br><span class="line">        $imgs.eq(idx).fadeOut(600);</span><br><span class="line"><span class="actionscript">        <span class="comment">// 信号量改变</span></span></span><br><span class="line">        idx --;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 边界判定</span></span></span><br><span class="line">        if(idx &lt; 0)&#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">// idx归0</span></span></span><br><span class="line">            idx = length - 1;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 下一张图片淡入</span></span></span><br><span class="line">        $imgs.eq(idx).fadeIn(600);</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(idx);  <span class="comment">// 查看图片顺序</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="11-8-html-方法"><a href="#11-8-html-方法" class="headerlink" title="11.8  html()方法"></a>11.8 html()方法</h2><h3 id="11-8-1-获取内部文本"><a href="#11-8-1-获取内部文本" class="headerlink" title="11.8.1  获取内部文本"></a>11.8.1 获取内部文本</h3><p>html()：可以获取元素的内部文本，不需要书写参数。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取box的内部文本</span></span><br><span class="line">console.<span class="built-in">log</span>(<span class="symbol">$</span>(<span class="string">"#box"</span>).html());</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAo4pj.png" alt="UAo4pj.png"></p><h3 id="11-8-2-设置内部文本"><a href="#11-8-2-设置内部文本" class="headerlink" title="11.8.2  设置内部文本"></a>11.8.2 设置内部文本</h3><p>html()：设置元素的内部文本，参数就是要设置的内容</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 改变box的内部文本</span></span><br><span class="line">$(<span class="string">"#box"</span>).html(<span class="string">"改变内部文本"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAoXh4.png" alt="UAoXh4.png"></p><h3 id="11-8-3-添加节点"><a href="#11-8-3-添加节点" class="headerlink" title="11.8.3  添加节点"></a>11.8.3 添加节点</h3><p>html():还可以添加节点</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">// 添加节点</span><br><span class="line">$("#box").html("<span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span>第1行<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span>第2行<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span>第3行<span class="tag">&lt;/<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span>");</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAT9nx.png" alt="UAT9nx.png"></p><h2 id="11-9-addClass-和removeClass-添加删除类名"><a href="#11-9-addClass-和removeClass-添加删除类名" class="headerlink" title="11.9  addClass()和removeClass()添加删除类名"></a>11.9 addClass()和removeClass()添加删除类名</h2><ul><li><p>addClass()：添加类名</p></li><li><p>removeClass()：删除类名</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">    width: <span class="number">150</span>px;</span><br><span class="line">    height: <span class="number">150</span>px;</span><br><span class="line">    background-color: pink;</span><br><span class="line">&#125;</span><br><span class="line">.red &#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br><span class="line">.fz &#123;</span><br><span class="line">    font-style: <span class="number">30</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加类名</span></span><br><span class="line">$(<span class="string">"#btn1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 类名前不加 .  添加多个类名，中间用空格隔开</span></span><br><span class="line">    $(<span class="string">"#box"</span>).addClass(<span class="string">"red fz"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 添加类名</span></span><br><span class="line">$(<span class="string">"#btn2"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#box"</span>).removeClass(<span class="string">"red"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UATFAO.png" alt="UATFAO.png"></p><h2 id="11-10-attr-设置元素的原有属性"><a href="#11-10-attr-设置元素的原有属性" class="headerlink" title="11.10  attr()设置元素的原有属性"></a>11.10 attr()设置元素的原有属性</h2><p>attr()：可以设置元素的原有属性</p><ul><li><p>使用方式：</p><ul><li><p>对象.attr(k,v)</p><ul><li><p>k : 要设置的属性名</p></li><li><p>v : 属性值</p></li></ul></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#box"</span>).mouseenter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#pic"</span>).attr(<span class="string">"src"</span>,<span class="string">"images/03.jpeg"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>当设置一个参数的时候，表示读取：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line">console.<span class="built-in">log</span>(<span class="symbol">$</span>(<span class="string">"#pic"</span>).attr(<span class="string">"src"</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UATtvn.png" alt="UATtvn.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>十、$函数</title>
    <url>/post/2a49b14a.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十、-函数"><a href="#十、-函数" class="headerlink" title="十、$函数"></a>十、$函数</h1><h2 id="10-1-jquery对象"><a href="#10-1-jquery对象" class="headerlink" title="10.1  jquery对象"></a>10.1 jquery对象</h2><ul><li><p>jquery是js库，如果想要使用，要先引入。引入之后，才可以使用里面的各种各样的方法。</p></li><li><p>会向全局暴露一个$()函数，所以我们书写jquery的所有语句都是以$开头。</p></li><li><p>jquery有很多方法，我们可以接着打点调用其他方法。</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> p1 = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="comment">// 通过js获取第一个p的内部文本</span></span><br><span class="line"><span class="built_in">console</span>.log(p1.innerHTML);</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用jquery获取元素内部文本</span></span><br><span class="line"><span class="built_in">console</span>.log($(<span class="string">"p.teshu"</span>).html());</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAyWY6.png" alt="UAyWY6.png"></p><h3 id="10-1-1-JS对象与jQuery对象互相转换"><a href="#10-1-1-JS对象与jQuery对象互相转换" class="headerlink" title="10.1.1  JS对象与jQuery对象互相转换"></a>10.1.1 JS对象与jQuery对象互相转换</h3><p>获取内部文本：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MIPSASM"><figure class="iseeu highlight /mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">js： </span>     p1.innerHTML</span><br><span class="line"></span><br><span class="line"><span class="keyword">jquery： </span> $(<span class="string">"p.teshu"</span>).html()</span><br></pre></td></tr></table></figure></div><h4 id="10-1-1-1-Js对象转为jQuery对象"><a href="#10-1-1-1-Js对象转为jQuery对象" class="headerlink" title="10.1.1.1  Js对象转为jQuery对象"></a>10.1.1.1 Js对象转为jQuery对象</h4><p>直接使用$()</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="constructor">$(<span class="params">p1</span>)</span>.html(<span class="string">"今天天气不错"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA6AhV.png" alt="UA6AhV.png"></p><h4 id="10-1-1-2-jQuery对象转为Js对象"><a href="#10-1-1-2-jQuery对象转为Js对象" class="headerlink" title="10.1.1.2  jQuery对象转为Js对象"></a>10.1.1.2 jQuery对象转为Js对象</h4><p>直接使用[]</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line">$(<span class="string">".teshu"</span>)[<span class="number">0</span>].innerHTML = <span class="string">"p元素"</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA6J1O.png" alt="UA6J1O.png"></p><h2 id="10-2-选择器"><a href="#10-2-选择器" class="headerlink" title="10.2  选择器"></a>10.2 选择器</h2><p>jquery非常好用的一点就是选择器，直接使用CSS选择器即可选中元素</p><h3 id="10-2-1-支持CSS2-1选择器"><a href="#10-2-1-支持CSS2-1选择器" class="headerlink" title="10.2.1  支持CSS2.1选择器"></a>10.2.1 支持CSS2.1选择器</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XQUERY"><figure class="iseeu highlight /xquery"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span>我是一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span>我是另一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>h4<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>h3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">// css2.<span class="number">1</span>选择器 类<span class="built_in"> id</span> 标签 通配符 后代 交集 并集</span><br><span class="line">$(<span class="string">".box"</span>).css(<span class="string">"color"</span>,<span class="string">"red"</span>);</span><br><span class="line">$(<span class="string">"#box"</span>).css(<span class="string">"backgroundColor"</span>,<span class="string">"pink"</span>);</span><br><span class="line">$(<span class="string">"div"</span>).css(<span class="string">"font-size"</span>,<span class="string">"40px"</span>);</span><br><span class="line">$(<span class="string">"*"</span>).css(<span class="string">"paddingLeft"</span>,<span class="string">"40px"</span>);</span><br><span class="line">$(<span class="string">"div.box2 h4"</span>).css(<span class="string">"color"</span>,<span class="string">"red"</span>);</span><br><span class="line">$(<span class="string">"h3,p"</span>).css(<span class="string">"color"</span>,<span class="string">"blue"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA6BNt.png" alt="UA6BNt.png"></p><h3 id="10-2-2-支持CSS3选择器"><a href="#10-2-2-支持CSS3选择器" class="headerlink" title="10.2.2  支持CSS3选择器"></a>10.2.2 支持CSS3选择器</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PERL"><figure class="iseeu highlight /perl"><table><tr><td class="code"><pre><span class="line">// css3选择器 序选择器 小于 大于 偶数 奇数</span><br><span class="line">$(<span class="string">"p:first"</span>).css(<span class="string">"color"</span>,<span class="string">"red"</span>);</span><br><span class="line">$(<span class="string">"p:last"</span>).css(<span class="string">"color"</span>,<span class="string">"blue"</span>);</span><br><span class="line">$(<span class="string">"p:eq(3)"</span>).css(<span class="string">"color"</span>,<span class="string">"orange"</span>);  <span class="regexp">//</span> :e<span class="string">q(3)</span>表示从<span class="number">0</span>开始数，第<span class="number">3</span>个</span><br><span class="line">$(<span class="string">"p"</span>).e<span class="string">q(4)</span>.css(<span class="string">"width"</span>,<span class="string">"300px"</span>);   <span class="regexp">//</span> .e<span class="string">q()</span></span><br><span class="line">$(<span class="string">"p:lt(2)"</span>).css(<span class="string">"width"</span>,<span class="string">"100px"</span>);   <span class="regexp">//</span> :<span class="keyword">lt</span>(<span class="number">2</span>) 小于 表示选择了<span class="number">0</span>,<span class="number">1</span></span><br><span class="line">$(<span class="string">"p:gt(4)"</span>).css(<span class="string">"width"</span>,<span class="string">"100px"</span>);   <span class="regexp">//</span> :<span class="keyword">lt</span>(<span class="number">4</span>) 大于 表示选择了<span class="number">5</span>,……</span><br><span class="line">$(<span class="string">"p:odd"</span>).css(<span class="string">"backgroundColor"</span>,<span class="string">"pink"</span>);   <span class="regexp">//</span> :odd 奇数 从<span class="number">0</span>开始数 表示选择了<span class="number">1</span>,<span class="number">3</span>，……</span><br><span class="line">$(<span class="string">"p:even"</span>).css(<span class="string">"backgroundColor"</span>,<span class="string">"yellow"</span>);   <span class="regexp">//</span> :even 偶数 从<span class="number">0</span>开始数 表示选择了<span class="number">0</span>,<span class="number">2</span>，……</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA67gU.png" alt="UA67gU.png"></p><h2 id="10-3-jquery函数"><a href="#10-3-jquery函数" class="headerlink" title="10.3  jquery函数"></a>10.3 jquery函数</h2><p>jquery最初引入的时候向全局暴露的是jquery函数。但是后来人们觉得写起来复杂，才修改为$。</p><p>jquery和$使用方式完全一样，jquery仍然保留，还可以继续使用。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// jQuery函数</span></span><br><span class="line"><span class="comment">// 选中所有p元素，并改变颜色</span></span><br><span class="line"><span class="selector-tag">jQuery</span>(<span class="string">"p"</span>)<span class="selector-class">.css</span>(<span class="string">"backgroundColor"</span>,<span class="string">"yellow"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAcEVA.png" alt="UAcEVA.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
        <tag>$函数</tag>
      </tags>
  </entry>
  <entry>
    <title>九、jQuery 函数库</title>
    <url>/post/a05d1f23.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="九、jQuery-函数库"><a href="#九、jQuery-函数库" class="headerlink" title="九、jQuery 函数库"></a>九、jQuery 函数库</h1><h2 id="9-1-jQuery简介"><a href="#9-1-jQuery简介" class="headerlink" title="9.1  jQuery简介"></a>9.1 jQuery简介</h2><p>jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（或JavaScript框架）。</p><p>jQuery设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。</p><p>它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。</p><p>jQuery的核心特性可以总结为：</p><ul><li><p>具有独特的链式语法和短小清晰的多功能接口；</p></li><li><p>具有高效灵活的css选择器，并且可对CSS选择器进行扩展；</p></li><li><p>拥有便捷的插件扩展机制和丰富的插件。</p></li></ul><p>jQuery兼容各种主流浏览器，如IE 6.0+、FF 1.5+、Safari 2.0+、Opera 9.0+等。</p><p>jQuery项目始于2005年，现在已发展成为我们今天所知道的项目集合。</p><p>jQuery是一个JavaScript 库，致力于简化DOM操作，AJAX调用和事件处理。JavaScript开发人员经常使用它。</p><h2 id="9-2-jQuery源码文件"><a href="#9-2-jQuery源码文件" class="headerlink" title="9.2  jQuery源码文件"></a>9.2 jQuery源码文件</h2><p><a href="http://jquery.cuishifeng.cn/" target="_blank" rel="noopener" class="LinkCard">教程手册</a></p><p><a href="http://cdn.bytedance.com/" target="_blank" rel="noopener" class="LinkCard">字节跳动静态资源公共库</a></p><p><a href="https://www.bootcdn.cn/" target="_blank" rel="noopener" class="LinkCard">BootCDN中文开源项目</a></p><h2 id="9-3-jQuery引包"><a href="#9-3-jQuery引包" class="headerlink" title="9.3  jQuery引包"></a>9.3 jQuery引包</h2><p>jquery是javascript的一个库，如果想要使用jquery，必须先引入jquery。</p><p>引入jquery的script标签，不能和书写jquery语句的script标签是同一个。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入jquery包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.4.1.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 书写所有jquery语句</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="9-4-jquery体验"><a href="#9-4-jquery体验" class="headerlink" title="9.4  jquery体验"></a>9.4 jquery体验</h2><h3 id="9-4-1-简化了元素的选择，直接使用CSS选择器"><a href="#9-4-1-简化了元素的选择，直接使用CSS选择器" class="headerlink" title="9.4.1  简化了元素的选择，直接使用CSS选择器"></a>9.4.1 简化了元素的选择，直接使用CSS选择器</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用js获取元素</span></span><br><span class="line"><span class="keyword">var</span> a1 = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>).getElementsByTagName(<span class="string">"a"</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="comment">// 改变颜色</span></span><br><span class="line">a1.style.color = <span class="string">"red"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用jquery选择元素</span></span><br><span class="line">$(<span class="string">"#box ul li.teshu a"</span>).css(<span class="string">"color"</span>,<span class="string">"green"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAyMJf.png" alt="UAyMJf.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">// 选中所有的p，json&#123;<span class="string">"left"</span> : 500&#125; <span class="type">left</span>值改为<span class="number">500</span>，动画未完成时间为<span class="number">2</span>s</span><br><span class="line">$(<span class="string">"p"</span>).animate(&#123;<span class="string">"left"</span> : 500&#125;, 2000);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAyQW8.png" alt="UAyQW8.png"></p><h3 id="9-4-2-jquery所有的操作都是批量的，不需要再使用for循环"><a href="#9-4-2-jquery所有的操作都是批量的，不需要再使用for循环" class="headerlink" title="9.4.2  jquery所有的操作都是批量的，不需要再使用for循环"></a>9.4.2 jquery所有的操作都是批量的，不需要再使用for循环</h3><p>jquery所有的操作都是批量的，不需要再使用for循环。</p><p>不管是添加事件还是改变样式，都是批量的。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将所有的p背景颜色改变</span></span><br><span class="line">$(<span class="string">"p"</span>).css(<span class="string">"backgroundColor"</span>,<span class="string">"blue"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAyYes.png" alt="UAyYes.png"></p><h3 id="9-4-3-jquery简化了DOM操作，如添加、删除、修改节点"><a href="#9-4-3-jquery简化了DOM操作，如添加、删除、修改节点" class="headerlink" title="9.4.3  jquery简化了DOM操作，如添加、删除、修改节点"></a>9.4.3 jquery简化了DOM操作，如添加、删除、修改节点</h3><h3 id="9-4-4-jquery都是兼容的，不需要再进行能力检测了"><a href="#9-4-4-jquery都是兼容的，不需要再进行能力检测了" class="headerlink" title="9.4.4  jquery都是兼容的，不需要再进行能力检测了"></a>9.4.4 jquery都是兼容的，不需要再进行能力检测了</h3><p>总结：</p><blockquote><p><strong>jquery是JavaScript的一个库，它不是一门新的语言，里面的所有语句都是使用js书写的。</strong></p></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title>八、json 数据格式</title>
    <url>/post/15026b64.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="八、json-数据格式"><a href="#八、json-数据格式" class="headerlink" title="八、json 数据格式"></a>八、<code>json</code> 数据格式</h1><p><code>JSON</code>叫做<code>JavaScript object Notation</code> “<code>JavaScript 对象表示法</code>”。</p><p><code>json</code>是前端和后台通信的一种数据格式。</p><p><code>json</code>：<code>js对象表示法</code> <strong><code>k</code>必须加<code>双引号</code></strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">“k” : <span class="type">v</span>,</span><br><span class="line">“k” : <span class="type">v</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="8-1-创建"><a href="#8-1-创建" class="headerlink" title="8.1  创建"></a>8.1 创建</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建json</span></span><br><span class="line"><span class="keyword">var</span> json = &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"小明"</span>,</span><br><span class="line">    <span class="string">"sex"</span> : <span class="string">"男性"</span>,</span><br><span class="line">    <span class="string">"age"</span> : <span class="number">18</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 数据类型是对象</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> json);       <span class="comment">// object</span></span><br></pre></td></tr></table></figure></div><h2 id="8-2-读取-点语法-中括号"><a href="#8-2-读取-点语法-中括号" class="headerlink" title="8.2  读取 点语法 中括号"></a>8.2 读取 点语法 中括号</h2><p>点语法 中括号</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQF"><figure class="iseeu highlight /sqf"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 读取 点语法 中括号</span></span><br><span class="line">console.<span class="built_in">log</span>(json.<span class="built_in">name</span>);     <span class="comment">// 小明</span></span><br><span class="line">console.<span class="built_in">log</span>(json[<span class="string">"sex"</span>]);   <span class="comment">// 男性</span></span><br></pre></td></tr></table></figure></div><h2 id="8-3-设置"><a href="#8-3-设置" class="headerlink" title="8.3  设置 ="></a>8.3 设置 <code>=</code></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置 =</span></span><br><span class="line">json.<span class="built_in">height</span> = <span class="string">"180cm"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(json);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAsU2D.png" alt="UAsU2D.png"></p><h2 id="8-4-json删除-delete"><a href="#8-4-json删除-delete" class="headerlink" title="8.4  json删除 delete"></a>8.4 json删除 <code>delete</code></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">// 删除 <span class="keyword">delete</span></span><br><span class="line"><span class="keyword">delete</span> <span class="type">json</span>.sex;</span><br><span class="line">console.log(<span class="type">json</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAsBqA.png" alt="UAsBqA.png"></p><h2 id="8-5-json嵌套"><a href="#8-5-json嵌套" class="headerlink" title="8.5  json嵌套"></a>8.5 json嵌套</h2><p>json可以嵌套，读取属性值使用连续打点或者中括号</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">var <span class="type">json</span> = &#123;</span><br><span class="line">    "name" : "小明",</span><br><span class="line">    "sex" : "男性",</span><br><span class="line">    "age" : <span class="number">18</span>,</span><br><span class="line">    "aihao" : &#123;</span><br><span class="line">        "aihao1" : "学习1",</span><br><span class="line">        "aihao2" : "学习2",</span><br><span class="line">        "aihao3" : "学习3"</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// <span class="type">json</span>嵌套 读取</span><br><span class="line">console.log(<span class="type">json</span>);</span><br><span class="line">console.log(<span class="type">json</span>.aihao);</span><br><span class="line">//连续打点</span><br><span class="line">console.log(<span class="type">json</span>.aihao.aihao2);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAsgG8.png" alt="UAsgG8.png"></p><h2 id="8-6-json遍历"><a href="#8-6-json遍历" class="headerlink" title="8.6  json遍历"></a>8.6 json遍历</h2><p>json没有序号，<strong>不能使用<code>length</code>遍历</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">// <span class="type">json</span> 遍历k依次遍历属性名，通过<span class="type">json</span>[k]读取每一项值</span><br><span class="line"><span class="keyword">for</span>(var k <span class="keyword">in</span> <span class="type">json</span>)&#123;</span><br><span class="line">    console.log(<span class="type">json</span>[k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAsbGT.png" alt="UAsbGT.png"></p><h2 id="8-7-json复制"><a href="#8-7-json复制" class="headerlink" title="8.7  json复制"></a>8.7 json复制</h2><p>将json中每一项的值复制给另外的一份</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建json</span></span><br><span class="line"><span class="keyword">var</span> json = &#123;</span><br><span class="line">    <span class="string">"name"</span> : <span class="string">"小明"</span>,</span><br><span class="line">    <span class="string">"sex"</span> : <span class="string">"男性"</span>,</span><br><span class="line">    <span class="string">"age"</span> : <span class="number">18</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 表示将json地址指向json2，会互相影响</span></span><br><span class="line"><span class="keyword">var</span> json2 = json;</span><br><span class="line"><span class="comment">// 给json2添加一项</span></span><br><span class="line">json2.height = <span class="number">180</span>;</span><br><span class="line"><span class="built_in">console</span>.log(json2);</span><br><span class="line"><span class="comment">// 验证json</span></span><br><span class="line"><span class="built_in">console</span>.log(json);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAsXM4.png" alt="UAsXM4.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 只是将json中的值复制，而不是将地址也指向其他元素,不会互相影响</span></span><br><span class="line"><span class="keyword">var</span> json3 = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> json)&#123;</span><br><span class="line">    json3[k] = json[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// json3和json是两个地址</span></span><br><span class="line"><span class="comment">// json3添加一项</span></span><br><span class="line">json3.weight = <span class="string">"50kg"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(json3);</span><br><span class="line"><span class="comment">// 验证 json不受json3影响</span></span><br><span class="line"><span class="built_in">console</span>.log(json);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAySd1.png" alt="UAySd1.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>json</tag>
        <tag>数据格式</tag>
      </tags>
  </entry>
  <entry>
    <title>七、对象的基础知识</title>
    <url>/post/1b0a66e8.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="七、对象的基础知识"><a href="#七、对象的基础知识" class="headerlink" title="七、对象的基础知识"></a>七、对象的基础知识</h1><p>在JavaScript中，对象是一个无序属性的集合，任何事物都是对象。</p><p>我们现阶段研究的对象是具有属性和方法的数据。</p><p>属性是与对象相关的值。比如人身高、体重。</p><p>方法是能够在对象上执行的动作。比如人的吃饭、睡觉。</p><h2 id="7-1-创建对象：字面量"><a href="#7-1-创建对象：字面量" class="headerlink" title="7.1  创建对象：字面量{}"></a>7.1 创建对象：字面量{}</h2><p><code>k:v</code> 每一项之间使用逗号隔开，最后一项不写逗号</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建一个对像</span></span><br><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="comment">// 属性</span></span><br><span class="line">    name : <span class="string">"小明"</span>,</span><br><span class="line">    age : <span class="number">18</span>,</span><br><span class="line">    <span class="comment">// 方法</span></span><br><span class="line">    getName : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">// this，表示该对象person</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> person);     <span class="comment">// object</span></span><br></pre></td></tr></table></figure></div><h2 id="7-2-读取对象：点语法，中括号"><a href="#7-2-读取对象：点语法，中括号" class="headerlink" title="7.2  读取对象：点语法，中括号"></a>7.2 读取对象：点语法，中括号</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 读取 点语法</span></span><br><span class="line"><span class="built_in">console</span>.log(person.age);    <span class="comment">// 18</span></span><br><span class="line"><span class="comment">// 读取 中括号</span></span><br><span class="line"><span class="built_in">console</span>.log(person[<span class="string">"name"</span>]);    <span class="comment">// 小明</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法</span></span><br><span class="line">getName : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// this，表示该对象person</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(person.getName);</span><br><span class="line"><span class="built_in">console</span>.log(person.getName());</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAsGUx.png" alt="UAsGUx.png"></p><h2 id="7-3-设置："><a href="#7-3-设置：" class="headerlink" title="7.3  设置： ="></a>7.3 设置： <code>=</code></h2><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置 =</span></span><br><span class="line">person.sex = <span class="string">"男性"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(person);</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/07/UAsJ56.png" alt="UAsJ56.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>对象</tag>
      </tags>
  </entry>
  <entry>
    <title>六、计算后的样式</title>
    <url>/post/a5cce5f7.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="六、计算后的样式"><a href="#六、计算后的样式" class="headerlink" title="六、计算后的样式"></a>六、计算后的样式</h1><p>计算后的样式：</p><blockquote><p>表示<code>html</code>元素在各种选择器的综合作用下，最终的样式</p></blockquote><p>通过<code>style</code>只能读取行内样式，不能读取计算后的样式</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">"box"</span> id=<span class="string">"box"</span> <span class="built_in">style</span>=<span class="string">"width: 100px;"</span>&gt;盒子&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">   .<span class="built_in">box</span> &#123;</span><br><span class="line">            <span class="built_in">width</span>: 200px;</span><br><span class="line">            <span class="built_in">height</span>: 100px;</span><br><span class="line">            <span class="built_in">border</span>: 1px solid #<span class="number">000</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">// 通过<span class="built_in">style</span>只能读取行内样式，不能读取计算后的样式</span><br><span class="line"><span class="built_in">var</span> oBox = document.getElementById(<span class="string">"box"</span>);</span><br><span class="line">console.<span class="built_in">log</span>(oBox.<span class="built_in">style</span>.<span class="built_in">width</span>);                  // 100px</span><br></pre></td></tr></table></figure></div><h2 id="6-1-高级浏览器"><a href="#6-1-高级浏览器" class="headerlink" title="6.1  高级浏览器"></a>6.1 高级浏览器</h2><p>不兼容IE6,7,8</p><h3 id="6-1-1-getComputedStyle"><a href="#6-1-1-getComputedStyle" class="headerlink" title="6.1.1  getComputedStyle()"></a>6.1.1 <code>getComputedStyle()</code></h3><ul><li><p>getComputedStyle()：</p><ul><li><p>调用对象：window</p></li><li><p>参数：要读取的元素对象</p></li><li><p>返回值：所有计算后的样式集合</p></li></ul></li></ul><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">&lt;img src=<span class="string">"images/01.jpeg"</span> alt=<span class="string">""</span> id=<span class="string">"pic"</span>&gt;</span><br><span class="line"></span><br><span class="line">     img &#123;</span><br><span class="line">            width: <span class="number">260</span>px;</span><br><span class="line">            border: <span class="number">10</span>px solid <span class="meta">#f00;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 计算后的样式</span></span><br><span class="line">        console.<span class="built_in">log</span>(window.getComputedStyle(oPic));</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/07/UAsu2F.png" alt="UAsu2F.png"></p><h3 id="6-1-2-getPropertyValue"><a href="#6-1-2-getPropertyValue" class="headerlink" title="6.1.2  getPropertyValue()"></a>6.1.2 <code>getPropertyValue()</code></h3><p>返回值可以继续打点调用<code>getPropertyValue()</code>方法</p><ul><li><p>参数：属性名</p></li><li><p>返回值：属性值</p></li></ul><p>单一属性书写为短横语法</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">width</span> = window.getComputedStyle(oPic).getPropertyValue(<span class="string">"width"</span>);</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">width</span>);         <span class="comment">// 260px</span></span><br></pre></td></tr></table></figure></div><p>还可以使用中括号</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.getComputedStyle(oPic)[<span class="string">"border-width"</span>]);         <span class="comment">// 10px</span></span><br></pre></td></tr></table></figure></div><h2 id="6-2-IE6-7-8-currentStyle"><a href="#6-2-IE6-7-8-currentStyle" class="headerlink" title="6.2  IE6,7,8 currentStyle"></a>6.2 <code>IE6,7,8</code> <code>currentStyle</code></h2><p><code>IE6,7,8</code>不认识<code>window.getComputedStyle()</code></p><p>使用的是<code>currentStyle</code></p><ul><li><p>调用对象：元素对像</p></li><li><p>返回值：样式集合</p></li></ul><p>想得到属性值，需要继续打点调用属性名（单一属性使用驼峰命名法）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 直接点语法样式读取，驼峰</span></span><br><span class="line">oBox<span class="selector-class">.innerHTML</span> = oPic<span class="selector-class">.currentStyle</span>.<span class="attribute">width</span>;</span><br><span class="line">oBox<span class="selector-class">.innerHTML</span> = oPic<span class="selector-class">.currentStyle</span>[<span class="string">"borderColor];</span></span><br></pre></td></tr></table></figure></div><h2 id="6-3-能力检测"><a href="#6-3-能力检测" class="headerlink" title="6.3  能力检测"></a>6.3 能力检测</h2><p>检测浏览器是否认识<code>window.getComputedStyle</code>，不加小括号，认识则返回值为<code>true</code>，否则为<code>false</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 能力检测</span></span><br><span class="line"><span class="keyword">if</span>(window.getComputedStyle)&#123;</span><br><span class="line">    <span class="comment">// 高级</span></span><br><span class="line">    oBox.innerHTML = window.get<span class="constructor">ComputedStyle(<span class="params">oPic</span>)</span>.get<span class="constructor">PropertyValue(<span class="string">"border-style"</span>)</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// IE6,7,8</span></span><br><span class="line">    oBox.innerHTML = oPic.currentStyle.borderStyle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAsQKJ.png" alt="UAsQKJ.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="QML"><figure class="iseeu highlight /qml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素对象</span></span><br><span class="line"><span class="keyword">var</span> oBox = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="keyword">var</span> oPic = <span class="built_in">document</span>.getElementById(<span class="string">"pic"</span>);</span><br><span class="line"><span class="comment">// 将img边框宽度输出到盒子中</span></span><br><span class="line">oBox.innerHTML = getValue(<span class="string">"borderWidth"</span>,oPic);</span><br><span class="line"><span class="comment">// 函数思维目的：用户输入属性名和对象，我们可以返回该对象计算后的属性值</span></span><br><span class="line"><span class="comment">// 参数 border-width, borderWidth</span></span><br><span class="line"><span class="comment">// 返回值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params">property,obj</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.getComputedStyle)&#123;</span><br><span class="line">        <span class="comment">// 高级</span></span><br><span class="line">        <span class="comment">// 将属性名改为短横写法 borderWidth改为border-width</span></span><br><span class="line">        <span class="keyword">property</span><span class="string"> </span>= <span class="keyword">property</span><span class="string">.replace(/([A-Z])/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">match, $1</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"-"</span> + $<span class="number">1.</span>toLowerCase();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 将属性值返回</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">window</span>.getComputedStyle(obj)[<span class="keyword">property</span><span class="string">]</span>;</span><br><span class="line">    &#125;<span class="title">else</span>&#123;</span><br><span class="line">        <span class="comment">// IE 6,7,8 border-width改为borderWidth</span></span><br><span class="line">        <span class="keyword">property</span><span class="string"> </span>= <span class="keyword">property</span><span class="string">.replace(/-([a-z])/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">match, $1</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> $<span class="number">1.</span>toUpperCase();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 将属性值返回</span></span><br><span class="line">        <span class="keyword">return</span> obj.currentStyle[<span class="keyword">property</span><span class="string">]</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAs8V1.png" alt="UAs8V1.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
      </tags>
  </entry>
  <entry>
    <title>五、getElementsByTagName()</title>
    <url>/post/60a327cb.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="五、getElementsByTagName"><a href="#五、getElementsByTagName" class="headerlink" title="五、getElementsByTagName()"></a>五、getElementsByTagName()</h1><h2 id="5-1-概述"><a href="#5-1-概述" class="headerlink" title="5.1  概述"></a>5.1 概述</h2><p>表示通过标签名得到类数组对象</p><ul><li><p>参数：标签名</p></li><li><p>返回值：类数组对象</p></li><li><p>调用对象：可以是document，还可以是任何一个节点对象（表示从该节点范围内进行查找）</p></li></ul><h3 id="5-1-1-该类数组对象中保存的是元素对象"><a href="#5-1-1-该类数组对象中保存的是元素对象" class="headerlink" title="5.1.1  该类数组对象中保存的是元素对象"></a>5.1.1 该类数组对象中保存的是元素对象</h3><p>该数组对象可以通过索引值读取每一项的值，也可以使用<code>length</code>属性。</p><p>如果标签只有一个，仍然需要通过索引值获取元素对象。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    p &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 40px;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span><span class="selector-pseudo">:lightblue</span>;</span></span><br><span class="line">        margin-bottom: 10px;</span><br><span class="line">    &#125;</span><br><span class="line">    div &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 200px;</span><br><span class="line">        background-color: blue;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 通过标签名</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ps = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(ps);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 读取类数组中每一项的值</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(ps[<span class="number">0</span>]);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 让第二个p变红</span></span></span><br><span class="line"><span class="actionscript">    ps[<span class="number">1</span>].style.backgroundColor = <span class="string">"red"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 标签只有一个也必须书写索引值</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>));</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>)[<span class="number">0</span>].style.backgroundColor = <span class="string">"pink"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// length属性也可以使用</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(ps.length);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAUrsx.png" alt="UAUrsx.png"></p><h3 id="5-1-2-不管标签嵌套多深都可以查找到"><a href="#5-1-2-不管标签嵌套多深都可以查找到" class="headerlink" title="5.1.2  不管标签嵌套多深都可以查找到"></a>5.1.2 不管标签嵌套多深都可以查找到</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是比较深的p<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 通过标签名</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> ps = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 不管标签嵌套多深都可以查找到</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(ps[ps.length - <span class="number">1</span>]);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(ps);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAURFe.png" alt="UAURFe.png"></p><h3 id="5-1-3-类数组对象保存数据时只和标签出现的位置有关，和嵌套没有关系"><a href="#5-1-3-类数组对象保存数据时只和标签出现的位置有关，和嵌套没有关系" class="headerlink" title="5.1.3  类数组对象保存数据时只和标签出现的位置有关，和嵌套没有关系"></a>5.1.3 类数组对象保存数据时只和标签出现的位置有关，和嵌套没有关系</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="symbol">id</span>=<span class="string">"box1"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="symbol">id</span>=<span class="string">"box2"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="symbol">id</span>=<span class="string">"box3"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="symbol">id</span>=<span class="string">"box4"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="symbol">id</span>=<span class="string">"div5"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 类数组对象保存元素顺序只和先后出现的位置有关</span></span><br><span class="line"><span class="keyword">var</span> divs = document.getElementsByTagName(<span class="string">"div"</span>);</span><br><span class="line"><span class="comment">// 可以使用遍历</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt;= divs.length - <span class="number">1</span> ; i++)&#123;</span><br><span class="line">    console.log(divs[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAU4SA.png" alt="UAU4SA.png"></p><h2 id="5-2-连续打点"><a href="#5-2-连续打点" class="headerlink" title="5.2  连续打点"></a>5.2 连续打点</h2><h3 id="5-2-1-不使用连续打点，分条书写"><a href="#5-2-1-不使用连续打点，分条书写" class="headerlink" title="5.2.1  不使用连续打点，分条书写"></a>5.2.1 不使用连续打点，分条书写</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 让第二个p变色 分条书写</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 第一步：得到box对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oBox = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 第二步：在box范围内找到p</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> ps = oBox.getElementsByTagName(<span class="string">"p"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 第三步：让第二个p变色</span></span></span><br><span class="line"><span class="actionscript">    ps[<span class="number">1</span>].style.backgroundColor = <span class="string">"red"</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(ps);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(ps.length);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAUbTS.png" alt="UAUbTS.png"></p><h3 id="5-2-2-元素对象改变，再次打点"><a href="#5-2-2-元素对象改变，再次打点" class="headerlink" title="5.2.2  元素对象改变，再次打点"></a>5.2.2 元素对象改变，再次打点</h3><p>可以将上面语句使用连续打点，当元素对象改变，再次打点表示从该元素对象进行调用。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 连续打点，元素对象改变，表示从该元素进行使用，不会每次都从最开始document进行查找</span></span><br><span class="line">document.get<span class="constructor">ElementById(<span class="string">"box"</span>)</span>.get<span class="constructor">ElementsByTagName(<span class="string">"p"</span>)</span><span class="literal">[<span class="number">1</span>]</span>.style.backgroundColor = <span class="string">"green"</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAaSO0.png" alt="UAaSO0.png"></p><h3 id="5-2-3-getElementsByTagName-也可以连续打点"><a href="#5-2-3-getElementsByTagName-也可以连续打点" class="headerlink" title="5.2.3  getElementsByTagName()也可以连续打点"></a>5.2.3 <code>getElementsByTagName()</code>也可以连续打点</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LSL"><figure class="iseeu highlight /lsl"><table><tr><td class="code"><pre><span class="line">document.getElementsByTagName(<span class="string">"div"</span>)[<span class="number">0</span>].getElementsByTagName(<span class="string">"p"</span>)[<span class="number">1</span>].style.backgroundColor = <span class="string">"orange"</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAa3fH.png" alt="UAa3fH.png"></p><h3 id="5-2-4-案例：表格隔行变色"><a href="#5-2-4-案例：表格隔行变色" class="headerlink" title="5.2.4  案例：表格隔行变色"></a>5.2.4 案例：表格隔行变色</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    table, tr, td &#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">        border-collapse: collapse;</span><br><span class="line">    &#125;</span><br><span class="line">    td &#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">        height: 40px;</span><br><span class="line">        line-height: 40px;</span><br><span class="line">        text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> trs = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"tr"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 让所有的奇数行变成浅蓝色 0,1,2,3,4,5,6</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt;= trs.length - <span class="number">1</span> ; i +=<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="actionscript">        trs[i].style.backgroundColor = <span class="string">"lightblue"</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 让所有的偶数行变成浅绿色 0,1,2,3,4,5,6</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt;= trs.length - <span class="number">1</span> ; i +=<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="actionscript">        trs[i].style.backgroundColor = <span class="string">"lightgreen"</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAaspj.png" alt="UAaspj.png"></p><h2 id="5-3-批量操作"><a href="#5-3-批量操作" class="headerlink" title="5.3  批量操作"></a>5.3 批量操作</h2><p>通过标签名得到类数组对象，将每一元素对象添加相同的事件。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取类数组对象</span></span><br><span class="line"><span class="keyword">var</span> ps = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>);</span><br><span class="line"><span class="comment">// 通过遍历添加事件，点击p，弹出对应的索引值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt;= ps.length - <span class="number">1</span> ; i ++)&#123;</span><br><span class="line">    ps[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UArhAx.png" alt="UArhAx.png"></p><p>由于闭包的影响，i记住了4</p><h3 id="5-3-1-IIFE解决："><a href="#5-3-1-IIFE解决：" class="headerlink" title="5.3.1  IIFE解决："></a>5.3.1 IIFE解决：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取类数组对象</span></span><br><span class="line"><span class="keyword">var</span> ps = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>);</span><br><span class="line"><span class="comment">// 通过遍历添加事件，点击p，弹出对应的索引值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; ps.length ; i ++)&#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">        ps[a].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAro9O.png" alt="UAro9O.png"></p><h3 id="5-3-2-this关键字"><a href="#5-3-2-this关键字" class="headerlink" title="5.3.2  this关键字"></a>5.3.2 this关键字</h3><p><code>this</code>关键字，表示触发事件的该对象。</p><p>原对象具有的属性和方法，this也具有同样的属性和方法。</p><p><code>this</code>只能使用在函数内部。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取类数组对象</span></span><br><span class="line"><span class="keyword">var</span> ps = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>);</span><br><span class="line"><span class="comment">// 通过遍历添加事件，点击p，弹出对应的索引值</span></span><br><span class="line"><span class="comment">// this 触发事件的该对象 函数内没有i，不受闭包影响</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; ps.length ; i ++)&#123;</span><br><span class="line">    ps[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.innerHTML);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong><code>this</code>只和触发事件的对象有关，此处<code>this</code>相当于<code>ps[i]</code></strong></p><h3 id="5-3-3-this工作中实际使用："><a href="#5-3-3-this工作中实际使用：" class="headerlink" title="5.3.3  this工作中实际使用："></a>5.3.3 this工作中实际使用：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取类数组对象</span></span><br><span class="line"><span class="keyword">var</span> ps = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>);</span><br><span class="line"><span class="comment">// 通过遍历添加事件，点击p，弹出对应的索引值</span></span><br><span class="line"><span class="comment">// this 触发事件的该对象 函数内没有i，不受闭包影响</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; ps.length ; i ++)&#123;</span><br><span class="line">    <span class="comment">// 提前将 i保存在元素对象属性中 index为索引值</span></span><br><span class="line">    ps[i].index = i;</span><br><span class="line">    <span class="comment">// 所有p添加点击事件输出索引值</span></span><br><span class="line">    ps[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// console.log(i);</span></span><br><span class="line">    <span class="comment">// console.log(ps[i].index);</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.index);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="5-4-对应思想"><a href="#5-4-对应思想" class="headerlink" title="5.4  对应思想"></a>5.4 对应思想</h2><p>我们经常利用其他元素控制另外的元素，他们索引值相同。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XQUERY"><figure class="iseeu highlight /xquery"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"box1"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>0<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"box2"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>0<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">// 对应，点击上面的p，下面对应的p变色</span><br><span class="line">var ps1 =<span class="built_in"> document</span>.getElementById(<span class="string">"box1"</span>).getElementsByTagName(<span class="string">"p"</span>);</span><br><span class="line">var ps2 =<span class="built_in"> document</span>.getElementById(<span class="string">"box2"</span>).getElementsByTagName(<span class="string">"p"</span>);</span><br><span class="line">// 通过遍历批量添加事件</span><br><span class="line"><span class="keyword">for</span>(var i = <span class="number">0</span> ; i &lt; ps1.length ; i++)&#123;</span><br><span class="line">    // 提前将i保存在index属性中</span><br><span class="line">    ps1[i].index = i;</span><br><span class="line">    // 点击事件</span><br><span class="line">    ps1[i].onclick = <span class="keyword">function</span>()&#123;</span><br><span class="line">        // 对应的ps2中索引值i变色</span><br><span class="line">        // ps2[i].style.backgroundColor = <span class="string">"red"</span>;</span><br><span class="line">        ps2[this.index].style.backgroundColor = <span class="string">"red"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAsCvQ.png" alt="UAsCvQ.png"></p><h2 id="5-5-排他思想"><a href="#5-5-排他思想" class="headerlink" title="5.5  排他思想"></a>5.5 排他思想</h2><p>只有点击的对应元素改变，其他都恢复原状</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 对应+排他</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; ps1.length ; i++)&#123;</span><br><span class="line">    <span class="comment">// 提前将i保存在index属性中</span></span><br><span class="line">    ps1[i].index = i;</span><br><span class="line">    <span class="comment">// 点击事件</span></span><br><span class="line">    ps1[i].onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 先将所有的ps2都变成原状</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span> ; j &lt; ps2.length ; j++)&#123;</span><br><span class="line">            ps2[j].style.backgroundColor = <span class="string">"lightblue"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 对应的ps2中索引值i变色</span></span><br><span class="line">        ps2[<span class="keyword">this</span>.index].style.backgroundColor = <span class="string">"red"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAsiuj.png" alt="UAsiuj.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>getElementsByTagName</tag>
      </tags>
  </entry>
  <entry>
    <title>四、定时器</title>
    <url>/post/38c658f2.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="四、定时器"><a href="#四、定时器" class="headerlink" title="四、定时器"></a>四、定时器</h1><ul><li><p>设置定时器：每隔一段时间，定时器（函数）会自动执行一次。</p><ul><li><p>setInterval()：</p><ul><li><p>第一个参数：函数</p></li><li><p>第二个参数：间隔时间，单位是ms (1s=1000ms)，省略不写</p></li><li><p>调用对象：window，省略不写</p></li><li><p>一般我们习惯将设置定时器赋值给timer变量。</p></li></ul></li></ul></li><li><p>清除定时器：</p><ul><li><p>clearInterval()：</p><ul><li>参数：只需要书写要清除定时器的名称</li></ul></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span>盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 200px;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span><span class="selector-pseudo">:lightblue</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oBox = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 信号量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> nowWidth = <span class="number">200</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 每隔一段时间盒子变长</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> timer = setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 信号量改变</span></span></span><br><span class="line">        nowWidth += 20;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 信号量验证</span></span></span><br><span class="line">        if(nowWidth &gt;= 400)&#123;</span><br><span class="line">            nowWidth = 400;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 超过400，清除定时器</span></span></span><br><span class="line">            clearInterval(timer);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(nowWidth);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="actionscript">        oBox.style.width = nowWidth + <span class="string">"px"</span>;</span></span><br><span class="line">    &#125;,1000);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标进入盒子，停止定时</span></span></span><br><span class="line"><span class="actionscript">    oBox.onmouseenter = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(nowWidth);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 清除定时器</span></span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标离开盒子，继续变长</span></span></span><br><span class="line"><span class="actionscript">    oBox.onmouseleave = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 设表先关</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 重新开启定时器，需要先关闭之前的定时器，然后重新赋值</span></span></span><br><span class="line">        clearInterval(timer);</span><br><span class="line"><span class="actionscript">        timer = setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 信号量改变</span></span></span><br><span class="line">            nowWidth += 20;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 信号量验证</span></span></span><br><span class="line">            if (nowWidth &gt;= 400) &#123;</span><br><span class="line">                nowWidth = 400;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 拉终停表，达到终点关闭定时器</span></span></span><br><span class="line">                clearInterval(timer);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(nowWidth);</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="actionscript">            oBox.style.width = nowWidth + <span class="string">"px"</span>;</span></span><br><span class="line">        &#125;, 1000);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAUEsP.png" alt="UAUEsP.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>定时器</tag>
      </tags>
  </entry>
  <entry>
    <title>三、信号量</title>
    <url>/post/ff84a38e.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><hr><p>title: 三、信号量</p><p>abbrlink: 9af7d3f8<br>date: 2020-05-08 21:26:32<br>copyright: true # 开启版权声明</p><hr><h1 id="三、信号量"><a href="#三、信号量" class="headerlink" title="三、信号量"></a>三、信号量</h1><p>多个函数同时改变一个变量的值，这个变量称为信号量。（<code>全局变量</code>）</p><p>一般信号量不会无限大，或者无限小，需要进行信号量边界的验证。</p><h2 id="3-1-方法一：先验证（工作中不常用）"><a href="#3-1-方法一：先验证（工作中不常用）" class="headerlink" title="3.1  方法一：先验证（工作中不常用）"></a>3.1 方法一：先验证（工作中不常用）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span>盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btn"</span> <span class="attr">value</span>=<span class="string">"点击我盒子变长"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">        width: 200px;</span><br><span class="line">        height: 200px;</span><br><span class="line">        background-color: lightblue;</span><br><span class="line">        margin-bottom: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// box宽度不超过400px时，点击btn盒子变长</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 将盒子宽度提取成信号量，数据类型是Number，便于数学计算</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> nowWidth = <span class="number">200</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oBox = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 事件绑定</span></span></span><br><span class="line"><span class="actionscript">    oBtn.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 信号量改变 点击一次增加20</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 方法一：先进行验证，信号量不超过400，才进行信号量改变</span></span></span><br><span class="line">        if(nowWidth &lt; 400)&#123;</span><br><span class="line">            nowWidth += 20;</span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line">            nowWidth = 400;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(nowWidth);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="actionscript">        oBox.style.width = nowWidth + <span class="string">"px"</span>;</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UANKjx.png" alt="UANKjx.png"></p><h2 id="3-2-方法二：信号量后验证方式（工作中常用）"><a href="#3-2-方法二：信号量后验证方式（工作中常用）" class="headerlink" title="3.2  方法二：信号量后验证方式（工作中常用）"></a>3.2 方法二：信号量后验证方式（工作中常用）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 事件绑定</span></span><br><span class="line">oBtn.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 信号量改变 点击一次增加20</span></span><br><span class="line">    nowWidth += <span class="number">20</span>;</span><br><span class="line">    <span class="comment">// 信号量后验证方式 书写一个不满足的条件</span></span><br><span class="line">    <span class="keyword">if</span>(nowWidth &gt;= <span class="number">400</span>)&#123;</span><br><span class="line">        nowWidth = <span class="number">400</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(nowWidth);</span><br><span class="line">    <span class="comment">// 体现在元素身上</span></span><br><span class="line">    oBox.style.width = nowWidth + <span class="string">"px"</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div><h2 id="3-3-简易轮播图"><a href="#3-3-简易轮播图" class="headerlink" title="3.3  简易轮播图"></a>3.3 简易轮播图</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btn1"</span> <span class="attr">value</span>=<span class="string">"上一张"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"pic"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"btn2"</span> <span class="attr">value</span>=<span class="string">"下一张"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    img &#123;</span><br><span class="line">        width: 220px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oPic = <span class="built_in">document</span>.getElementById(<span class="string">"pic"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oBtn1 = <span class="built_in">document</span>.getElementById(<span class="string">"btn1"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oBtn2 = <span class="built_in">document</span>.getElementById(<span class="string">"btn2"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 信号量，显示图片的数字</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> idx = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 点击右按钮，信号量改变，体现在图片上</span></span></span><br><span class="line"><span class="actionscript">    oBtn2.onclick = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 信号量改变 点击一次增加1</span></span></span><br><span class="line">        idx ++;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 信号量后验证方式 书写一个不满足的条件</span></span></span><br><span class="line">        if(idx &gt; 5)&#123;</span><br><span class="line">            idx = 1;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(idx);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 体现在元素身上</span></span></span><br><span class="line"><span class="actionscript">        oPic.src = <span class="string">"images/lunbo/"</span> + idx + <span class="string">".jpg"</span>;</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 点击左按钮，信号量改变，后验证，体现在图片上</span></span></span><br><span class="line"><span class="actionscript">    oBtn1.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">        idx --;</span><br><span class="line">        if (idx &lt; 1) &#123;</span><br><span class="line">            idx = 5;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(idx);</span></span><br><span class="line"><span class="actionscript">        oPic.src = <span class="string">"images/lunbo/"</span> + idx + <span class="string">".jpg"</span>;</span></span><br><span class="line">    &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAN0Df.png" alt="UAN0Df.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>信号量</tag>
      </tags>
  </entry>
  <entry>
    <title>二、下拉菜单</title>
    <url>/post/f94e939c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二、下拉菜单"><a href="#二、下拉菜单" class="headerlink" title="二、下拉菜单"></a>二、下拉菜单</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">id</span>=<span class="string">"tit"</span>&gt;</span>购物<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list"</span> <span class="attr">id</span>=<span class="string">"list"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>服装<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>家电<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>饰品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>饰品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>饰品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>饰品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 清楚默认样式 */</span></span></span><br><span class="line">    * &#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    ul &#123;</span><br><span class="line">        list-style: none;</span><br><span class="line">    &#125;</span><br><span class="line">    a &#123;</span><br><span class="line">        text-decoration: none;</span><br><span class="line"><span class="css">        <span class="selector-tag">color</span>: <span class="selector-id">#333</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 盒子属性 */</span></span></span><br><span class="line">        width: 100px;</span><br><span class="line"><span class="css">        <span class="comment">/* 高度省略不写，由内容撑开 */</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css">        <span class="comment">/* 块级元素水平居中 */</span></span></span><br><span class="line">        margin: 50px auto;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-tag">h3</span> &#123;</span></span><br><span class="line">        height: 50px;</span><br><span class="line">        line-height: 50px;</span><br><span class="line"><span class="css">        <span class="comment">/* padding挤出背景图位置 */</span></span></span><br><span class="line">        padding-left: 50px;</span><br><span class="line">        background: url(images/focus_up_b.png)no-repeat 10px center;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">        height: 40px;</span><br><span class="line">        line-height: 40px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">        display: block;</span><br><span class="line">        height: 50px;</span><br><span class="line">        text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box</span> <span class="selector-tag">ul</span><span class="selector-class">.list</span> &#123;</span></span><br><span class="line">        display: none;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 让JS晚加载</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取元素对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oBox = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oTit = <span class="built_in">document</span>.getElementById(<span class="string">"tit"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oList = <span class="built_in">document</span>.getElementById(<span class="string">"list"</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标进入box，图片更改，list出现</span></span></span><br><span class="line"><span class="actionscript">    oBox.onmouseenter = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 图片更改</span></span></span><br><span class="line"><span class="actionscript">        oTit.style.backgroundImage = <span class="string">"url(images/focus_down_b.png)"</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// list出现</span></span></span><br><span class="line"><span class="actionscript">        oList.style.display = <span class="string">"block"</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 鼠标离开box，图片更改，list出现</span></span></span><br><span class="line"><span class="actionscript">    oBox.onmouseleave = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 图片更改</span></span></span><br><span class="line"><span class="actionscript">        oTit.style.backgroundImage = <span class="string">"url(images/focus_up_b.png)"</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// list隐藏</span></span></span><br><span class="line"><span class="actionscript">        oList.style.display = <span class="string">"none"</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAto9A.png" alt="UAto9A.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
        <tag>下拉菜单</tag>
      </tags>
  </entry>
  <entry>
    <title>一、DOM</title>
    <url>/post/701aa0b2.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="一、DOM"><a href="#一、DOM" class="headerlink" title="一、DOM"></a>一、<code>DOM</code></h1><h2 id="1-1-DOM整体感知"><a href="#1-1-DOM整体感知" class="headerlink" title="1.1  DOM整体感知"></a>1.1 <code>DOM</code>整体感知</h2><p>我们前面<code>JS</code>学习都是核心语言部分，也就是<code>ECMAscript</code>。一般都是在控制台，输出语句里操作。JS还包括<code>DOM</code>和<code>BOM</code>。</p><p><code>DOM</code>（<code>Document Object Model</code>，文档对象模型）描绘了一个层次化的节点树，允许开发人员添加、移除和修改页面的某一部分。</p><p><img src="https://s1.ax1x.com/2020/07/07/UkWP41.png" alt="UkWP41.png"></p><p>这使得<code>JavaScript</code>操作<code>HTML</code>，不是在操作字符串，而是在操作节点，极大的降低了编程难度。</p><p><code>DOM</code>对很多东西做了抽象，提供了丰富的<code>API</code>：</p><blockquote><p><code>取得元素</code>、<code>CSS样式</code>、<code>事件</code>、<code>运动</code>、<code>元素尺寸位置</code>、<code>节点操作</code>。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            padding: 0;</span><br><span class="line">            margin: 0;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 200px;</span><br><span class="line">            background-color: lightblue;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span> <span class="attr">id</span>=<span class="string">"box"</span>&gt;</span>盒子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/nv0.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 获取元素</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBox = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 使用变量，使用的是变量保存的值</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(oBox);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 更改样式</span></span></span><br><span class="line"><span class="actionscript">        oBox.style.width = <span class="string">"300px"</span>;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkWd5n.png" alt="UkWd5n.png"></p><h2 id="1-2-html操作"><a href="#1-2-html操作" class="headerlink" title="1.2  html操作"></a>1.2 <code>html</code>操作</h2><p><code>document</code>：表示整个文档对象，<code>document</code>具有很多的方法或者属性，通过点语法进行调用</p><h3 id="1-2-1-document-title-网页标题"><a href="#1-2-1-document-title-网页标题" class="headerlink" title="1.2.1  document.title  网页标题"></a>1.2.1 <code>document.title</code> 网页标题</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 获取网页标题  = 表示赋值</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">document</span>.title);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.title = <span class="string">"html操作"</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkWLad.png" alt="UkWLad.png"></p><h3 id="1-2-2-通过点语法获取body对象"><a href="#1-2-2-通过点语法获取body对象" class="headerlink" title="1.2.2  通过点语法获取body对象"></a>1.2.2 通过点语法获取<code>body</code>对象</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通过点语法获取body对象</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.body);</span><br><span class="line"><span class="comment">// 更改样式 = </span></span><br><span class="line"><span class="built_in">document</span>.body.style.fontSize = <span class="string">"50px"</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkfEin.png" alt="UkfEin.png"></p><h3 id="1-2-3-读取设置元素属性值"><a href="#1-2-3-读取设置元素属性值" class="headerlink" title="1.2.3  读取设置元素属性值"></a>1.2.3 读取设置元素属性值</h3><p>一般我们操作元素都是从获取元素对象开始</p><h4 id="1-2-3-1-getElementById-获取元素对象"><a href="#1-2-3-1-getElementById-获取元素对象" class="headerlink" title="1.2.3.1  getElementById()获取元素对象"></a>1.2.3.1 <code>getElementById()</code>获取元素对象</h4><ul><li><p><code>getElementById()</code>：</p><ul><li><p>调用对象：document</p></li><li><p>参数：id名。注意不要写#</p></li><li><p>返回值：元素对象</p></li></ul></li></ul><ul><li>id是唯一的，通过id获取元素对象不能更改id名。<strong>id属性是只读属性，不能更改</strong></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素对象</span></span><br><span class="line"><span class="keyword">var</span> oBox = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(oBox);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA8ain.png" alt="UA8ain.png"></p><ul><li>id可以通过点语法调用属性值，但不允许更改</li></ul><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通过点语法读取元素的属性值</span></span><br><span class="line">console.<span class="built_in">log</span>(oBox.id);         <span class="comment">// box</span></span><br></pre></td></tr></table></figure><ul><li>可以使用 <code>=</code> 进行属性值的设置</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DART"><figure class="iseeu highlight /dart"><table><tr><td class="code"><pre><span class="line">&lt;img src=<span class="string">"images/nv0.jpg"</span> alt=<span class="string">""</span> id=<span class="string">"pic"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取元素对象</span></span><br><span class="line"><span class="keyword">var</span> oPic = <span class="built_in">document</span>.getElementById(<span class="string">"pic"</span>);</span><br><span class="line"><span class="comment">// 可以使用 = 进行属性值的设置</span></span><br><span class="line">oPic.src = <span class="string">"images/001.png"</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA8rsU.png" alt="UA8rsU.png"></p><ul><li>元素对象<code>.innerHTML</code> 可以读取元素的内部文本</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line">&lt;<span class="built-in">div</span> class=<span class="string">"box"</span> id=<span class="string">"box"</span>&gt;盒子&lt;/<span class="built-in">div</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// .innerHTML 可以读取内部文本</span></span><br><span class="line">console.<span class="built-in">log</span>(oBox.innerHTML);</span><br><span class="line"><span class="comment">// 更改属性值</span></span><br><span class="line">oBox.innerHTML = <span class="string">"箱子"</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA8cdJ.png" alt="UA8cdJ.png"></p><ul><li>value：获取表单元素文本</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> value=<span class="string">"默认文本"</span> id=<span class="string">"txt"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 获取元素</span></span><br><span class="line"><span class="regexp">var oTxt = document.getElementById("txt");</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 获取value属性值</span></span><br><span class="line"><span class="regexp">console.log(oTxt.value);</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA87ee.png" alt="UA87ee.png"></p><ul><li>想获取class属性值需要改名字className</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COFFEESCRIPT"><figure class="iseeu highlight /coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span> 想获取<span class="class"><span class="keyword">class</span>属性值需要改名字<span class="title">className</span></span></span><br><span class="line"><span class="built_in">console</span>.log(oBox<span class="class">.<span class="keyword">class</span>);</span></span><br><span class="line"><span class="built_in">console</span>.log(oBox.className);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UA8vSP.png" alt="UA8vSP.png"></p><h4 id="1-2-3-2-getAttribute-获取元素属性值"><a href="#1-2-3-2-getAttribute-获取元素属性值" class="headerlink" title="1.2.3.2  getAttribute()获取元素属性值"></a>1.2.3.2 <code>getAttribute()</code>获取元素属性值</h4><ul><li><p><code>getAttribute()</code>：可以读取元素自带的属性值，还可以读取元素自定义属性值</p><ul><li><p>调用对象：元素对象</p></li><li><p>参数：属性名</p></li><li><p>返回值：属性值</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line">&lt;<span class="built-in">div</span> class=<span class="string">"box"</span> id=<span class="string">"box"</span> data-ming=<span class="string">"xiangzi"</span>&gt;盒子&lt;/<span class="built-in">div</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过点语法不能读取元素自定义属性</span></span><br><span class="line"><span class="comment">// getAttribute()可以读取自定义属性</span></span><br><span class="line">console.<span class="built-in">log</span>(oBox.getAttribute(<span class="string">"data-ming"</span>));    <span class="comment">// xiangzi</span></span><br></pre></td></tr></table></figure></div><h4 id="1-2-3-3-setAttribute-设置属性值"><a href="#1-2-3-3-setAttribute-设置属性值" class="headerlink" title="1.2.3.3  setAttribute()设置属性值"></a>1.2.3.3 <code>setAttribute()</code>设置属性值</h4><ul><li><p>setAttribute()：设置属性值</p><ul><li><p>调用对象：元素对象</p></li><li><p>参数：第一个参数：属性名 第二个参数：属性值</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置属性 setAttribute()</span></span><br><span class="line"><span class="selector-tag">oBox</span><span class="selector-class">.setAttribute</span>(<span class="string">"data-ming"</span>, <span class="string">"hezi"</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAJ0DU.png" alt="UAJ0DU.png"></p><h3 id="1-2-4-点语法、getAttribute-、setAttribute-区别"><a href="#1-2-4-点语法、getAttribute-、setAttribute-区别" class="headerlink" title="1.2.4  点语法、getAttribute()、setAttribute()区别"></a>1.2.4 <code>点语法</code>、<code>getAttribute()</code>、<code>setAttribute()</code>区别</h3><p>① 点语法只能读取，设置元素的自带属性值</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">var</span> oBox = <span class="built_in">document</span>.getElementById(<span class="string">"box"</span>);</span><br><span class="line"><span class="comment">// 点语法只能读取设置自带属性值</span></span><br><span class="line"><span class="built_in">console</span>.log(oBox.id);  <span class="comment">// box</span></span><br><span class="line"><span class="built_in">console</span>.log(oBox.data-ming);  <span class="comment">// 报错</span></span><br><span class="line"><span class="comment">// getAttribute() setAttribute()可以设置自带或者自定义属性</span></span><br><span class="line"><span class="built_in">console</span>.log(oBox.getAttribute(<span class="string">"id"</span>));  <span class="comment">// box</span></span><br><span class="line"><span class="built_in">console</span>.log(oBox.getAttribute(<span class="string">"data-ming"</span>));  <span class="comment">// xiangzi</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAYp5j.png" alt="UAYp5j.png"></p><p>② 点语法在读取属性值时可能需要改名字，<code>get</code>，<code>setAttribute()</code>不需要改名字</p><blockquote><p>class 改为 className</p></blockquote><blockquote><p>for 改为 htmlFor</p></blockquote><blockquote><p>colspan 改为 colSpan</p></blockquote><blockquote><p>rowspan 改为 rowSpan</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQF"><figure class="iseeu highlight /sqf"><table><tr><td class="code"><pre><span class="line"><span class="comment">// get不需要改名，点语法可能需要改名</span></span><br><span class="line">console.<span class="built_in">log</span>(oBox.<span class="built_in">className</span>);              <span class="comment">// box</span></span><br><span class="line">console.<span class="built_in">log</span>(oBox.getAttribute(<span class="string">"class"</span>));  <span class="comment">// box</span></span><br></pre></td></tr></table></figure></div><p>③ 点语法读取 <code>style</code>，获取的是<code>对象</code>，返回的是所有样式的集合</p><p><code>getAttribute()</code>读取<code>style</code>获取的是<code>字符串</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">// 点语法得到的是<span class="built_in">style</span>对象  <span class="built_in">get</span>得到的是字符串</span><br><span class="line">console.<span class="built_in">log</span>(typeof oBox.<span class="built_in">style</span>);</span><br><span class="line">console.<span class="built_in">log</span>(typeof oBox.getAttribute(<span class="string">"style"</span>));</span><br><span class="line">console.<span class="built_in">log</span>(oBox.<span class="built_in">style</span>);</span><br><span class="line">console.<span class="built_in">log</span>(oBox.getAttribute(<span class="string">"style"</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAYp5j.png" alt="UAYp5j.png"></p><p>④ 点语法得到的是<code>style</code>对象，可以继续打点调用其他的属性</p><p><code>getAttribute()</code>不能继续打点</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点语法style可以继续打点</span></span><br><span class="line">console.<span class="built_in">log</span>(oBox.style.<span class="built_in">width</span>);                    <span class="comment">// 300px</span></span><br><span class="line">console.<span class="built_in">log</span>(oBox.getAttribute(<span class="string">"style"</span>).<span class="built_in">width</span>);    <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure></div><h2 id="1-3-CSS操作"><a href="#1-3-CSS操作" class="headerlink" title="1.3  CSS操作"></a>1.3 <code>CSS</code>操作</h2><h3 id="1-3-1-获取样式"><a href="#1-3-1-获取样式" class="headerlink" title="1.3.1  获取样式"></a>1.3.1 获取样式</h3><p>元素对象可以通过<code>style</code>获取所有样式集合对象，可以继续打点调用属性名的元素的行内样式，而不是计算后的样式</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">.<span class="built_in">box</span> &#123;</span><br><span class="line">    <span class="built_in">width</span>: 200px;</span><br><span class="line">    <span class="built_in">height</span>: 200px;</span><br><span class="line">    <span class="built_in">background</span>-<span class="built_in">color</span>: lightblue;</span><br><span class="line">    <span class="built_in">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;div class=<span class="string">"box"</span> id=<span class="string">"box"</span> data-ming=<span class="string">"xiangzi"</span> <span class="built_in">style</span>=<span class="string">"width: 300px;height: 300px;"</span>&gt;盒子&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">// 获取元素</span><br><span class="line"><span class="built_in">var</span> oBox = document.getElementById(<span class="string">"box"</span>);</span><br><span class="line">// 通过点语法获取样式集合对象</span><br><span class="line">console.<span class="built_in">log</span>(oBox.<span class="built_in">style</span>);</span><br><span class="line">// 只能读取行内样式，不能读取计算后样式</span><br><span class="line">console.<span class="built_in">log</span>(oBox.<span class="built_in">style</span>.<span class="built_in">width</span>);</span><br><span class="line">// 数据类型为字符串</span><br><span class="line">console.<span class="built_in">log</span>(typeof oBox.<span class="built_in">style</span>.<span class="built_in">width</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAYNIH.png" alt="UAYNIH.png"></p><h3 id="1-3-2-属性更改设置"><a href="#1-3-2-属性更改设置" class="headerlink" title="1.3.2  属性更改设置"></a>1.3.2 属性更改设置</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">// 设置 = ，添加在行内，右侧属性值，写法和CSS属性值一样,有双引号</span><br><span class="line">oBox.<span class="built_in">style</span>.<span class="built_in">color</span> = <span class="string">"#000"</span>;</span><br><span class="line">// 单一属性需要改为驼峰命名法</span><br><span class="line">oBox.<span class="built_in">style</span>.backgroundColor = <span class="string">"red"</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAYsL8.png" alt="UAYsL8.png"></p><h2 id="1-4-事件"><a href="#1-4-事件" class="headerlink" title="1.4  事件"></a>1.4 事件</h2><p>事件监听：</p><blockquote><p>我们计算机在解析到我们JS代码的时候，会去看某一些元素身上是否添加了事件。随时监听这些事件有没有被触发，如果触发就立即执行相应的行为。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">onclick</span>	        <span class="string">单击</span></span><br><span class="line"><span class="attr">ondblclick</span>	    <span class="string">双击</span></span><br><span class="line"><span class="attr">onmouseenter</span>	<span class="string">鼠标进入</span></span><br><span class="line"><span class="attr">onmouseleave</span>	<span class="string">鼠标离开</span></span><br><span class="line"><span class="attr">onmousedown</span>	    <span class="string">鼠标按下</span></span><br><span class="line"><span class="attr">onmouseup</span>	    <span class="string">鼠标弹起</span></span><br><span class="line"><span class="attr">onfocus</span>	        <span class="string">获取焦点</span></span><br><span class="line"><span class="attr">onblur</span>	        <span class="string">失去焦点</span></span><br><span class="line"><span class="attr">onload</span>	        <span class="string">加载完毕之后</span></span><br></pre></td></tr></table></figure></div><h3 id="1-4-1-单击onclick"><a href="#1-4-1-单击onclick" class="headerlink" title="1.4.1  单击onclick"></a>1.4.1 单击<code>onclick</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">    &lt;input type=<span class="string">"button"</span> value=<span class="string">"点击我"</span> id=<span class="string">"btn"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 元素通过点语法绑定事件名，然后使用 = 赋值一个匿名函数</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 元素、事件名 = function()&#123;&#125;</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 获取元素对象</span></span><br><span class="line"><span class="regexp">var oBtn = document.getElementById("btn");</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 单击 onclick，点击btn，弹出内部文本</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 触发事件，函数会立即执行，不需要添加调用小括号</span></span><br><span class="line"><span class="regexp">oBtn.onclick = function()&#123;</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 除了自定义属性使用get或set，其他都是用点语法</span></span><br><span class="line"><span class="regexp">    alert(oBtn.value);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAY5Q0.png" alt="UAY5Q0.png"></p><h3 id="1-4-2-双击ondblclick"><a href="#1-4-2-双击ondblclick" class="headerlink" title="1.4.2  双击ondblclick"></a>1.4.2 双击<code>ondblclick</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">    &lt;input type=<span class="string">"button"</span> value=<span class="string">"点击我两次"</span> id=<span class="string">"btn2"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">var oBtn2 = document.getElementById("btn2");</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 双击 ondblclick，点击btn2，输出type属性值</span></span><br><span class="line"><span class="regexp">oBtn2.ondblclick = function()&#123;</span></span><br><span class="line"><span class="regexp">    console.log(oBtn2.type);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAYIyV.png" alt="UAYIyV.png"></p><h3 id="1-4-3-鼠标进入onmouseenter"><a href="#1-4-3-鼠标进入onmouseenter" class="headerlink" title="1.4.3  鼠标进入onmouseenter"></a>1.4.3 鼠标进入<code>onmouseenter</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">&lt;img src=<span class="string">"images/nv0.jpg"</span> alt=<span class="string">""</span> id=<span class="string">"pic"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> oPic = <span class="built_in">document</span>.getElementById(<span class="string">"pic"</span>);</span><br><span class="line"><span class="comment">// 鼠标进入img,img换图  onmouseenter</span></span><br><span class="line">oPic.onmouseenter = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    oPic.src = <span class="string">"images/001.png"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAYHwF.png" alt="UAYHwF.png"></p><h3 id="1-4-4-鼠标离开-onmouseleave"><a href="#1-4-4-鼠标离开-onmouseleave" class="headerlink" title="1.4.4  鼠标离开 onmouseleave"></a>1.4.4 鼠标离开 <code>onmouseleave</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 鼠标离开 恢复原图 onmouseleave</span></span><br><span class="line">oPic.onmouseleave = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    oPic.src = <span class="string">"images/nv0.jpg"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAYOY9.png" alt="UAYOY9.png"></p><h3 id="1-4-5-鼠标按下onmousedown"><a href="#1-4-5-鼠标按下onmousedown" class="headerlink" title="1.4.5  鼠标按下onmousedown"></a>1.4.5 鼠标按下<code>onmousedown</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line">&lt;a href=<span class="string">""</span> id=<span class="string">"txt"</span>&gt;我是超级链接&lt;/a&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">    &lt;input type=<span class="string">"button"</span> value=<span class="string">"点击我"</span> id=<span class="string">"btn"</span>&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> oBtn = document.getElementById(<span class="string">"btn"</span>);</span><br><span class="line"><span class="keyword">var</span> oTxt = document.getElementById(<span class="string">"txt"</span>);</span><br><span class="line"><span class="comment">//鼠标按下btn，输出a的内部文本</span></span><br><span class="line">oBtn.onmousedown = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 控制其他元素对象</span></span><br><span class="line">    console.log(oTxt.innerHTML);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAt9eO.png" alt="UAt9eO.png"></p><h3 id="1-4-6-鼠标弹起onmouseup"><a href="#1-4-6-鼠标弹起onmouseup" class="headerlink" title="1.4.6  鼠标弹起onmouseup"></a>1.4.6 鼠标弹起<code>onmouseup</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="OPENSCAD"><figure class="iseeu highlight /openscad"><table><tr><td class="code"><pre><span class="line"><span class="comment">//鼠标弹起btn，更改a的颜色，字号变大</span></span><br><span class="line">oBtn.onmouseup = <span class="function"><span class="keyword">function</span> <span class="params">()</span> &#123;</span></span><br><span class="line">    <span class="comment">// 控制其他元素对象</span></span><br><span class="line">    oTxt.style.<span class="built_in">color</span> = <span class="string">"red"</span>;</span><br><span class="line">    <span class="comment">// 右侧属性值和CSS书写一致，有单位必须书写</span></span><br><span class="line">    oTxt.style.fontSize = <span class="string">"50px"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAtPTe.png" alt="UAtPTe.png"></p><h3 id="1-4-7-获取焦点onfocus"><a href="#1-4-7-获取焦点onfocus" class="headerlink" title="1.4.7  获取焦点onfocus"></a>1.4.7 获取焦点<code>onfocus</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> value=<span class="string">"默认文本"</span> id=<span class="string">"btn"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/获取焦点 onfocus 改变边框颜色</span></span><br><span class="line"><span class="regexp">oBtn.onfocus = function()&#123;</span></span><br><span class="line"><span class="regexp">    oBtn.style.borderColor = "red";</span></span><br><span class="line"><span class="regexp">    oBtn.style.borderWidth = "10px";</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAtVSI.png" alt="UAtVSI.png"></p><h3 id="1-4-8-失去焦点onblur"><a href="#1-4-8-失去焦点onblur" class="headerlink" title="1.4.8  失去焦点onblur"></a>1.4.8 失去焦点<code>onblur</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//失去焦点 onblur img更换图片</span></span><br><span class="line">oBtn.onblur = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    oPic.src = <span class="string">"images/001.png"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAtK0S.png" alt="UAtK0S.png"></p><h3 id="1-4-9-加载完毕之后onload"><a href="#1-4-9-加载完毕之后onload" class="headerlink" title="1.4.9  加载完毕之后onload"></a>1.4.9 加载完毕之后<code>onload</code></h3><p>JS语句要书写在所有的标签最后，标签加载完毕之后，JS语句才执行。</p><p>如果JS语句书写在标签之前，JS先加载，html标签还没有加载完毕，我们没办法获取元素。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 元素通过点语法绑定事件名，然后使用 = 赋值一个匿名函数</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 元素、事件名 = function()&#123;&#125;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 获取元素对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oPic = <span class="built_in">document</span>.getElementById(<span class="string">"pic"</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> oTxt = <span class="built_in">document</span>.getElementById(<span class="string">"txt"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(oBtn);                          <span class="comment">// null</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// oBtn.onclick = function () &#123;</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">//     alert(oBtn.value);</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// &#125;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>如果书写了<code>onload</code>事件，表示JS在所有标签加载完毕之后才执行事件内部的语句。</p><p>调用对象只能是<code>window</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 想让标签加载完毕之后再执行JS语句</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 元素通过点语法绑定事件名，然后使用 = 赋值一个匿名函数</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 元素、事件名 = function()&#123;&#125;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 获取元素对象</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oBtn = <span class="built_in">document</span>.getElementById(<span class="string">"btn"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oPic = <span class="built_in">document</span>.getElementById(<span class="string">"pic"</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> oTxt = <span class="built_in">document</span>.getElementById(<span class="string">"txt"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(oBtn);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="comment">// oBtn.onclick = function () &#123;</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">//     alert(oBtn.value);</span></span></span><br><span class="line"><span class="actionscript">            <span class="comment">// &#125;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UAta0U.png" alt="UAta0U.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-DOM</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>DOM</tag>
      </tags>
  </entry>
  <entry>
    <title>三十一、结合数组观察闭包</title>
    <url>/post/d298a8cf.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="三十一、结合数组观察闭包"><a href="#三十一、结合数组观察闭包" class="headerlink" title="三十一、结合数组观察闭包"></a>三十一、结合数组观察闭包</h1><h2 id="31-1-闭包"><a href="#31-1-闭包" class="headerlink" title="31.1  闭包"></a>31.1 闭包</h2><p>函数本身就是闭包。</p><h3 id="31-1-1-函数可以记住自己定义时所处的外部环境，和内部语句，这就是闭包。"><a href="#31-1-1-函数可以记住自己定义时所处的外部环境，和内部语句，这就是闭包。" class="headerlink" title="31.1.1  函数可以记住自己定义时所处的外部环境，和内部语句，这就是闭包。"></a>31.1.1 函数可以记住自己定义时所处的外部环境，和内部语句，这就是闭包。</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">outer</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> a = <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">inner</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(a);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// inner没有小括号。表示定义语句</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(inner);</span></span><br><span class="line">    &#125;</span><br><span class="line">    outer();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkeGIU.png" alt="UkeGIU.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">outer</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> a = <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">inner</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(a);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// inner没有小括号。表示定义语句</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> inner;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 调用outer返回的是inner函数的定义，相当于将inner（）拿到外面</span></span></span><br><span class="line"><span class="actionscript">    outer();    <span class="comment">// 不显示</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(outer());</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 用 i 变量接收outer（），相当于把inner函数赋值 i</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = outer();</span></span><br><span class="line"><span class="actionscript">    i();    <span class="comment">// 10</span></span></span><br><span class="line"><span class="actionscript">    inner();  <span class="comment">// 报错</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkeNRJ.png" alt="UkeNRJ.png"></p><p>对于<code>inner</code>函数，外部环境 <code>var a = 10;</code>内部语句<code>console.log(a)</code>,不管我们把<code>inner</code>函数那到哪里，它都可以记住自己所处的外部环境（变量的作用域）和自己的内部语句。</p><p>闭包是函数天生存在的性质，不需要任何结构，只不过我们需要借助这种形式体会倒闭包。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 形参是局部变量</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">outer</span><span class="params">(x)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">inner</span><span class="params">(y)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 当前作用域没有 x 的定义，使用outer中的 x</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(x + y);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 返回inner定义</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> inner;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 将outer调用赋值给 i ，相当于将inner定义赋值的 i</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 类似于把inner拿到外部使用，能够记住自己定义时所处的外部环境 x = 10</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 类似于把inner拿到外部使用，能够记住自己定义时内部语句console.log(10 + y)</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 相当于 i = function inner(y)&#123;console.log(10 + y);&#125;</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = outer(<span class="number">10</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 调用 i函数</span></span></span><br><span class="line">    i(20, 30 ,40);</span><br><span class="line"><span class="actionscript">    <span class="comment">// 声明一次函数 i 可以多次调用</span></span></span><br><span class="line">    i(100);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/Uke6iD.png" alt="Uke6iD.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 闭包：函数能够记住定义时的外部环境和内部语句</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">outer</span><span class="params">(x, y)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">inner</span><span class="params">(y)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 作用域链根据就近原则</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(x + y);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 调用outer(x, y)，得到的是返回的inner函数</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> inner;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// i 赋值的是inner函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// outer(1, 2) : x = 1  y = 2</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = outer(<span class="number">1</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// i 是inner函数的名字，调用 i 函数， i 的实际参数是赋值给inner函数的 y</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// i (10) 调用，能够记住 x = 1 ,还可以记住内部语句 console.log(1 + y)</span></span></span><br><span class="line"><span class="actionscript">    i(<span class="number">10</span>);      <span class="comment">// 11</span></span></span><br><span class="line"><span class="actionscript">    i(<span class="number">20</span>);      <span class="comment">// 21</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="31-1-2-闭包并不是一成不变的，函数的每一次调用都会产生一个全新的闭包。"><a href="#31-1-2-闭包并不是一成不变的，函数的每一次调用都会产生一个全新的闭包。" class="headerlink" title="31.1.2  闭包并不是一成不变的，函数的每一次调用都会产生一个全新的闭包。"></a>31.1.2 闭包并不是一成不变的，函数的每一次调用都会产生一个全新的闭包。</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fun1</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> a = <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">fun2</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">            a++;</span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(a);</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 调用fun1 返回的是fun2的定义</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> fun2;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 每一次fun1调用都产生一个全新的闭包，之间互不影响</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> inn1 = fun1();</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> inn2 = fun1();</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    inn1();   <span class="comment">// 11</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 闭包的外部环境不是一成不变的，能够记住当前的新值，并参与计算</span></span></span><br><span class="line"><span class="actionscript">    inn1();   <span class="comment">// 12</span></span></span><br><span class="line"><span class="actionscript">    inn1();   <span class="comment">// 13</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 每一次fun1 调用都产生一个全新的闭包，inn1和inn2闭包互不影响</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 每一个闭包，外部环境是全新的内容，内部语句也是全新的</span></span></span><br><span class="line"><span class="actionscript">    inn2();    <span class="comment">// 11</span></span></span><br><span class="line"><span class="actionscript">    inn2();    <span class="comment">// 12</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    inn1();    <span class="comment">// 14</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="31-2-结合数组观察闭包"><a href="#31-2-结合数组观察闭包" class="headerlink" title="31.2  结合数组观察闭包"></a>31.2 结合数组观察闭包</h2><p>闭包：</p><blockquote><p>函数天生存在的性质，能够记住声明时所处的外部环境和内部语句</p></blockquote><p>数组：</p><blockquote><p>[]，数组中可以保存任何数据类型，将数组中每一项存放函数，函数内部可以书写序号</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明数组，将一些函数存放在数组中</span></span><br><span class="line"><span class="comment">// 引用数据类型保存的地址，简单数据类型保存的值</span></span><br><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> arr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">10</span> ; i++)&#123;</span><br><span class="line">    <span class="comment">// i 表示数组索引值</span></span><br><span class="line">    <span class="comment">// arr[i] = i;</span></span><br><span class="line"></span><br><span class="line">    arr[i] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">i=0,i&lt;10,为真，arr[0] = function()&#123;return i&#125;</span></span><br><span class="line"><span class="comment">i=1,i&lt;10……</span></span><br><span class="line"><span class="comment">i=10,i&lt;10，为假，结束循环</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="comment">// 读取数组中的某一项</span></span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">3</span>]);</span><br><span class="line"><span class="comment">// 查看第三项的值 函数调用()</span></span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">3</span>]());   <span class="comment">// 10</span></span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">1</span>]());   <span class="comment">// 10</span></span><br><span class="line"><span class="comment">// i = 10 结束循环，没有赋值，结果为undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">10</span>]);  <span class="comment">// undefined</span></span><br><span class="line"><span class="comment">// i 是全局变量</span></span><br><span class="line"><span class="built_in">console</span>.log(i);   <span class="comment">// 10</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkeWQA.png" alt="UkeWQA.png"></p><p>想要的结果为<code>3</code>,<code>1</code>。结果全部都是<code>10</code></p><p>由于闭包的影响，任何一个函数<code>i</code>都是记住的<code>10</code></p><p>函数天生存在闭包记住了<code>i</code>，也记住了内部语句<code>return</code>，当函数调用时，闭包不是一成不变的，<code>i</code>已经变成了<code>10</code>，所以所有函数的返回值都是<code>10</code></p><p>解决方法：</p><p>通过IIFE解决</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// IIFE 函数在声明时立即调用</span></span><br><span class="line"><span class="comment">// 声明数组</span></span><br><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line"><span class="comment">// 通过遍历书写赋值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">10</span> ; i++)&#123;</span><br><span class="line">    <span class="comment">// i 表示索引值</span></span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 用户输入a</span></span><br><span class="line">        arr[a] = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(arr);</span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">1</span>]());</span><br><span class="line"><span class="built_in">console</span>.log(arr[<span class="number">8</span>]());</span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/Uke5eP.png" alt="Uke5eP.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>函数</tag>
        <tag>IIFE</tag>
        <tag>数组</tag>
        <tag>闭包</tag>
      </tags>
  </entry>
  <entry>
    <title>三十、IIFE 即时调用函数表达式</title>
    <url>/post/e28249d7.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="三十、IIFE-即时调用函数表达式"><a href="#三十、IIFE-即时调用函数表达式" class="headerlink" title="三十、IIFE 即时调用函数表达式"></a>三十、IIFE 即时调用函数表达式</h1><p><code>IIFE</code>是一个缩写：<code>immediately-invoked function expression</code> <strong>即时调用函数表达式</strong></p><p><strong><code>IFEE</code> 表示在函数定义的时候，就立即执行</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="comment">// 声明函数</span></span><br><span class="line">        function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">            console.log(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 调用</span></span><br><span class="line">        <span class="function"><span class="title">fun</span><span class="params">()</span></span>;          <span class="comment">// 1</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p>函数名+（）调用</p><p>报错：</p><blockquote><p>因为小括号只有书写在函数名或函数表达式后面，才表示调用。不能直接书写在<code>function</code>声明后面。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        /<span class="regexp">/ 声明函数</span></span><br><span class="line"><span class="regexp">        function fun()&#123;</span></span><br><span class="line"><span class="regexp">            console.log(1);</span></span><br><span class="line"><span class="regexp">        &#125;();</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 调用</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ fun();</span></span><br><span class="line"><span class="regexp">&lt;/script</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkePKI.png" alt="UkePKI.png"></p><p><strong><code>()</code>可以直接书写在函数表达式后面表示调用</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// ()可以直接书写在函数表达式后面表示调用</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> fun = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="number">1</span>);</span></span><br><span class="line"><span class="actionscript">        &#125;();                    <span class="comment">// 1</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>可以将<code>function</code>关键字这种通过数学运算符转换为函数表达式，比如<code>+</code>，<code>-</code>，<code>！</code>，<code>（）</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 可以通过 + - 等，将function转为表达式</span></span></span><br><span class="line"><span class="actionscript">    + <span class="function"><span class="keyword">function</span> <span class="title">fun1</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="number">10</span>);</span></span><br><span class="line">    &#125;();</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 小括号</span></span></span><br><span class="line"><span class="actionscript">    (<span class="function"><span class="keyword">function</span> <span class="title">fun2</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="number">100</span>);</span></span><br><span class="line">    &#125;)();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkeFqP.png" alt="UkeFqP.png"></p><p><strong>一般我们实际使用，将一个匿名函数书写在小括号中，然后立即调用。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 实际使用 IIFE 是将匿名函数书写在小括号中转为函数表达式，再书写调用小括号</span></span><br><span class="line">        (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="number">1000</span>);              <span class="comment">// 1000</span></span><br><span class="line">        &#125;)();</span><br></pre></td></tr></table></figure></div><p><strong>IIFE 作用域：只能在IIFE中使用，在外部不能再次访问该函数。</strong></p><p><strong>IIFE也可以关住变量、函数的作用域。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DELPHI"><figure class="iseeu highlight /delphi"><table><tr><td class="code"><pre><span class="line"><span class="comment">// IIFE 能够关住变量、函数的作用域</span></span><br><span class="line">        (<span class="function"><span class="keyword">function</span> <span class="title">fun4</span><span class="params">()</span><span class="comment">&#123;</span></span></span><br><span class="line"><span class="function"><span class="comment">            var a = 20;</span></span></span><br><span class="line"><span class="function"><span class="comment">            console.log(a);</span></span></span><br><span class="line"><span class="function"><span class="comment">        &#125;</span>)<span class="params">()</span>;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 变量作用域</span></span><br><span class="line">        console.log(a);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkeEa8.png" alt="UkeEa8.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DELPHI"><figure class="iseeu highlight /delphi"><table><tr><td class="code"><pre><span class="line"><span class="comment">// IIFE 能够关住变量、函数的作用域</span></span><br><span class="line">        (<span class="function"><span class="keyword">function</span> <span class="title">fun4</span><span class="params">()</span><span class="comment">&#123;</span></span></span><br><span class="line"><span class="function"><span class="comment">            var a = 20;</span></span></span><br><span class="line"><span class="function"><span class="comment">            console.log(a);</span></span></span><br><span class="line"><span class="function"><span class="comment">        &#125;</span>)<span class="params">()</span>;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 函数作用域</span></span><br><span class="line">        fun4();</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/Ukeuxs.png" alt="Ukeuxs.png"></p><p><strong>IIFE实参书写在调用小括号中</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// IIFE实参书写在调用小括号中</span></span><br><span class="line">(function(a, b)&#123;</span><br><span class="line">    console.log(a + b);         <span class="comment">// 8</span></span><br><span class="line">&#125;)(<span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span> ,<span class="number">22</span>);</span><br></pre></td></tr></table></figure></div><p><strong>IIFE函数内部书写return可以作为实际参数参与计算。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCILAB"><figure class="iseeu highlight /scilab"><table><tr><td class="code"><pre><span class="line"><span class="comment">// IIFE 内部也可以使用return，作为实际参数参与其他计算</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(a, b, c)</span>&#123;</span></span><br><span class="line">    <span class="comment">// a,b 中的最大值和 c 相加</span></span><br><span class="line">    <span class="comment">// IIFE 求 a , b 较大值</span></span><br><span class="line">    <span class="keyword">return</span> c + (<span class="function"><span class="keyword">function</span><span class="params">()</span>&#123;</span></span><br><span class="line">        <span class="comment">// 返回 a , b 中的最大值（三元表达式：如果 a&gt;b为真，则取 a; 为假，则取 b)</span></span><br><span class="line">        <span class="keyword">return</span> a &gt; b ? a : b;  <span class="comment">// 内部可以调用外部的值</span></span><br><span class="line">    &#125;)();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">sum</span>(<span class="number">1</span>, <span class="number">5</span> ,<span class="number">9</span>));   <span class="comment">// 14</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>函数</tag>
        <tag>IIFE</tag>
      </tags>
  </entry>
  <entry>
    <title>二十九、函数的重载及arguments介绍</title>
    <url>/post/f9a30f5f.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十九、函数的重载及arguments介绍"><a href="#二十九、函数的重载及arguments介绍" class="headerlink" title="二十九、函数的重载及arguments介绍"></a>二十九、函数的重载及<code>arguments</code>介绍</h1><h2 id="29-1-函数的重载"><a href="#29-1-函数的重载" class="headerlink" title="29.1  函数的重载"></a>29.1 函数的重载</h2><p>重载的概念：</p><blockquote><p>在一个程序中，声明多个函数名相同，参数类型及参数的个数不同的函数，叫函数的重载。表示不同函数</p></blockquote><p>但是，在<code>JS</code>中，没有重载的概念，因为声明多个相同的函数名时，后面的会覆盖前面的相同函数名。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 求不同数量的数值的和</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum1</span><span class="params">(num1, num2)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> result = num1 + num2;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(result);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    sum1(<span class="number">10</span>, <span class="number">20</span>);        <span class="comment">// NaN  undefined</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum1</span><span class="params">(num1, num2, num3)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> result = num1 + num2 + num3;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(result);</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(num3);  <span class="comment">// 当实参的数量，小于形参的数量，前面的会依次匹配，后面不够的会认为是undefined</span></span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    sum1(<span class="number">10</span>, <span class="number">20</span>);   <span class="comment">// NaN  undefined</span></span></span><br><span class="line"><span class="actionscript">    sum1(<span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>);   <span class="comment">// 90  40</span></span></span><br><span class="line"><span class="actionscript">    sum1(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>); <span class="comment">// 60  30</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 在JS中，没有重载的概念，因为声明多个相同的函数名时，后面的会覆盖前面的相同函数名。不会出现重载的问题</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 当实参的数量，小于形参的数量，前面的会依次匹配，后面不够的会认为是undefined</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 当实参的数量，多余形参的数量，前面的会依次匹配，多余的实参不要了</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkZlND.png" alt="UkZlND.png"></p><ul><li><p>在JS中，没有重载的概念，因为声明多个相同的函数名时，后面的会覆盖前面的相同函数名。不会出现重载的问题</p></li><li><p>当实参的数量，小于形参的数量，前面的会依次匹配，后面不够的会认为是<code>undefined</code></p></li><li><p>当实参的数量，多余形参的数量，前面的会依次匹配，多余的实参不要了</p></li></ul><h2 id="29-2-arguments模拟函数的重载"><a href="#29-2-arguments模拟函数的重载" class="headerlink" title="29.2  arguments模拟函数的重载"></a>29.2 <code>arguments</code>模拟函数的重载</h2><p>我们可以通过<code>arguments</code>来模拟函数的重载。</p><h3 id="29-2-1-arguments对象"><a href="#29-2-1-arguments对象" class="headerlink" title="29.2.1  arguments对象"></a>29.2.1 <code>arguments</code>对象</h3><p><code>arguments</code>对象是我们JS中一个特殊的对象，它是一个类数组，具有索引值，索引从<code>0</code>开始依次递增。通过索引可以获取到对应的值。</p><p>具有属性<code>length</code>，获取参数的数量。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    /* arguments对象是我们JS中一个特殊的对象，它是一个类数组，具有索引值，索引从0开始依次递增。通过索引可以获取到对*应的值。</span><br><span class="line">    *具有属性length，获取参数的数量。 </span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fn</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">"arguments.length"</span>, <span class="built_in">arguments</span>.length);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="built_in">arguments</span>.length ; i++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"对应的索引"</span>, i, <span class="string">"的参数为："</span>, <span class="built_in">arguments</span>[i]);  <span class="comment">// [i]表示类数组</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 调用fn()</span></span></span><br><span class="line"><span class="actionscript">    fn();   <span class="comment">// arguments.length 0      长度为 0，代表没有参数</span></span></span><br><span class="line"><span class="actionscript">    fn(<span class="number">1</span>);  <span class="comment">// arguments.length 1      长度为 1，代表有 1 个参数</span></span></span><br><span class="line"><span class="actionscript">    fn(<span class="number">1</span>, <span class="string">"Hello"</span>);  <span class="comment">// arguments.length 2      长度为 2，代表有 2 个参数</span></span></span><br><span class="line"><span class="actionscript">    fn(<span class="number">1</span>, <span class="string">"Hello"</span>, <span class="number">10</span>, <span class="number">30</span>);  <span class="comment">// arguments.length 4      长度为 4，代表有 4 个参数 </span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkZYjI.png" alt="UkZYjI.png"></p><p><code>arguments</code>是函数内部自带的类数组对象。保存的是函数执行时的实际参数。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明函数</span></span><br><span class="line"><span class="comment">// 声明语句中书写的参数是形参</span></span><br><span class="line">function <span class="function"><span class="title">fun</span><span class="params">(a,b,c)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 函数内部自带的对象</span></span><br><span class="line">    console.log(arguments);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 函数执行，书写的是实参</span></span><br><span class="line"><span class="function"><span class="title">fun</span><span class="params">(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">45</span>,<span class="number">5</span>,<span class="number">6</span>)</span></span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkZaHf.png" alt="UkZaHf.png"></p><ul><li><p>数据类型是对象</p></li><li><p>在读取数据时和数组方式相同</p></li><li><p>保存的是函数执行时的实际参数。</p></li></ul><p>数据类型</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="built_in">arguments</span>);</span><br></pre></td></tr></table></figure></div><p>读取 索引值从0开始</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="selector-tag">arguments</span><span class="selector-attr">[0]</span>);</span><br></pre></td></tr></table></figure></div><p>赋值</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">arguments</span>[<span class="number">0</span>] = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br></pre></td></tr></table></figure></div><p><code>length</code>也可以使用</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">console.<span class="built_in">log</span>(arguments.<span class="built_in">length</span>);</span><br></pre></td></tr></table></figure></div><p>不能通过索引值将<code>arguments</code>拉长</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">arguments</span>[<span class="number">10</span>] = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">arguments</span>.length);</span><br></pre></td></tr></table></figure></div><p><code>arguments</code>只能通过<code>length</code>将<code>arguments</code>拉长</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">arguments</span>.length = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">arguments</span>.length);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">arguments</span>);</span><br></pre></td></tr></table></figure></div><p>可以通过<code>length</code>进行遍历</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MATLAB"><figure class="iseeu highlight /matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(var <span class="built_in">i</span> = <span class="number">0</span> ; <span class="built_in">i</span> &lt;=arguments.<span class="built_in">length</span> - <span class="number">1</span> ; <span class="built_in">i</span>++)&#123;</span><br><span class="line">    console.<span class="built_in">log</span>(arguments[<span class="built_in">i</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkZ0US.png" alt="UkZ0US.png"></p><p>不是所有数组的方法<code>arguments</code>都可以使用</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">arguments.slice(<span class="number">1</span>,<span class="number">5</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkZfET.png" alt="UkZfET.png"></p><h3 id="29-2-2-使用arguments对象模拟函数的重载"><a href="#29-2-2-使用arguments对象模拟函数的重载" class="headerlink" title="29.2.2  使用arguments对象模拟函数的重载"></a>29.2.2 使用<code>arguments</code>对象模拟函数的重载</h3><p>通过<code>arguments</code>对象可以遍历到每一个参数。那么此时思考通过这个特殊的参数，来进行不同数量的数值的求和。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 通过arguments对象可以遍历到每一个参数。那么此时思考通过这个特殊的参数，来进行不同数量的数值的求和。</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> count = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.group(<span class="string">"开始"</span> + count++);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="built_in">arguments</span>.length ; i++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="built_in">arguments</span>[i]);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.groupEnd();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sum(10);</span><br><span class="line">    sum(10, 20);</span><br><span class="line">    sum(10, 20, 30, 40);</span><br><span class="line">    sum(10, 20, 30);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkZo8J.png" alt="UkZo8J.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 通过arguments对象可以遍历到每一个参数。那么此时思考通过这个特殊的参数，来进行不同数量的数值的求和。</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> count = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> result = <span class="number">0</span> ;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.group(<span class="string">"开始"</span> + count++);</span></span><br><span class="line"><span class="javascript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="built_in">arguments</span>.length ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 将遍历到的每个参数数值累加到result里</span></span></span><br><span class="line"><span class="javascript">        result += <span class="built_in">arguments</span>[i];  <span class="comment">// result = result + arguments[i]</span></span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(result);</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.groupEnd();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sum(10);</span><br><span class="line">    sum(10, 20);</span><br><span class="line">    sum(10, 20, 30, 40);</span><br><span class="line">    sum(10, 20, 30);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkZ7vR.png" alt="UkZ7vR.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCILAB"><figure class="iseeu highlight /scilab"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明函数</span></span><br><span class="line"><span class="comment">// 参数：3个，数字</span></span><br><span class="line"><span class="comment">// 返回值：加和</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(a,b,c)</span>&#123;</span></span><br><span class="line">    <span class="comment">// 分情况 </span></span><br><span class="line">    <span class="keyword">if</span>(arguments.<span class="built_in">length</span> === <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (arguments.<span class="built_in">length</span> === <span class="number">3</span>)&#123;</span><br><span class="line">        <span class="comment">// a,b较大值和c相加</span></span><br><span class="line">        <span class="keyword">return</span> (a &gt; b ? a : b) + c;  <span class="comment">// 三元表达式 a&gt;b 为真取a,为假取b</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"输入有误"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">sum</span>(<span class="number">2</span>,<span class="number">3</span>));  <span class="comment">// 5    2+3</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">sum</span>(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>));  <span class="comment">// 7    3+4</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">sum</span>(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>));  <span class="comment">// 输入有误</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">sum</span>());  <span class="comment">// 输入有误</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkZXVK.png" alt="UkZXVK.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明函数</span></span><br><span class="line"><span class="comment">// 参数：3个，数字</span></span><br><span class="line"><span class="comment">// 返回值：加和</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">a,b,c</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 使用switch语句</span></span><br><span class="line">    <span class="keyword">switch</span>(<span class="built_in">arguments</span>.length)&#123;</span><br><span class="line">    <span class="comment">// 如果是2个实参</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> (a &lt; b ? b : a) + c;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="comment">// 以上情况都不是</span></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"输入有误"</span>);    <span class="comment">// 手动模拟报错</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">2</span>,<span class="number">3</span>));  <span class="comment">// 5    2+3</span></span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>));  <span class="comment">// 7    3+4</span></span><br><span class="line"><span class="built_in">console</span>.log(sum(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>));  </span><br><span class="line"><span class="built_in">console</span>.log(sum());</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/Uke9xA.png" alt="Uke9xA.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>函数</tag>
        <tag>重载</tag>
        <tag>arguments</tag>
      </tags>
  </entry>
  <entry>
    <title>二十八、正则术语</title>
    <url>/post/ff7c4078.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十八、正则术语"><a href="#二十八、正则术语" class="headerlink" title="二十八、正则术语"></a>二十八、正则术语</h1><p>正则表达式是由普通字符和特殊字符组成</p><p>普通字符：<code>字母</code>、<code>数字</code></p><p>特殊字符：具有特殊含义的字符<code>()</code> <code>[]</code> <code>{}</code> <code>+</code> <code>?</code> <code>*</code> <code>.</code></p><p><strong>如果相匹配特殊字符，需要添加转义：<code>\</code></strong></p><h2 id="28-1-精确匹配"><a href="#28-1-精确匹配" class="headerlink" title="28.1  精确匹配"></a>28.1 精确匹配</h2><p>只匹配普通字符就是精确匹配</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 精确匹配只含有普通字符</span></span><br><span class="line">var <span class="built_in">str</span> = <span class="string">"abchhhhabcjjbca"</span>;</span><br><span class="line"><span class="comment">// 将字符串所有abc进行输出</span></span><br><span class="line"><span class="comment">// /abc/含义：匹配字符必须含有 a, b, c 三个字符；同时 abc组合顺序不能改变</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/abc/g));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPRqI0.png" alt="UPRqI0.png"></p><h2 id="28-2-特殊预定义字符"><a href="#28-2-特殊预定义字符" class="headerlink" title="28.2  特殊预定义字符"></a>28.2 特殊预定义字符</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LIVESCRIPT"><figure class="iseeu highlight /livescript"><table><tr><td class="code"><pre><span class="line"><span class="string">\t</span>  ：制表符</span><br><span class="line"><span class="string">\n</span>  ：回车符</span><br></pre></td></tr></table></figure></div><h2 id="28-3-字符集"><a href="#28-3-字符集" class="headerlink" title="28.3  字符集"></a>28.3 字符集</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CS"><figure class="iseeu highlight /cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta"></span>] ：表示字符集，用于字符可能性匹配</span><br></pre></td></tr></table></figure></div><h3 id="28-3-1-简单字符集-abc"><a href="#28-3-1-简单字符集-abc" class="headerlink" title="28.3.1  简单字符集 [abc]"></a>28.3.1 简单字符集 <code>[abc]</code></h3><p>简单字符集：将所有的可能性直接书写在中括号内部，一次中括号只能匹配一个结果</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"abcncjahckajayck"</span>;</span><br><span class="line"><span class="comment">// 将 abc, ahc, ayc 字符串匹配到</span></span><br><span class="line"><span class="comment">// [bhy] 表示能够匹配 b,能够匹配 h,能够匹配 y</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/a[bhy]c/g));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPWAJK.png" alt="UPWAJK.png"></p><h3 id="28-3-2-范围类-0-9"><a href="#28-3-2-范围类-0-9" class="headerlink" title="28.3.2  范围类 [0-9]"></a>28.3.2 范围类 <code>[0-9]</code></h3><p>范围类：将同种数据书写在一起，用<code>-</code>连接。比如<code>[0-9]</code> <code>[a-z]</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 范围类：使用 - 连接</span></span><br><span class="line"><span class="keyword">var</span> str2 = <span class="string">"abcncajcjahckajayck"</span></span><br><span class="line"><span class="built_in">console</span>.log(str2.match(<span class="regexp">/a[a-z]c/g</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/Uifyiq.png" alt="Uifyiq.png"></p><h3 id="28-3-3-组合类-0-9a-z"><a href="#28-3-3-组合类-0-9a-z" class="headerlink" title="28.3.3  组合类 [0-9a-z]"></a>28.3.3 组合类 <code>[0-9a-z]</code></h3><p>组合类：不同范围匹配。比如<code>[0-9a-z]</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 组合类</span></span><br><span class="line"><span class="keyword">var</span> str2 = <span class="string">"abcnca9cjahckaja7ck"</span></span><br><span class="line"><span class="built_in">console</span>.log(str2.match(<span class="regexp">/a[0-9a-z]c/g</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UifveH.png" alt="UifveH.png"></p><h3 id="28-3-4-负向类-0-9"><a href="#28-3-4-负向类-0-9" class="headerlink" title="28.3.4  负向类 [^0-9]"></a>28.3.4 负向类 <code>[^0-9]</code></h3><p>负向类：表示不含有这些可能性 用 <code>[^]</code> 表示，紧挨着左中括号书写在后面</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 负向类</span></span><br><span class="line"><span class="keyword">var</span> str2 = <span class="string">"abcnca9cjahckaja7ckaHc"</span></span><br><span class="line"><span class="built_in">console</span>.log(str2.match(<span class="regexp">/a[^0-9]c/g</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/Uihnkn.png" alt="Uihnkn.png"></p><h2 id="28-4-修饰符"><a href="#28-4-修饰符" class="headerlink" title="28.4  修饰符"></a>28.4 修饰符</h2><p>正则表达式可以在<code>//</code>后面书写修饰符</p><h3 id="28-4-1-g-全局匹配"><a href="#28-4-1-g-全局匹配" class="headerlink" title="28.4.1  //g 全局匹配"></a>28.4.1 <code>//g</code> 全局匹配</h3><p>g：表示全局匹配，当匹配到第一个满足条件的字符串不会停止，继续匹配所有满足条件的字符串。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"abcncjahckajayck"</span>;</span><br><span class="line"><span class="comment">// 将 abc, ahc, ayc 字符串匹配到</span></span><br><span class="line"><span class="comment">// [bhy] 表示能够匹配 b,能够匹配 h,能够匹配 y</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/a[bhy]c/g));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UihQpV.png" alt="UihQpV.png"></p><h3 id="28-4-2-i-对大小写不敏感"><a href="#28-4-2-i-对大小写不敏感" class="headerlink" title="28.4.2  //i 对大小写不敏感"></a>28.4.2 <code>//i</code> 对大小写不敏感</h3><p>i ：js严格区分大小写，如果书写i表示对大小写不敏感</p><p>修饰符可以书写多个</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span> i 表示对大小写不敏感</span><br><span class="line">var str2 = <span class="string">"aBcncjahckajaYck"</span>;</span><br><span class="line"><span class="regexp">//</span> [a-z]表示所有的小写字母</span><br><span class="line">console.log(str2.match(<span class="regexp">/a[a-z]c/g</span>));    <span class="regexp">//</span> [<span class="string">"ahc"</span>]</span><br><span class="line"><span class="regexp">//</span> i 表示对大小写不敏感</span><br><span class="line">console.log(str2.match(<span class="regexp">/a[a-z]c/gi</span>));   <span class="regexp">//</span> [<span class="string">"aBc"</span>, <span class="string">"ahc"</span>, <span class="string">"aYc"</span>]</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UihDXD.png" alt="UihDXD.png"></p><h2 id="28-5-量词"><a href="#28-5-量词" class="headerlink" title="28.5  量词"></a>28.5 量词</h2><p>用于处理紧密相连的多个同类的字符</p><h3 id="28-5-1-n-：硬性量词"><a href="#28-5-1-n-：硬性量词" class="headerlink" title="28.5.1  {n}：硬性量词"></a>28.5.1 <code>{n}</code>：硬性量词</h3><p><code>{n}</code>：硬性量词。表示该字符连续出现<code>n</code>次。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"abbbcabbbbbc"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/abbbc/g));</span><br><span class="line"><span class="comment">// b&#123;3&#125; 表示 b 连续出现3次</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/ab&#123;<span class="number">3</span>&#125;c/g));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UihqNn.png" alt="UihqNn.png"></p><h3 id="28-5-2-n-m-：软性量词"><a href="#28-5-2-n-m-：软性量词" class="headerlink" title="28.5.2  {n,m} ：软性量词"></a>28.5.2 <code>{n,m}</code> ：软性量词</h3><p><code>{n,m}</code> ：软性量词。表示字符连续出现至少<code>n</code>次，最多不能超过<code>m</code>次</p><h3 id="28-5-3-n-：至少出现n次，最多没有限制"><a href="#28-5-3-n-：至少出现n次，最多没有限制" class="headerlink" title="28.5.3  {n,} ：至少出现n次，最多没有限制"></a>28.5.3 <code>{n,}</code> ：至少出现<code>n</code>次，最多<code>没有限制</code></h3><p><code>{n,}</code> ：至少出现n次，最多没有限制</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"abbbcabbbbbcabbbbbbbbbbbbbbbc"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/abbbc/g));</span><br><span class="line"><span class="comment">// b&#123;3&#125; 表示 b 连续出现3次</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/ab&#123;<span class="number">3</span>&#125;c/g));</span><br><span class="line"></span><br><span class="line"><span class="comment">// &#123;n,m&#125;出现次数 n~m次</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/ab&#123;<span class="number">3</span>,<span class="number">9</span>&#125;c/g));</span><br><span class="line"><span class="comment">//&#123;n,&#125;至少出现 n 次，最多没有限制</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/ab&#123;<span class="number">3</span>,&#125;c/g));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/Ui4Xad.png" alt="Ui4Xad.png"></p><h3 id="28-5-4-：表示至少出现1次"><a href="#28-5-4-：表示至少出现1次" class="headerlink" title="28.5.4  + ：表示至少出现1次"></a>28.5.4 <code>+</code> ：表示至少出现<code>1</code>次</h3><p><code>+</code> ：表示至少出现1次。等价于 <code>{1,}</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"acabcabbbcabbbbbcabbbbbbbbbbbbbbbc"</span>;</span><br><span class="line"><span class="comment">// + 表示只是少出现一次  等价于 &#123;1,&#125;</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/ab+c/g));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/Ui5Zin.png" alt="Ui5Zin.png"></p><h3 id="28-5-5-：表示出现-0-或-1-次"><a href="#28-5-5-：表示出现-0-或-1-次" class="headerlink" title="28.5.5  ? ：表示出现 0 或 1 次"></a>28.5.5 <code>?</code> ：表示出现 0 或 1 次</h3><p><code>?</code> ：表示出现 0 或 1 次 等价于 <code>{0,1}</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"acabcabbbcabbbbbcabbbbbbbbbbbbbbbc"</span>;</span><br><span class="line"><span class="comment">// ? 表示出现 0 或 1 次  等价于 &#123;0,1&#125;</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/ab?c/g));</span><br></pre></td></tr></table></figure></div><h3 id="28-5-6-：表示出现任意次"><a href="#28-5-6-：表示出现任意次" class="headerlink" title="28.5.6  *：表示出现任意次"></a>28.5.6 <code>*</code>：表示出现任意次</h3><p><code>*</code>：表示出现任意次 等价于<code>{0,}</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"acabcabbbcabbbbbcabbbbbbbbbbbbbbbc"</span>;</span><br><span class="line"><span class="comment">// * 表示出现任意次  等价于 &#123;0,&#125;</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/ab*c/g));</span><br></pre></td></tr></table></figure></div><h2 id="28-6-边界"><a href="#28-6-边界" class="headerlink" title="28.6  边界"></a>28.6 边界</h2><h3 id="28-6-1-开头匹配"><a href="#28-6-1-开头匹配" class="headerlink" title="28.6.1  ^ 开头匹配"></a>28.6.1 <code>^</code> 开头匹配</h3><p><code>^</code> ：书写在正则表达式<code>最左侧</code>，表示开头匹配。表示能够匹配<code>^</code>后面所有字符作为开头。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"abciabc"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/abc/g));</span><br><span class="line"><span class="comment">// ^ 开头匹配</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/^abc/g));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/Ui5fOS.png" alt="Ui5fOS.png"></p><h3 id="28-6-2-结尾匹配"><a href="#28-6-2-结尾匹配" class="headerlink" title="28.6.2  $ 结尾匹配"></a>28.6.2 <code>$</code> 结尾匹配</h3><p><code>$</code>：结尾匹配，书写在正则表达式<code>最右侧</code>。表示以<code>$</code>前面所有的字符作为结尾匹配。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"abbcdciabcd"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/bcd/g));</span><br><span class="line"><span class="comment">// $ 结尾匹配</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/bcd$/g));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UiIFl6.png" alt="UiIFl6.png"></p><h3 id="28-6-3-案例"><a href="#28-6-3-案例" class="headerlink" title="28.6.3  ^$案例"></a>28.6.3 <code>^$</code>案例</h3><p>① 不加边界 字数超了仍显示正确</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 验证号码正确性 000-1234567 没有其他字符</span></span><br><span class="line">var str = prompt(<span class="string">"请输入本地号码"</span>);</span><br><span class="line"><span class="comment">// 验证号码正确性</span></span><br><span class="line"><span class="keyword">if</span>(/[<span class="number">0</span><span class="number">-9</span>]&#123;<span class="number">3</span>&#125;-[<span class="number">0</span><span class="number">-9</span>]&#123;<span class="number">7</span>&#125;/.test(str))&#123;</span><br><span class="line">    alert(<span class="string">"正确"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    prompt(<span class="string">"您输入的号码有误，请重新输入"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UiInkd.png" alt="UiInkd.png"></p><p>② 添加边界</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 验证号码正确性 000-1234567 没有其他字符</span></span><br><span class="line">var str = prompt(<span class="string">"请输入本地号码"</span>);</span><br><span class="line"><span class="comment">// 验证号码正确性</span></span><br><span class="line"><span class="comment">// test()检测字符串中是否含有正则匹配</span></span><br><span class="line"><span class="comment">// test()在检测时必须添加^$字符才可以正确匹配</span></span><br><span class="line"><span class="keyword">if</span>(/^[<span class="number">0</span><span class="number">-9</span>]&#123;<span class="number">3</span>&#125;-[<span class="number">0</span><span class="number">-9</span>]&#123;<span class="number">7</span>&#125;$/.test(str))&#123;</span><br><span class="line">    alert(<span class="string">"正确"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    prompt(<span class="string">"您输入的号码有误，请重新输入"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UioiNj.png" alt="UioiNj.png"></p><h3 id="28-6-4-b-单词边界"><a href="#28-6-4-b-单词边界" class="headerlink" title="28.6.4  \b 单词边界"></a>28.6.4 <code>\b</code> 单词边界</h3><p><code>\b</code> ：表示单词边界。匹配位于单词开头或者结尾字符</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"hello world"</span>;</span><br><span class="line"><span class="comment">// \b 单词边界 位于单词的开头，连续多个字符。空格不算字符，斩断。然后继续开始</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/\b[a-z]+/g));</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/[a-z]+\b/g));</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/\b[a-z]+\b/g));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UioGgx.png" alt="UioGgx.png"></p><h3 id="28-6-5-B-非单词边界"><a href="#28-6-5-B-非单词边界" class="headerlink" title="28.6.5  \B 非单词边界"></a>28.6.5 <code>\B</code> 非单词边界</h3><p><code>\B</code> 非单词边界，不位于单词的开头或者结尾匹配</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line"><span class="comment">// \B 非单词边界，不位于单词的开头或者结尾匹配</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/\B[a-z]+\B/g));</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/\B[a-z]+/g));</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">match</span>(/[a-z]+\B/g));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UioDPA.png" alt="UioDPA.png"></p><h2 id="28-7-预定义类"><a href="#28-7-预定义类" class="headerlink" title="28.7  预定义类"></a>28.7 预定义类</h2><p>字符集特殊写法</p><ul><li><p><code>.</code> ：除了回车和换行之外的所有字符</p></li><li><p><code>\w</code> ：所有的单词字符字母，数字，下划线_</p></li><li><p><code>\W</code> ：非单词字符</p></li><li><p><code>\d</code> ：数字</p></li><li><p><code>\D</code> ：非数字</p></li><li><p><code>\s</code> ：所有空白字符，比如空格、缩进</p></li><li><p><code>\S</code> ：非空白字符</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>  .  ：除了回车和换行之外的所有字符  .+ 表示连续除了回车和换行之外的所有字符</span><br><span class="line">console.log(<span class="string">"jfjjfj      &amp;56JJJ"</span>.match(<span class="regexp">/.+/g</span>));    <span class="regexp">//</span> [<span class="string">"jfjjfj      &amp;56JJJ"</span>]</span><br><span class="line"><span class="regexp">//</span> \w  ：所有的单词字符字母，数字，下划线_</span><br><span class="line">console.log(<span class="string">"jf---7888      &amp;56J_JJ"</span>.match(<span class="regexp">/\w+/g</span>));  <span class="regexp">//</span> [<span class="string">"jf"</span>, <span class="string">"7888"</span>, <span class="string">"56J_JJ"</span>]</span><br><span class="line"><span class="regexp">//</span> \W  ：非单词字符</span><br><span class="line">console.log(<span class="string">"jf---7888      &amp;56J_JJ"</span>.match(<span class="regexp">/\W+/g</span>));  <span class="regexp">//</span>  [<span class="string">"---"</span>, <span class="string">"      &amp;"</span>]</span><br><span class="line"><span class="regexp">//</span> \d  ：数字</span><br><span class="line">console.log(<span class="string">"jf---7888      &amp;56J_JJ"</span>.match(<span class="regexp">/\d+/g</span>));  <span class="regexp">//</span>  [<span class="string">"7888"</span>, <span class="string">"56"</span>]</span><br><span class="line"><span class="regexp">//</span> \D  ：非数字</span><br><span class="line">console.log(<span class="string">"jf---7888      &amp;56J_JJ"</span>.match(<span class="regexp">/\D+/g</span>));  <span class="regexp">//</span> [<span class="string">"jf---"</span>, <span class="string">"      &amp;"</span>, <span class="string">"J_JJ"</span>]</span><br><span class="line"><span class="regexp">//</span> \s  ：所有空白字符，比如空格、缩进</span><br><span class="line">console.log(<span class="string">"jf---7888      &amp;56J_JJ"</span>.match(<span class="regexp">/\s+/g</span>));  <span class="regexp">//</span> [<span class="string">"      "</span>]</span><br><span class="line"><span class="regexp">//</span> \S  ：非空白字符</span><br><span class="line">console.log(<span class="string">"jf---7888      &amp;56J_JJ"</span>.match(<span class="regexp">/\S+/g</span>));  <span class="regexp">//</span> [<span class="string">"jf---7888"</span>, <span class="string">"&amp;56J_JJ"</span>]</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkVEOP.png" alt="UkVEOP.png"></p><h2 id="28-8-或操作符"><a href="#28-8-或操作符" class="headerlink" title="28.8  或操作符"></a>28.8 或操作符</h2><p><code>|</code> ：表示或操作符</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// a| b 表示或者是 a 或者是 b</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="string">"bccccac"</span>.match(/(a<span class="string">|b)c/g));  // ["</span>bc<span class="string">", "</span>ac<span class="string">"]</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/07/UkV0p9.png" alt="UkV0p9.png"></p><h2 id="28-9-分组匹配"><a href="#28-9-分组匹配" class="headerlink" title="28.9  分组匹配"></a>28.9 分组匹配</h2><p><code>()</code> ：用于匹配连续多个字符，小括号表示整体</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span> 匹配 abcabc (abc)&#123;<span class="number">2</span>&#125;表示abc这个整体连续出现 <span class="number">2</span>次</span><br><span class="line">console.log(<span class="string">"abcabc12abc34abcabcabc56"</span>.match(<span class="regexp">/(abc)&#123;2&#125;/g</span>));  <span class="regexp">//</span>  [<span class="string">"abcabc"</span>, <span class="string">"abcabc"</span>]</span><br></pre></td></tr></table></figure></div><h2 id="28-10-分组反向引用"><a href="#28-10-分组反向引用" class="headerlink" title="28.10  分组反向引用"></a>28.10 分组反向引用</h2><h3 id="28-10-1-编码-正则内再次使用"><a href="#28-10-1-编码-正则内再次使用" class="headerlink" title="28.10.1  \编码 正则内再次使用"></a>28.10.1 <code>\编码</code> 正则内再次使用</h3><p><code>\编码</code>（每一个小括号对应一个编码，<code>不表示次数</code>，从1、2、3、……）：</p><p>分组匹配到的字符串，可以在正则内部再次使用</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// \编码（每一个小括号对应一个编码，不表示次数，从1、2、3、……）：</span></span><br><span class="line"><span class="comment">// 分组匹配到的字符串，可以在正则内部再次使用</span></span><br><span class="line"><span class="comment">// (abc)\1 表示匹配到abc并再次匹配bac，相当于abcabc</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"abcabc12abc34abcabcabc56"</span>.match(<span class="regexp">/(abc)\1/g</span>));  <span class="comment">// ["abcabc", "abcabc"]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"xyzxyzabc12"</span>.match(<span class="regexp">/([a-z]&#123;3&#125;)\1/g</span>));  <span class="comment">// ["xyzxyz"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 编码：只表示编码，没有次数的含义</span></span><br><span class="line"><span class="comment">// ([a-z]&#123;3&#125;)(\d&#123;2&#125;)\2\1 表示([a-z]&#123;3&#125;)编码为 1 (\d&#123;2&#125;)编码为 2 </span></span><br><span class="line"><span class="comment">// a~z 3个字母 2个数字 再次匹配2个数字 再次匹配3个字母</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"xyzabc1212abc"</span>.match(<span class="regexp">/([a-z]&#123;3&#125;)(\d&#123;2&#125;)\2\1/g</span>));  <span class="comment">// ["abc1212abc"]</span></span><br></pre></td></tr></table></figure></div><h3 id="28-10-2-编码-正则外再次使用"><a href="#28-10-2-编码-正则外再次使用" class="headerlink" title="28.10.2  $编码 正则外再次使用"></a>28.10.2 <code>$编码</code> 正则外再次使用</h3><p>还可以在正则表达式外部使用。<code>$编码</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DART"><figure class="iseeu highlight /dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">// "123*456" 改为"456*123"</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">"123*456"</span>;</span><br><span class="line"><span class="comment">// 再次使用一定书写小括号，$编码 单独书写*有特殊含义，\*表示转义。</span></span><br><span class="line"><span class="keyword">var</span> str1 = str.replace(/(\d&#123;<span class="number">3</span>&#125;)\*(\d&#123;<span class="number">3</span>&#125;)/,<span class="string">"<span class="subst">$2</span>*<span class="subst">$1</span>"</span>);</span><br><span class="line">console.log(str1);       <span class="comment">// 456*123</span></span><br></pre></td></tr></table></figure></div><p><code>replace()</code>第二个参数还可以书写为匿名函数，match函数，可以让操作更加灵活。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">// "123*456" 改为"456*123"</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">"123*456"</span>;</span><br><span class="line"><span class="comment">// replace()第二个参数可以是匿名函数，第一个形参必须是match，其他参数是$编码。</span></span><br><span class="line"><span class="comment">//编码和小括号一一对应，不能少写，必须写全，但是可以不使用</span></span><br><span class="line"><span class="keyword">var</span> str2 = str.<span class="keyword">replace</span>(/(\<span class="keyword">d</span>&#123;3&#125;)\*(\<span class="keyword">d</span>&#123;3&#125;)/,function(match,<span class="variable">$1</span>,<span class="variable">$2</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$2</span> + <span class="string">"*"</span> +<span class="variable">$1</span>;</span><br><span class="line">&#125;);</span><br><span class="line">console.<span class="built_in">log</span>(str2);      <span class="comment">// 456*123</span></span><br></pre></td></tr></table></figure></div><h2 id="28-11-中文匹配"><a href="#28-11-中文匹配" class="headerlink" title="28.11  中文匹配"></a>28.11 中文匹配</h2><p>匹配中文： <code>[\u4e00-\u9fa5]</code></p><p>是一个固定用法，中文只能在正则表达式里这样表示。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 匹配中文： [\u4e00-\u9fa5]</span></span><br><span class="line"><span class="comment">// 是一个固定用法，中文只能在正则表达式里这样表示。只能匹配中文</span></span><br><span class="line"><span class="comment">// [\u4e00-\u9fa5]+ 表示连续多个汉字</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"中文abc匹配"</span>.match(<span class="regexp">/[\u4e00-\u9fa5]+/g</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/07/UkZE9J.png" alt="UkZE9J.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>正则术语</tag>
      </tags>
  </entry>
  <entry>
    <title>二十七、正则表达式</title>
    <url>/post/66220f26.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十七、正则表达式"><a href="#二十七、正则表达式" class="headerlink" title="二十七、正则表达式"></a>二十七、正则表达式</h1><h2 id="27-1-概述"><a href="#27-1-概述" class="headerlink" title="27.1  概述"></a>27.1 概述</h2><p>正则表达式（regular expression） 缩写：RegExp</p><p>正则表达式用于匹配字符串中字符组合模式，用于表单验证。</p><p>正则字面量： <strong>/表达式/;</strong></p><p>数据类型：引用数据类型 object</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">reg</span> = /abc/;</span><br><span class="line"><span class="comment">// 数据类型</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="keyword">typeof</span> <span class="keyword">reg</span>);      <span class="comment">// object</span></span><br></pre></td></tr></table></figure></div><p>例如：验证用户输入的是否是本地号码：000-1234567</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取用户输入</span></span><br><span class="line"><span class="keyword">var</span> str = prompt(<span class="string">"请输入本地号码"</span>);</span><br><span class="line"><span class="comment">// 本地号码</span></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">reg</span> = /^\<span class="keyword">d</span>&#123;3&#125;-\<span class="keyword">d</span>&#123;7&#125;$/;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">reg</span>.<span class="keyword">test</span>(str))&#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"没问题"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"请重新输入"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="27-2-字符串方法"><a href="#27-2-字符串方法" class="headerlink" title="27.2  字符串方法"></a>27.2 字符串方法</h2><h3 id="27-2-1-split（）"><a href="#27-2-1-split（）" class="headerlink" title="27.2.1  split（）"></a>27.2.1 <code>split（）</code></h3><ul><li><p>split（）：将字符串转为数组的方法</p></li><li><p>参数：要切割的字符串，还可以是正则表达式</p></li><li><p>返回值：数组</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 字符串</span></span><br><span class="line">var <span class="built_in">str</span> = <span class="string">"abxchxdfxrgxs"</span>;</span><br><span class="line"><span class="comment">// 参数可以直接是字符串</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">split</span>(<span class="string">"x"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数还可以是正则</span></span><br><span class="line">var str1 = <span class="string">"abxxxxxchxxxxdfxxxrgxxxs"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(str1.<span class="built_in">split</span>(<span class="string">"x"</span>));  <span class="comment">//结果会出现多个空数组</span></span><br><span class="line">console.<span class="built_in">log</span>(str1.<span class="built_in">split</span>(/x+/)); <span class="comment">//切割的字符串：多个x</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPg1iT.png" alt="UPg1iT.png"></p><h3 id="27-2-2-match（）"><a href="#27-2-2-match（）" class="headerlink" title="27.2.2  match（）"></a>27.2.2 <code>match（）</code></h3><ul><li><p>match() ：用于字符串匹配返回数组</p></li><li><p>参数：字符串、正则</p></li><li><p>返回值：匹配到的字符串组成的数组 参数可以是正则可用g表示全局匹配</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LASSO"><figure class="iseeu highlight /lasso"><table><tr><td class="code"><pre><span class="line"><span class="comment">// match()匹配 参数：字符串 返回值：得到abc</span></span><br><span class="line"><span class="built_in">var</span> str2 = <span class="string">"ahabcfabcj"</span>;</span><br><span class="line">console.<span class="keyword">log</span>(str2.<span class="keyword">match</span>(<span class="string">"abc"</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPgcyd.png" alt="UPgcyd.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 参数可以是正则 g 表示全局匹配</span></span><br><span class="line"><span class="built_in">console</span>.log(str2.match(<span class="regexp">/abc/g</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPgHyj.png" alt="UPgHyj.png"></p><h3 id="27-2-3-search（）"><a href="#27-2-3-search（）" class="headerlink" title="27.2.3  search（）"></a>27.2.3 <code>search（）</code></h3><ul><li><p>search() ：用于匹配字符串查找，返回索引值</p></li><li><p>参数：字符串，正则</p></li><li><p>返回值：索引值，没有字符串返回-1。 search没有全局匹配，只能返回首次匹配的结果</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">// search() 查找</span></span><br><span class="line"><span class="comment">// 参数：字符串</span></span><br><span class="line"><span class="keyword">var</span> str3 = <span class="string">"abcbbbbb"</span>;</span><br><span class="line"><span class="comment">// 返回首次匹配的结果</span></span><br><span class="line">console.<span class="built_in">log</span>(str3.<span class="keyword">search</span>(<span class="string">"b"</span>));</span><br><span class="line"><span class="comment">// 参数还可以是正则，search没有全局匹配，只能返回首次匹配的结果</span></span><br><span class="line">console.<span class="built_in">log</span>(str3.<span class="keyword">search</span>(/b/));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UP2npD.png" alt="UP2npD.png"></p><h3 id="27-2-4-replace（）"><a href="#27-2-4-replace（）" class="headerlink" title="27.2.4  replace（）"></a>27.2.4 <code>replace（）</code></h3><ul><li><p>replace（）：用于匹配字符串替换</p></li><li><p>参数：第一个参数：匹配的字符串、正则 第二个参数：新的字符串（只能是字符串）</p></li><li><p>返回值：替换的字符串</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">// replace() 替换</span></span><br><span class="line"><span class="keyword">var</span> str4 = <span class="string">"www.baidu.com"</span>;</span><br><span class="line"><span class="comment">// 第一个参数：字符串</span></span><br><span class="line">console.<span class="built_in">log</span>(str4.<span class="keyword">replace</span>(<span class="string">"baidu"</span>,<span class="string">"666"</span>));</span><br><span class="line"><span class="comment">// 第一个参数：正则</span></span><br><span class="line">console.<span class="built_in">log</span>(str4.<span class="keyword">replace</span>(/baidu/,<span class="string">"666"</span>));</span><br></pre></td></tr></table></figure></div><h2 id="27-3-正则方法"><a href="#27-3-正则方法" class="headerlink" title="27.3  正则方法"></a>27.3 正则方法</h2><h3 id="27-3-1-exec（）"><a href="#27-3-1-exec（）" class="headerlink" title="27.3.1  exec（）"></a>27.3.1 <code>exec（）</code></h3><ul><li><p>exec()：用于字符串匹配，返回数组</p></li><li><p>参数：字符串</p></li><li><p>返回值：包含匹配字符串组成的数组，没有全局匹配，只能将首次匹配的结果输出</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">// exec() 匹配</span></span><br><span class="line"><span class="keyword">var</span> <span class="keyword">reg</span> = /abc/;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">"abcbbbabcbbb"</span>;</span><br><span class="line"><span class="comment">// 参数写原字符串</span></span><br><span class="line">console.<span class="built_in">log</span>(<span class="keyword">reg</span>.exec(str));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UP274K.png" alt="UP274K.png"></p><h3 id="27-3-2-test（）-是否含有匹配的字符"><a href="#27-3-2-test（）-是否含有匹配的字符" class="headerlink" title="27.3.2  test（） 是否含有匹配的字符"></a>27.3.2 <code>test（）</code> 是否含有匹配的字符</h3><ul><li><p>test()：用于字符串检测</p></li><li><p>参数：字符串</p></li><li><p>返回值：布尔值（检测字符串中是否含有正则表达式匹配的字符）true false</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">// test()用于字符串检测</span></span><br><span class="line"><span class="comment">// 检测str2中是否含有abc</span></span><br><span class="line"><span class="keyword">var</span> str2 = <span class="string">"ahjabcfj"</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">reg</span> = /abc/;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">reg</span>.<span class="keyword">test</span>(str2))&#123;</span><br><span class="line">    <span class="comment">// 如果含有abc，输出“含有”</span></span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"含有"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"没有"</span>);</span><br><span class="line">&#125;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="keyword">reg</span>.<span class="keyword">test</span>(<span class="string">"abbbc"</span>));</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPRZbn.png" alt="UPRZbn.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>二十六、对象</title>
    <url>/post/c2686467.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十六、对象"><a href="#二十六、对象" class="headerlink" title="二十六、对象"></a>二十六、对象</h1><h2 id="26-1-概念"><a href="#26-1-概念" class="headerlink" title="26.1  概念"></a>26.1 概念</h2><p>对象用 <code>｛｝</code>来表示，内部是 <code>k:v</code> 的形式，每组<code>k:v</code>之间用<code>,</code>隔开。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DUST"><figure class="iseeu highlight /dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    var obj = </span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">        beijing : 32,</span></span><br><span class="line"><span class="template-variable">        guangzhou : 43,</span></span><br><span class="line"><span class="template-variable">        nanjing : 35</span></span><br><span class="line"><span class="template-variable">    &#125;</span></span><br><span class="line"><span class="xml">    console.log(obj);</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><p>obj就是一个对象。对象英语为object，变量一般叫做obj，或者前后缀为obj。</p><p><strong>对象某种意义上就是一个“有键名”的数组。</strong> 数组只关心值的顺序，对象关心的是值的映射，容易看出每项的意义。</p><p>反过来说，<strong>数组是“简化版”的对象。</strong>对象的键名可以任意指定，但是数组的键名只能是0、1、2、3、……。比如PHP中，就没有对象的概念，而是“别名数组”的概念。</p><p>点语法和方括号都可以单独访问一个值，我们叫做属性：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DUST"><figure class="iseeu highlight /dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    var obj = </span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">        beijing : 32,</span></span><br><span class="line"><span class="template-variable">        guangzhou : 43,</span></span><br><span class="line"><span class="template-variable">        nanjing : 35</span></span><br><span class="line"><span class="template-variable">    &#125;</span></span><br><span class="line"><span class="xml">    console.log(obj);   // </span><span class="template-variable">&#123;beijing: 32, guangzhou: 43, nanjing: 35&#125;</span></span><br><span class="line"><span class="xml">    console.log(obj.guangzhou);  // 43</span></span><br><span class="line"><span class="xml">    console.log(obj["guangzhou"]);  // 43</span></span><br><span class="line"><span class="xml">    var m = "guangzhou";</span></span><br><span class="line"><span class="xml">    console.log(obj[m]);  //  43</span></span><br><span class="line"><span class="xml">    console.log(obj["m"]);  //  undefined</span></span><br><span class="line"><span class="xml">    console.log(obj.m);  //  undefined</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPcSEV.png" alt="UPcSEV.png"></p><h2 id="26-2-JSON"><a href="#26-2-JSON" class="headerlink" title="26.2  JSON"></a>26.2 JSON</h2><p>JSON叫做JavaScript object Notation “JavaScript 对象表示法”。</p><p>JSON就是所有属性名有引号的对象</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">var obj = &#123;</span><br><span class="line">    <span class="string">"beijing"</span> : 32,</span><br><span class="line">    <span class="string">"guangzhou"</span> : 43,</span><br><span class="line">    <span class="string">"nanjing"</span> : 35</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>JSON一定是对象，对象不一定是JSON。</p><p>任何值都可以和任何值产生映射：</p><ul><li><p>当标识符符合命名规范时，可以使用方括号和点语法来表示属性</p></li><li><p>当标识符不符合命名规范时，只能使用方括号来表示属性</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">console</span><span class="selector-class">.log</span>(<span class="selector-tag">obj</span><span class="selector-attr">[<span class="string">"guangzhou"</span>]</span>);</span><br></pre></td></tr></table></figure></div><h2 id="26-3-对象的遍历"><a href="#26-3-对象的遍历" class="headerlink" title="26.3  对象的遍历"></a>26.3 对象的遍历</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj = &#123;</span></span><br><span class="line">        a : 1,</span><br><span class="line">        b : 2,</span><br><span class="line">        c : 3</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> obj)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(obj[k]);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPcGDI.png" alt="UPcGDI.png"></p><h2 id="26-4-算法题"><a href="#26-4-算法题" class="headerlink" title="26.4  算法题"></a>26.4 算法题</h2><h3 id="例1：统计数组中水果出现的次数"><a href="#例1：统计数组中水果出现的次数" class="headerlink" title="例1：统计数组中水果出现的次数"></a>例1：统计数组中水果出现的次数</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"西瓜"</span>,<span class="string">"苹果"</span>,<span class="string">"香蕉"</span>,<span class="string">"西瓜"</span>,<span class="string">"苹果"</span>,<span class="string">"西瓜"</span>,<span class="string">"西瓜"</span>,<span class="string">"苹果"</span>,<span class="string">"西瓜"</span>,<span class="string">"苹果"</span>,<span class="string">"西瓜"</span>,<span class="string">"苹果"</span>,<span class="string">"西瓜"</span>,<span class="string">"苹果"</span>,<span class="string">"西瓜"</span>,<span class="string">"西瓜"</span>,<span class="string">"西瓜"</span>,<span class="string">"西瓜"</span>,<span class="string">"西瓜"</span>,<span class="string">"苹果"</span>,<span class="string">"香蕉"</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 辅助对象</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> obj = &#123;&#125;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 遍历数组，给对象加键   in表示判断某属性是否存在于对象中，in返回布尔值</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; arr.length ; i ++)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 如果arr[i]不在 obj中,就在obj中创建一个，值为 1 ，如果在，则值累加</span></span></span><br><span class="line">        if (!(arr[i] in obj))&#123;</span><br><span class="line">            obj[arr[i]] = 1;</span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line">            obj[arr[i]] ++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(obj);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPcdPS.png" alt="UPcdPS.png"></p><h3 id="例2：统计字符串中出现次数最多的字母"><a href="#例2：统计字符串中出现次数最多的字母" class="headerlink" title="例2：统计字符串中出现次数最多的字母"></a>例2：统计字符串中出现次数最多的字母</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XQUERY"><figure class="iseeu highlight /xquery"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    var str = "qwsasqwasaqswawsqawqswaqswaqswawqssaqaqasassasasswwwwwsqqsqsqqsqsqssqawwawaawqwq";</span></span><br><span class="line"><span class="xml">    var obj = </span><span class="xquery">&#123;&#125;</span><span class="xml">;</span></span><br><span class="line"><span class="xml">    for (var i = 0 ; i <span class="tag">&lt; <span class="attr">str.length</span> ; <span class="attr">i</span>++)</span></span><span class="xquery">&#123;</span></span><br><span class="line"><span class="xquery">        <span class="keyword">if</span>(!(str[i] <span class="keyword">in</span> obj))&#123;</span></span><br><span class="line"><span class="xquery">            obj[str[i]] = <span class="number">1</span>;</span></span><br><span class="line"><span class="xquery">        &#125;</span><span class="xml">else</span><span class="xquery">&#123;</span></span><br><span class="line"><span class="xquery">            obj[str[i]]++;</span></span><br><span class="line"><span class="xquery">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    console.log(obj);</span></span><br><span class="line"><span class="xml">    // 比较大小</span></span><br><span class="line"><span class="xml">    var max = 0;</span></span><br><span class="line"><span class="xml">    var maxchar = "";</span></span><br><span class="line"><span class="xml">    for (var k in obj)</span><span class="xquery">&#123;</span></span><br><span class="line"><span class="xquery">        <span class="keyword">if</span>(obj[k] &gt;<span class="built_in"> max</span>)&#123;</span></span><br><span class="line"><span class="xquery">           <span class="built_in"> max</span> = obj[k];</span></span><br><span class="line"><span class="xquery">            maxchar = k</span></span><br><span class="line"><span class="xquery">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    console.log("字母" +  maxchar + "出现次数最多," + "为" + max + "次");</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPcybq.png" alt="UPcybq.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>对象</tag>
      </tags>
  </entry>
  <entry>
    <title>二十五、引用类型值</title>
    <url>/post/f49739e6.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十五、引用类型值"><a href="#二十五、引用类型值" class="headerlink" title="二十五、引用类型值"></a>二十五、引用类型值</h1><h2 id="25-1-变量传值的情况"><a href="#25-1-变量传值的情况" class="headerlink" title="25.1  变量传值的情况"></a>25.1 变量传值的情况</h2><p>我们从两个问题开始引入引用类型值</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = <span class="number">3</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> b = a;</span></span><br><span class="line">    a++;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(b);    <span class="comment">// 3 基本类型值，内存中会克隆一个3</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> b = a;</span></span><br><span class="line">    a.push(5);</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(b);    <span class="comment">// [1, 2, 3, 4, 5] 引用类型值</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>内存条：用来临时执行程序用的，我们var的变量都在里面。断电信息丢失</p><p>硬盘：用来储存电影、照片等信息。断电信息不丢失</p><ul><li><p>基本类型值：</p><ul><li>遇见number string Boolean undefined null 类型的东西，做 b = a 这种变量传递的语句的时候，内存中会复制那个值，将副本给b。</li></ul></li><li><p>引用类型值：</p><ul><li>函数、数组、对象、正则表达式、DOM元素、内置构造函数都是引用类型值。做 b = a 这种变量传递的语句的时候，内存中不会复制一份，两个变量实际上指向了同一片区域</li></ul></li></ul><p><img src="https://s1.ax1x.com/2020/07/06/UPsHVf.png" alt="UPsHVf.png"></p><h3 id="例1："><a href="#例1：" class="headerlink" title="例1："></a>例1：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> b = a;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> c = b;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> d = c;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> e = d;</span></span><br><span class="line"></span><br><span class="line">    a.pop;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(e);    <span class="comment">// [1]</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>例2：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>];</span><br><span class="line">    var b = a;</span><br><span class="line">    a = [<span class="number">88</span>, <span class="number">89</span>];</span><br><span class="line">    console.log(b);    <span class="comment">// [1, 2, 3, 4]</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPsvxs.png" alt="UPsvxs.png"></p><p>注意：</p><p><strong>如果变量a指向了另外的字面量（数组等等），此时在内存中开辟了一个新的区域，a指向了别的地方，b指向原来的</strong></p><h2 id="25-2-判等的情况"><a href="#25-2-判等的情况" class="headerlink" title="25.2  判等的情况"></a>25.2 判等的情况</h2><ul><li><p>基本类型值判断是否==，或者===，仅看值是否相等</p></li><li><p>引用类型值，要看是不是内存中同一片区域、同一个对象</p></li></ul><p><img src="https://s1.ax1x.com/2020/07/06/UPyPaT.png" alt="UPyPaT.png"></p><p>虽然长得一样，但是在内存中不同区域</p><p>所以，<code>数组不能用==直接进行比较</code></p><p><strong>基本类型值“按值判等”，引用类型值“按址判等”</strong></p><h2 id="25-3-尝试克隆数组"><a href="#25-3-尝试克隆数组" class="headerlink" title="25.3  尝试克隆数组"></a>25.3 尝试克隆数组</h2><p>注意</p><h3 id="方法1：适用于字符串类类型的数组"><a href="#方法1：适用于字符串类类型的数组" class="headerlink" title="方法1：适用于字符串类类型的数组"></a>方法1：适用于字符串类类型的数组</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EBNF"><figure class="iseeu highlight /ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">var a</span> = [1, 2, 3];</span><br><span class="line"><span class="attribute">var b</span> = a;</span><br></pre></td></tr></table></figure></div><p>没有实现克隆。他俩是内存中同一个对象，同一个数组</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="built_in">var</span> b = a.<span class="built_in">join</span>(“”).<span class="built_in">split</span>(“”);</span><br></pre></td></tr></table></figure></div><p>这种写法变为了字符串</p><p><img src="https://s1.ax1x.com/2020/07/06/UPyMdK.png" alt="UPyMdK.png"></p><h3 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> b = [].concat(a);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(b);    </span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>或</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> b = a.concat([]);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(b);    </span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>用空数组联结一个原数组</p><h3 id="方法3：用for循环遍历，每遍历一次，就在b数组中推入一次"><a href="#方法3：用for循环遍历，每遍历一次，就在b数组中推入一次" class="headerlink" title="方法3：用for循环遍历，每遍历一次，就在b数组中推入一次"></a>方法3：用for循环遍历，每遍历一次，就在b数组中推入一次</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> b = [];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; a.length ; i++)&#123;</span></span><br><span class="line">        b.push(a[i]);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(b);   </span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="25-4-浅克隆"><a href="#25-4-浅克隆" class="headerlink" title="25.4  浅克隆"></a>25.4 浅克隆</h2><p>只复制表层</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">var</span> a = [<span class="number">1</span>, <span class="number">2</span>,&#123;a:<span class="number">9</span>&#125;];</span><br><span class="line"><span class="built_in">var</span> b = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">var</span> i = <span class="number">0</span> ; i &lt; a.<span class="built_in">length</span> ; i++)&#123;</span><br><span class="line">    b.<span class="built_in">push</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line">console.<span class="built_in">log</span>(a == b);  // <span class="literal">false</span></span><br><span class="line">console.<span class="built_in">log</span>(a[<span class="number">3</span>] == b[<span class="number">3</span>]); //<span class="literal">true</span> 第三项还在同一个内存中</span><br></pre></td></tr></table></figure></div><h2 id="25-5-深刻隆"><a href="#25-5-深刻隆" class="headerlink" title="25.5  深刻隆"></a>25.5 深刻隆</h2><p>数组用<code>typeof</code>检测，返回<code>object</code></p><p><img src="https://s1.ax1x.com/2020/07/06/UPytsI.png" alt="UPytsI.png"></p><p>判断数组用<code>Array.isArray()</code></p><p><img src="https://s1.ax1x.com/2020/07/06/UPyWwV.png" alt="UPyWwV.png"></p><p>用递归实现深刻隆</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">deepClone</span><span class="params">(o)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(<span class="built_in">Array</span>.isArray(o))&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; o.length ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">var</span> arr = [];</span></span><br><span class="line">                arr.push(deepClone(o[i]));</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> arr;</span></span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">typeof</span> o == <span class="string">"object"</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> obj = &#123;&#125;;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> o)&#123;</span></span><br><span class="line">                obj[k] = deepClone(o[k]);</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> obj;</span></span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> o;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr1 = &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"a"</span> : <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"b"</span> : [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,&#123;c:<span class="number">9</span>&#125;]</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr2 =deepClone(arr1);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr1[<span class="string">"b"</span>] == arr2[<span class="string">"b"</span>]);  <span class="comment">// false</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>引用类型值</tag>
      </tags>
  </entry>
  <entry>
    <title>二十四、数组</title>
    <url>/post/f1bf9f26.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十四、数组"><a href="#二十四、数组" class="headerlink" title="二十四、数组"></a>二十四、数组</h1><h2 id="24-1-数组的定义"><a href="#24-1-数组的定义" class="headerlink" title="24.1  数组的定义"></a>24.1 数组的定义</h2><p>使用<code>[]</code>表示数组，数组中用英语的逗号进行项的分割。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 数组，数组的英语叫做array，所以经常用arr变量名</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> arr =[<span class="string">"白板"</span>, <span class="string">"幺鸡"</span>, <span class="string">"二万"</span>, <span class="string">"三饼"</span>, <span class="string">"四条"</span>];</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPZAIJ.png" alt="UPZAIJ.png"></p><p>数组中，虽然JS不限制我们必须放同类型的值，但是尽量放相关的、同类型的值。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 数组，数组的英语叫做array，所以经常用arr变量名</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 一组麻将牌</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr1 = [<span class="string">"白板"</span>, <span class="string">"幺鸡"</span>, <span class="string">"二万"</span>, <span class="string">"三饼"</span>, <span class="string">"四条"</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 一组扑克牌</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr2 = [<span class="string">"8"</span>, <span class="string">"J"</span>, <span class="string">"Q"</span>, <span class="string">"Q"</span>, <span class="string">"K"</span>, <span class="string">"K"</span>, <span class="string">"A"</span>, <span class="string">"2"</span>, <span class="string">"小王"</span>, <span class="string">"大王"</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 一组数字，表示2019年四个季度的产量</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> aar3 = [<span class="string">"23"</span>, <span class="string">"65"</span>, <span class="string">"84"</span>, <span class="string">"23"</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 一组布尔值，表示四个导师为你转身的情况</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr4 = [<span class="literal">true</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>];</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr1);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr2);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr3);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr4);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="24-2-项的枚举"><a href="#24-2-项的枚举" class="headerlink" title="24.2  项的枚举"></a>24.2 项的枚举</h2><p>可以使用下标枚举出数组的任意一项，<code>下标从 0 开始</code>。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 数组，数组的英语叫做array，所以经常用arr变量名</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 一组麻将牌</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr1 = [<span class="string">"白板"</span>, <span class="string">"幺鸡"</span>, <span class="string">"二万"</span>, <span class="string">"三饼"</span>, <span class="string">"四条"</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 输出显示数组下标为 0 的项</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr1[<span class="number">0</span>]);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 输出显示数组下标为 1 的项</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr1[<span class="number">1</span>]);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 输出显示数组下标为 2 的项</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr1[<span class="number">2</span>]);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 输出显示数组下标为 3 的项</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr1[<span class="number">3</span>]);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPZdL8.png" alt="UPZdL8.png"></p><h2 id="24-3-数组的长度"><a href="#24-3-数组的长度" class="headerlink" title="24.3  数组的长度"></a>24.3 数组的长度</h2><p>数组有<code>length</code>属性，表示数组的长度。length从<code>1</code>开始数</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GLSL"><figure class="iseeu highlight /glsl"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 输出数组的长度</span></span><br><span class="line">console.<span class="built_in">log</span>(arr1.<span class="built_in">length</span>);       <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></div><p>下标从 0 开始数，个数从 1 开始数。所以数组最后一项的下标，是<code>长度 - 1</code>。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 数组，数组的英语叫做array，所以经常用arr变量名</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 一组麻将牌</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> arr1 = [<span class="string">"白板"</span>, <span class="string">"幺鸡"</span>, <span class="string">"二万"</span>, <span class="string">"三饼"</span>, <span class="string">"四条"</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 输出数组的长度</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(arr1.length);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 输出数组最后一项</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(arr1[arr1.length - <span class="number">1</span>]);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPetk4.png" alt="UPetk4.png"></p><h2 id="24-4-使用for循环遍历数组"><a href="#24-4-使用for循环遍历数组" class="headerlink" title="24.4 使用for循环遍历数组"></a>24.4 使用for循环遍历数组</h2><p>使用循环语句，遍历数组非常方便</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MATLAB"><figure class="iseeu highlight /matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(var <span class="built_in">i</span> = <span class="number">0</span> ; <span class="built_in">i</span> &lt;= arr1.<span class="built_in">length</span> - <span class="number">1</span> ; <span class="built_in">i</span>++)&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(arr1[<span class="built_in">i</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"******************************"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(var <span class="built_in">i</span> = <span class="number">0</span> ; <span class="built_in">i</span> &lt; arr1.<span class="built_in">length</span> ; <span class="built_in">i</span>++)&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(arr1[<span class="built_in">i</span>]);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPes0O.png" alt="UPes0O.png"></p><p>这个for循环非常的好记忆，形态非常好，从0到arr.length,注意用小于号，不是小于等于。</p><h2 id="24-5-体验一下数组的小算法"><a href="#24-5-体验一下数组的小算法" class="headerlink" title="24.5  体验一下数组的小算法"></a>24.5 体验一下数组的小算法</h2><h3 id="例1：寻找数组中的双数"><a href="#例1：寻找数组中的双数" class="headerlink" title="例1：寻找数组中的双数"></a>例1：寻找数组中的双数</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//使用数组的for循环遍历输出所有的偶数</span></span><br><span class="line">    var arr = [<span class="number">34</span>, <span class="number">33</span>, <span class="number">46</span>, <span class="number">46</span>, <span class="number">42</span>, <span class="number">65</span>, <span class="number">88</span>, <span class="number">65</span>, <span class="number">64</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">64</span>, <span class="number">95</span>, <span class="number">66</span>];</span><br><span class="line">    <span class="keyword">for</span> (var i = <span class="number">0</span> ; i &lt; arr.length ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i] % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            console.log(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPeqhj.png" alt="UPeqhj.png"></p><p>相当于数组是一个传送带，能够让我们依次检查里面每一项</p><h3 id="例2：寻找数组中的最大值"><a href="#例2：寻找数组中的最大值" class="headerlink" title="例2：寻找数组中的最大值"></a>例2：寻找数组中的最大值</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 寻找数组中的最大值</span></span><br><span class="line">    var arr = [<span class="number">34</span>, <span class="number">33</span>, <span class="number">46</span>, <span class="number">46</span>, <span class="number">42</span>, <span class="number">65</span>, <span class="number">88</span>, <span class="number">65</span>, <span class="number">64</span>, <span class="number">89</span>, <span class="number">90</span>, <span class="number">64</span>, <span class="number">95</span>, <span class="number">66</span>];</span><br><span class="line">    <span class="comment">// 先假设最大值是数组的下标为0的项</span></span><br><span class="line">    var max = arr[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// 然后从下标为 1 的项，开始遍历（注意，不是从 0 开始）</span></span><br><span class="line">    <span class="keyword">for</span> (var i = <span class="number">1</span> ; i &lt; arr.length ; i++)&#123;</span><br><span class="line">        <span class="comment">// 你如果比当前的max大，你就成为max</span></span><br><span class="line">        <span class="keyword">if</span>(arr[i] &gt; max)&#123;</span><br><span class="line">            max = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(<span class="string">"最大值为："</span> + max);            <span class="comment">//  95</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h3 id="例3：数组的每一项值得总和、及平均数"><a href="#例3：数组的每一项值得总和、及平均数" class="headerlink" title="例3：数组的每一项值得总和、及平均数"></a>例3：数组的每一项值得总和、及平均数</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var arr = [<span class="number">34</span>, <span class="number">33</span>, <span class="number">46</span>, <span class="number">46</span>, <span class="number">42</span>, <span class="number">65</span>, <span class="number">88</span>, <span class="number">65</span>, <span class="number">64</span>, <span class="number">89</span>];</span><br><span class="line">    <span class="comment">// 累加器</span></span><br><span class="line">    var sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(var i = <span class="number">0</span> ; i &lt; arr.length ; i++)&#123;</span><br><span class="line">        sum += arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(<span class="string">"数组的总和："</span> + sum);                      <span class="comment">// 572</span></span><br><span class="line">    console.log(<span class="string">"数组的平均数："</span> + sum / arr.length);       <span class="comment">// 57.2</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h2 id="24-6-数组的方法"><a href="#24-6-数组的方法" class="headerlink" title="24.6  数组的方法"></a>24.6 数组的方法</h2><p>“方法”就是一个东西能够“打点”掉的函数，表示这个东西做什么事了。</p><p>方法是命令，是要求这个东西立即执行什么事情，比如命令小明吃饭：</p><blockquote><p>小明.吃饭();</p></blockquote><p>可以加参数</p><blockquote><p>小明.吃饭(麻辣烫);</p></blockquote><p>吃饭就是方法。</p><h3 id="24-6-1-头尾操作push-pop-unshift-shift"><a href="#24-6-1-头尾操作push-pop-unshift-shift" class="headerlink" title="24.6.1  头尾操作push pop unshift shift"></a>24.6.1 头尾操作<code>push</code> <code>pop</code> <code>unshift</code> <code>shift</code></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">push</span><span class="params">()</span></span>          尾插</span><br><span class="line"><span class="function"><span class="title">pop</span><span class="params">()</span></span>           尾删</span><br><span class="line"><span class="function"><span class="title">unshift</span><span class="params">()</span></span>       头插</span><br><span class="line"><span class="function"><span class="title">shift</span><span class="params">()</span></span>         头删</span><br></pre></td></tr></table></figure></div><p>比如：</p><h4 id="例1：push-尾插"><a href="#例1：push-尾插" class="headerlink" title="例1：push() 尾插"></a>例1：<code>push()</code> 尾插</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>];</span></span><br><span class="line"><span class="actionscript">    arr.push(<span class="string">"E"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPm38A.png" alt="UPm38A.png"></p><h4 id="例2：pop-尾删"><a href="#例2：pop-尾删" class="headerlink" title="例2：pop() 尾删"></a>例2：<code>pop()</code> 尾删</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>];</span></span><br><span class="line">    arr.pop();</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPmNb8.png" alt="UPmNb8.png"></p><p><strong>可以用变量接收一下，表示你删除掉的这个东西，插入也可以用变量接收</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> m = arr.pop();</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(m);       </span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPmf54.png" alt="UPmf54.png"></p><h4 id="例3：unshift-头插"><a href="#例3：unshift-头插" class="headerlink" title="例3：unshift() 头插"></a>例3：<code>unshift()</code> 头插</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>];</span></span><br><span class="line"><span class="actionscript">    arr.unshift(<span class="string">"★"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPnmzn.png" alt="UPnmzn.png"></p><h4 id="例4：shift-头删"><a href="#例4：shift-头删" class="headerlink" title="例4：shift() 头删"></a>例4：<code>shift()</code> 头删</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>];</span></span><br><span class="line">    arr.shift();</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPnJJJ.png" alt="UPnJJJ.png"></p><h4 id="例5：当需要插入多项时，在（）里写入插入的内容，用逗号隔开"><a href="#例5：当需要插入多项时，在（）里写入插入的内容，用逗号隔开" class="headerlink" title="例5：当需要插入多项时，在（）里写入插入的内容，用逗号隔开"></a>例5：当需要插入多项时，在（）里写入插入的内容，用逗号隔开</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>];</span></span><br><span class="line"><span class="actionscript">    arr.unshift(<span class="string">"1"</span>, <span class="string">"2"</span>);</span></span><br><span class="line"><span class="actionscript">    arr.push(<span class="string">"一"</span>, <span class="string">"二"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPu9fJ.png" alt="UPu9fJ.png"></p><h4 id="例6：头尾操作小算法：将一个数组分为奇偶两个数组"><a href="#例6：头尾操作小算法：将一个数组分为奇偶两个数组" class="headerlink" title="例6：头尾操作小算法：将一个数组分为奇偶两个数组"></a>例6：头尾操作小算法：将一个数组分为奇偶两个数组</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var arr = [<span class="number">34</span>, <span class="number">34</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">676</span>,<span class="number">7</span>,<span class="number">88</span>,<span class="number">99</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">45</span>,<span class="number">445</span>,<span class="number">6</span>,<span class="number">32434</span>,<span class="number">45</span>,<span class="number">56</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">89</span>,<span class="number">9</span>,<span class="number">0</span>,<span class="number">23</span>,<span class="number">4</span>,<span class="number">67</span>,<span class="number">232</span>,<span class="number">123</span>,<span class="number">4556</span>,<span class="number">78434</span>,<span class="number">3234342</span>,<span class="number">25456</span>,<span class="number">3243</span>,<span class="number">556546</span>,<span class="number">78</span>,<span class="number">786</span>];</span><br><span class="line">    var jishuArr = [];  <span class="comment">// 数组可以为空</span></span><br><span class="line">    var oushuArr = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(var i = <span class="number">0</span> ; i &lt; arr.length ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i] % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            oushuArr.push(arr[i]);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            jishuArr.push(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(jishuArr);</span><br><span class="line">    console.log(oushuArr);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPu8nP.png" alt="UPu8nP.png"></p><h3 id="24-6-2-splice-多功能"><a href="#24-6-2-splice-多功能" class="headerlink" title="24.6.2  splice() 多功能"></a>24.6.2 <code>splice()</code> 多功能</h3><h4 id="24-6-2-1-修改功能"><a href="#24-6-2-1-修改功能" class="headerlink" title="24.6.2.1  修改功能"></a>24.6.2.1 修改功能</h4><p>从下标为 2 的项，连续修改 3 项，即将 C D E 修改为 <code>★</code> <code>▲</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"F"</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 从下标为 2 的项，连续修改 3 项，即将 C D E 修改为 ★ ▲</span></span></span><br><span class="line"><span class="actionscript">    arr.splice(<span class="number">2</span>, <span class="number">3</span>, <span class="string">"★"</span>, <span class="string">"▲"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPujgA.png" alt="UPujgA.png"></p><h4 id="24-6-2-2-增加功能"><a href="#24-6-2-2-增加功能" class="headerlink" title="24.6.2.2  增加功能"></a>24.6.2.2 增加功能</h4><p>第二个参数为 0 ，表示不删除。此时从下标为 2 的这项的前面，插入“<code>★</code>”，“<code>▲</code>”</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"F"</span>];</span></span><br><span class="line"><span class="actionscript">    arr.splice(<span class="number">2</span>, <span class="number">0</span>, <span class="string">"★"</span>, <span class="string">"▲"</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPKEgs.png" alt="UPKEgs.png"></p><h4 id="24-6-2-3-删除功能"><a href="#24-6-2-3-删除功能" class="headerlink" title="24.6.2.3  删除功能"></a>24.6.2.3 删除功能</h4><p>从下标为 2 的项，连续删除 3 项</p><p>当你不写要修改为什么的时候，那就是删除</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"F"</span>];</span></span><br><span class="line">    arr.splice(2, 3);</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPKI2j.png" alt="UPKI2j.png"></p><h4 id="24-6-2-4-splice（）注意事项"><a href="#24-6-2-4-splice（）注意事项" class="headerlink" title="24.6.2.4  splice（）注意事项"></a>24.6.2.4 <code>splice（）</code>注意事项</h4><h5 id="例1：在for循环的时候会影响数组的长度"><a href="#例1：在for循环的时候会影响数组的长度" class="headerlink" title="例1：在for循环的时候会影响数组的长度"></a>例1：在for循环的时候会影响数组的长度</h5><p>比如删除，数组中的所有老鼠，如果要正向使用for循环，必须手动减少一下这个 i 变量，否则会跳过去一项。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"易烊千玺"</span>, <span class="string">"易烊千玺"</span>, <span class="string">"哈哈"</span>, <span class="string">"哈哈"</span>,<span class="string">"哈哈"</span>,<span class="string">"哈哈"</span>,<span class="string">"易烊千玺"</span>, <span class="string">"易烊千玺"</span>, <span class="string">"易烊千玺"</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; arr.length ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(arr[i] == <span class="string">"哈哈"</span>)&#123;</span></span><br><span class="line">            arr.splice(i, 1);</span><br><span class="line"><span class="actionscript">            i--;    <span class="comment">// 当删除一项后，后面的项数往前排一位，当遍历下一项的时候回漏掉一个</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPMCs1.png" alt="UPMCs1.png"></p><p>或者，倒着遍历删除：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"易烊千玺"</span>, <span class="string">"易烊千玺"</span>, <span class="string">"哈哈"</span>, <span class="string">"哈哈"</span>,<span class="string">"哈哈"</span>,<span class="string">"哈哈"</span>,<span class="string">"易烊千玺"</span>, <span class="string">"易烊千玺"</span>, <span class="string">"易烊千玺"</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 从最后一位（即下标为 arr.length - 1 的那一项) 开始删除，不会影响每一项原来的下标数</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = arr.length - <span class="number">1</span> ; i &gt;=<span class="number">0</span> ; i--)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(arr[i] == <span class="string">"哈哈"</span>)&#123;</span></span><br><span class="line">            arr.splice(i, 1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h5 id="例2：splice-能够用变量去接收它，表示被删除的元素"><a href="#例2：splice-能够用变量去接收它，表示被删除的元素" class="headerlink" title="例2：splice() 能够用变量去接收它，表示被删除的元素"></a>例2：<code>splice()</code> 能够用变量去接收它，表示被删除的元素</h5><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="string">"A"</span>, <span class="string">"B"</span>, <span class="string">"C"</span>, <span class="string">"D"</span>, <span class="string">"E"</span>, <span class="string">"F"</span>];</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> m = arr.splice(<span class="number">4</span>, <span class="number">2</span>);</span></span><br><span class="line">    </span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(m);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPMOOI.png" alt="UPMOOI.png"></p><h3 id="24-6-3-join-和split-方法：字符串和数组相互转换"><a href="#24-6-3-join-和split-方法：字符串和数组相互转换" class="headerlink" title="24.6.3  join()和split()` 方法：字符串和数组相互转换"></a>24.6.3 <code>j</code>oin()<code>和</code>split()` 方法：字符串和数组相互转换</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ISBL"><figure class="iseeu highlight /isbl"><table><tr><td class="code"><pre><span class="line">字符串变为数组：  <span class="function"><span class="title"><span class="built_in">split</span></span>()</span></span><br><span class="line">数组变为字符串：  <span class="function"><span class="title">join</span>()</span></span><br></pre></td></tr></table></figure></div><h4 id="24-6-3-1-join-数组变为字符串"><a href="#24-6-3-1-join-数组变为字符串" class="headerlink" title="24.6.3.1  join() 数组变为字符串"></a>24.6.3.1 <code>join()</code> 数组变为字符串</h4><p>数组调用<code>join()</code> 表示希望用你指定的符号，将数组的每项分隔，组成字符串；</p><p><img src="https://s1.ax1x.com/2020/07/06/UPQntU.png" alt="UPQntU.png"></p><p>如果省略分隔符，生成的字符串每项之间用逗号相隔</p><p><img src="https://s1.ax1x.com/2020/07/06/UPQG0x.png" alt="UPQG0x.png"></p><p>如果用空字符串分隔</p><p><img src="https://s1.ax1x.com/2020/07/06/UPQyHP.png" alt="UPQyHP.png"></p><h4 id="24-6-3-2-split-字符串变为数组"><a href="#24-6-3-2-split-字符串变为数组" class="headerlink" title="24.6.3.2  split() 字符串变为数组"></a>24.6.3.2 <code>split()</code> 字符串变为数组</h4><p><code>split()</code> 是 <code>join()</code> 的逆运算，它可以将字符串变为数组</p><p><img src="https://s1.ax1x.com/2020/07/06/UPQoBq.png" alt="UPQoBq.png"></p><h3 id="24-6-4-indexOf-和includes-方法"><a href="#24-6-4-indexOf-和includes-方法" class="headerlink" title="24.6.4  indexOf() 和includes()方法"></a>24.6.4 <code>indexOf()</code> 和<code>includes()</code>方法</h3><h4 id="24-6-4-1-indexOf"><a href="#24-6-4-1-indexOf" class="headerlink" title="24.6.4.1  indexOf()"></a>24.6.4.1 <code>indexOf()</code></h4><p><code>indexOf()</code>返回指定项在数组中首次出现的位置</p><p><img src="https://s1.ax1x.com/2020/07/06/UPQvv9.png" alt="UPQvv9.png"></p><p>如果有多个该值，也只返回下标最小的那个值</p><p><img src="https://s1.ax1x.com/2020/07/06/UPlpHx.png" alt="UPlpHx.png"></p><p>如果数组中没有这个值，返回-1</p><p><img src="https://s1.ax1x.com/2020/07/06/UPlWa6.png" alt="UPlWa6.png"></p><h4 id="24-6-4-2-includes（）"><a href="#24-6-4-2-includes（）" class="headerlink" title="24.6.4.2  includes（）"></a>24.6.4.2 <code>includes（）</code></h4><p>返回布尔值，true表示存在，false表示不存在</p><p>注意拼写，有一个<code>s</code>。</p><p><img src="https://s1.ax1x.com/2020/07/06/UP1AoV.png" alt="UP1AoV.png"></p><p><strong>includes从IE8开始兼容</strong></p><h3 id="24-6-5-concat-联结项、数组"><a href="#24-6-5-concat-联结项、数组" class="headerlink" title="24.6.5  concat()联结项、数组"></a>24.6.5 <code>concat()</code>联结项、数组</h3><p>定义一个arr1 一个arr2，可以让arr3成为两个数组的顺次联结体</p><p><img src="https://s1.ax1x.com/2020/07/06/UP1hmn.png" alt="UP1hmn.png"></p><p>注意：在控制台中按shift+回车 表示换行</p><p><code>concat（）</code>可以传入散值（不是数组），也会被顺次联结上</p><p><img src="https://s1.ax1x.com/2020/07/06/UP1v01.png" alt="UP1v01.png"></p><h3 id="24-6-6-slice-获得子数组"><a href="#24-6-6-slice-获得子数组" class="headerlink" title="24.6.6  slice() 获得子数组"></a>24.6.6 <code>slice()</code> 获得子数组</h3><p><code>slice(a, b)</code>表示从原数组的下标为<code>a</code>的项开始，截取到下标为<code>b</code>的项，但<code>不包括下标为b</code>的项。</p><p>截取的子数组的长度，一定是<code>b – a</code>。</p><p><img src="https://s1.ax1x.com/2020/07/06/UP3EnA.png" alt="UP3EnA.png"></p><p>特别的，数字可以是负数，如果是负数，可以理解为取到倒数第几的前一位</p><p><img src="https://s1.ax1x.com/2020/07/06/UPByb8.png" alt="UPByb8.png"></p><p>区分三个拼写相近的：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">splice</span> 多功能</span><br><span class="line"><span class="built_in">split</span>   是字符串变为数组。逆运算是<span class="built_in">join</span>，就是数组变为字符串</span><br><span class="line">slice   获得子数组</span><br></pre></td></tr></table></figure></div><h3 id="24-6-7-reverse-方法"><a href="#24-6-7-reverse-方法" class="headerlink" title="24.6.7  reverse() 方法"></a>24.6.7 <code>reverse()</code> 方法</h3><p>倒序数组：只要调用这个方法，数组就能立即被倒序，不需要用等号重新赋值</p><p><img src="https://s1.ax1x.com/2020/07/06/UPDKZ8.png" alt="UPDKZ8.png"></p><h3 id="24-6-8-toUpperCase"><a href="#24-6-8-toUpperCase" class="headerlink" title="24.6.8  toUpperCase()"></a>24.6.8 <code>toUpperCase()</code></h3><p>将字符串转为大写字母</p><p>参数：省略</p><p>返回值：转换后的新字符串</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"abcxdefxghixjkl"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.<span class="built_in">split</span>(<span class="string">"x"</span>));</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>);</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>.toUpperCase());</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPDYMq.png" alt="UPDYMq.png"></p><h3 id="24-6-9-toLowerCase"><a href="#24-6-9-toLowerCase" class="headerlink" title="24.6.9  toLowerCase()"></a>24.6.9 <code>toLowerCase()</code></h3><p>将字符串转为小写字母</p><p>参数：省略</p><p>返回值：转换后的新字符串</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="OPENSCAD"><figure class="iseeu highlight /openscad"><table><tr><td class="code"><pre><span class="line">var <span class="built_in">str</span> = <span class="string">"abcxdefxghixjkl"</span>;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">str</span>);</span><br><span class="line">var str2 = <span class="built_in">str</span>.toUpperCase();</span><br><span class="line">console.<span class="built_in">log</span>(str2);</span><br><span class="line">console.<span class="built_in">log</span>(str2.toLowerCase());</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPDBi4.png" alt="UPDBi4.png"></p><h3 id="24-6-10-练习"><a href="#24-6-10-练习" class="headerlink" title="24.6.10  练习"></a>24.6.10 练习</h3><p>将“everything is good in its season”，转为每个首字母大写。</p><p>即“Everything Is Good In Its Season”</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    /*</span><br><span class="line"><span class="actionscript">    将“everything <span class="keyword">is</span> good <span class="keyword">in</span> its season”，转为每个首字母大写。</span></span><br><span class="line">    即“Everything Is Good In Its Season”</span><br><span class="line"></span><br><span class="line">    1 先得到每一个单词数组 everything</span><br><span class="line">    2 数组每一项可以使用 = 赋值 everything = E + verything</span><br><span class="line">    3 将数组转为字符串</span><br><span class="line">    */</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 将字符串转为数组 split()</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> str = <span class="string">"everything is good in its season"</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = str.split(<span class="string">" "</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 数组每一项重新赋值</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; arr.length ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 索引值 everything = E + verything</span></span></span><br><span class="line">        arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1)</span><br><span class="line">    &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 将数组转为字符串</span></span></span><br><span class="line"><span class="actionscript">    str = arr.join(<span class="string">" "</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(str);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPDTSA.png" alt="UPDTSA.png"></p><h2 id="24-7-数组的常见算法"><a href="#24-7-数组的常见算法" class="headerlink" title="24.7  数组的常见算法"></a>24.7 数组的常见算法</h2><h3 id="24-7-1-冒泡排序"><a href="#24-7-1-冒泡排序" class="headerlink" title="24.7.1  冒泡排序"></a>24.7.1 冒泡排序</h3><p><img src="https://s1.ax1x.com/2020/07/06/UPDOw8.png" alt="UPDOw8.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var arr = [<span class="number">34434</span>, <span class="number">656</span>, <span class="number">2343</span>, <span class="number">23234</span>, <span class="number">456</span>, <span class="number">32345</span>];</span><br><span class="line">    <span class="keyword">for</span>(var i = <span class="number">0</span> ; i &lt; arr.length - <span class="number">1</span> ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(var j = <span class="number">0</span> ; j &lt; arr.length - <span class="number">1</span> -i ; j++)&#123;</span><br><span class="line">            <span class="comment">// 如果j这项比后面这项大，那么交换位置</span></span><br><span class="line">            <span class="keyword">if</span>(arr[j] &gt; arr[j + <span class="number">1</span>])&#123;</span><br><span class="line">                <span class="comment">// 使用第三方变量做一个周转</span></span><br><span class="line">                var temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(arr);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPrPO0.png" alt="UPrPO0.png"></p><h2 id="24-7-2-快速排序（二分法排序）"><a href="#24-7-2-快速排序（二分法排序）" class="headerlink" title="24.7.2  快速排序（二分法排序）"></a>24.7.2 快速排序（二分法排序）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> arr = [<span class="number">34434</span>, <span class="number">656</span>, <span class="number">2343</span>, <span class="number">23234</span>, <span class="number">456</span>, <span class="number">32345</span>, <span class="number">45345</span>, <span class="number">32</span>, <span class="number">3242</span>, <span class="number">244</span>, <span class="number">4545</span>, <span class="number">345</span>,<span class="number">3243</span>,<span class="number">5346</span>,<span class="number">66</span>];</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">quicksort</span><span class="params">(arr)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 让递归能停</span></span></span><br><span class="line">            if(arr.length &lt;= 1)&#123;</span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> arr;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 选标杆</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> pivot = arr[<span class="number">0</span>];</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 分大小组</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> bigger = [];</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> smaller = [];</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 从下标为 1 的项开始，分出大小组</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt; arr.length ; i++)&#123;</span></span><br><span class="line">                if(arr[i] &gt; pivot)&#123;</span><br><span class="line">                    bigger.push(arr[i]);</span><br><span class="line"><span class="actionscript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line">                    smaller.push(arr[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 递归，分别在大小组里再选标杆，再分大小组</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> quicksort(smaller).concat(pivot, quicksort(bigger));</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(quicksort(arr));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPrJte.png" alt="UPrJte.png"></p><h3 id="24-7-3-插入排序-sort"><a href="#24-7-3-插入排序-sort" class="headerlink" title="24.7.3  插入排序 .sort()"></a>24.7.3 插入排序 <code>.sort()</code></h3><p>斗地主的排序方法，就是别人发一张排一张。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var arr = [<span class="number">34434</span>, <span class="number">656</span>, <span class="number">2343</span>, <span class="number">23234</span>, <span class="number">456</span>, <span class="number">32345</span>, <span class="number">45345</span>, <span class="number">32</span>, <span class="number">3242</span>, <span class="number">244</span>, <span class="number">4545</span>, <span class="number">345</span>,<span class="number">3243</span>,<span class="number">5346</span>,<span class="number">66</span>];</span><br><span class="line">    <span class="comment">// 准备一个结果数组，负无穷，正无穷</span></span><br><span class="line">    var result = [-Infinity, Infinity];</span><br><span class="line">    <span class="keyword">for</span>(var i = <span class="number">0</span> ; i &lt; arr.length ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(var j = <span class="number">0</span> ; j &lt; result.length ; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] &gt;= result[j] &amp;&amp; arr[i] &lt;= result[j + <span class="number">1</span>])&#123;</span><br><span class="line">                result.splice(j + <span class="number">1</span> , <span class="number">0</span> , arr[i]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(result);</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPr21s.png" alt="UPr21s.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var arr = [<span class="number">34434</span>, <span class="number">656</span>, <span class="number">2343</span>, <span class="number">23234</span>, <span class="number">456</span>, <span class="number">32345</span>, <span class="number">45345</span>, <span class="number">32</span>, <span class="number">3242</span>, <span class="number">244</span>, <span class="number">4545</span>, <span class="number">345</span>,<span class="number">3243</span>,<span class="number">5346</span>,<span class="number">66</span>];</span><br><span class="line">    <span class="comment">// 准备一个结果数组，负无穷，正无穷</span></span><br><span class="line">    var result = [-Infinity, Infinity];</span><br><span class="line">    <span class="keyword">for</span>(var i = <span class="number">0</span> ; i &lt; arr.length ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(var j = <span class="number">0</span> ; j &lt; result.length ; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] &gt;= result[j] &amp;&amp; arr[i] &lt;= result[j + <span class="number">1</span>])&#123;</span><br><span class="line">                result.splice(j + <span class="number">1</span> , <span class="number">0</span> , arr[i]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    result.shift();</span><br><span class="line">    result.pop();</span><br><span class="line">    console.log(result); </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPsSAO.png" alt="UPsSAO.png"></p><h3 id="27-7-4-JavaScript内置排序"><a href="#27-7-4-JavaScript内置排序" class="headerlink" title="27.7.4  JavaScript内置排序"></a>27.7.4 JavaScript内置排序</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var arr = [<span class="number">34434</span>, <span class="number">656</span>, <span class="number">2343</span>, <span class="number">23234</span>, <span class="number">456</span>, <span class="number">32345</span>, <span class="number">45345</span>, <span class="number">32</span>, <span class="number">3242</span>, <span class="number">244</span>, <span class="number">4545</span>, <span class="number">345</span>,<span class="number">3243</span>,<span class="number">5346</span>,<span class="number">66</span>];</span><br><span class="line">    <span class="comment">// a b 分别表示原来的数组中的前后两个数</span></span><br><span class="line">    arr.sort(function(a, b)&#123;</span><br><span class="line">        <span class="comment">// 这个函数返回的数值不重要，数值的正负才重要</span></span><br><span class="line">        <span class="comment">// 整数表示要交换位置，负数表示不需要交换位置</span></span><br><span class="line">        <span class="keyword">return</span> a - b;</span><br><span class="line">    &#125;);</span><br><span class="line">    console.log(arr); </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPsFgA.png" alt="UPsFgA.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var arr = [<span class="number">34434</span>, <span class="number">656</span>, <span class="number">2343</span>, <span class="number">23234</span>, <span class="number">456</span>, <span class="number">32345</span>, <span class="number">45345</span>, <span class="number">32</span>, <span class="number">3242</span>, <span class="number">244</span>, <span class="number">4545</span>, <span class="number">345</span>,<span class="number">3243</span>,<span class="number">5346</span>,<span class="number">66</span>];</span><br><span class="line">    <span class="comment">// a b 分别表示原来的数组中的前后两个数</span></span><br><span class="line">    arr.sort(function(a, b)&#123;</span><br><span class="line">        <span class="comment">// 这个函数返回的数值不重要，数值的正负才重要</span></span><br><span class="line">        <span class="comment">// 整数表示要交换位置，负数表示不需要交换位置</span></span><br><span class="line">        <span class="keyword">return</span> b - a;</span><br><span class="line">    &#125;);</span><br><span class="line">    console.log(arr); </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UPsnUS.png" alt="UPsnUS.png"></p><p><code>.sort()</code>括号里面的是一个函数，也是一个参数！</p><p>这个函数用来指示排序应该从大到小排还是从小到大排。</p><p>a b 表示前后脚相邻的两个数字，如果需要交换位置，返回正数，不需要交换，则返回负数。</p><p>所以 a – b 表示如果a &gt; b ， 那么就是正数，从小到大排</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>二十三、算法练习</title>
    <url>/post/d742b19d.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十三、算法练习"><a href="#二十三、算法练习" class="headerlink" title="二十三、算法练习"></a>二十三、算法练习</h1><p>唐浩强c语言提出了一个公式：</p><blockquote><p>编程=算法+数据结构</p></blockquote><p>JS中的数据结构只有两个（不考虑ES6、7、8）：<strong>数组、对象</strong>。</p><p>算法层面，你的工具：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>  <span class="keyword">if</span>  <span class="keyword">while</span>  <span class="keyword">if</span>  <span class="keyword">switch</span>  函数</span><br></pre></td></tr></table></figure></div><h2 id="例1，计算n的阶加，1-2-3-……-n"><a href="#例1，计算n的阶加，1-2-3-……-n" class="headerlink" title="例1，计算n的阶加，1+2+3+……+n"></a>例1，计算n的阶加，1+2+3+……+n</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(n)</span></span>&#123;    <span class="comment">// 接收一个参数</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> _sum = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt;= n ; i++)&#123;</span></span><br><span class="line">        _sum += i;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> _sum;      <span class="comment">// 返回它的阶加</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="例2，计算阶乘："><a href="#例2，计算阶乘：" class="headerlink" title="例2，计算阶乘："></a>例2，计算阶乘：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">factorial</span><span class="params">(n)</span></span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;  <span class="comment">//计算时使 n - 1 不为负  </span></span><br><span class="line">      <span class="keyword">return</span> n * factorial(n - <span class="number">1</span>);   <span class="comment">// 递归函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="例3：寻找喇叭花数"><a href="#例3：寻找喇叭花数" class="headerlink" title="例3：寻找喇叭花数"></a>例3：寻找喇叭花数</h2><p>各个数位的阶乘和等于它本身</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 计算阶乘</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">factorial</span><span class="params">(n)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;  <span class="comment">//计算时使 n - 1 不为负  </span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> n * factorial(n - <span class="number">1</span>);   <span class="comment">// 递归函数</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 寻找喇叭花数</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">findLabahua</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">100</span> ; i &lt;= <span class="number">999</span> ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> sum = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span> ; j &lt;=<span class="number">2</span> ; j++)&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 将 i转为字符串，取第 1个数字，再转回数字类型</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 将 i转为字符串，取第 2个数字，再转回数字类型</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 将 i转为字符串，取第 3个数字，再转回数字类型</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 计算 3 个数字的阶乘</span></span></span><br><span class="line"><span class="actionscript">                <span class="comment">// 将三个数字的阶乘累加</span></span></span><br><span class="line"><span class="javascript">                sum += factorial(<span class="built_in">Number</span>( i.toString().charAt(j)));</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 如果阶乘和等于原数，则是喇叭花数</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(sum == i) <span class="built_in">console</span>.log(i + <span class="string">"是喇叭花数"</span>); <span class="comment">// 一行if语句不用大括号</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    findLabahua();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="一些问题举例："><a href="#一些问题举例：" class="headerlink" title="一些问题举例："></a>一些问题举例：</h2><p>有一个重要题型，让你判断程序运行结果。</p><p>这种问题，一定是找“坑点”出：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line">变量声明提升的<span class="literal">undefined</span>的问题</span><br><span class="line">变量的作用域，遮蔽问题</span><br><span class="line"><span class="keyword">if</span>语句是不能阻止<span class="keyword">var</span>的提升的</span><br><span class="line">没有加<span class="keyword">var</span>，执行赋值了，这个变量是全局变量</span><br><span class="line">闭包的问题</span><br><span class="line"><span class="keyword">for</span>循环的执行机理</span><br></pre></td></tr></table></figure></div><h3 id="例子1："><a href="#例子1：" class="headerlink" title="例子1："></a>例子1：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">        function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">            alert(a);</span><br><span class="line">            <span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="title">fun</span><span class="params">()</span></span>;      <span class="comment">// undefined</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p>弹出undefined。</p><p>因为函数中的var定义的变量，能够自动提升声明到函数的最开始，所以遮蔽了外部的 a 。</p><h3 id="例子2："><a href="#例子2：" class="headerlink" title="例子2："></a>例子2：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">       function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">           <span class="keyword">var</span> a = <span class="number">20</span>;</span><br><span class="line">           <span class="keyword">return</span> function()&#123;</span><br><span class="line">               alert(a);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">var</span> f = <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">       f();     <span class="comment">// 20</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p>弹出 20</p><p>这是一个经典的闭包的例子。</p><p>什么是闭包：</p><p><strong>函数能够记住自己定义时候所处的作用域，无论函数在哪里运行，都不会忘记最初的作用域。</strong></p><h3 id="例子3："><a href="#例子3：" class="headerlink" title="例子3："></a>例子3：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="number">3</span>;</span><br><span class="line">        function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">            alert(a);</span><br><span class="line">            <span class="keyword">if</span>(!a)&#123;</span><br><span class="line">                <span class="keyword">var</span> a = <span class="number">5</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            alert(a);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="function"><span class="title">fun</span><span class="params">()</span></span>;  <span class="comment">// 先弹出 undefined ，再弹出 5</span></span><br></pre></td></tr></table></figure></div><p>先弹出 undefined ，再弹出 5</p><p><strong>if语句的真假性，不会影响变量声明的提升。</strong></p><p>所以即使感觉 !a 是假，但是var a 提升是必然的。所以判断的是 !undefined , 能够进入if，给 a 赋值为 5 ，就弹出 5</p><h3 id="例子4："><a href="#例子4：" class="headerlink" title="例子4："></a>例子4：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">            a = b = <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="function"><span class="title">fun</span><span class="params">()</span></span>; </span><br><span class="line">       alert(a);    <span class="comment">// a 变为全局变量   弹出 2</span></span><br><span class="line">       alert(b);    <span class="comment">// b 也是 2</span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">        function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">var</span> a = b = <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="function"><span class="title">fun</span><span class="params">()</span></span>; </span><br><span class="line">       alert(b);    <span class="comment">// 弹出 2</span></span><br><span class="line">       alert(a);    <span class="comment">// 报错 Uncaught ReferenceError: a is not defined</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><strong>连续使用赋值运算符，会从右边忘左边进行赋值。</strong></p><p>所以b = 2 a = 2 。但是b没有被var，作用域就溢出了，就是全局作用域，能弹出结果2 。 a 是被var的，出不来。</p><p>如果写成：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">var a = <span class="number">1</span> , b = <span class="number">2</span>;</span><br></pre></td></tr></table></figure></div><p>中间用逗号隔开，说明a b 都被var了，都出不来。</p><p>即，等价于：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EBNF"><figure class="iseeu highlight /ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">var a</span> = 1;</span><br><span class="line"><span class="attribute">var b</span> = 2;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>算法</tag>
        <tag>函数</tag>
        <tag>变量</tag>
      </tags>
  </entry>
  <entry>
    <title>二十二、变量作用域和函数声明的提升</title>
    <url>/post/e2dbc1ea.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十二、变量作用域和函数声明的提升"><a href="#二十二、变量作用域和函数声明的提升" class="headerlink" title="二十二、变量作用域和函数声明的提升"></a>二十二、变量作用域和函数声明的提升</h1><h2 id="22-1-变量作用域分为全局作用域和局部作用域"><a href="#22-1-变量作用域分为全局作用域和局部作用域" class="headerlink" title="22.1  变量作用域分为全局作用域和局部作用域"></a>22.1 变量作用域分为全局作用域和局部作用域</h2><ul><li><p>全局作用域：函数外的区域，函数外声明的变量也叫做全局变量。</p><ul><li>全局变量，可以在脚本的任何位置进行调用，它随页面加载生成，页面关闭后销毁。</li></ul></li><li><p>局部作用域：声明的函数会形成一个自己的作用域，那么在函数内声明的变量就叫做局部变量。</p><ul><li>局部变量，函数被调用时创建，调用完毕后销毁</li></ul></li></ul><h3 id="22-1-1-局部变量"><a href="#22-1-1-局部变量" class="headerlink" title="22.1.1  局部变量"></a>22.1.1 局部变量</h3><ul><li><p>局部作用域：声明的函数会形成一个自己的作用域，那么在函数内声明的变量就叫做局部变量。</p><ul><li>局部变量，函数被调用时创建，调用完毕后销毁</li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 在函数内部声明的变量只能在函数内部使用</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fun</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// a 在函数内部声明的，只能在fun函数内部使用</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> a = <span class="number">10</span>;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(a);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// a 在函数外部不能使用</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a);   <span class="comment">// 报错 Uncaught ReferenceError: a is not defined</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UC8xhT.png" alt="UC8xhT.png"></p><p>对于JS，只有函数能够关住变量的作用域</p><h4 id="22-1-1-1-形式参数是局部变量"><a href="#22-1-1-1-形式参数是局部变量" class="headerlink" title="22.1.1.1  形式参数是局部变量"></a>22.1.1.1 形式参数是局部变量</h4><p>形参也是局部变量，只能在函数内部使用，在外部任何地方都不能访问。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 形参是局部变量</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fun</span><span class="params">(a, b, c)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(a);</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(b);</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(c);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// a 是形参不能在函数外部使用</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCGkH1.png" alt="UCGkH1.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// 形参是局部变量</span></span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">fun</span><span class="params">(a, b, c)</span></span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(b);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(c);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="actionscript">  <span class="comment">// 调用</span></span></span><br><span class="line">  fun(10, 20, 30, 40, 50);</span><br><span class="line"><span class="actionscript">  <span class="comment">// a 是形参不能在函数外部使用</span></span></span><br><span class="line"><span class="javascript">  <span class="built_in">console</span>.log(a);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCGVN6.png" alt="UCGVN6.png"></p><h3 id="22-1-2-全局变量"><a href="#22-1-2-全局变量" class="headerlink" title="22.1.2  全局变量"></a>22.1.2 全局变量</h3><ul><li><p>全局作用域：函数外的区域，函数外声明的变量也叫做全局变量。</p><ul><li>全局变量，可以在脚本的任何位置进行调用，它随页面加载生成，页面关闭后销毁。</li></ul></li></ul><h4 id="22-1-2-1-传递作用"><a href="#22-1-2-1-传递作用" class="headerlink" title="22.1.2.1  传递作用"></a>22.1.2.1 传递作用</h4><p>传递作用：在不同函数间使用全局变量可以作为<code>信号量</code>，这些函数都可以改变信号量，使用新值参与计算。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// a 是全局变量，在任何地方都可以使用</span></span><br><span class="line">    <span class="comment">// a 称为信号量，不管任何函数改变 a 的值，都可以记住并且再次使用时都是使用 a 改变之后的新值参与计算</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 函数使用 a</span></span><br><span class="line">    function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">      a++;</span><br><span class="line">      console.log(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 函数fun2 也可以使用a</span></span><br><span class="line">    function fun2()&#123;</span><br><span class="line">      a--;</span><br><span class="line">      console.log(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用</span></span><br><span class="line">    fun2();</span><br><span class="line">    fun2();</span><br><span class="line">    fun2();</span><br><span class="line">    console.log(<span class="string">"a的当前值为："</span> + a);</span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">    console.log(<span class="string">"a的当前值为："</span> + a);</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCGRv4.png" alt="UCGRv4.png"></p><h4 id="22-1-2-2-通信作用"><a href="#22-1-2-2-通信作用" class="headerlink" title="22.1.2.2  通信作用"></a>22.1.2.2 通信作用</h4><p>通信作用：在同一个函数使用全局变量，不会每次都清空，也是使用当前的新值参与计算。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 使用全局变量</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 声明函数</span></span><br><span class="line">    function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">      console.log(++a);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">    console.log(<span class="string">"a 的当前值为："</span> + a);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCJmaq.png" alt="UCJmaq.png"></p><h2 id="22-2-作用域链"><a href="#22-2-作用域链" class="headerlink" title="22.2  作用域链"></a>22.2 作用域链</h2><p>指的是我们变量查找的一个规律：</p><ul><li><p>我们可以在不同的作用域内使用相同的标识符去命名变量。我们在使用一个变量的时候，需要找到匹配的标识符，我们有重复的，用哪一个？</p><ul><li><p>如果在当前作用域有这个变量，就直接使用；</p></li><li><p>如果当前作用域没有这个变量定义，会一层一层的从本层往外依次查找。</p></li><li><p>遇到第一个就直接使用，类似于就近原则。</p></li><li><p>当遇见一个变量时，JS引擎会从其所在的作用域依次向外层查找。查找会在找到第一个匹配的标识符的时候停止。在多层嵌套的作用域中可以定义同名的标识符，发生“遮蔽效应”。</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 使用全局变量 a</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 声明函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fun1</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> a =<span class="number">20</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 本层作用域有变量，直接使用</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(a);</span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">fun2</span><span class="params">()</span></span>&#123; </span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 本层作用域没有 a 的定义，从本层出发，向外进行查找到 20</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(a);</span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">fun3</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">var</span> a = <span class="number">30</span>;</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 本层有 a 定义，直接使用</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(a);</span></span><br><span class="line">        &#125;</span><br><span class="line">        fun3();</span><br><span class="line">      &#125;</span><br><span class="line">      fun2();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 调用</span></span></span><br><span class="line">    fun1();</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a);  <span class="comment">//向外查找，不要向内</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCYhA1.png" alt="UCYhA1.png"></p><ul><li><p>在函数内部没有使用var声明的变量，在JS运行阶段，调用函数执行到这个变量的时候，这个变量会被当作全局变量使用</p></li><li><p>注意：没有使用var声明的变量，不会进行变量的提升</p></li><li><p>建议在使用时，尽量使用var关键字声明变量，避免全局变量的污染</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 使用全局变量 a</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// fun1里的 a = 20;等价于在此处写 var a = 20;</span></span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 声明函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">fun1</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 函数内部的var省略，强制转为全局变量</span></span></span><br><span class="line">      a =20</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(a);</span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">fun2</span><span class="params">()</span></span>&#123; </span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(a);</span></span><br><span class="line">      &#125;</span><br><span class="line">      fun2();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 调用</span></span></span><br><span class="line">    fun1();</span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a);  <span class="comment">//向外查找，不要向内</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCtcPP.png" alt="UCtcPP.png"></p><h2 id="22-3-函数的作用域"><a href="#22-3-函数的作用域" class="headerlink" title="22.3  函数的作用域"></a>22.3 函数的作用域</h2><p>在函数内部声明的函数，只能在函数内部声明，在函数外部任何地方都不能访问。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 声明函数</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">outer</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 函数内部声明一个变量</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> a = <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 函数内部声明一个函数</span></span></span><br><span class="line"><span class="actionscript">      <span class="function"><span class="keyword">function</span> <span class="title">inner</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(a);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 调用函数，在当前函数的外部调用</span></span></span><br><span class="line">      inner();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">    <span class="comment">// 调用函数，在当前函数的外部调用</span></span></span><br><span class="line">    outer();</span><br><span class="line"><span class="actionscript">    <span class="comment">//inner 在函数外部调用不能使用</span></span></span><br><span class="line">    inner();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCtbGV.png" alt="UCtbGV.png"></p><h2 id="22-4-函数声明的提升"><a href="#22-4-函数声明的提升" class="headerlink" title="22.4  函数声明的提升"></a>22.4 函数声明的提升</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 使用function关键字</span></span><br><span class="line">    <span class="comment">// 先使用</span></span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 再声明</span></span><br><span class="line">    function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">      console.log(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    提升过程：计算机预解析将所有的声明语句提升到最前面</span></span><br><span class="line"><span class="comment">    相当于：var fun; </span></span><br><span class="line"><span class="comment">    fun是函数可以通过指针找到定义，相当于整体都进行提升</span></span><br><span class="line"><span class="comment">    其他语句原位置执行</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCNFxO.png" alt="UCNFxO.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    console.log(<span class="function"><span class="keyword">fun</span>);          <span class="title">/</span></span>/ undefined</span><br><span class="line">    var <span class="function"><span class="keyword">fun</span> = 10 ;</span></span><br><span class="line"><span class="function">    <span class="title">/</span></span>* </span><br><span class="line">    var <span class="function"><span class="keyword">fun</span>;</span></span><br><span class="line"><span class="function">      <span class="title">/</span></span>/ 声明变量没有赋值，结果是undefined</span><br><span class="line">    console.log(<span class="function"><span class="keyword">fun</span>);</span></span><br><span class="line"><span class="function">    <span class="title">fun</span></span> = <span class="number">10</span>;</span><br><span class="line">     *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">     console.log(fun);        /</span><span class="regexp">/ 10</span></span><br><span class="line"><span class="regexp">&lt;/script</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCN8sg.png" alt="UCN8sg.png"></p><p>使用函数表达式进行提升，只提升变量名，函数的定义不能进行提升，先调用函数会报错。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    /<span class="regexp">/ 先调用</span></span><br><span class="line"><span class="regexp">    fun();</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 再定义</span></span><br><span class="line"><span class="regexp">    var fun = function()&#123;</span></span><br><span class="line"><span class="regexp">      console.log(2);          /</span><span class="regexp">/ 控制台报错 Uncaught TypeError: fun is not a function</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    /</span>* </span><br><span class="line">    提升变量声明，没有赋值</span><br><span class="line">    var <span class="function"><span class="keyword">fun</span>;</span></span><br><span class="line"><span class="function">    其他语句原位置执行</span></span><br><span class="line"><span class="function">    <span class="title">fun</span></span>();</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> = <span class="title">function</span></span>()&#123;</span><br><span class="line">      console.log(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">     *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">&lt;/script</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCNdJ0.png" alt="UCNdJ0.png"></p><p>总结：</p><ul><li><p>在声明函数时，一般我们都使用function关键字这种，不会出错误。</p></li><li><p>并且，一般我们习惯先书写函数的调用，将声明书写在所有语句之后，便于代码读取。</p></li></ul><p><strong>变量名和函数名（<code>function 关键字（）</code>）相同，优先提升函数名，也就是将名字优先给函数使用。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="KOTLIN"><figure class="iseeu highlight /kotlin"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 先调用</span></span><br><span class="line">    console.log(<span class="function"><span class="keyword">fun</span>);</span></span><br><span class="line">    <span class="comment">// 后声明</span></span><br><span class="line">    <span class="keyword">var</span> <span class="function"><span class="keyword">fun</span> = 10;</span></span><br><span class="line">    function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">      console.log(<span class="number">20</span>);          </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* </span></span><br><span class="line"><span class="comment">    预解析：</span></span><br><span class="line"><span class="comment">    函数优先提升</span></span><br><span class="line"><span class="comment">    function fun()&#123;</span></span><br><span class="line"><span class="comment">      console.log(20);</span></span><br><span class="line"><span class="comment">    &#125;; fun名字已经存在，不会重复声明</span></span><br><span class="line"><span class="comment">    var fun;(var fun提升，但不会书写出来)</span></span><br><span class="line"><span class="comment">    其他语句原位置执行</span></span><br><span class="line"><span class="comment">    console.log(fun);</span></span><br><span class="line"><span class="comment">    变量声明一次可以多次赋值</span></span><br><span class="line"><span class="comment">    fun = 10；</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    console.log(<span class="function"><span class="keyword">fun</span>);   // 10</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCN4SK.png" alt="UCN4SK.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CRYSTAL"><figure class="iseeu highlight /crystal"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    /<span class="regexp">/ 先调用</span></span><br><span class="line"><span class="regexp">    fun();</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 后声明</span></span><br><span class="line"><span class="regexp">    var fun = function()&#123;</span></span><br><span class="line"><span class="regexp">      console.log(1);          </span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    function fun()&#123;</span></span><br><span class="line"><span class="regexp">      console.log(2);</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    /</span>* </span><br><span class="line">    预解析：</span><br><span class="line">    function <span class="function"><span class="keyword">fun</span>()&#123;  <span class="title">console</span></span>.log(<span class="number">2</span>);&#125;;  (<span class="function"><span class="keyword">fun</span>名字已经声明)</span></span><br><span class="line"><span class="function">    <span class="title">var</span></span> <span class="function"><span class="keyword">fun</span>; 提升   但不会再书写出来</span></span><br><span class="line"><span class="function">    <span class="title">fun</span></span>();</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> = <span class="title">function</span></span> <span class="function"><span class="keyword">fun</span>()&#123;  <span class="title">console</span></span>.log(<span class="number">1</span>);&#125;</span><br><span class="line">     *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">    fun();     /</span><span class="regexp">/   1</span></span><br><span class="line"><span class="regexp">    console.log(fun);   /</span><span class="regexp">/ function fun()&#123;  console.log(2);&#125;</span></span><br><span class="line"><span class="regexp">&lt;/script</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCNbTA.png" alt="UCNbTA.png"></p><ul><li><p>变量的提升，预解析阶段会将var声明的变量提升到当前作用域的最顶层</p></li><li><p>局部变量函数调用时创建，调用完毕后销毁</p></li><li><p>在函数内部没有使用var声明的变量，在JS运行阶段，调用函数执行到这个变量的时候，这个变量会被当作全局变量使用</p></li><li><p>注意：没有使用var声明的变量，不会进行变量的提升</p></li><li><p>建议在使用时，尽量使用var关键字声明变量，避免全局变量的污染</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TYPESCRIPT"><figure class="iseeu highlight /typescript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 声明一个全局变量number，并赋值10</span></span><br><span class="line">    <span class="comment">// 全局变量在脚本的任何位置都可以被调用到</span></span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">number</span> = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 声明一个函数fn，形成一个局部作用域</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">// 变量的提升，预解析阶段会将var声明的变量提升到当前作用域的最顶层</span></span><br><span class="line">      <span class="comment">// var number;</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">number</span>);  <span class="comment">// undefined</span></span><br><span class="line">      <span class="comment">// 局部变量函数调用时创建，调用完毕后销毁</span></span><br><span class="line">      <span class="keyword">var</span> <span class="built_in">number</span> = <span class="number">200</span>;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">number</span>);   <span class="comment">// 200</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 调用函数 执行函数里的两个console.log(number)</span></span><br><span class="line">    fn();</span><br><span class="line">    <span class="comment">// 调用全局变量number</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">number</span>);        <span class="comment">// 10</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCUkYq.png" alt="UCUkYq.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="TYPESCRIPT"><figure class="iseeu highlight /typescript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 声明一个全局变量number，并赋值10</span></span><br><span class="line">    <span class="comment">// 全局变量在脚本的任何位置都可以被调用到</span></span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">number</span> = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 声明一个函数fn，形成一个局部作用域</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">// 变量的提升，预解析阶段会将var声明的变量提升到当前作用域的最顶层</span></span><br><span class="line">      <span class="comment">// 注意：没有使用var声明的变量，不会进行变量的提升</span></span><br><span class="line">      <span class="comment">// 建议在使用时，尽量使用var关键字声明变量，避免全局变量的污染</span></span><br><span class="line">      <span class="comment">// var number;</span></span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">number</span>);  <span class="comment">// 10</span></span><br><span class="line">      <span class="comment">// 局部变量函数调用时创建，调用完毕后销毁</span></span><br><span class="line">      <span class="comment">// 在函数内部没有使用var声明的变量，在JS运行阶段，调用函数执行到这个变量的时候，这个变量会被当作全局变量使用</span></span><br><span class="line">      <span class="built_in">number</span> = <span class="number">200</span>;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">number</span>);   <span class="comment">// 200</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 调用函数 执行函数里的两个console.log(number)</span></span><br><span class="line">    fn();</span><br><span class="line">    <span class="comment">// 调用全局变量number</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="built_in">number</span>);        <span class="comment">//  200</span></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCwjEQ.png" alt="UCwjEQ.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>函数</tag>
        <tag>变量</tag>
        <tag>作用域</tag>
      </tags>
  </entry>
  <entry>
    <title>二十一、函数的数据类型</title>
    <url>/post/1ddaf41.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十一、函数的数据类型"><a href="#二十一、函数的数据类型" class="headerlink" title="二十一、函数的数据类型"></a>二十一、函数的数据类型</h1><h2 id="21-1-简单数据类型只是复制的值，不互相影响"><a href="#21-1-简单数据类型只是复制的值，不互相影响" class="headerlink" title="21.1  简单数据类型只是复制的值，不互相影响"></a>21.1 简单数据类型只是复制的值，不互相影响</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">// 简单数据类型只是复制的值，不互相影响</span></span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> a = <span class="number">3</span>;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> b = a;</span></span><br><span class="line">  a = 4;</span><br><span class="line"><span class="javascript">  <span class="built_in">console</span>.log(a);   <span class="comment">// 4</span></span></span><br><span class="line"><span class="javascript">  <span class="built_in">console</span>.log(b);   <span class="comment">// 3</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="21-2-引用数据类型传递的是地址，之间相互影响"><a href="#21-2-引用数据类型传递的是地址，之间相互影响" class="headerlink" title="21.2  引用数据类型传递的是地址，之间相互影响"></a>21.2 引用数据类型传递的是地址，之间相互影响</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">//引用数据类型传递的是地址，之间相互影响</span></span></span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> fun1 = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="number">1</span>);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="actionscript">  <span class="keyword">var</span> fun2 = fun1;</span></span><br><span class="line">  fun2.haha = 10;</span><br><span class="line"><span class="javascript">  <span class="built_in">console</span>.log(fun1.haha);   <span class="comment">// 10  如果只是复制，那此处不显示结果</span></span></span><br><span class="line"><span class="javascript">  <span class="built_in">console</span>.log(fun2.haha);   <span class="comment">// 10</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>数据类型</tag>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>二十、用函数实现模块化程序设计</title>
    <url>/post/76c62fe5.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二十、用函数实现模块化程序设计"><a href="#二十、用函数实现模块化程序设计" class="headerlink" title="二十、用函数实现模块化程序设计"></a>二十、用函数实现模块化程序设计</h1><h2 id="20-1-函数的初步"><a href="#20-1-函数的初步" class="headerlink" title="20.1  函数的初步"></a>20.1 函数的初步</h2><p>用<code>function</code>关键字定义一个函数。所谓的函数，就是一些语句的封装。函数必须调用才能够执行里面的语句。</p><p><strong>函数不调用等于白写！！！</strong></p><p><strong>函数有两步：定义和调用</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 定义一个函数，函数的名字是haha。注意函数的命名规范，和变量一样</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">haha</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      alert(<span class="string">"哈哈哈哈"</span>);</span></span><br><span class="line"><span class="actionscript">      alert(<span class="string">"哈哈哈哈哈哈啊哈哈哈哈哈"</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 调用函数使用圆括号</span></span></span><br><span class="line">    haha();</span><br><span class="line"><span class="actionscript">    haha(); <span class="comment">// 调用几次执行几次</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCuaPH.png" alt="UCuaPH.png"></p><p>上面的程序，使用<code>function</code>关键字定义了一个函数。<code>function</code>后面加<code>空格</code>，再加<code>函数名字</code>，跟一个<code>圆括号</code>。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARCADE"><figure class="iseeu highlight /arcade"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 名字(<span class="params"></span>)</span>&#123;</span><br><span class="line">   函数体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>函数里面的语句不会执行，必须等到函数被调用。加圆括号就表示调用函数。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">函数()<span class="comment">;</span></span><br></pre></td></tr></table></figure></div><h2 id="20-2-认识函数的参数"><a href="#20-2-认识函数的参数" class="headerlink" title="20.2  认识函数的参数"></a>20.2 认识函数的参数</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCILAB"><figure class="iseeu highlight /scilab"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 定义一个函数，函数的名字是sum。注意函数的命名规范，和变量一样</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(a, b)</span>&#123;</span></span><br><span class="line">      alert(<span class="string">"两个数字的和是："</span> + (a + b));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用函数使用圆括号</span></span><br><span class="line">    <span class="built_in">sum</span>(<span class="number">4</span>, <span class="number">5</span>)           <span class="comment">// 弹出 9</span></span><br><span class="line">    <span class="built_in">sum</span>(<span class="number">3</span>, <span class="number">2</span>)           <span class="comment">// 弹出 5</span></span><br><span class="line">    <span class="built_in">sum</span>()           <span class="comment">// 弹出 NaN</span></span><br><span class="line">    <span class="built_in">sum</span>(<span class="number">2</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>)           <span class="comment">// 弹出 6    只用前两个，后面的不用</span></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCKPoD.png" alt="UCKPoD.png"></p><p><code>JavaScript</code>中，传参数，全凭自觉。如果参数传的数量不够，或者多了，都不会报错。但是引发程序的不符合预测的运转。</p><p><strong>多一个形参，就要多一个实参</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(a, b, c)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      alert(<span class="string">"三个数字的和是："</span> + (a + b + c));</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    sum(<span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>)           <span class="comment">// 弹出 11</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="20-3-return函数的返回值"><a href="#20-3-return函数的返回值" class="headerlink" title="20.3  return函数的返回值"></a>20.3 <code>return</code>函数的返回值</h2><p>函数内部可以有<code>return</code>，表示函数的返回值。</p><p>一个函数，如果遇见了<code>return</code>语句，则不再继续执行函数体内的其他语句。</p><p>如果调用一个内部写了<code>return</code>的函数，必须用变量接收它！！！</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(a, b, c)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 返回</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> a + b + c;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">sum(4, 5, 2);            </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>此时运行sum不会有任何弹出</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(a, b, c)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 返回</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> a + b + c;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="actionscript">   <span class="comment">// 如果调用一个内部写了return的函数，必须用变量接收它！！！</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> result = sum(<span class="number">4</span>, <span class="number">5</span>, <span class="number">2</span>);           <span class="comment">// return返回之后，要定义一个变量result来接收这个值</span></span></span><br><span class="line"><span class="actionscript">    alert(result);                       <span class="comment">// 弹出结果 11</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCMZh4.png" alt="UCMZh4.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(a, b, c)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 返回</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> a + b + c;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">      sum(4, 5, 2);          </span><br><span class="line">      alert(sum);                     </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCM8AO.png" alt="UCM8AO.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sum</span><span class="params">(a, b, c)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 返回</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> a + b + c;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">      sum(4, 5, 2);          </span><br><span class="line"><span class="actionscript">      alert(<span class="keyword">return</span>);                     </span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCMUgA.png" alt="UCMUgA.png"></p><h2 id="20-4-为什么要有函数？认识函数的黑箱特性、轮子。"><a href="#20-4-为什么要有函数？认识函数的黑箱特性、轮子。" class="headerlink" title="20.4  为什么要有函数？认识函数的黑箱特性、轮子。"></a>20.4 为什么要有函数？认识函数的黑箱特性、轮子。</h2><p>工作时，你的公司以前的项目或多或少封装过一些函数。这些函数普遍提供一些基本功能，比如验证身份证号码是否合规、手机号码是否合规。这些函数，术语叫做“轮子”。</p><p>函数只需要关注它需要传入什么，返回什么即可，不需要关心它内部的语法。</p><p>比如，网上找一个判断身份证的：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkID</span><span class="params">(idnumber)</span></span>&#123;</span><br><span class="line">语句不用关心</span><br><span class="line">语句不用关心</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>我们只需要用：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ISBL"><figure class="iseeu highlight /isbl"><table><tr><td class="code"><pre><span class="line"><span class="variable">var</span> <span class="variable"><span class="class">result</span></span> = <span class="function"><span class="title">checkID</span>(<span class="number">444444199909096666</span>);</span></span><br><span class="line"><span class="function"><span class="title">alert</span>(<span class="variable"><span class="class">result</span></span>);</span></span><br></pre></td></tr></table></figure></div><h3 id="例1：写一个函数，这个函数能够返回-a-和-b-之间所有数字的和"><a href="#例1：写一个函数，这个函数能够返回-a-和-b-之间所有数字的和" class="headerlink" title="例1：写一个函数，这个函数能够返回 a 和 b 之间所有数字的和"></a>例1：写一个函数，这个函数能够返回 a 和 b 之间所有数字的和</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 写一个函数，这个函数能够返回 a 和 b 之间所有数字的和</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">sumAtoB</span><span class="params">(a, b)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> sum = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = a ; i &lt;= b ; i++)&#123;</span></span><br><span class="line">        sum += i</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> sum;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 调用这个函数</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> result =sumAtoB(<span class="number">3</span>, <span class="number">6</span>);          <span class="comment">//计算3+4+5+6的和</span></span></span><br><span class="line"><span class="actionscript">      alert(result);                     <span class="comment">// 弹出 18</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="例2：写一个函数，判断字符串-a-中有没有-b-字符"><a href="#例2：写一个函数，判断字符串-a-中有没有-b-字符" class="headerlink" title="例2：写一个函数，判断字符串 a 中有没有 b 字符"></a>例2：写一个函数，判断字符串 a 中有没有 b 字符</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 写一个函数，判断字符串 a 中有没有 b 字符</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkAStrHaveB</span><span class="params">(a, b)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; a.length ; i++)&#123;</span></span><br><span class="line">        if(a.charAt(i) == b)&#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">break</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> i != a.length;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 调用这个函数</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> result =checkAStrHaveB(<span class="string">"牛牛牛牛牛牛牛牛牛牛牛午牛牛牛牛牛牛牛牛"</span>, <span class="string">"午"</span>);     <span class="comment">//判断 a 中有没有 b</span></span></span><br><span class="line"><span class="actionscript">      alert(result);                     <span class="comment">// 弹出结果为真或假</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="20-5-为什么要有函数？函数能够拆分逻辑，从大逻辑变化为小逻辑"><a href="#20-5-为什么要有函数？函数能够拆分逻辑，从大逻辑变化为小逻辑" class="headerlink" title="20.5  为什么要有函数？函数能够拆分逻辑，从大逻辑变化为小逻辑"></a>20.5 为什么要有函数？函数能够拆分逻辑，从大逻辑变化为小逻辑</h2><h3 id="例1：寻找100-999以内的喇叭花数。"><a href="#例1：寻找100-999以内的喇叭花数。" class="headerlink" title="例1：寻找100~999以内的喇叭花数。"></a>例1：寻找100~999以内的喇叭花数。</h3><p>喇叭花数特点：各个数位的阶乘的和，等于它本身。</p><p>什么叫做阶乘？比如4的阶乘就是4<em>3</em>2*1等于24</p><p>大逻辑：寻找喇叭花数————→小逻辑：先封装一个函数，能够返回a的阶乘</p><p><img src="https://s1.ax1x.com/2020/07/06/UCMvb6.png" alt="UCMvb6.png"></p><p>首先封装一个函数</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 先封装一个函数，能够返回一个数字的阶乘</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">factorial</span><span class="params">(a)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 累乘器</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> result = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//算阶乘</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = a ; i &gt;= <span class="number">1</span> ; i--)&#123;</span></span><br><span class="line"><span class="actionscript">        result *= i;             <span class="comment">// 累乘</span></span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 返回结果</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> result;</span></span><br><span class="line"><span class="actionscript">    &#125;        <span class="comment">//函数写完后一定要测试，测试时直接在控制台书写factorial(数字a),函数书写正确，则会算出结果</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>在控制台进行测试：</p><p><img src="https://s1.ax1x.com/2020/07/06/UCQGq0.png" alt="UCQGq0.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 先封装一个函数，能够返回一个数字的阶乘</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">factorial</span><span class="params">(a)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 累乘器</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> result = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//算阶乘</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = a ; i &gt;= <span class="number">1</span> ; i--)&#123;</span></span><br><span class="line"><span class="actionscript">        result *= i;             <span class="comment">// 累乘</span></span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 返回结果</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> result;</span></span><br><span class="line"><span class="actionscript">    &#125;        <span class="comment">//函数写完后一定要测试，测试时直接在控制台书写factorial(数字a),函数书写正确，则会算出结果</span></span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">// 寻找喇叭花数</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">100</span> ; i &lt;= <span class="number">999</span> ; i++)&#123;        <span class="comment">//上下两个 i 不冲突，下面的i是重新定义的</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 拆位</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> baiwei = ~~(i / <span class="number">100</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> shiwei = ~~(i /<span class="number">10</span>) % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> gewei = i % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 调用函数</span></span></span><br><span class="line">      if(factorial(baiwei) + factorial(shiwei) + factorial(gewei) == i)&#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(i + <span class="string">"是喇叭花数"</span>)</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCQdG4.png" alt="UCQdG4.png"></p><h3 id="例2：输入一个三位数，判断是不是喇叭花数"><a href="#例2：输入一个三位数，判断是不是喇叭花数" class="headerlink" title="例2：输入一个三位数，判断是不是喇叭花数"></a>例2：输入一个三位数，判断是不是喇叭花数</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 先封装一个函数，能够返回一个数字的阶乘</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">factorial</span><span class="params">(a)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 累乘器</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> result = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">//算阶乘</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = a ; i &gt;= <span class="number">1</span> ; i--)&#123;</span></span><br><span class="line"><span class="actionscript">        result *= i;             <span class="comment">// 累乘</span></span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 返回结果</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> result;</span></span><br><span class="line"><span class="actionscript">    &#125;        <span class="comment">//函数写完后一定要测试，测试时直接在控制台书写factorial(数字a),函数书写正确，则会算出结果</span></span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 输入一个数字 i</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = prompt(<span class="string">"请输入一个三位数"</span>);</span></span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="comment">// 拆位</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> baiwei = ~~(i / <span class="number">100</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> shiwei = ~~(i /<span class="number">10</span>) % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> gewei = i % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 调用函数</span></span></span><br><span class="line">    if(factorial(baiwei) + factorial(shiwei) + factorial(gewei) == i)&#123;</span><br><span class="line"><span class="actionscript">      alert(i + <span class="string">"是喇叭花数"</span>);</span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">      alert(i + <span class="string">"不是喇叭花数"</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCQWJe.png" alt="UCQWJe.png"></p><h2 id="20-6-为什么要有函数？方便制作功能的递进"><a href="#20-6-为什么要有函数？方便制作功能的递进" class="headerlink" title="20.6  为什么要有函数？方便制作功能的递进"></a>20.6 为什么要有函数？方便制作功能的递进</h2><h3 id="例1：列出1-50中所有偶数拆分为两个质数和（哥德巴赫猜想）"><a href="#例1：列出1-50中所有偶数拆分为两个质数和（哥德巴赫猜想）" class="headerlink" title="例1：列出1~50中所有偶数拆分为两个质数和（哥德巴赫猜想）"></a>例1：列出1~50中所有偶数拆分为两个质数和（哥德巴赫猜想）</h3><p><img src="https://s1.ax1x.com/2020/07/06/UCQbo8.png" alt="UCQbo8.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 检测 a 是不是质数，函数返回布尔值</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkIsPrime</span><span class="params">(a)</span></span>&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">2</span> ; i &lt; a ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a % i == <span class="number">0</span>)&#123;</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 看 i 和 a 是不是相等，如果等就是质数，如果不等就不是质数</span></span><br><span class="line">      <span class="keyword">return</span> i == a;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p>测试：</p><p><img src="https://s1.ax1x.com/2020/07/06/UClkYF.png" alt="UClkYF.png"></p><p>递进：</p><p><strong>一个函数的基础上，可以演变为更高级别的函数</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 检测 a b 是不是都是质数</span></span><br><span class="line">    <span class="keyword">function</span> check<span class="constructor">BothIsPrime(<span class="params">a</span>, <span class="params">b</span>)</span>&#123;</span><br><span class="line">      return check<span class="constructor">IsPrime(<span class="params">a</span>)</span><span class="operator"> &amp;&amp; </span>check<span class="constructor">IsPrime(<span class="params">b</span>)</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p>测试：</p><p><img src="https://s1.ax1x.com/2020/07/06/UClKw6.png" alt="UClKw6.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这个函数能够把 n 最小（左边值最小）的一组和（都是质数）输出</span></span><br><span class="line">    <span class="keyword">function</span> <span class="constructor">PrimeSum(<span class="params">n</span>)</span>&#123;</span><br><span class="line">      for(var i = <span class="number">1</span>; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(check<span class="constructor">BothIsPrime(<span class="params">i</span>, <span class="params">n</span> - <span class="params">i</span>)</span>)&#123;</span><br><span class="line">          console.log(n + <span class="string">"="</span> +  i + <span class="string">"+"</span> + (n - i));</span><br><span class="line">          return;   <span class="comment">// return;表示当控制台输出一个结果后就结束输出。</span></span><br><span class="line">                    <span class="comment">// 函数遇见return会立即结束</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p>测试：</p><p><img src="https://s1.ax1x.com/2020/07/06/UCla0P.png" alt="UCla0P.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 检测 a 是不是质数，函数返回布尔值</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkIsPrime</span><span class="params">(a)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">2</span> ; i &lt; a ; i++)&#123;</span></span><br><span class="line">        if(a % i == 0)&#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">break</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 看 i 和 a 是不是相等，如果等就是质数，如果不等就不是质数</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> i == a;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 检测 a b 是不是都是质数</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkBothIsPrime</span><span class="params">(a, b)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> checkIsPrime(a) &amp;&amp; checkIsPrime(b);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 这个函数能够把 n 最小（左边值最小）的一组和（都是质数）输出</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">PrimeSum</span><span class="params">(n)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; n ; i++)&#123;</span></span><br><span class="line">        if(checkBothIsPrime(i, n - i))&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(n + <span class="string">"="</span> +  i + <span class="string">"+"</span> + (n - i));</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span>;   <span class="comment">// return;表示当控制台输出一个结果后就结束输出           // 函数遇见return会立即结束</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 主程序</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">2</span> ; i &lt;= <span class="number">50</span> ; i +=<span class="number">2</span>)&#123;</span></span><br><span class="line">      PrimeSum(i);</span><br><span class="line">    &#125; </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UClylj.png" alt="UClylj.png"></p><h3 id="例2：输入一个偶数，给出拆分为两个质数和（哥德巴赫猜想）"><a href="#例2：输入一个偶数，给出拆分为两个质数和（哥德巴赫猜想）" class="headerlink" title="例2：输入一个偶数，给出拆分为两个质数和（哥德巴赫猜想）"></a>例2：输入一个偶数，给出拆分为两个质数和（哥德巴赫猜想）</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 检测 a 是不是质数，函数返回布尔值</span></span><br><span class="line">    <span class="keyword">function</span> check<span class="constructor">IsPrime(<span class="params">a</span>)</span>&#123;</span><br><span class="line">      for(var i = <span class="number">2</span> ; i &lt; a ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a % i<span class="operator"> == </span><span class="number">0</span>)&#123;</span><br><span class="line">          break;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 看 i 和 a 是不是相等，如果等就是质数，如果不等就不是质数</span></span><br><span class="line">      return i<span class="operator"> == </span>a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检测 a b 是不是都是质数</span></span><br><span class="line">    <span class="keyword">function</span> check<span class="constructor">BothIsPrime(<span class="params">a</span>, <span class="params">b</span>)</span>&#123;</span><br><span class="line">      return check<span class="constructor">IsPrime(<span class="params">a</span>)</span><span class="operator"> &amp;&amp; </span>check<span class="constructor">IsPrime(<span class="params">b</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 这个函数能够把 n 最小（左边值最小）的一组和（都是质数）输出</span></span><br><span class="line">    <span class="keyword">function</span> <span class="constructor">PrimeSum(<span class="params">n</span>)</span>&#123;</span><br><span class="line">      for(var i = <span class="number">1</span>; i &lt; n ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(check<span class="constructor">BothIsPrime(<span class="params">i</span>, <span class="params">n</span> - <span class="params">i</span>)</span>)&#123;</span><br><span class="line">          return n + <span class="string">"="</span> +  i + <span class="string">"+"</span> + (n - i);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主程序</span></span><br><span class="line">    var i = prompt(<span class="string">"请输入一个偶数："</span>)<span class="operator"> || </span><span class="number">4</span>,</span><br><span class="line">        result = <span class="constructor">PrimeSum(<span class="params">i</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="constructor">PrimeSum(<span class="params">i</span>)</span>)&#123;</span><br><span class="line">      alert(result);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      alert(i + <span class="string">"不能拆分为两个质数和"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UC19cd.png" alt="UC19cd.png"></p><h2 id="20-7-递归函数和递进函数"><a href="#20-7-递归函数和递进函数" class="headerlink" title="20.7  递归函数和递进函数"></a>20.7 递归函数和递进函数</h2><h3 id="20-7-1-递归函数"><a href="#20-7-1-递归函数" class="headerlink" title="20.7.1  递归函数"></a>20.7.1 递归函数</h3><p>递归函数：在函数内部调用自身，一般解决数学问题</p><p>案例：斐波那契数列</p><p>斐波那契数列：1,1,2,3,5,8,13,21,34，……</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    /* </span><br><span class="line">    斐波那契数列：1，1，2，3，5，8，13，21，34，……</span><br><span class="line">    目的：用户输入项数，我们返回该项对应的值</span><br><span class="line">    参数：一个项数从第一项开始</span><br><span class="line">    返回值：项数对应的值</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line"><span class="actionscript">     <span class="comment">// 函数</span></span></span><br><span class="line"><span class="actionscript">     <span class="function"><span class="keyword">function</span> <span class="title">feibo</span><span class="params">(n)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">       <span class="comment">// 用户输入第n项，返回对应的值</span></span></span><br><span class="line"><span class="actionscript">       <span class="comment">// 从第三项开始，值等于第 n - 1 项对应的值加上 第n - 2 项对应的值</span></span></span><br><span class="line"><span class="actionscript">       <span class="comment">// 比如，第四项3，第n- 1 项对应的值2，第n-2项对应的值1</span></span></span><br><span class="line"><span class="actionscript">       <span class="keyword">if</span>(n == <span class="number">1</span> || n == <span class="number">2</span>)&#123;   <span class="comment">// 第 1 项和第 2 项值都是 1</span></span></span><br><span class="line"><span class="actionscript">         <span class="keyword">return</span> <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">       &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> feibo(n - <span class="number">1</span>) + feibo(n - <span class="number">2</span>);     <span class="comment">// 递归：在函数里面调用自己</span></span></span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UC1rE6.png" alt="UC1rE6.png"></p><h3 id="20-7-2-递进函数"><a href="#20-7-2-递进函数" class="headerlink" title="20.7.2  递进函数"></a>20.7.2 递进函数</h3><p>递进函数：一个函数的基础上，可以演变为更高级别的函数</p><p>案例：哥德巴赫猜想</p><p>哥德巴赫猜想：列出1~50中所有偶数拆分为两个质数和</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 检测 a 是不是质数，函数返回布尔值</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkIsPrime</span><span class="params">(a)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">2</span> ; i &lt; a ; i++)&#123;</span></span><br><span class="line">        if(a % i == 0)&#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">break</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 看 i 和 a 是不是相等，如果等就是质数，如果不等就不是质数</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> i == a;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 检测 a b 是不是都是质数</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">checkBothIsPrime</span><span class="params">(a, b)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> checkIsPrime(a) &amp;&amp; checkIsPrime(b);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 这个函数能够把 n 最小（左边值最小）的一组和（都是质数）输出</span></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">PrimeSum</span><span class="params">(n)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; n ; i++)&#123;</span></span><br><span class="line">        if(checkBothIsPrime(i, n - i))&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(n + <span class="string">"="</span> +  i + <span class="string">"+"</span> + (n - i));</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">return</span>;   <span class="comment">// return;表示当控制台输出一个结果后就结束输出           // 函数遇见return会立即结束</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 主程序</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">2</span> ; i &lt;= <span class="number">50</span> ; i +=<span class="number">2</span>)&#123;</span></span><br><span class="line">      PrimeSum(i);</span><br><span class="line">    &#125; </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UClylj.png" alt="UClylj.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>函数</tag>
        <tag>模块化</tag>
      </tags>
  </entry>
  <entry>
    <title>十九、while()循环</title>
    <url>/post/f49b500.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十九、while-循环"><a href="#十九、while-循环" class="headerlink" title="十九、while()循环"></a>十九、<code>while()</code>循环</h1><h2 id="19-1-while和do……while的执行机理"><a href="#19-1-while和do……while的执行机理" class="headerlink" title="19.1  while和do……while的执行机理"></a>19.1 <code>while</code>和<code>do……while</code>的执行机理</h2><p><code>while</code>的循环机理：首先要判断表达式是否是真，如果是真，就执行循环体。执行一次之后再看表达式是否是真，如果是真，就再执行…………直到表达式为假。</p><p><img src="https://s1.ax1x.com/2020/07/06/UCesqU.png" alt="UCesqU.png"></p><p><code>do……while</code>的循环机理：第一次执行<code>do{ }</code>里面的语句，不需要满足条件。然后满足<code>while</code>的条件就继续执行下去</p><p><img src="https://s1.ax1x.com/2020/07/06/UCeRi9.png" alt="UCeRi9.png"></p><p>用<code>while</code>循环输出1~100：</p><p>写法1：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">while</span>(i &lt;= <span class="number">100</span>)&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i);          <span class="comment">// 输出1~100</span></span></span><br><span class="line">      i++;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>循环体中必须自己写<code>i</code>的改变量。<code>for</code>循环有<code>for(;;i++){}</code>结构，<code>while</code>没有，需要自己写。</p><p>必须要使<code>i</code>有朝一日，不满足<code>i&lt;100</code>，循环越走越趋向终点。</p><p>写法2：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">while</span>(i &lt;= <span class="number">100</span>)&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i++);          <span class="comment">// 输出1~100</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>写法3：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">while</span>(i++ &lt;= <span class="number">100</span>)&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i);           <span class="comment">// 输出2~101</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>写法4:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">while</span>(++i &lt;= <span class="number">100</span>)&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i);           <span class="comment">// 输出2~100</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>写法5：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">100</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">while</span>(i--)&#123;                    <span class="comment">// 0判断为非，到0自动停止</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i);          <span class="comment">//输出99~0</span></span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p>写法6：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">100</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">while</span>(--i)&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i);           <span class="comment">// 输出99~1</span></span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p>写法7：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">do</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i);        <span class="comment">// 先做一次再判断     输出1~101</span></span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">while</span>(i++ &lt;=<span class="number">100</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>写法8：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">do</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i);        <span class="comment">// 先做一次再判断     输出1~100</span></span></span><br><span class="line">      i++;</span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">while</span>(i &lt;=<span class="number">100</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>写法9：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">do</span>&#123;</span></span><br><span class="line">      i++;</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i);        <span class="comment">// 先做一次再判断     输出:2~101</span></span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">while</span>(i &lt;=<span class="number">100</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>写法10：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">do</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i++);        <span class="comment">// 先做一次再判断     输出1~100</span></span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">while</span>(i &lt;=<span class="number">100</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>写法11：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i);                  <span class="comment">// 输出1~100</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span>(++i &gt; <span class="number">100</span>) <span class="keyword">break</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>故意写成死循环，然后大于了100，那么结束死循环。</p><p>注意，通过上面的例子，发现while不擅长做“<code>有明确卡两头</code>”的问题，因为这样非常容易犯“<code>出1</code>”错误，要么多一个，要么少一个。</p><h2 id="19-2-while常用在何处（卡量不卡端点）"><a href="#19-2-while常用在何处（卡量不卡端点）" class="headerlink" title="19.2  while常用在何处（卡量不卡端点）"></a>19.2 <code>while</code>常用在何处（卡量不卡端点）</h2><p>while擅长什么？</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">① 限制结果个数，比如找十个质数；找<span class="number">3</span>个水仙花数；找<span class="number">6</span>个完美数</span><br><span class="line">② 找最小的，比如找最小的质数</span><br><span class="line">③ 随机数最值的验收，比如随机两个数字不能都是<span class="number">0</span></span><br></pre></td></tr></table></figure></div><p>例1：寻找前10位质数</p><p>找数量，满足几个，就累加，两个数</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 现在已经找到几个了</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> number = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 现在已经验证到数字几了，第一个质数是2</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> n = <span class="number">2</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">while</span>(number &lt; <span class="number">10</span>)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 判断n是不是质数</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">2</span> ; i &lt; n ; i++)&#123;</span></span><br><span class="line">        if(n % i == 0)&#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">break</span>;   <span class="comment">//一旦 n能被&gt;=2的数字整除时，说明n不是质数</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 看i怎么出循环的。如果i和n相等，说明i是自然出循环的，是质数</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 如果i和n不相等，说明是被break赶出来的，就不输出</span></span></span><br><span class="line">        if(i == n)&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(n);</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 计数器加1</span></span></span><br><span class="line">          number++;</span><br><span class="line">        &#125;</span><br><span class="line">      n++;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCmdTe.png" alt="UCmdTe.png"></p><p>还可写为死循环的方式，当找到前10个数后结束循环：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 现在已经找到几个了</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> number = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 现在已经验证到数字几了，第一个质数是2</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> n = <span class="number">2</span>;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 判断n是不是质数</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">2</span> ; i &lt; n ; i++)&#123;</span></span><br><span class="line">        if(n % i == 0)&#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">break</span>;   <span class="comment">//一旦 n能被&gt;=2的数字整除时，说明n不是质数</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 看i怎么出循环的。如果i和n相等，说明i是自然出循环的，是质数</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 如果i和n不相等，说明是被break赶出来的，就不输出</span></span></span><br><span class="line">        if(i == n)&#123;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(n);</span></span><br><span class="line"><span class="actionscript">          <span class="comment">// 计数器加1</span></span></span><br><span class="line">          number++;</span><br><span class="line">          if(number == 10)&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">break</span>;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 让下一个数字来检查，开始检查3 4 5 6 ……</span></span></span><br><span class="line">      n++;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>例2：寻找最小的既能被3整除，也能被5整除的数：</p><p><code>找最小，while（true）{}</code>，写死循环，满足一个条件就<code>break</code>掉</p><p>拧巴的写法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EXCEL"><figure class="iseeu highlight /excel"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="built_in">var</span> <span class="built_in">n</span> = <span class="number">1</span>;</span><br><span class="line">    while(!(<span class="built_in">n</span> % <span class="number">3</span> ==<span class="number">0</span> &amp;&amp; <span class="built_in">n</span> % <span class="number">5</span> ==<span class="number">0</span>))&#123; //当<span class="built_in">n</span>不能满足(<span class="built_in">n</span> % <span class="number">3</span> ==<span class="number">0</span> &amp;&amp; <span class="built_in">n</span> % <span class="number">5</span> ==<span class="number">0</span>)时，<span class="built_in">n</span>继续自增</span><br><span class="line">      <span class="built_in">n</span>++;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(<span class="built_in">n</span>);        // 输出<span class="number">15</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p>正确的写法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var n = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)&#123;     </span><br><span class="line">      <span class="keyword">if</span>(n % <span class="number">3</span> ==<span class="number">0</span> &amp;&amp; n % <span class="number">5</span> ==<span class="number">0</span>)&#123;</span><br><span class="line">        console.log(n);            <span class="comment">// 输出15</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      n++;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p>例3：随机两个-3到3的数字，不能都是0</p><p>应用:</p><p>do{<br>}while（）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 随机产生的a和b不能都是0</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">do</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> a = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">7</span>) - <span class="number">3</span>;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> b = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">7</span>) - <span class="number">3</span>;</span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">while</span>(a == <span class="number">0</span> &amp;&amp; b == <span class="number">0</span>); <span class="comment">// 先执行随机产生a b ，当a b 都为0时就一直循环，保证出来的 a  不都是0</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a, b);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span>   </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">do</span>&#123;<span class="keyword">var</span> a = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">10000</span>);</span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">while</span>(a != <span class="number">666</span>); <span class="comment">// 先执行随机产生a ，当a 不是666的时候就一直循环，所以出来的a一定是666</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a);   <span class="comment">// a 值一定是666</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>关于随机数<code>Math.random()</code></p><p>产生一个0~1之间的随机数。注意取的数字肯定不是0，也不是1.也就是说（0,1）<code>开区间</code></p><p><img src="https://s1.ax1x.com/2020/07/06/UCnp11.png" alt="UCnp11.png"></p><p>这个随机数可以放大一个倍数：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Math</span>.</span></span>random<span class="literal">()</span><span class="operator"> * </span><span class="number">8</span>          <span class="comment">// 0点几到7点几</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCnEAe.png" alt="UCnEAe.png"></p><p>关于取整：<code>parseInt(Math.random() * 8)</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">parseInt(Math.random()</span> <span class="string">*</span> <span class="number">8</span><span class="string">)</span>          <span class="string">//</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCnm9A.png" alt="UCnm9A.png"></p><p>还可以加上一个常数：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">parseInt(Math.random()</span> <span class="string">*</span> <span class="number">8</span><span class="string">)</span> <span class="string">+</span> <span class="number">3</span>            <span class="string">//</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">9</span> <span class="number">10</span></span><br></pre></td></tr></table></figure></div><p>得到一个公式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SAS"><figure class="iseeu highlight /sas"><table><tr><td class="code"><pre><span class="line">想要在`[a,b]`闭区间内随机一个整数，应该写：</span><br><span class="line"></span><br><span class="line">    pars<span class="meta">eInt(</span>Math.random() <span class="comment">* (b – a + 1)) + a;</span></span><br></pre></td></tr></table></figure></div><p>比如，想要随机得到33 34 35 36 四个值中的任意值：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">parseInt(Math.random() * <span class="number">4</span>) + <span class="number">33</span>;</span><br></pre></td></tr></table></figure></div><p>比如，想要随机得到5 6 7 8 四个值中的任意值：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">parseInt(Math.random() * <span class="number">4</span>) + <span class="number">5</span>;</span><br></pre></td></tr></table></figure></div><p>比如，想要随机得到-3 -2 -1 0 1 2 3 七个值中的任意值：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">parseInt(Math.random() * <span class="number">7</span>) - <span class="number">3</span>;</span><br></pre></td></tr></table></figure></div><h2 id="19-3-while循环转为for循环"><a href="#19-3-while循环转为for循环" class="headerlink" title="19.3  while循环转为for循环"></a>19.3 <code>while</code>循环转为<code>for</code>循环</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GCODE"><figure class="iseeu highlight /gcode"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span><span class="comment">(abc)</span>&#123; &#125; </span><br><span class="line"></span><br><span class="line">  ↓↓↓</span><br><span class="line">  </span><br><span class="line">for<span class="comment">()</span> ；abc ; )&#123; &#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>循环</tag>
        <tag>while</tag>
      </tags>
  </entry>
  <entry>
    <title>十八、break和continue</title>
    <url>/post/7a0cd655.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十八、break和continue"><a href="#十八、break和continue" class="headerlink" title="十八、break和continue"></a>十八、<code>break</code>和<code>continue</code></h1><h2 id="18-1-break"><a href="#18-1-break" class="headerlink" title="18.1  break"></a>18.1 <code>break</code></h2><p>表示立即终止循环</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt;= <span class="number">10</span> ; i++)&#123;</span></span><br><span class="line">        if(i == 3)&#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">break</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(i);       </span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span>   </span><br><span class="line"></span><br><span class="line">// 结果为： 1   2</span><br></pre></td></tr></table></figure></div><p>遇见break语句，会立即结束整个循环，做循环后面的语句去了。当前这次遍历，没有做完的语句也不做了</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt;= <span class="number">10</span> ; i++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(i);     </span></span><br><span class="line">        if(i == 3)&#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">break</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 结果为： 1   2   3</span><br></pre></td></tr></table></figure></div><p>break天生打断最内层循环的</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; <span class="number">3</span> ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span> ; j &lt; <span class="number">3</span> ; j++)&#123;</span></span><br><span class="line">          if(i &lt; j)&#123;</span><br><span class="line"><span class="actionscript">            <span class="keyword">break</span>;</span></span><br><span class="line">          &#125;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(i , j)    <span class="comment">// console.log()中  ，逗号表示隔开</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCk5fP.png" alt="UCk5fP.png"></p><p><strong><code>break</code>这个语句，产生了一个新的算法思维，后置验证i的值。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(var i = <span class="number">0</span> ; i &lt; <span class="number">10</span> ; i++)&#123;</span><br><span class="line">&#125;</span><br><span class="line"> console.log(i);            <span class="comment">// 10</span></span><br></pre></td></tr></table></figure></div><p>如果这个变量i成功执行了所有次数的循环，出了循环之后，必然值是10</p><p>如果出了循环之后，值不是10，说明这个i不是自己出来的，而是被break赶出来的的</p><h3 id="18-1-1-算法题目1：验证字符串都是牛，没有别的字"><a href="#18-1-1-算法题目1：验证字符串都是牛，没有别的字" class="headerlink" title="18.1.1  算法题目1：验证字符串都是牛，没有别的字"></a>18.1.1 算法题目1：验证字符串都是牛，没有别的字</h3><p>比如，验证“牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛午牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛”中是不是都是牛，没有午</p><ul><li>字符串的长度叫做<code>length</code>，<code>length</code>是属性，所以没有函数，没有括号</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GLSL"><figure class="iseeu highlight /glsl"><table><tr><td class="code"><pre><span class="line">“我爱你”.<span class="built_in">length</span>             <span class="comment">// 3</span></span><br></pre></td></tr></table></figure></div><ul><li>得到字符串某位那个字，用<code>charAt()</code> 从<code>0</code>开始数。<code>charAt()</code>是函数，所以有括号</li></ul><p><img src="https://s1.ax1x.com/2020/07/06/UCAJht.png" alt="UCAJht.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> str = <span class="string">"牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛午牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛牛"</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 遍历每个字，如果不是牛字，立即结束循环</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; str.length ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">if</span>(str.charAt(i) !== <span class="string">"牛"</span>)&#123;</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">break</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 看这个i是不是等于str.length，如果等于，就是说i是自然出来的</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 如果不等于就表示是被干出来的</span></span></span><br><span class="line">      if(i === str.length)&#123;</span><br><span class="line"><span class="actionscript">        alert(<span class="string">"字符串都是牛"</span>);</span></span><br><span class="line"><span class="actionscript">      &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"字符串中有叛徒，第"</span> + i + <span class="string">"位是叛徒"</span>);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCAyhq.png" alt="UCAyhq.png"></p><h3 id="18-1-2-算法题目2：验证200-300之间有没有水仙花数"><a href="#18-1-2-算法题目2：验证200-300之间有没有水仙花数" class="headerlink" title="18.1.2  算法题目2：验证200~300之间有没有水仙花数"></a>18.1.2 算法题目2：验证200~300之间有没有水仙花数</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 穷举法</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">100</span> ; i &lt;= <span class="number">999</span> ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 拆位</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> baiwei = ~~(i / <span class="number">100</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> shiwei = ~~(i / <span class="number">10</span>) % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> gewei = i % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 看是否符合水仙花数的定义</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(<span class="built_in">Math</span>.pow(baiwei, <span class="number">3</span>) + <span class="built_in">Math</span>.pow(shiwei, <span class="number">3</span>) + <span class="built_in">Math</span>.pow(gewei, <span class="number">3</span>) == i)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 看i怎么出来的</span></span></span><br><span class="line">    if(i == 1000)&#123;</span><br><span class="line"><span class="actionscript">      alert(<span class="string">"没有水仙花数"</span>)</span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">      alert(<span class="string">"有！"</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCAH9x.png" alt="UCAH9x.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 穷举法</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">200</span> ; i &lt;= <span class="number">300</span> ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 拆位</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> baiwei = ~~(i / <span class="number">100</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> shiwei = ~~(i / <span class="number">10</span>) % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> gewei = i % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 看是否符合水仙花数的定义</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(<span class="built_in">Math</span>.pow(baiwei, <span class="number">3</span>) + <span class="built_in">Math</span>.pow(shiwei, <span class="number">3</span>) + <span class="built_in">Math</span>.pow(gewei, <span class="number">3</span>) == i)&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">// 看i怎么出来的</span></span></span><br><span class="line">    if(i == 301)&#123;</span><br><span class="line"><span class="actionscript">      alert(<span class="string">"没有水仙花数"</span>)</span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">      alert(<span class="string">"有！"</span>)</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCEFv8.png" alt="UCEFv8.png"></p><h3 id="18-1-3-算法题目3：寻找1-100的质数"><a href="#18-1-3-算法题目3：寻找1-100的质数" class="headerlink" title="18.1.3  算法题目3：寻找1~100的质数"></a>18.1.3 算法题目3：寻找1~100的质数</h3><p>之前用的是count法，比如验证48 是不是质数，我们发现1 2 3 4 6 8 12 16 24 48 共10个数字都是它的约数，即i为48时，因为count是10 ，而不是2 ，所以48 不是质数</p><p>但是为何要统计48有几个约数呢？只要2~47有数字能整除，就是说明不是质数了</p><p>改良算法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">2</span> ; i &lt;= <span class="number">100</span> ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">2</span> ; j &lt; i ; j++)&#123;</span></span><br><span class="line">        if(i % j == 0)&#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">break</span>;    <span class="comment">//一旦 i能被&gt;=2的数字整除时，说明i不是质数</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="actionscript">      <span class="comment">// 看j怎么出循环的。如果j和i相等，说明i是自然出循环的，是质数</span></span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 如果j和i不相等，说明是被break赶出来的，就不输出</span></span></span><br><span class="line">      if(j == i)&#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(i);</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/UCEgIA.png" alt="UCEgIA.png"></p><h2 id="18-2-continue"><a href="#18-2-continue" class="headerlink" title="18.2  continue"></a>18.2 <code>continue</code></h2><p><code>continue</code>没啥用。为啥？因为<code>continue</code>这个语句，已经被人诟病，影响程序可读性，公司不让用。</p><p><code>continue</code>表示进入下一次迭代。本次迭代的后续语句不做了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt;= <span class="number">10</span> ; i++)&#123;</span></span><br><span class="line">      if(i == 3)&#123;</span><br><span class="line"><span class="actionscript">        <span class="keyword">continue</span>;      <span class="comment">// 继续</span></span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>没有3 ，到3 那次迭代的时候，遇见了continue语句，立即进入下一次迭代，就是4了</p><p><img src="https://s1.ax1x.com/2020/07/06/UCV9Z4.png" alt="UCV9Z4.png"></p><p>事实上，不想数出3，直接写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MATLAB"><figure class="iseeu highlight /matlab"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">for</span>(var <span class="built_in">i</span> = <span class="number">1</span> ; <span class="built_in">i</span> &lt;= <span class="number">10</span> ; <span class="built_in">i</span>++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="built_in">i</span> != <span class="number">3</span>)&#123;</span><br><span class="line">      console.<span class="built_in">log</span>(<span class="built_in">i</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h2 id="18-3-给循环命名"><a href="#18-3-给循环命名" class="headerlink" title="18.3  给循环命名"></a>18.3 给循环命名</h2><p>给循环命名，这个写法工作中完全不让用！！！</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MATLAB"><figure class="iseeu highlight /matlab"><table><tr><td class="code"><pre><span class="line">waiceng ：<span class="keyword">for</span>（var <span class="built_in">i</span> = <span class="number">1</span> ; <span class="built_in">i</span> &lt; <span class="number">10</span> ; <span class="built_in">i</span>++）&#123;</span><br><span class="line"><span class="keyword">for</span>(var <span class="built_in">j</span> = <span class="number">1</span> ; <span class="built_in">j</span> &lt;=<span class="number">10</span> ; <span class="built_in">j</span>++)&#123;</span><br><span class="line"><span class="keyword">break</span> waiceng;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>for</tag>
        <tag>break</tag>
        <tag>continue</tag>
      </tags>
  </entry>
  <entry>
    <title>十七、for循环语句算法题目</title>
    <url>/post/6889432a.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十七、for循环语句算法题目"><a href="#十七、for循环语句算法题目" class="headerlink" title="十七、for循环语句算法题目"></a>十七、<code>for</code>循环语句算法题目</h1><p>之前的<code>for</code>循环，要求非常微观的看参数、遍历程序。</p><p>在做算法的时候，程序必须要宏观的看。</p><p>比如，题目：请在1~100之间寻找所有的既能够被3整除，又能够被5整除的数字</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MATLAB"><figure class="iseeu highlight /matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(var <span class="built_in">i</span> = <span class="number">1</span> ; <span class="built_in">i</span> &lt; <span class="number">100</span> ; <span class="built_in">i</span>++)&#123;</span><br><span class="line">     <span class="keyword">if</span>(<span class="built_in">i</span> <span class="comment">% 3 == 0 &amp;&amp; i % 5 == 0)&#123;</span></span><br><span class="line">           console.<span class="built_in">log</span>(<span class="built_in">i</span>);</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这种算法思想叫做<code>穷举法</code>。计算机最大的能力就是计算能力，计算机没有逻辑分析的能力（不能按3和5的公倍数来找）。</p><p>穷举法注意：</p><ul><li><p>注意开始数值、结束数值</p></li><li><p>将全部的精力放在循环体书写上。真正的算法在循环体里面。</p></li></ul><h2 id="17-1-水仙花数"><a href="#17-1-水仙花数" class="headerlink" title="17.1  水仙花数"></a>17.1 水仙花数</h2><p>什么是水仙花数：</p><blockquote><p>一个三位数，各个数位的立方和等于他自己的。比如153、371……</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 穷举法</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">100</span> ; i &lt;= <span class="number">999</span> ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 拆位</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> baiwei = ~~(i / <span class="number">100</span>);</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> shiwei = ~~(i / <span class="number">10</span>) % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> gewei = i % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 看是否符合水仙花数的定义</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span>(<span class="built_in">Math</span>.pow(baiwei, <span class="number">3</span>) + <span class="built_in">Math</span>.pow(shiwei, <span class="number">3</span>) + <span class="built_in">Math</span>.pow(gewei, <span class="number">3</span>) == i)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(i + <span class="string">"是水仙花数"</span>);</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9mv5j.png" alt="U9mv5j.png"></p><h2 id="17-2-累加：计算1-2-3-……-100的和"><a href="#17-2-累加：计算1-2-3-……-100的和" class="headerlink" title="17.2  累加：计算1+2+3+……+100的和"></a>17.2 累加：计算1+2+3+……+100的和</h2><p>累加器</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XQUERY"><figure class="iseeu highlight /xquery"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    // 累加器，这是一个变量，一开始是0</span></span><br><span class="line"><span class="xml">    var sum = 0;</span></span><br><span class="line"><span class="xml">    for(var i = 1 ; i <span class="tag">&lt;<span class="name">=</span> <span class="attr">100</span> ; <span class="attr">i</span>++)</span></span><span class="xquery">&#123;</span></span><br><span class="line"><span class="xquery">      //<span class="built_in"> sum</span>在自己的基础上，自增i</span></span><br><span class="line"><span class="xquery">     <span class="built_in"> sum</span> += i;</span></span><br><span class="line"><span class="xquery">    &#125;</span></span><br><span class="line"><span class="xml">      console.log(sum);             // 5050</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><h2 id="17-3-循环的嵌套"><a href="#17-3-循环的嵌套" class="headerlink" title="17.3  循环的嵌套"></a>17.3 循环的嵌套</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MATLAB"><figure class="iseeu highlight /matlab"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">for</span>(var <span class="built_in">i</span> = <span class="number">3</span> ; <span class="built_in">i</span> &lt; <span class="number">8</span> ; <span class="built_in">i</span>++)&#123;</span><br><span class="line">      <span class="keyword">for</span>(var <span class="built_in">j</span> = <span class="number">2</span> ; <span class="built_in">j</span> &lt; <span class="number">5</span> ; <span class="built_in">j</span>++)&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(<span class="built_in">i</span> * <span class="built_in">j</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p>这个<code>for</code>循环的意思是，<code>i</code>会成为3 4 5 6 7 。在<code>i</code>是3 4 5 6 7 的情况下，<code>j</code>每次都会顺序成为2 3 4 。</p><p>他们会经过的配搭，依次为:</p><p><img src="https://s1.ax1x.com/2020/07/05/U9nMM6.png" alt="U9nMM6.png"></p><h2 id="17-4-输出1-20每个数字的约数"><a href="#17-4-输出1-20每个数字的约数" class="headerlink" title="17.4  输出1~20每个数字的约数"></a>17.4 输出1~20每个数字的约数</h2><p>请实现控制台显示：</p><p>1能够被1整除</p><p>2能够被1整除、被2整除</p><p>3能够被1整除、被5整除</p><p>……</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 外层循环遍历1 2 3 4 …… 20</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> m = <span class="number">1</span> ; m &lt;= <span class="number">20</span> ; m++)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 内层去寻找m的约数</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> str =<span class="string">""</span>;             <span class="comment">//遍历一个数，出来后清空</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt; m ; i++)&#123;</span></span><br><span class="line">        if(m % i == 0)&#123;</span><br><span class="line"><span class="actionscript">          str += m + <span class="string">"能被"</span> + i + <span class="string">"整除 "</span>;             <span class="comment">//累加到一行</span></span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(str);             <span class="comment">//遍历一个数，输出</span></span></span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9ngWn.png" alt="U9ngWn.png"></p><h2 id="17-5-九九乘法表"><a href="#17-5-九九乘法表" class="headerlink" title="17.5  九九乘法表"></a>17.5 九九乘法表</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 外层循环遍历1 2 3 4 …… 9</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> m = <span class="number">1</span> ; m &lt;= <span class="number">9</span> ; m++)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> str =<span class="string">""</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt;= m ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">          str += m + <span class="string">"x"</span> + i + <span class="string">"="</span> + (m * i) + <span class="string">"\t"</span>;   <span class="comment">// "\t"代表一次缩进</span></span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(str);</span></span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9nfyV.png" alt="U9nfyV.png"></p><h2 id="17-6-三位数的约数和等于倒过来的数的约数和"><a href="#17-6-三位数的约数和等于倒过来的数的约数和" class="headerlink" title="17.6  三位数的约数和等于倒过来的数的约数和"></a>17.6 三位数的约数和等于倒过来的数的约数和</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">for</span>(var m = <span class="number">100</span> ; m &lt;= <span class="number">200</span> ; m++)&#123;</span><br><span class="line">      var s1 = <span class="number">0</span>;</span><br><span class="line">      <span class="comment">// 看m本身约数和</span></span><br><span class="line">      <span class="keyword">for</span>(var i = <span class="number">1</span> ; i &lt; m ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m % i == <span class="number">0</span>)&#123;</span><br><span class="line">          s1 += i;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 把m倒过来</span></span><br><span class="line">      var baiwei = ~~(m / <span class="number">100</span>);</span><br><span class="line">      var shiwei = ~~(m / <span class="number">10</span>) % <span class="number">10</span>;</span><br><span class="line">      var gewei = m % <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">      var d =gewei * <span class="number">100</span> + shiwei * <span class="number">10</span> + baiwei;</span><br><span class="line">      var s2 = <span class="number">0</span>;</span><br><span class="line">      <span class="comment">// 倒过来的约数和</span></span><br><span class="line">      <span class="keyword">for</span>(var j = <span class="number">1</span> ; j &lt; d ; j++ )&#123;</span><br><span class="line">        <span class="keyword">if</span>(d % j == <span class="number">0</span>)&#123;</span><br><span class="line">          s2 += j;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 看两个和是否相等</span></span><br><span class="line">      <span class="keyword">if</span>(s1 == s2)&#123;</span><br><span class="line">        console.log(m)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9nxeO.png" alt="U9nxeO.png"></p><h2 id="17-7-完美数"><a href="#17-7-完美数" class="headerlink" title="17.7  完美数"></a>17.7 完美数</h2><p>约数（除原数外）的和等于它本身。</p><p>比如6， 1+2+3=6</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      <span class="keyword">for</span>(i = <span class="number">1</span> ; i &lt;= <span class="number">1000</span> ; i++)&#123;</span><br><span class="line">            <span class="comment">// 约数和</span></span><br><span class="line">            var s = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">// 找所有的约数（不包含本身）的和</span></span><br><span class="line">            <span class="keyword">for</span>(j = <span class="number">1</span> ; j &lt; i ; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i % j == <span class="number">0</span>)&#123;</span><br><span class="line">            s += j;</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 如果约数和等于原数</span></span><br><span class="line">            <span class="keyword">if</span>(i == s)&#123;</span><br><span class="line">            console.log(i);</span><br><span class="line">            &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9uKYj.png" alt="U9uKYj.png"></p><h2 id="17-8-鸡兔同笼：穷举试验"><a href="#17-8-鸡兔同笼：穷举试验" class="headerlink" title="17.8  鸡兔同笼：穷举试验"></a>17.8 鸡兔同笼：穷举试验</h2><p>鸡兔同笼：94个腿。35个头。问鸡兔数量</p><p>算法思路：穷举试验</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LSL"><figure class="iseeu highlight /lsl"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    for(var chickenCount = <span class="number">0</span> ; chickenCount &lt;= <span class="number">35</span> ; chickenCount++)&#123;</span><br><span class="line">      for(var rabbitCount = <span class="number">0</span> ; rabbitCount &lt;= <span class="number">35</span> ; rabbitCount++)&#123;</span><br><span class="line">        if(</span><br><span class="line">          chickenCount * <span class="number">2</span> + rabbitCount * <span class="number">4</span> == <span class="number">94</span></span><br><span class="line">          &amp;&amp;</span><br><span class="line">          chickenCount + rabbitCount == <span class="number">35</span></span><br><span class="line">          )&#123;</span><br><span class="line">            console.log(<span class="string">"鸡"</span> + chickenCount + <span class="string">", 兔"</span> + rabbitCount)</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U91VIO.png" alt="U91VIO.png"></p><h2 id="17-9-“金字塔”"><a href="#17-9-“金字塔”" class="headerlink" title="17.9  “金字塔”"></a>17.9 “金字塔”</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span> ; i &lt;= <span class="number">5</span> ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> str = <span class="string">" "</span>.repeat(<span class="number">5</span> - i);       <span class="comment">// ””.repear(n) 重复引号内的内容n次</span></span></span><br><span class="line"><span class="actionscript">      str += <span class="string">"*"</span>.repeat(i * <span class="number">2</span> - <span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(str);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U913eP.png" alt="U913eP.png"></p><h2 id="17-10-1-100之间的质数"><a href="#17-10-1-100之间的质数" class="headerlink" title="17.10  1~100之间的质数"></a>17.10 1~100之间的质数</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">2</span> ; i &lt;= <span class="number">100</span> ; i++)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 这个数字的约数的个数，每个数字计数器重新清零</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> count = <span class="number">0</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 从1开始到这个数字去除它，如果能整除，计数器加1</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">1</span> ; j &lt;= i ; j++)&#123;</span></span><br><span class="line">        if(i % j == 0)&#123;</span><br><span class="line">          count++;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line"><span class="actionscript">      <span class="comment">// 检查count是不是2</span></span></span><br><span class="line">      if(count == 2)&#123;</span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(i);</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U91NWQ.png" alt="U91NWQ.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>算法</tag>
        <tag>for</tag>
        <tag>循环</tag>
        <tag>穷举</tag>
      </tags>
  </entry>
  <entry>
    <title>十六、for循环语句</title>
    <url>/post/42abd6db.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十六、for循环语句"><a href="#十六、for循环语句" class="headerlink" title="十六、for循环语句"></a>十六、<code>for</code>循环语句</h1><h2 id="16-1-基本使用"><a href="#16-1-基本使用" class="headerlink" title="16.1  基本使用"></a>16.1 基本使用</h2><p>遇见大量的有规律重复的，就要使用循环语句：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++)&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(i)</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><code>for()</code>圆括号里面有<code>2</code>个分号。<code>不能少，更不能多</code>！！</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MATLAB"><figure class="iseeu highlight /matlab"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">for</span>(var <span class="built_in">i</span> = <span class="number">5</span>; <span class="built_in">i</span> &lt;= <span class="number">16</span>; <span class="built_in">i</span>+=<span class="number">2</span>)&#123;</span><br><span class="line">      console.<span class="built_in">log</span>(<span class="built_in">i</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var <span class="built_in">i</span> = <span class="number">5</span>         变量<span class="built_in">i</span>叫做循环变量。循环语句会“引导”<span class="built_in">i</span>依次成为<span class="number">5</span>、<span class="number">7</span>、<span class="number">9</span>……循环变量用任何字母都可以。大家一般约定成俗用字母<span class="built_in">i</span>、<span class="built_in">j</span>、k。</span><br><span class="line"><span class="built_in">i</span> &lt;= <span class="number">16</span>           循环结束的终值。循环到哪里结束。</span><br><span class="line"><span class="built_in">i</span> +=<span class="number">2</span>             循环的步长，一步走多长    （+=<span class="number">2</span>每次自增<span class="number">2</span>）</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">i</span>);   循环体的语句，每次循环要做的事情</span><br></pre></td></tr></table></figure></div><h2 id="16-2-for循环的循环机理"><a href="#16-2-for循环的循环机理" class="headerlink" title="16.2  for循环的循环机理"></a>16.2 <code>for</code>循环的循环机理</h2><p><img src="https://s1.ax1x.com/2020/07/05/U9ezjK.png" alt="U9ezjK.png"></p><p>首先，会执行语句①一次。</p><p>立即判断是否满足语句②的条件，如果满足，则执行语句③。语句③执行完毕之后，执行语句④。</p><p>再次判断是否满足语句②的条件，如果满足，则执行语句③。语句③执行完毕之后，执行语句④。</p><p>再次判断是否满足语句②的条件，如果满足，则执行语句③。语句③执行完毕之后，执行语句④。</p><p>立再次判断是否满足语句②的条件，不满足了！退出循环！</p><h2 id="题目1："><a href="#题目1：" class="headerlink" title="题目1："></a>题目1：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ISBL"><figure class="iseeu highlight /isbl"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">for</span>(<span class="title">alert</span>(“我爱你”);;)&#123;</span></span><br><span class="line"><span class="function">&#125;</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">会弹出一次“我爱你”。原因是语句①一定会执行（虽然后面进入死循环。为了避免进入死循环，可以写为：<span class="title">for</span>(<span class="title">alert</span>(“我爱你”);<span class="variable"><span class="literal">false</span></span>;)&#123;&#125;）</span></span><br></pre></td></tr></table></figure></div><h2 id="题目2："><a href="#题目2：" class="headerlink" title="题目2："></a>题目2：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">for(var</span> <span class="string">I</span> <span class="string">=</span> <span class="number">7</span><span class="string">;</span> <span class="string">i</span> <span class="string">&lt;15;</span> <span class="string">i</span> <span class="string">+=2)&#123;</span></span><br><span class="line">   <span class="string">console.log（i）;</span>        <span class="string">//</span> <span class="number">7</span> <span class="number">9</span> <span class="number">11</span> <span class="number">13</span> <span class="number">15</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></div><h2 id="题目3："><a href="#题目3：" class="headerlink" title="题目3："></a>题目3：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(var i = <span class="number">8</span>; i &gt;<span class="number">2</span>; i-= <span class="number">3</span>)&#123;</span><br><span class="line">      console.log(i);       <span class="comment">// 8 5 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="题目4："><a href="#题目4：" class="headerlink" title="题目4："></a>题目4：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MATLAB"><figure class="iseeu highlight /matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(var <span class="built_in">i</span> = <span class="number">8</span>; <span class="built_in">i</span> &lt; <span class="number">4</span>; <span class="built_in">i</span>++)&#123;</span><br><span class="line">      console.<span class="built_in">log</span>(<span class="built_in">i</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">控制台不会有任何输出。因为刚开始<span class="built_in">i</span>=<span class="number">8</span>就不满足<span class="built_in">i</span>&lt;<span class="number">4</span>这个条件了。所以一次都不执行循环</span><br><span class="line">执行到第②步，第④步未执行，控制台不显示。</span><br></pre></td></tr></table></figure></div><h2 id="题目5："><a href="#题目5：" class="headerlink" title="题目5："></a>题目5：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line">    <span class="string">for(var</span> <span class="string">i</span> <span class="string">=</span> <span class="number">1</span><span class="string">;</span> <span class="string">i</span> <span class="string">&lt;</span> <span class="number">13</span><span class="string">;</span> <span class="string">i++)&#123;</span></span><br><span class="line">      <span class="string">i</span> <span class="string">+=</span> <span class="number">2</span><span class="string">;</span></span><br><span class="line">      <span class="string">console.log(i);</span>         <span class="string">//</span> <span class="number">3</span> <span class="number">6</span> <span class="number">9</span> <span class="number">12</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></div><h2 id="题目6："><a href="#题目6：" class="headerlink" title="题目6："></a>题目6：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(var i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)&#123;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">console.log(i);       <span class="comment">// 10</span></span><br><span class="line"></span><br><span class="line">结束循环的时候，i等于<span class="number">10</span>，满足不了i&lt;<span class="number">10</span>，所以结束循环，在控制台显示<span class="number">10</span></span><br></pre></td></tr></table></figure></div><h2 id="题目7："><a href="#题目7：" class="headerlink" title="题目7："></a>题目7：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">for(var</span> <span class="string">i</span> <span class="string">=</span> <span class="number">3</span> <span class="string">,</span> <span class="string">j</span> <span class="string">=</span> <span class="number">4</span> <span class="string">;</span> <span class="string">i</span> <span class="string">&lt;</span> <span class="number">18</span><span class="string">;</span> <span class="string">i++)&#123;</span></span><br><span class="line">      <span class="string">j</span> <span class="string">=</span> <span class="string">i</span> <span class="string">+</span> <span class="number">1</span><span class="string">;</span></span><br><span class="line">      <span class="string">console.log(i</span> <span class="string">+</span> <span class="string">j);</span>     <span class="string">//</span> <span class="number">7</span> <span class="number">9</span> <span class="number">11</span> <span class="number">13</span> <span class="number">15</span> <span class="number">17</span> <span class="number">19</span> <span class="number">21</span> <span class="number">23</span> <span class="number">25</span> <span class="number">27</span> <span class="number">29</span> <span class="number">31</span> <span class="number">33</span> <span class="number">35</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></div><h2 id="题目8："><a href="#题目8：" class="headerlink" title="题目8："></a>题目8：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MATLAB"><figure class="iseeu highlight /matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(var <span class="built_in">i</span> = <span class="number">3</span> ; <span class="built_in">i</span> &gt; <span class="number">1</span> ; <span class="built_in">i</span>++)&#123;</span><br><span class="line">      console.<span class="built_in">log</span>(<span class="built_in">i</span> + <span class="built_in">j</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">i</span>&gt;<span class="number">1</span>,结果一直在循环</span><br><span class="line">死循环：</span><br><span class="line">  循环变量<span class="built_in">i</span>一定要有一种趋势，慢慢就会不满足判定条件。如果一直离判定条件越来越远，就是死循环。</span><br></pre></td></tr></table></figure></div><h2 id="题目9："><a href="#题目9：" class="headerlink" title="题目9："></a>题目9：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">var</span> <span class="string">i</span> <span class="string">=</span> <span class="number">3</span><span class="string">;</span></span><br><span class="line"><span class="string">var</span> <span class="string">j</span> <span class="string">=</span> <span class="number">6</span><span class="string">;</span></span><br><span class="line"><span class="string">for(;</span> <span class="string">i</span> <span class="string">&lt;</span> <span class="string">j;</span> <span class="string">i</span> <span class="string">++)&#123;</span></span><br><span class="line">      <span class="string">i</span> <span class="string">+=</span> <span class="number">2</span><span class="string">;</span></span><br><span class="line">      <span class="string">j++;</span></span><br><span class="line">      <span class="string">console.log(i);</span>         <span class="string">//</span> <span class="number">5</span>   <span class="number">8</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">语句①是可以留空的，表示进入循环体的时候，什么都不做。但是分号必须有。</span></span><br></pre></td></tr></table></figure></div><h2 id="题目10："><a href="#题目10：" class="headerlink" title="题目10："></a>题目10：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MATLAB"><figure class="iseeu highlight /matlab"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(var <span class="built_in">i</span> = <span class="number">1</span>; <span class="built_in">i</span> != <span class="number">8848</span>; <span class="built_in">i</span> += <span class="number">2</span>)&#123;</span><br><span class="line">console.<span class="built_in">log</span>(<span class="built_in">i</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">i</span>一直是奇数，即<span class="built_in">i</span> != <span class="number">8848</span>恒成立，所以死循环。</span><br></pre></td></tr></table></figure></div><h2 id="题目11："><a href="#题目11：" class="headerlink" title="题目11："></a>题目11：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(var i = <span class="number">3</span>; i &lt; <span class="number">7</span>; i ++)&#123;</span><br><span class="line">console.log(i++);       <span class="comment">// 3  5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i++是先用再加，所以会输出<span class="number">3</span>、<span class="number">5</span>。</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>for</tag>
        <tag>循环</tag>
      </tags>
  </entry>
  <entry>
    <title>十五、switch( ){ }</title>
    <url>/post/85c95644.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十五、switch"><a href="#十五、switch" class="headerlink" title="十五、switch( ){ }"></a>十五、<code>switch( ){ }</code></h1><h2 id="15-1-switch语法结构"><a href="#15-1-switch语法结构" class="headerlink" title="15.1  switch语法结构"></a>15.1 <code>switch</code>语法结构</h2><p><code>switch</code>语句，也叫<code>开关</code>语句，计算机会自行计算表达式的值，然后会进行匹配。当表达式的值和<code>case</code>的值能够匹配时，执行该<code>case</code>后面的执行体</p><p>语法结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line">     <span class="keyword">case</span> 值<span class="number">1</span>：</span><br><span class="line">          执行体；</span><br><span class="line">          <span class="keyword">break</span>；</span><br><span class="line">    <span class="keyword">case</span> 值<span class="number">2</span>：</span><br><span class="line">          执行体；</span><br><span class="line">          <span class="keyword">break</span>；</span><br><span class="line">    <span class="keyword">case</span> 值<span class="number">3</span>：</span><br><span class="line">          执行体；</span><br><span class="line">          <span class="keyword">break</span>；</span><br><span class="line">        ……</span><br><span class="line">     <span class="keyword">default</span>：</span><br><span class="line">           执行体；</span><br><span class="line">           <span class="keyword">break</span>;  <span class="comment">// 此处的break可写可不写</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>去匹配<code>case</code>中的值，能够匹配上执行该<code>case</code>后面的执行体。<code>case</code>语句后面必须书写<code>break</code>，当<code>switch</code>语句遇见<code>break</code>时，会结束整个<code>switch</code>语句。</p><p>例：输入星座，弹出今天的星座运势</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> xingzuo = prompt(<span class="string">"请输入你的星座："</span>)</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">switch</span>(xingzuo)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"白羊座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"压力很大。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"金牛座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"内心十分感动。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"双子座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"太过小气。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"巨蟹座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"事情进展不顺利。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"狮子座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"事情未能如愿进行。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"处女座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"勇往直前。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"天秤座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"享受快乐时光。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"天蝎座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"家人关系出现问题。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"射手座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"人际关系良好。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"摩羯座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"缺乏把想法付诸实践的行动力。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"水瓶座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"很有成就感。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="string">"双鱼座"</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"朝着目标前进。"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">default</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"没有你输入的星座"</span>);    <span class="comment">// 上面内容都不匹配时，出现default里的内容</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;                      <span class="comment">// break在这里写不写default都要结束</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9ZnRP.png" alt="U9ZnRP.png"></p><p>改写为if语句：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var <span class="attr">xingzuo</span> = prompt(<span class="string">"请输入你的星座："</span>)</span><br><span class="line">    <span class="keyword">if</span>(<span class="attr">xingzuo</span> == <span class="string">"白羊座"</span>)&#123;</span><br><span class="line">      alert(<span class="string">"白羊1234"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="attr">xingzuo</span> == <span class="string">"双子座"</span>)&#123;</span><br><span class="line">      alert(<span class="string">"双子1234"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="attr">xingzuo</span> == <span class="string">"双鱼座"</span>)&#123;</span><br><span class="line">      alert(<span class="string">"双鱼1234"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="attr">xingzuo</span> == <span class="string">"狮子座"</span>)&#123;</span><br><span class="line">      alert(<span class="string">"狮子1234"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="attr">xingzuo</span> == <span class="string">"水瓶座"</span>)&#123;</span><br><span class="line">      alert(<span class="string">"水瓶1234"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="attr">xingzuo</span> == <span class="string">"天蝎座"</span>)&#123;</span><br><span class="line">      alert(<span class="string">"天蝎1234"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      alert(<span class="string">"没有你输入的星座"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p>##　15.2 <code>default</code>语句</p><p><code>default</code>：表示以上<code>case</code>都没有匹配，执行的语句。<code>default</code>后面的<code>break</code>可写可不写。不书写<code>break</code>，当语句执行完<code>default</code>语句，也会结束<code>switch</code>语句。</p><h2 id="15-3-break语句"><a href="#15-3-break语句" class="headerlink" title="15.3  break语句"></a>15.3 <code>break</code>语句</h2><p><code>break</code>：<code>break</code>语句在<code>switch</code>语句中表示，当匹配到<code>case</code>时，执行<code>case</code>后的语句完成后，遇见<code>break</code>，会结束整个<code>switch</code>语句。</p><p>如果没有<code>break</code>语句，及时后面的<code>case</code>不匹配，也会执行该<code>case</code>语句。</p><p>有时我们可以根据需要，利用<code>break</code>的作用：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = prompt(<span class="string">"请输入月份："</span>)</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">switch</span>(a)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="number">2</span>:</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">"2月有28天"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="number">1</span>:</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="number">3</span>:</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="number">5</span>:</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="number">7</span>:</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="number">8</span>:</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="number">10</span>:</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> <span class="number">12</span>:</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(a + <span class="string">"月有31天"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">default</span>:</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(a + <span class="string">"月有30天"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;   <span class="comment">// 可写可不写</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9ZHJI.png" alt="U9ZHJI.png"></p><p>注意：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">1</span> || <span class="number">3</span> || <span class="number">5</span> || <span class="number">7</span> || <span class="number">8</span> || <span class="number">10</span> || <span class="number">12</span>: </span><br><span class="line"></span><br><span class="line">不可以这样写，计算机是先计算再赋值，<span class="number">1</span> || <span class="number">3</span> || <span class="number">5</span> || <span class="number">7</span> || <span class="number">8</span> || <span class="number">10</span> || <span class="number">12</span>的结果是<span class="number">1</span>（<span class="number">1</span>是真，后面的就短路了），然后才<span class="keyword">case</span>匹配。</span><br></pre></td></tr></table></figure></div><h2 id="15-4-switch语法的另类写法"><a href="#15-4-switch语法的另类写法" class="headerlink" title="15.4  switch语法的另类写法"></a>15.4 <code>switch</code>语法的另类写法</h2><p>另类写法：</p><p>在<code>switch</code>中书写<code>true</code>，将表达式写在<code>case</code>后面，当<code>case</code>表达式为<code>true</code>时，匹配<code>switch</code>中的<code>true</code>，执行后面的执行语句</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = prompt(<span class="string">"请输入成绩："</span>)</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">switch</span>(<span class="literal">true</span>)&#123;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> a &lt; <span class="number">60</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"不及格"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> a &lt; <span class="number">75</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"及格"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">case</span> a &lt; <span class="number">90</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"良好"</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">default</span>:</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"优秀"</span>)</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">break</span>;   <span class="comment">// 可写可不写</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9elSx.png" alt="U9elSx.png"></p><p>总结：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>语句，应用最广泛、最灵活</span><br><span class="line">三元表达式，二选一的情况使用</span><br><span class="line"><span class="keyword">switch</span>语句，有多种可能值时使用</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>switch</tag>
      </tags>
  </entry>
  <entry>
    <title>十四、三元表达式</title>
    <url>/post/7bdbd673.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十四、三元表达式"><a href="#十四、三元表达式" class="headerlink" title="十四、三元表达式"></a>十四、三元表达式</h1><p>三元表达式（三元运算符），三元表达式是JS中唯一一个需要三个元素参与的运算</p><h2 id="14-1-结构原理"><a href="#14-1-结构原理" class="headerlink" title="14.1  结构原理"></a>14.1 结构原理</h2><p>结构：</p><blockquote><p>条件表达式？ 值1： 值2；</p></blockquote><p>当表达式为真时取值<code>1</code>；当表达式为假时取值<code>2</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = <span class="literal">true</span> ? <span class="number">1</span> : <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(a);       <span class="comment">// 1</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 等价if写法</span></span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = <span class="literal">false</span>;</span></span><br><span class="line">    if(a)&#123;</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="number">1</span>);</span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="number">0</span>);     <span class="comment">// 0</span></span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="14-2-三元表达式的应用"><a href="#14-2-三元表达式的应用" class="headerlink" title="14.2  三元表达式的应用"></a>14.2 三元表达式的应用</h2><p>应用：</p><blockquote><p>当取值为二选一时，用三元表达式很简单</p></blockquote><p>例如：</p><p>当工作年限不满1年，工资小于8000，年终奖为工资倍数的1倍，否则是1.2倍</p><p>当工作年限不满2年，工资小于10000，年终奖为工资倍数的1.5倍，否则是1.7倍</p><p>当工作年限超过2年，工资小于13000，年终奖为工资倍数的2.3倍，否则是3倍</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var year = parseInt(prompt(<span class="string">"请输入你的工作年限："</span>)),   <span class="comment">// ,逗号将下一个变量分隔开，而不再写var</span></span><br><span class="line">        salary = parseInt(prompt(<span class="string">"请输入你的工资："</span>)),     <span class="comment">// parseInt 取整，不是四舍五入</span></span><br><span class="line">        beishu;</span><br><span class="line">    <span class="keyword">if</span>(year == <span class="number">0</span>)&#123;</span><br><span class="line">      beishu = salary &lt; <span class="number">8000</span> ? <span class="number">1</span> : <span class="number">1.2</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(year == <span class="number">1</span>)&#123;</span><br><span class="line">      beishu = salary &lt; <span class="number">10000</span> ? <span class="number">1.5</span> : <span class="number">1.7</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      beishu = salary &lt; <span class="number">13000</span> ? <span class="number">2.3</span> : <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    alert(<span class="string">"你的年终奖为："</span> + salary * beishu + <span class="string">"元。"</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9keje.png" alt="U9keje.png"></p><p>转换为if写法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NIX"><figure class="iseeu highlight /nix"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var <span class="attr">year</span> = parseInt(prompt(<span class="string">"请输入你的工作年限："</span>)),   // ,逗号将下一个变量分隔开，而不再写var</span><br><span class="line">        <span class="attr">salary</span> = parseInt(prompt(<span class="string">"请输入你的工资："</span>)),     // parseInt 取整，不是四舍五入</span><br><span class="line">        beishu;</span><br><span class="line">    <span class="keyword">if</span>(<span class="attr">year</span> == <span class="number">0</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(salary &lt; <span class="number">8000</span>)&#123;</span><br><span class="line">        <span class="attr">beishu</span> = <span class="number">1</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="attr">beishu</span> = <span class="number">1.2</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="attr">year</span> == <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">if</span>(salary &lt; <span class="number">10000</span>)&#123;</span><br><span class="line">        <span class="attr">beishu</span> = <span class="number">1.5</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="attr">beishu</span> = <span class="number">1.7</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(salary &lt; <span class="number">13000</span>)&#123;</span><br><span class="line">        <span class="attr">beishu</span> = <span class="number">2.3</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="attr">beishu</span> = <span class="number">3</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    alert(<span class="string">"你的年终奖为："</span> + salary * beishu + <span class="string">"元。"</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><h2 id="14-3-添加备用选项（当用户不输入内容，直接点确定）"><a href="#14-3-添加备用选项（当用户不输入内容，直接点确定）" class="headerlink" title="14.3  添加备用选项（当用户不输入内容，直接点确定）"></a>14.3 添加备用选项（当用户不输入内容，直接点确定）</h2><p>备用选项：</p><blockquote><p>备用选项一般使用逻辑运算符“或”来书写 || （应用或的短路语法）</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> a = <span class="built_in">parseInt</span>(prompt(<span class="string">"请输入一个数字："</span>)) || <span class="number">0</span>;</span></span><br><span class="line">    alert(a);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9k14P.png" alt="U9k14P.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> a = <span class="built_in">parseInt</span>(prompt(<span class="string">"请输入一个数字："</span>));</span></span><br><span class="line">    alert(a);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9kJgS.png" alt="U9kJgS.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>三元表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>十三、if语句</title>
    <url>/post/4c4e2fe1.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十三、if语句"><a href="#十三、if语句" class="headerlink" title="十三、if语句"></a>十三、<code>if</code>语句</h1><h2 id="JS语句结构"><a href="#JS语句结构" class="headerlink" title="JS语句结构"></a>JS语句结构</h2><ul><li>选择结构：</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">if</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"><span class="title">if</span><span class="params">( )</span><span class="title">else</span></span> <span class="keyword">if</span>( )<span class="keyword">else</span> <span class="keyword">if</span>( )<span class="keyword">else</span>( )</span><br><span class="line"><span class="function"><span class="title">switch</span><span class="params">( )</span></span>&#123; &#125;</span><br><span class="line">三元表达式</span><br></pre></td></tr></table></figure></div><ul><li>循环结构：<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GCODE"><figure class="iseeu highlight /gcode"><table><tr><td class="code"><pre><span class="line">for<span class="comment">( )</span>&#123; &#125;</span><br><span class="line"><span class="keyword">while</span><span class="comment">( )</span>&#123; &#125;</span><br><span class="line"><span class="keyword">do</span>&#123; &#125;<span class="keyword">while</span><span class="comment">( )</span></span><br></pre></td></tr></table></figure></div></li></ul><h2 id="13-1-基本语法"><a href="#13-1-基本语法" class="headerlink" title="13.1  基本语法"></a>13.1 基本语法</h2><p>条件判断语句、选择语句</p><p>如果条件成立，则执行一些语句；否则执行另一条语句</p><p><code>if</code> 如果， <code>else</code> 否则</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 请用户输入一个数字</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> n = <span class="built_in">Number</span>(prompt(<span class="string">"请输入一个数字："</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="comment">// 如果n是偶数</span></span></span><br><span class="line">      if(n % 2 == 0)&#123;</span><br><span class="line"><span class="actionscript">        alert(<span class="string">"你输入的数字是偶数"</span>);</span></span><br><span class="line"><span class="actionscript">      &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 否则</span></span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"你输入的数字是奇数"</span>);</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      alert(<span class="string">"再见"</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9in2D.png" alt="U9in2D.png"></p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">if</span><span class="params">(条件)</span></span>&#123;</span><br><span class="line">     条件为真的时候，做的事情；</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     条件为假的时候，做的事情；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>例如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 请用户输入年龄</span></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> age = <span class="built_in">Number</span>(prompt(<span class="string">"请输入一个年龄："</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="comment">// 如果年龄是18到70</span></span></span><br><span class="line">      if(age &gt;= 18 &amp;&amp; age&lt;=70)&#123;</span><br><span class="line"><span class="actionscript">        alert(<span class="string">"可以考驾照"</span>);</span></span><br><span class="line"><span class="actionscript">      &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 否则</span></span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"年龄不符合要求"</span>);</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9icGT.png" alt="U9icGT.png"></p><p><code>if</code>语句初学者常错点：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">① 风中凌乱，不符合语法，瞎写</span><br><span class="line">② <span class="keyword">else</span>不要拼写为eles</span><br><span class="line">③ 不要和大括号较劲，按照上述例子书写结构书写的大括号风格是<span class="number">95</span>%以上的程序员会遵守的。</span><br></pre></td></tr></table></figure></div><h2 id="13-2-省略else"><a href="#13-2-省略else" class="headerlink" title="13.2  省略else"></a>13.2 省略<code>else</code></h2><p>如果<code>***</code>，那么<code>***</code>。 不说否则了</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// 请用户输入用户名</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> username = prompt(<span class="string">"请输入用户名："</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">      <span class="comment">// 如果用户名是管理员</span></span></span><br><span class="line"><span class="actionscript">      <span class="keyword">if</span>(username == <span class="string">"admin"</span>)&#123;</span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"管理员你好！"</span>);</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">      alert(<span class="string">"欢迎！"</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/U9ifsJ.png" alt="U9ifsJ.png"></p><p>不管用户输入什么，都会弹出<code>欢迎</code>。只不过用户输入<code>admin</code>，会额外弹出一句话。</p><h2 id="13-3-多个条件-else-if"><a href="#13-3-多个条件-else-if" class="headerlink" title="13.3  多个条件 else if"></a>13.3 多个条件 <code>else if</code></h2><p>可以用<code>else if</code></p><p>楼层可以这么搭：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAUSS"><figure class="iseeu highlight /gauss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>()&#123;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>()&#123;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>()&#123;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>()&#123;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>()&#123;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><code>else if</code>表示“<code>否则如果</code>”。即上面的条件不符合时，才能够遇见自己。暗含了上面的条件不符合</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ISBL"><figure class="iseeu highlight /isbl"><table><tr><td class="code"><pre><span class="line">&lt;<span class="variable">script</span>&gt;</span><br><span class="line">      <span class="comment">// 请用户输入用成绩</span></span><br><span class="line">      <span class="variable">var</span> <span class="variable">score</span> = <span class="function"><span class="title">Number</span>(<span class="title">prompt</span>(<span class="string">"请输入成绩："</span>));</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">      <span class="title">if</span>(<span class="variable">score</span> &gt;= <span class="number">85</span>)&#123;</span></span><br><span class="line"><span class="function">        <span class="title">alert</span>(<span class="string">"优秀！"</span>);</span></span><br><span class="line"><span class="function">      &#125;<span class="variable"><span class="keyword">else</span></span>  <span class="title">if</span>(<span class="variable">score</span> &gt;=<span class="number">70</span>)&#123;</span></span><br><span class="line"><span class="function">        <span class="title">alert</span>(<span class="string">"良好"</span>);</span></span><br><span class="line"><span class="function">      &#125;<span class="variable"><span class="keyword">else</span></span>  <span class="title">if</span>(<span class="variable">score</span> &gt;=<span class="number">60</span>)&#123;</span></span><br><span class="line"><span class="function">        <span class="title">alert</span>(<span class="string">"及格"</span>);</span></span><br><span class="line"><span class="function">      &#125;<span class="variable"><span class="keyword">else</span></span>  <span class="title">if</span>(<span class="variable">score</span> &gt;=<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="function">        <span class="title">alert</span>(<span class="string">"不及格"</span>);</span></span><br><span class="line"><span class="function">      &#125;</span></span><br><span class="line"><span class="function">&lt;/<span class="variable">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>跳楼现象（跳楼后面的内容不会再查看）：</p><p><img src="https://s1.ax1x.com/2020/07/05/U9izdI.png" alt="U9izdI.png"></p><p>也可以写做：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ISBL"><figure class="iseeu highlight /isbl"><table><tr><td class="code"><pre><span class="line">&lt;<span class="variable">script</span>&gt;</span><br><span class="line">      <span class="comment">// 请用户输入用成绩</span></span><br><span class="line">      <span class="variable">var</span> <span class="variable">score</span> = <span class="function"><span class="title">Number</span>(<span class="title">prompt</span>(<span class="string">"请输入成绩："</span>));</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">      <span class="title">if</span>(<span class="variable">score</span> &lt; <span class="number">60</span>)&#123;</span></span><br><span class="line"><span class="function">        <span class="title">alert</span>(<span class="string">"不及格"</span>);</span></span><br><span class="line"><span class="function">      &#125;<span class="variable"><span class="keyword">else</span></span>  <span class="title">if</span>(<span class="variable">score</span> &lt; <span class="number">70</span>)&#123;</span></span><br><span class="line"><span class="function">        <span class="title">alert</span>(<span class="string">"及格"</span>);</span></span><br><span class="line"><span class="function">      &#125;<span class="variable"><span class="keyword">else</span></span>  <span class="title">if</span>(<span class="variable">score</span> &lt; <span class="number">85</span>)&#123;</span></span><br><span class="line"><span class="function">        <span class="title">alert</span>(<span class="string">"良好"</span>);</span></span><br><span class="line"><span class="function">      &#125;<span class="variable"><span class="keyword">else</span></span>  <span class="title">if</span>(<span class="variable">score</span> &lt;= <span class="number">100</span>)&#123;</span></span><br><span class="line"><span class="function">        <span class="title">alert</span>(<span class="string">"优秀"</span>);</span></span><br><span class="line"><span class="function">      &#125;</span></span><br><span class="line"><span class="function">&lt;/<span class="variable">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><strong>使用if语句，必须有明确的“档”。“档”的条件必须非常明确。“档”必须有限个数。</strong></p><p>##　13.4 <code>if</code>语句的嵌套</p><p>某自助餐价格：</p><table><thead><tr><th></th><th>成人</th><th>小孩</th></tr></thead><tbody><tr><td>男</td><td>100</td><td>30</td></tr><tr><td>女</td><td>80</td><td>20</td></tr></tbody></table><p>让用户输入自己是男是女，然后输入年龄，告诉用户价格。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ISBL"><figure class="iseeu highlight /isbl"><table><tr><td class="code"><pre><span class="line">&lt;<span class="variable">script</span>&gt;</span><br><span class="line">      <span class="variable">var</span> <span class="variable">sex</span> =<span class="function"><span class="title">prompt</span>(<span class="string">"请输入你的性别："</span>)</span></span><br><span class="line">      <span class="variable">var</span> <span class="variable">age</span> = <span class="function"><span class="title">Number</span>(<span class="title">prompt</span>(<span class="string">"请输入你的年龄："</span>));</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">      <span class="title">if</span>(<span class="variable">sex</span> == <span class="string">"男"</span>)&#123; <span class="comment">// 不能使用=  必须用==  =表示赋值</span></span></span><br><span class="line"><span class="function">        <span class="comment">// 男</span></span></span><br><span class="line"><span class="function">        <span class="title">if</span>(<span class="variable">age</span> &gt;= <span class="number">18</span>)&#123;</span></span><br><span class="line"><span class="function">          <span class="title">alert</span>(<span class="number">100</span>);</span></span><br><span class="line"><span class="function">        &#125;<span class="variable"><span class="keyword">else</span></span>&#123;</span></span><br><span class="line"><span class="function">          <span class="title">alert</span>(<span class="number">30</span>);</span></span><br><span class="line"><span class="function">        &#125;</span></span><br><span class="line"><span class="function">      &#125;<span class="variable"><span class="keyword">else</span></span>&#123;</span></span><br><span class="line"><span class="function">        <span class="comment">// 女</span></span></span><br><span class="line"><span class="function">        <span class="title">if</span>(<span class="variable">age</span> &gt;= <span class="number">18</span>)&#123;</span></span><br><span class="line"><span class="function">          <span class="title">alert</span>(<span class="number">80</span>);</span></span><br><span class="line"><span class="function">        &#125;<span class="variable"><span class="keyword">else</span></span>&#123;</span></span><br><span class="line"><span class="function">          <span class="title">alert</span>(<span class="number">20</span>);</span></span><br><span class="line"><span class="function">        &#125;</span></span><br><span class="line"><span class="function">      &#125;</span></span><br><span class="line"><span class="function">&lt;/<span class="variable">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>if</tag>
      </tags>
  </entry>
  <entry>
    <title>十二、类型转换</title>
    <url>/post/fce38183.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十二、类型转换"><a href="#十二、类型转换" class="headerlink" title="十二、类型转换"></a>十二、类型转换</h1><h2 id="12-1-Number"><a href="#12-1-Number" class="headerlink" title="12.1  Number()"></a>12.1 <code>Number()</code></h2><p><code>Number()</code>函数可以将任何其他类型的值，变为数字值</p><p>对于字符串，只有纯数字字符串能够成功变为数字类型：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">Number</span><span class="params">(“<span class="number">23</span>”)</span></span>           <span class="comment">// 23</span></span><br><span class="line"><span class="function"><span class="title">Number</span><span class="params">(“<span class="number">0.5</span>”)</span></span>          <span class="comment">// 0.5</span></span><br></pre></td></tr></table></figure></div><p>只要是字符串不纯，都是<code>NaN</code>:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">Number</span><span class="params">(“<span class="number">5</span>年”)</span></span>            <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></div><p>布尔类型<code>true</code>是<code>1</code>， <code>false</code>是<code>0</code>:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">Number</span><span class="params">(true)</span></span>           <span class="comment">// 1</span></span><br><span class="line"><span class="function"><span class="title">Number</span><span class="params">(false)</span></span>          <span class="comment">// 0</span></span><br></pre></td></tr></table></figure></div><p>对于<code>undefined</code>, <code>Number()</code>转的结果是<code>NaN</code>:</p><p><code>undefined</code>属于<code>undefined</code>类型，<code>undefined</code>类型只有它一个值<code>undefined</code>。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">Number</span><span class="params">(undefined)</span></span>                <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></div><h1 id="12-2-String"><a href="#12-2-String" class="headerlink" title="12.2  String()"></a>12.2 <code>String()</code></h1><p>注意，大写<code>S</code>，用来将其他类型的值，变为字符串</p><p>将其他类型的值放里面，出来的结果就是加上引号的字符串</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">String</span><span class="params">(<span class="number">8</span>)</span></span>               <span class="comment">// “8”</span></span><br><span class="line"><span class="function"><span class="title">String</span><span class="params">(true)</span></span>            <span class="comment">// “true”</span></span><br><span class="line"><span class="function"><span class="title">String</span><span class="params">(false)</span></span>           <span class="comment">// “false”</span></span><br><span class="line"><span class="function"><span class="title">String</span><span class="params">(undefined)</span></span>       <span class="comment">// “undefined”</span></span><br></pre></td></tr></table></figure></div><h1 id="12-3-Boolean"><a href="#12-3-Boolean" class="headerlink" title="12.3  Boolean()"></a>12.3 <code>Boolean()</code></h1><p>将其他类型的值转为布尔类型</p><p>数字类型值，只有<code>0</code>和<code>NaN</code>会被转为<code>false</code>，其余一律是<code>true</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">Boolean</span><span class="params">(<span class="number">0</span>)</span></span>               <span class="comment">// false</span></span><br><span class="line"><span class="function"><span class="title">Boolean</span><span class="params">(NaN)</span></span>             <span class="comment">// false</span></span><br><span class="line"><span class="function"><span class="title">Boolean</span><span class="params">(<span class="number">43</span>)</span></span>              <span class="comment">// true</span></span><br><span class="line"><span class="function"><span class="title">Boolean</span><span class="params">(-<span class="number">43</span>)</span></span>             <span class="comment">// true</span></span><br></pre></td></tr></table></figure></div><p>字符串类型值，非空字符串就是<code>true</code>，空字符串就是<code>false</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">Boolean</span><span class="params">(“”)</span></span>               <span class="comment">// false</span></span><br><span class="line"><span class="function"><span class="title">Boolean</span><span class="params">(“内容”)</span></span>            <span class="comment">// true</span></span><br><span class="line"><span class="function"><span class="title">Boolean</span><span class="params">(“false”)</span></span>           <span class="comment">// true</span></span><br></pre></td></tr></table></figure></div><p>##　12.4 表达式综合求值</p><p>先学习一个知识，就是各种运算的优先级：</p><blockquote><p>非—&gt;数学运算（先自增自减，然后乘除取余，然后加减）—&gt;关系运算符（大于小于）—&gt;逻辑运算（先与后或）</p></blockquote><p>然后注意，遇见数学运算，参与运算的要用<code>Number()</code>进行“隐式转换”（偷偷转换类型）；遇见逻辑运算，使用短路语法。</p><ul><li>题目1：</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span> <span class="string">+</span> <span class="literal">false</span> <span class="string">&gt;</span> <span class="type">!true</span> <span class="string">&amp;&amp;</span> <span class="string">“哈哈”</span></span><br><span class="line"><span class="string">解：原式=</span> <span class="number">8</span> <span class="string">+</span> <span class="literal">false</span> <span class="string">&gt;</span> <span class="literal">false</span> <span class="string">&amp;&amp;</span> <span class="string">“哈哈”</span></span><br><span class="line">        <span class="string">=</span> <span class="number">8</span> <span class="string">&gt;</span> <span class="literal">false</span> <span class="string">&amp;&amp;</span> <span class="string">“哈哈”</span></span><br><span class="line">        <span class="string">=</span> <span class="literal">true</span> <span class="string">&amp;&amp;</span> <span class="string">“哈哈”</span></span><br><span class="line">        <span class="string">=”哈哈”</span></span><br></pre></td></tr></table></figure></div><ul><li>题目2：</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">””</span> <span class="string">||</span> <span class="number">8</span> <span class="string">&gt;</span> <span class="literal">false</span> <span class="string">&amp;&amp;</span> <span class="type">!undefined</span> <span class="string">+</span> <span class="number">2</span></span><br><span class="line"><span class="string">解：原式=</span> <span class="string">””</span> <span class="string">||</span> <span class="number">8</span> <span class="string">&gt;</span> <span class="literal">false</span> <span class="string">&amp;&amp;</span> <span class="literal">true</span> <span class="string">+</span> <span class="number">2</span></span><br><span class="line">        <span class="string">=</span> <span class="string">””</span> <span class="string">||</span> <span class="number">8</span> <span class="string">&gt;</span> <span class="literal">false</span> <span class="string">&amp;&amp;</span> <span class="number">3</span></span><br><span class="line">        <span class="string">=</span> <span class="string">””</span> <span class="string">||</span> <span class="literal">true</span> <span class="string">&amp;&amp;</span> <span class="number">3</span></span><br><span class="line">        <span class="string">=</span> <span class="string">“”</span> <span class="string">||</span> <span class="number">3</span></span><br><span class="line">        <span class="string">=</span> <span class="number">3</span></span><br></pre></td></tr></table></figure></div><ul><li>题目3：</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span> <span class="string">+</span> <span class="literal">false</span> <span class="string">&gt;</span> <span class="string">“我”</span> <span class="string">*</span> <span class="string">“你”</span> <span class="string">||</span> <span class="literal">false</span></span><br><span class="line"><span class="string">解：原式=</span> <span class="number">8</span> <span class="string">&gt;</span> <span class="string">NaN</span> <span class="string">||</span> <span class="literal">false</span></span><br><span class="line">        <span class="string">=</span> <span class="literal">false</span> <span class="string">||</span> <span class="literal">false</span></span><br><span class="line">        <span class="string">=</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>数据类型</tag>
        <tag>类型转换</tag>
      </tags>
  </entry>
  <entry>
    <title>十一、逻辑运算符</title>
    <url>/post/e83f571f.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="十一、逻辑运算符"><a href="#十一、逻辑运算符" class="headerlink" title="十一、逻辑运算符"></a>十一、逻辑运算符</h1><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">!	非</span><br><span class="line"><span class="meta">&amp;&amp;	与</span></span><br><span class="line"><span class="string">||	或</span></span><br></pre></td></tr></table></figure><ul><li><p>非，置反</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">!<span class="literal">true</span>            <span class="string">//</span> <span class="literal">false</span></span><br><span class="line">!<span class="literal">false</span>           <span class="string">//</span> <span class="literal">true</span></span><br><span class="line">!!<span class="literal">true</span>           <span class="string">//</span> <span class="literal">true</span></span><br><span class="line">!!!<span class="literal">false</span>         <span class="string">//</span> <span class="literal">true</span></span><br><span class="line">!<span class="params">(<span class="attr">5</span> === “5”)</span>     <span class="string">//</span> <span class="literal">true</span></span><br><span class="line">!<span class="params">(<span class="attr">1</span> == true)</span>     <span class="string">//</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>与：表示且的关系，“都真才真”</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">true</span> <span class="string">&amp;&amp;</span> <span class="literal">true</span>           <span class="string">//</span> <span class="literal">true</span></span><br><span class="line"><span class="literal">true</span> <span class="string">&amp;&amp;</span> <span class="literal">false</span>          <span class="string">//</span> <span class="literal">false</span></span><br><span class="line"><span class="literal">false</span> <span class="string">&amp;&amp;</span> <span class="literal">true</span>          <span class="string">//</span> <span class="literal">false</span></span><br><span class="line"><span class="literal">false</span> <span class="string">&amp;&amp;</span> <span class="literal">false</span>         <span class="string">//</span> <span class="literal">false</span></span><br><span class="line"><span class="string">(3</span> <span class="string">&gt;</span> <span class="number">8</span><span class="string">)</span> <span class="string">&amp;&amp;</span> <span class="string">Math.pow(2,</span> <span class="number">54</span><span class="string">)</span> <span class="string">&gt;</span> <span class="string">Math.pow(3,</span> <span class="number">44</span><span class="string">)</span>     <span class="string">//</span> <span class="literal">false</span> <span class="string">因为3&gt;8已经假了，后面的不管真假，总结果必假</span></span><br><span class="line"><span class="string">“5”</span> <span class="string">==</span> <span class="number">5</span> <span class="string">&amp;&amp;</span> <span class="number">8</span> <span class="string">&gt;</span> <span class="literal">true</span>         <span class="string">//</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></div></li><li><p>或：“有真就真”</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="literal">true</span> <span class="string">||</span> <span class="literal">true</span>            <span class="string">//</span> <span class="literal">true</span></span><br><span class="line"><span class="literal">true</span> <span class="string">||</span> <span class="literal">false</span>           <span class="string">//</span> <span class="literal">true</span></span><br><span class="line"><span class="literal">false</span> <span class="string">||</span> <span class="literal">true</span>            <span class="string">//</span> <span class="literal">true</span></span><br><span class="line"><span class="literal">false</span> <span class="string">||</span> <span class="literal">false</span>           <span class="string">//</span> <span class="literal">false</span></span><br><span class="line"><span class="number">3</span> <span class="string">&gt;</span> <span class="number">2</span> <span class="string">||</span> <span class="string">Math.pow(2,</span> <span class="number">54</span><span class="string">)</span> <span class="string">&gt;</span> <span class="string">Math.pow(3,</span> <span class="number">44</span><span class="string">)</span>      <span class="string">//</span> <span class="literal">true</span> <span class="string">因为3&gt;2已经真了，后面的不管真假，总结果必真</span></span><br></pre></td></tr></table></figure></div></li><li><p>短路运算：（参与运算的不全是布尔值）</p><ul><li><p>且，前假后短路</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="literal">true</span> &amp;&amp; <span class="literal">false</span>       <span class="comment">// false</span></span><br><span class="line"><span class="number">5</span> &amp;&amp; <span class="number">13</span>             <span class="comment">// 13  都真才真，5已经是真了，所以后面的13就是结果</span></span><br><span class="line"><span class="number">0</span> &amp;&amp; <span class="number">13</span>              <span class="comment">// 0  因为都真才真，0已经是假了，0 就是总结果</span></span><br><span class="line">(<span class="number">3</span> &gt; <span class="number">2</span>) &amp;&amp; alert(“我爱你”)；  <span class="comment">// 因为3&gt;2是真，&amp;&amp;是“都真才真”，所以计算机会执行后面的语句</span></span><br><span class="line">(<span class="number">3</span> &lt; <span class="number">2</span>) &amp;&amp; alert(“我爱你”)；  <span class="comment">// 因为3&gt;2是假，&amp;&amp;是“都真才真”，所以计算机不会执行后面的语句。结果已经是假了，后半句就被短路了</span></span><br></pre></td></tr></table></figure></div></li><li><p>或，前真后短路</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span>|| <span class="number">13</span>                   // <span class="number">5</span>  有真就真，<span class="number">5</span>已经是真了，所以<span class="number">5</span>就是总结果</span><br><span class="line"><span class="symbol">0 </span>|| <span class="number">13</span>                   // <span class="number">13</span>  有真就真，<span class="number">0</span>是假，所以<span class="number">13</span>就是总结果</span><br></pre></td></tr></table></figure></div></li></ul></li></ul><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>数据类型</tag>
        <tag>逻辑运算符</tag>
      </tags>
  </entry>
  <entry>
    <title>十、比较运算符</title>
    <url>/post/5e08a536.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="十、比较运算符"><a href="#十、比较运算符" class="headerlink" title="十、比较运算符"></a>十、比较运算符</h1><ul><li><p><code>&gt;</code> 大于</p></li><li><p><code>&lt;</code> 小于</p></li></ul><p>比较运算符，结果一定是布尔值：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span>&gt; <span class="number">8</span>           // false</span><br><span class="line"><span class="symbol">8 </span>&gt; <span class="number">3</span>           // true</span><br></pre></td></tr></table></figure></div><ul><li><p><code>&gt;=</code> 大于等于</p></li><li><p><code>&lt;=</code> 小于等于</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span>&lt;= <span class="number">8</span>          // true</span><br><span class="line"><span class="symbol">8 </span>&lt;= <span class="number">8</span>           // true</span><br></pre></td></tr></table></figure></div><ul><li><p><code>==</code> 判断是否相等，不比较类型</p></li><li><p><code>===</code> 判断是否全等，比较类型</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span>== <span class="number">5</span>             // true</span><br><span class="line"><span class="symbol">5 </span>== “<span class="number">5</span>”           // true 虽然类型不一样，但是==不比较类型</span><br><span class="line"><span class="symbol">5 </span>=== “<span class="number">5</span>”          // false 类型不一样，长得一样也不行</span><br></pre></td></tr></table></figure></div><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> <span class="string">&gt;</span> <span class="literal">true</span>            <span class="string">//</span> <span class="literal">true</span></span><br><span class="line"><span class="literal">false</span> <span class="string">&lt;</span> <span class="literal">true</span>        <span class="string">//</span> <span class="literal">true</span></span><br><span class="line"><span class="number">0</span> <span class="string">==</span> <span class="literal">false</span>            <span class="string">//</span> <span class="literal">true</span></span><br><span class="line"><span class="number">1</span> <span class="string">==</span> <span class="literal">true</span>             <span class="string">//</span> <span class="literal">true</span></span><br><span class="line"><span class="number">0</span> <span class="string">===</span> <span class="literal">false</span>          <span class="string">//</span> <span class="literal">false</span></span><br><span class="line"><span class="number">1</span> <span class="string">===</span> <span class="literal">true</span>            <span class="string">//</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></div><p>还要注意，判断一个数字是不是在区间内，不能写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span>&lt; <span class="number">16</span> &lt; <span class="number">12</span>           // true</span><br></pre></td></tr></table></figure></div><p>因为计算机会先判断<code>3&lt;16</code>，结果是<code>true</code> 然后判断<code>true&lt;12</code> ,结果是<code>true</code></p><p>要写做<code>&amp;&amp;</code>的形式（且的形式 ）：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span>&lt; <span class="number">16</span> &amp;&amp; <span class="number">16</span> &lt; <span class="number">12</span>           // false</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>数据类型</tag>
        <tag>比较运算符</tag>
      </tags>
  </entry>
  <entry>
    <title>九、数学运算符</title>
    <url>/post/8c67c94e.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="九、数学运算符"><a href="#九、数学运算符" class="headerlink" title="九、数学运算符"></a>九、数学运算符</h1><h2 id="9-1-概述"><a href="#9-1-概述" class="headerlink" title="9.1  概述"></a>9.1 概述</h2><p>运算符是处理数据的基本方法，用来从现有的值得到新的值。</p><p>JavaScript 共提供10个算术运算符，用来完成基本的算术运算。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line">加法运算符：    <span class="symbol">x</span> + <span class="symbol">y</span></span><br><span class="line">减法运算符：    <span class="symbol">x</span> - <span class="symbol">y</span></span><br><span class="line">乘法运算符：    <span class="symbol">x</span> * <span class="symbol">y</span></span><br><span class="line">除法运算符：    <span class="symbol">x</span> / <span class="symbol">y</span></span><br><span class="line">指数运算符：    <span class="symbol">x</span> ** <span class="symbol">y</span></span><br><span class="line">余数运算符：    <span class="symbol">x</span> % <span class="symbol">y</span></span><br><span class="line">自增运算符：    ++<span class="symbol">x</span> 或者 <span class="symbol">x</span>++</span><br><span class="line">自减运算符：    --<span class="symbol">x</span> 或者 <span class="symbol">x</span>--</span><br><span class="line">数值运算符：    +<span class="symbol">x</span></span><br><span class="line">负数值运算符：  -<span class="symbol">x</span></span><br></pre></td></tr></table></figure></div><p>减法、乘法、除法运算法比较单纯，就是执行相应的数学运算。</p><h2 id="9-2-加法运算符"><a href="#9-2-加法运算符" class="headerlink" title="9.2  + 加法运算符"></a>9.2 <code>+</code> 加法运算符</h2><p>功能：</p><ul><li><p><code>+</code>符号左右两边都不是字符串时，为加法</p></li><li><p><code>+</code>符号左右两边只要有字符串，为连字符</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> + <span class="number">5</span>              <span class="comment">// 8</span></span><br><span class="line">“<span class="number">3</span>” + <span class="number">5</span>            <span class="comment">// ”35”</span></span><br><span class="line">“<span class="number">3</span>” + “<span class="number">5</span>”          <span class="comment">// ”35”</span></span><br></pre></td></tr></table></figure></div><p>注意，<code>true</code>在做加法运算的时候，会被当做<code>1</code>；<code>false</code>在做加法运算的时候，会被当做<code>0</code>:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> <span class="string">+</span> <span class="literal">true</span><span class="string">;</span>               <span class="string">//</span> <span class="number">4</span></span><br><span class="line"><span class="number">5</span> <span class="string">+false;</span>               <span class="string">//</span> <span class="number">5</span></span><br><span class="line"><span class="literal">true</span> <span class="string">+</span> <span class="literal">false</span><span class="string">;</span>           <span class="string">//</span> <span class="number">1</span></span><br><span class="line"><span class="literal">true</span> <span class="string">+</span> <span class="literal">true</span> <span class="string">+true;</span>      <span class="string">//</span> <span class="number">3</span></span><br><span class="line"><span class="literal">false</span> <span class="string">+</span> <span class="string">'a'</span>             <span class="string">//</span> <span class="string">"falsea"</span></span><br></pre></td></tr></table></figure></div><h2 id="9-3-–减法运算符"><a href="#9-3-–减法运算符" class="headerlink" title="9.3  –减法运算符"></a>9.3 <code>–</code>减法运算符</h2><p>注意，减法没有字串符的顾虑了，纯数字字串符一律当作数字处理：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span> - <span class="number">3</span>              <span class="comment">// 5</span></span><br><span class="line">“<span class="number">8</span>” - <span class="number">3</span>            <span class="comment">// 5</span></span><br><span class="line">“<span class="number">8</span>” - “<span class="number">3</span>”          <span class="comment">// 5</span></span><br><span class="line">“<span class="number">8.2</span>” – “<span class="number">0.2</span>”      <span class="comment">// 8</span></span><br></pre></td></tr></table></figure></div><p>注意，<code>true</code>在做减法运算的时候，会被当做<code>1</code>；<code>false</code>会被当做<code>0</code>:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">3</span> <span class="bullet">-</span> <span class="literal">true</span><span class="string">;</span>           <span class="string">//</span> <span class="number">2</span></span><br><span class="line"><span class="literal">true</span> <span class="bullet">-</span> <span class="literal">false</span><span class="string">;</span>       <span class="string">//</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></div><p>特别的，如果这个字符串“<code>不干净</code>”，不是纯的数字字符串，此时结果一律为<code>NaN</code>:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">“<span class="number">8</span>年” – <span class="number">3</span>               <span class="comment">//NaN</span></span><br><span class="line">“<span class="number">123</span>xyz” – “xyz”        <span class="comment">//NaN</span></span><br><span class="line"><span class="number">3</span> – “<span class="literal">true</span>”              <span class="comment">//NaN</span></span><br><span class="line"><span class="number">3</span> – “<span class="literal">false</span>”             <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></div><p><code>-</code>可以当作负号使用:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">3 </span>- -<span class="number">2</span>                   //<span class="number">5</span></span><br></pre></td></tr></table></figure></div><h2 id="9-4-乘法-除法-运算符"><a href="#9-4-乘法-除法-运算符" class="headerlink" title="9.4  *乘法 /除法 运算符"></a>9.4 <code>*</code>乘法 <code>/</code>除法 运算符</h2><p>乘法和除法都不需要考虑字符串的顾虑，纯数字字符串能够被当做数字处理:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span> / <span class="number">4</span>              <span class="comment">// 2</span></span><br><span class="line"><span class="number">4</span> * <span class="number">8</span>              <span class="comment">// 32</span></span><br><span class="line">“<span class="number">4</span>” * “<span class="number">8</span>”          <span class="comment">// 32</span></span><br></pre></td></tr></table></figure></div><p>不纯的字符串，当作<code>NaN</code>处理：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">“<span class="number">8</span>年” * <span class="number">2</span>           <span class="comment">// NaN</span></span><br><span class="line">“<span class="literal">true</span>” * <span class="number">3</span>          <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure></div><p>乘除法的优先级相同，但是都比加减法优先级高：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">1 </span>+ <span class="number">2</span> * <span class="number">3</span>             // <span class="number">7</span></span><br><span class="line"><span class="symbol">3 </span>/ <span class="number">3</span> + <span class="number">8</span> / <span class="number">8</span>         // <span class="number">2</span></span><br><span class="line"><span class="symbol">6 </span>/ <span class="number">3</span> * <span class="number">2</span> + <span class="number">1</span>         // <span class="number">5</span></span><br></pre></td></tr></table></figure></div><p>如果要提升加减优先级，一律使用小括号：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">（<span class="number">1</span> + <span class="number">2</span>）* <span class="number">3</span>           <span class="comment">// 9</span></span><br></pre></td></tr></table></figure></div><p>注意，<code>0</code>当除数的时候：</p><ul><li><p>非零除以0，结果Infinity</p></li><li><p>0除以0，结果NaN</p></li></ul><p><img src="https://s1.ax1x.com/2020/07/05/Upyqjx.png" alt="Upyqjx.png"></p><h2 id="9-5-乘方-开方"><a href="#9-5-乘方-开方" class="headerlink" title="9.5  乘方 开方"></a>9.5 乘方 开方</h2><p><code>Math</code>是<code>JS</code>中内置的一个对象，里面蕴含了很多的数学运算</p><ul><li>乘方<code>Math.pow( , )</code>:</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">Math.pow(<span class="number">2</span>,<span class="number">3</span>);                 <span class="comment">//2*2*2           8</span></span><br><span class="line">Math.pow(<span class="number">5</span>,<span class="number">2</span>);                 <span class="comment">//5*5             25</span></span><br></pre></td></tr></table></figure></div><p>从 <code>ECMAScript 6</code> 开始新增加了求幂运算，使用两个<code>*</code>号代表求幂。以此可以代替以前的<code>Math.pow()</code>方法</p><p>指数运算符（<code>**</code>）完成指数运算，前一个运算子是底数，后一个运算子是指数:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">2 </span>** <span class="number">4</span>          // <span class="number">16</span></span><br></pre></td></tr></table></figure></div><p>注意，指数运算符是右结合，而不是左结合。即多个指数运算符连用时，先进行最右边的计算:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">相当于</span> <span class="number">2</span> <span class="string">**</span> <span class="string">(3</span> <span class="string">**</span> <span class="number">2</span><span class="string">)</span></span><br><span class="line"><span class="number">2</span> <span class="string">**</span> <span class="number">3</span> <span class="string">**</span> <span class="number">2</span></span><br><span class="line"><span class="string">//</span> <span class="number">512</span></span><br></pre></td></tr></table></figure></div><p>上面代码中，由于指数运算符是右结合，所以先计算第二个指数运算符，而不是第一个。</p><ul><li>开方 <code>Math.sqrt()</code>:</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="REASONML"><figure class="iseeu highlight /reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">Math</span>.</span></span>sqrt(<span class="number">81</span>)                    <span class="comment">//根号下81     9</span></span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">Math</span>.</span></span>sqrt(<span class="number">100</span>)                   <span class="comment">//根号下100   10</span></span><br></pre></td></tr></table></figure></div><p>案例：会将一个数学算式，转为计算机的写法：</p><p>注意圆括号别看错了：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">      var result = (<span class="number">2</span> +Math.pow( <span class="number">5</span> , <span class="number">3</span>)) / <span class="number">3</span> * Math.sqrt((<span class="number">3050</span> - <span class="number">8</span>) / <span class="number">2</span>);</span><br><span class="line">      alert(result);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpcFJJ.png" alt="UpcFJJ.png"></p><h2 id="9-6-取余运算符"><a href="#9-6-取余运算符" class="headerlink" title="9.6  取余运算符%"></a>9.6 取余运算符<code>%</code></h2><p><code>%</code>就是无视除法的结果，只看余数。是编程中特别常用的符号。</p><p>场景1：判断是否是偶数</p><p>只需要看这个数字<code>%2</code>的结果是不是<code>0</code>，就能判断这个数字是不是偶数</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">6 </span>% <span class="number">2</span>       // <span class="number">0</span></span><br><span class="line"><span class="symbol">7 </span>% <span class="number">2</span>       // <span class="number">1</span></span><br></pre></td></tr></table></figure></div><p>场景2：取余运算能够形成周而复始的情形</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">0 </span>% <span class="number">4</span>            // <span class="number">0</span></span><br><span class="line"><span class="symbol">1 </span>% <span class="number">4</span>            // <span class="number">1</span></span><br><span class="line"><span class="symbol">2 </span>% <span class="number">4</span>            // <span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span>% <span class="number">4</span>            // <span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span>% <span class="number">4</span>            // <span class="number">0</span></span><br><span class="line"><span class="symbol">5 </span>% <span class="number">4</span>            // <span class="number">1</span></span><br><span class="line"><span class="symbol">6 </span>% <span class="number">4</span>            // <span class="number">2</span></span><br><span class="line"><span class="symbol">7 </span>% <span class="number">4</span>            // <span class="number">3</span></span><br><span class="line"><span class="symbol">8 </span>% <span class="number">4</span>            // <span class="number">0</span></span><br><span class="line"><span class="symbol">9 </span>% <span class="number">4</span>            // <span class="number">1</span></span><br><span class="line"><span class="symbol">10 </span>% <span class="number">4</span>           // <span class="number">2</span></span><br></pre></td></tr></table></figure></div><p>场景3：能够帮助我们从一个精灵图片中取元素</p><p>比如下图，每排<code>8</code>个精灵元素。现在要取第<code>17</code>号，它就是编号为<code>2</code>排的编号为<code>1</code>的那个。注意，所有序号都是从<code>0</code>开始数。</p><p><img src="https://s1.ax1x.com/2020/07/05/UpcJyt.png" alt="UpcJyt.png"></p><p><strong>取余运算的优先级和乘除相等</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="symbol">5 </span>* <span class="number">4</span> % <span class="number">10</span>           // <span class="number">0</span></span><br><span class="line"><span class="symbol">5 </span>% (true + <span class="number">1</span>) * <span class="number">3</span>   // <span class="number">3</span></span><br></pre></td></tr></table></figure></div><h2 id="9-7-自增运算符-自减运算符"><a href="#9-7-自增运算符-自减运算符" class="headerlink" title="9.7  自增运算符 ++ 自减运算符- -"></a>9.7 自增运算符 <code>++</code> 自减运算符<code>- -</code></h2><p>能够让<code>a</code>自增：</p><blockquote><p>a++;</p></blockquote><p>等价于</p><blockquote><p>a = a + 1;</p></blockquote><p>比如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> a = <span class="number">3</span>;</span></span><br><span class="line">      a++;</span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(a);         <span class="comment">// 结果为 4</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>但真正了解a++不容易：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> a = <span class="number">3</span>;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(a++);         <span class="comment">// 结果为 3</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><strong><code>a++</code>，会“<code>先用再加</code>”。也就是说，会先把a的原数输出了，然后a自增1。</strong></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> a = <span class="number">3</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> b = a++;             <span class="comment">// 先用再加   先把b = a输出</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(a);         <span class="comment">// 结果为 4</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(b);         <span class="comment">// 结果为 3</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>为了解决不便利的问题，可以把<code>++</code>前置，此时就是<code>++a</code>“<code>先加再用</code>”。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> a = <span class="number">3</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> b = ++a;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(a);         <span class="comment">// 结果为 4</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(b);         <span class="comment">// 结果为 4</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>例1：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> a = <span class="number">5</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> b = <span class="number">3</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> c = a++ + ++b;       <span class="comment">// 5+4</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(c);         <span class="comment">// 结果为 9</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>例2：</p><p><img src="https://s1.ax1x.com/2020/07/05/UpcXkD.png" alt="UpcXkD.png"></p><p>例3：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> a = <span class="number">3</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> b = <span class="number">4</span>;</span></span><br><span class="line"><span class="actionscript">      <span class="keyword">var</span> c = a++ + b++ + ++a + b++;       <span class="comment">// 3+4+5+6</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(c);         <span class="comment">// 结果为 18</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>数据类型</tag>
        <tag>算法</tag>
        <tag>数学运算符</tag>
      </tags>
  </entry>
  <entry>
    <title>八、小案例：用户输入一个3位数，弹出各个数位的和</title>
    <url>/post/83cfe65e.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="八、小案例：用户输入一个3位数，弹出各个数位的和"><a href="#八、小案例：用户输入一个3位数，弹出各个数位的和" class="headerlink" title="八、小案例：用户输入一个3位数，弹出各个数位的和"></a>八、小案例：用户输入一个3位数，弹出各个数位的和</h1><h2 id="8-1-算法为王"><a href="#8-1-算法为王" class="headerlink" title="8.1  算法为王"></a>8.1 算法为王</h2><p>首先，弹出一个prompt，请用户输入一个三位数。比如用户输入338，弹出14</p><p>比如用户输入109，弹出10</p><p>比如用户输入888，弹出24</p><p>我们通过这个题目，理解：</p><p><strong>算法为王</strong></p><p>我们编程，本质上不是学习API，而是学习算法。你得有巧思秒想，能够利用现有的手段，把事情解决。</p><p>思路：</p><p><img src="https://s1.ax1x.com/2020/07/05/Upsiid.png" alt="Upsiid.png"></p><h2 id="8-2-如何取余数"><a href="#8-2-如何取余数" class="headerlink" title="8.2  如何取余数 %"></a>8.2 如何取余数 <code>%</code></h2><p>百分号就是取余数的运算符</p><p>比如：</p><p>11 % 5</p><p>结果为1</p><p>9 % 3</p><p>结果为0</p><p>815475653465874 % 10</p><p>结果为4</p><h2 id="8-3-如何取整数"><a href="#8-3-如何取整数" class="headerlink" title="8.3  如何取整数 ~~"></a>8.3 如何取整数 <code>~~</code></h2><p>数字前加两个波浪线<code>~~</code> 就可以取整数部分</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 请用户输入一个三位数</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> a = <span class="built_in">Number</span>(prompt(<span class="string">"请输入一个三位数："</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 算法</span></span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 百位</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> baiwei = ~~(a / <span class="number">100</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 十位</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> shiwei = ~~(a / <span class="number">10</span>) % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 个位</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> gewei = a % <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//  展示结果给用户</span></span></span><br><span class="line"><span class="actionscript">        alert(<span class="string">"算完了，三个数字之和为："</span> + ( baiwei + shiwei + gewei));   <span class="comment">//加括号</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/Ups4fA.png" alt="Ups4fA.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>数据类型</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>七、小案例：鸡兔同笼</title>
    <url>/post/f542d68e.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="七、小案例：鸡兔同笼"><a href="#七、小案例：鸡兔同笼" class="headerlink" title="七、小案例：鸡兔同笼"></a>七、小案例：鸡兔同笼</h1><p>用户先输入笼子中鸡的数量，比如3，然后输入兔子的数量，比如4。</p><p>弹出一句话：</p><p>“你好，笼子中脑袋的数量一共是7，腿的数量一共是22”。</p><p>培养：</p><ul><li><p>用合理的、有意义的驼峰风格的变量名。</p></li><li><p>结果可以用变量周转。</p></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 请用户输入鸡的数量</span></span></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> chichenNumber = <span class="built_in">Number</span>(prompt(<span class="string">"请输入鸡的数量："</span>));</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 请用户输入兔子的数量</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> rabbitNumber = <span class="built_in">Number</span>(prompt(<span class="string">"请输入兔子的数量："</span>));</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">// 脑袋总数，计算结果，也存入变量</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> headNumber = chichenNumber + rabbitNumber;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 腿的总数，计算结果，也存入变量。注意，默认就是先算乘法，后算加法</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> legNumber = chichenNumber * <span class="number">2</span> + rabbitNumber * <span class="number">4</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">        <span class="comment">//  展示结果给用户</span></span></span><br><span class="line"><span class="actionscript">         alert(<span class="string">"算完了，脑袋总数："</span> + headNumber + <span class="string">"，腿的总数："</span> + legNumber);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UprUPA.png" alt="UprUPA.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>数据类型</tag>
        <tag>算法</tag>
        <tag>鸡兔同笼</tag>
      </tags>
  </entry>
  <entry>
    <title>六、小案例：小小加法计算器</title>
    <url>/post/95f5a867.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="六、小案例：小小加法计算器"><a href="#六、小案例：小小加法计算器" class="headerlink" title="六、小案例：小小加法计算器"></a>六、小案例：小小加法计算器</h1><p>要求用户输入两个数字，弹出两个数字的和。</p><h2 id="6-1-输入语句"><a href="#6-1-输入语句" class="headerlink" title="6.1  输入语句"></a>6.1 输入语句</h2><ul><li><p>输出语句：</p><pre><code>* console.log()

* alert()</code></pre></li><li><p>现在来学习一个输入语句：</p><pre><code>* prompt()</code></pre></li></ul><p><code>prompt</code>的功能就是弹出一个输入框。和<code>alert</code>相似，它也是一个函数，所以也要加一个圆括号对，表示运行</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">     prompt(<span class="string">"来了老弟，请输入内容"</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpBvf1.png" alt="UpBvf1.png"></p><p>用户输入的东西，可以用一个变量来接收：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> a = prompt(<span class="string">"来了老弟，请输入内容"</span>);   <span class="comment">//弹出输入框，用户输入的东西，用一个变量a来接收</span></span></span><br><span class="line"><span class="actionscript">     alert(<span class="string">"你说的是:"</span> + a + <span class="string">"。谢谢,我知道了"</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><code>字符串</code>+<code>变量</code>+<code>字符串</code>形式，叫做“<code>斩断链接</code>”</p><p><img src="https://s1.ax1x.com/2020/07/05/UpDPmD.png" alt="UpDPmD.png"></p><h2 id="6-2-小小加法计算器"><a href="#6-2-小小加法计算器" class="headerlink" title="6.2  小小加法计算器"></a>6.2 小小加法计算器</h2><p>程序的大致写法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第1个数字</span></span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> a = prompt(<span class="string">"老弟，请输入第1个数字："</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第2个数字</span></span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> b = prompt(<span class="string">"老弟，请输入第2个数字："</span>);</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//  弹出结果</span></span></span><br><span class="line">     alert(a + b);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>但是有瑕疵。用户输入的东西一定是字符串。而“字符串+字符串”功能是连字，不是加。</p><p>3+4的结果就是34了。</p><p><img src="https://s1.ax1x.com/2020/07/05/UpDgc6.png" alt="UpDgc6.png"></p><p>需要将字符串变为数字。</p><p>转为数字要使用<code>Number()</code>这个<code>API</code>（Application Interfaces,通用程序接口）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第1个数字,Number()注意大写N，表示转为数字类型</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> a = <span class="built_in">Number</span>(prompt(<span class="string">"老弟，请输入第1个数字："</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第2个数字</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> b = <span class="built_in">Number</span>(prompt(<span class="string">"老弟，请输入第2个数字："</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//  弹出结果</span></span></span><br><span class="line">     alert(a + b);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpDjHg.png" alt="UpDjHg.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第1个数字,Number()注意大写N，表示转为数字类型</span></span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> a = (prompt(<span class="string">"老弟，请输入第1个数字："</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第2个数字</span></span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> b = (prompt(<span class="string">"老弟，请输入第2个数字："</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//  弹出结果</span></span></span><br><span class="line"><span class="javascript">     alert(<span class="built_in">Number</span>(a + b));  <span class="comment">//Nunber写在这里转的是“字符串a+字符串b”加完之后的结果ab(34)</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第1个数字,Number()注意大写N，表示转为数字类型</span></span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> a = (prompt(<span class="string">"老弟，请输入第1个数字："</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第2个数字</span></span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> b = (prompt(<span class="string">"老弟，请输入第2个数字："</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//  弹出结果</span></span></span><br><span class="line"><span class="javascript">     alert(<span class="built_in">Number</span>(a) + <span class="built_in">Number</span>(b));  <span class="comment">//Nunber写在这里表示数字a+数字b，结果为7</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第1个数字,Number()注意大写N，表示转为数字类型</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> a = <span class="built_in">Number</span>(prompt(<span class="string">"老弟，请输入第1个数字："</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第2个数字</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> b = <span class="built_in">Number</span>(prompt(<span class="string">"老弟，请输入第2个数字："</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//  弹出结果</span></span></span><br><span class="line"><span class="actionscript">     alert(“两个数字的和是：” + a + b);  <span class="comment">//先运算的是字符串+a</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第1个数字,Number()注意大写N，表示转为数字类型</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> a = <span class="built_in">Number</span>(prompt(<span class="string">"老弟，请输入第1个数字："</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 请用户输入第2个数字</span></span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> b = <span class="built_in">Number</span>(prompt(<span class="string">"老弟，请输入第2个数字："</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//  弹出结果</span></span></span><br><span class="line"><span class="actionscript">     alert(“两个数字的和是：” + (a + b));  <span class="comment">//先运算数字a+数字b</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>数据类型</tag>
        <tag>加法计算器</tag>
      </tags>
  </entry>
  <entry>
    <title>五、数据类型</title>
    <url>/post/d86d461c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="五、数据类型"><a href="#五、数据类型" class="headerlink" title="五、数据类型"></a>五、数据类型</h1><p>所有在JS中能出现的“值”，术语叫做“字面量”，字面量有类型。</p><table><thead><tr><th>类型</th><th>举例</th></tr></thead><tbody><tr><td>数字型</td><td>number(0、33、-32、 23213231321) NaN Infinity</td></tr><tr><td>字符串型</td><td>“我爱你” “11”</td></tr><tr><td>布尔型</td><td>true false</td></tr><tr><td>……</td><td>……</td></tr></tbody></table><h2 id="5-1-使用typeof检测类型"><a href="#5-1-使用typeof检测类型" class="headerlink" title="5.1  使用typeof检测类型"></a>5.1 使用<code>typeof</code>检测类型</h2><p><code>typeof</code>是一个关键字用来检测字面量的类型</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="number">123</span>);          <span class="comment">//  number   数字型</span></span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="string">"我爱你"</span>);      <span class="comment">// string    字符串型</span></span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">true</span>);         <span class="comment">// boolean    布尔型</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpU6pT.png" alt="UpU6pT.png"></p><h2 id="5-2-数字类型"><a href="#5-2-数字类型" class="headerlink" title="5.2  数字类型"></a>5.2 数字类型</h2><h3 id="5-2-1-数字类型一律是number类型，没有子类型"><a href="#5-2-1-数字类型一律是number类型，没有子类型" class="headerlink" title="5.2.1  数字类型一律是number类型，没有子类型"></a>5.2.1 数字类型一律是<code>number</code>类型，没有子类型</h3><p>注意，数字不论整浮（浮，就是浮点数，就是小数）、不论正负、不论大小，一律都是number类型的</p><p>但是在别的语言中，数字又区分为int float double ……</p><p>JS中的数字类型非常简单，一律叫做number类型：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="number">123</span>);                     <span class="comment">// 整数      </span></span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="number">6.56</span>);                    <span class="comment">// 浮点数</span></span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="number">-5</span>);                      <span class="comment">// 负数</span></span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="number">6547564756475645</span>);        <span class="comment">// 大数</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpUjHA.png" alt="UpUjHA.png"></p><p>数字有进制之分。比如二进制、八进制、十六进制。</p><h3 id="5-2-2-学习两个特殊的数字，NaN、Infinity。"><a href="#5-2-2-学习两个特殊的数字，NaN、Infinity。" class="headerlink" title="5.2.2  学习两个特殊的数字，NaN、Infinity。"></a>5.2.2 学习两个特殊的数字，<code>NaN</code>、<code>Infinity</code>。</h3><ul><li><code>NaN</code>表示不是一个数，<code>not a number</code>，但它就是数字类型。</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="literal">NaN</span>);    <span class="comment">//number类型</span></span><br></pre></td></tr></table></figure></div><p>NaN有两种情况能够出现：</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">① 数学运算中，产生不了数字的结果</span><br><span class="line">console.<span class="built_in">log</span>(<span class="string">"我"</span>-<span class="string">"你"</span>);    <span class="comment">//因为减法必须是数字参与，减不了，此时JS输出NaN</span></span><br><span class="line"></span><br><span class="line">② 死记一个式子</span><br><span class="line">console.<span class="built_in">log</span>(<span class="number">0</span>/<span class="number">0</span>);    <span class="comment">//零除以零的时候也是NaN</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/05/UpaYU1.png" alt="UpaYU1.png"></p><ul><li><code>Infinity</code>表示无穷</li></ul><p><code>Infinity</code>也有两个情况能出现：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">① 非零数字除以零</span><br><span class="line">console.log(<span class="number">10</span>/<span class="number">0</span>);    <span class="comment">//非零数字除以零</span></span><br><span class="line"></span><br><span class="line">② 特别大的数字</span><br><span class="line">console.log(Math.pow(<span class="number">3333</span>,<span class="number">6666666</span>));    <span class="comment">// 3333的6666666次幂</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/Upaa8K.png" alt="Upaa8K.png"></p><h2 id="5-3-字符串类型"><a href="#5-3-字符串类型" class="headerlink" title="5.3  字符串类型"></a>5.3 字符串类型</h2><p>必须用引号包裹，表示语言文字。</p><p>用双引号包裹起来的都是字符串。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="number">5</span>);    <span class="comment">// number</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">typeof</span> <span class="string">"5"</span>);    <span class="comment">// string</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpaBKe.png" alt="UpaBKe.png"></p><h2 id="5-4-布尔类型"><a href="#5-4-布尔类型" class="headerlink" title="5.4  布尔类型"></a>5.4 布尔类型</h2><p><code>true</code>和<code>false</code>分别表示<code>真</code>和<code>假</code>，它们是布尔型。</p><p>布尔先生发明了逻辑符号，和一些逻辑的基本原理</p><p>比如“我回家晚了，我老婆会打我”，所以“我今天没挨打，说明一定没回家晚”</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">console.log(<span class="number">4</span> &gt; <span class="number">3</span>);    <span class="comment">// true</span></span><br><span class="line">console.log(<span class="number">8</span> &gt; <span class="number">11</span>);    <span class="comment">// false</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/Upaxr4.png" alt="Upaxr4.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>数据类型</tag>
      </tags>
  </entry>
  <entry>
    <title>四、变量</title>
    <url>/post/b4427100.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="四、变量"><a href="#四、变量" class="headerlink" title="四、变量"></a>四、变量</h1><h2 id="4-1-用var来定义变量"><a href="#4-1-用var来定义变量" class="headerlink" title="4.1  用var来定义变量"></a>4.1 用<code>var</code>来定义变量</h2><p>JS中一律使用<code>var</code>来定义变量。<code>var</code>是英语<code>variable</code>（变量）的缩写。</p><p>变量就是临时存储数据的一个值，一个英语符号而已。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 定义了一个变量a，赋值为10</span></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> a = <span class="number">10</span>;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 弹出a的值，这里没有双引号，因为变量不许用双引号包裹</span></span></span><br><span class="line">        alert(a);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>注意，等号不是表示相等，而是表示赋值。会将右边的值，赋给左边。</p><p>输出变量的时候，不许加双引号！！！</p><p><code>var</code>叫做关键字，就是有一些特殊功能的字，关键字后面必须加空格。</p><p>等号加不加空格都行。</p><h2 id="4-2-变量可以怎么命名"><a href="#4-2-变量可以怎么命名" class="headerlink" title="4.2  变量可以怎么命名"></a>4.2 变量可以怎么命名</h2><ul><li><p>变量只能由字母、数字、下划线、$符号构成。</p></li><li><p>不能以数字开头</p></li><li><p>不能是关键字保留字（说白了就是JS中内置的函数、关键字名字不能当做变量名）</p></li></ul><p>下面都是合法的变量:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">var b = <span class="number">22</span>;</span><br><span class="line">var b2 = <span class="number">66</span>;</span><br><span class="line">var _c = <span class="number">55</span>;</span><br><span class="line">var $<span class="number">55</span> = <span class="number">44</span>;</span><br><span class="line">var $ = <span class="number">99</span>;</span><br><span class="line">var _ = <span class="number">45</span>;</span><br><span class="line">var $<span class="number">0</span>_0$ = <span class="number">33</span>;</span><br></pre></td></tr></table></figure></div><p>下面都是错误的变量:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">var <span class="number">2</span>b = <span class="number">22</span>;      不能以数字开头</span><br><span class="line">var <span class="symbol">b@</span> = <span class="number">66</span>;      不能有特殊符号</span><br><span class="line">var var = <span class="number">55</span>;     不能是关键字</span><br></pre></td></tr></table></figure></div><h2 id="4-3-变量值的改变"><a href="#4-3-变量值的改变" class="headerlink" title="4.3  变量值的改变"></a>4.3 变量值的改变</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        var a = <span class="number">10</span><span class="comment">;       定义a并且赋初值为10</span></span><br><span class="line">        a = <span class="number">30</span><span class="comment">;           改变a的值为30</span></span><br><span class="line">        alert(a)<span class="comment">;         弹出a</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpYWnA.png" alt="UpYWnA.png"></p><p>注意两个事情：</p><ul><li><p>等号表示赋值，<code>a=30</code>这句话表示一个命令，让a成为30。</p></li><li><p>已经<code>var</code>过一个变量了，再次改变它的值的时候，不需要再次<code>var</code>了</p></li></ul><h2 id="4-4-定义变量和赋初值可以分开写、可以用逗号分隔以次定义很多"><a href="#4-4-定义变量和赋初值可以分开写、可以用逗号分隔以次定义很多" class="headerlink" title="4.4  定义变量和赋初值可以分开写、可以用逗号分隔以次定义很多"></a>4.4 定义变量和赋初值可以分开写、可以用逗号分隔以次定义很多</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EBNF"><figure class="iseeu highlight /ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">var a</span> = 10;</span><br></pre></td></tr></table></figure></div><p>可以拆分为两条语句：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">var a<span class="comment">;</span></span><br><span class="line"><span class="attribute">a</span> = <span class="number">10</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></div><p>也可以这样写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">var a = <span class="number">10</span> , b = <span class="number">20</span> , c = <span class="number">30</span>;</span><br></pre></td></tr></table></figure></div><p>不过建议大家还是一条一条写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EBNF"><figure class="iseeu highlight /ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">var a</span> = 10;</span><br><span class="line"><span class="attribute">var b</span> = 20;</span><br><span class="line"><span class="attribute">var c</span> = 30;</span><br></pre></td></tr></table></figure></div><h2 id="4-5-undefined和变量声明的提升"><a href="#4-5-undefined和变量声明的提升" class="headerlink" title="4.5  undefined和变量声明的提升"></a>4.5 <code>undefined</code>和变量声明的提升</h2><p>如果我们没有<code>var</code>过<code>a</code>，直接弹出<code>a</code>，系统会报错：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">        alert(a);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/Upt4KJ.png" alt="Upt4KJ.png"></p><p>如果我们<code>var</code>了<code>a</code>，却没有赋初值，此时不会报错，会弹出<code>undefined</code>这个词：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> a;</span></span><br><span class="line">        alert(a);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/Uptxrd.png" alt="Uptxrd.png"></p><p><code>undefined</code>表示“没有定义”，实际上我们已经用<code>var</code>定义了。这是JS的特性，你可以理解为：</p><blockquote><p>你var了一个变量，它的默认值就是undefined，期待你用初值来覆盖。</p></blockquote><p>有意思的程序是：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    alert(a);</span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> a = <span class="number">342</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>注意，会弹出undefined，因为有变量声明的提升这个过程，如图</p><p><img src="https://s1.ax1x.com/2020/07/05/UpNUd1.png" alt="UpNUd1.png"></p><p>相当于：（将<code>var a;</code> 提升到前面，剩下的原位置执行）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">var a<span class="comment">;</span></span><br><span class="line">alert(a)<span class="comment">;     // 执行的时候a 还未赋值，显示默认的undefined</span></span><br><span class="line"><span class="attribute">a</span> = <span class="number">342</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>变量</tag>
      </tags>
  </entry>
  <entry>
    <title>三、开始书写第一个JS程序</title>
    <url>/post/e788a3cf.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="三、开始书写第一个JS程序"><a href="#三、开始书写第一个JS程序" class="headerlink" title="三、开始书写第一个JS程序"></a>三、开始书写第一个JS程序</h1><p>JS有三大知识体系：</p><ul><li>语言核心</li><li>DOM</li><li>BOM</li></ul><h2 id="3-1-写代码的地方"><a href="#3-1-写代码的地方" class="headerlink" title="3.1  写代码的地方"></a>3.1 写代码的地方</h2><p>和我们的<code>HTML</code>、<code>CSS</code>一样，用<code>IDE</code>（集成开发环境，如<code>VS Code</code>）开发写代码，用浏览器运行</p><p>创建一个<code>HTML</code>文件，注意<code>JS</code>也是“<code>寄生语言</code>”，不能脱离<code>HTML</code>运行。</p><p>按原来的方法，就是<code>html：5</code>按<code>tab</code>键生成骨架之后，书写<code>&lt;script&gt;&lt;/script&gt;</code>标签对，这是JS的舞台：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>有的时候编辑器会生成:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>这个<code>type</code>实际上是以前的<code>HTML</code>版本的东西，如果你的<code>VS Code</code> 给你生成了，留着就行。</p><h2 id="3-2-认识alert"><a href="#3-2-认识alert" class="headerlink" title="3.2  认识alert()"></a>3.2 认识<code>alert()</code></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        alert(<span class="string">"你好，给你讲个故事"</span>)<span class="comment">;</span></span><br><span class="line">        alert(<span class="string">"从前有座山，山上有座庙"</span>)<span class="comment">;</span></span><br><span class="line">        alert(<span class="string">"庙里有个老和尚"</span>)<span class="comment">;</span></span><br><span class="line">        alert(<span class="string">"在给小和尚讲故事"</span>)<span class="comment">;</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></div><p>写几条就有几个警告框：</p><p><img src="https://s1.ax1x.com/2020/07/05/UplwwT.png" alt="UplwwT.png"></p><ul><li><p><code>JS</code>的程序是由一条条语句组成的。语句的结尾，一般来说要以分号结尾。注意分号是英语分号，不是中文的。</p></li><li><p><code>alert</code>是<code>js</code>语言提供的，表示弹出警告框。这个东西叫做<code>API（Application Interfaces,通用程序接口）</code>，说白了就是人家定的东西。不能更改，如果书写错误，就没有任何功能。</p></li><li><p>语法是必须要遵守的。<code>alert</code>是一个函数，他后面必须加英文的<code>()</code>,圆括号里面显示的内容是字符串，这里必须被英语的<code>&quot; “</code>双引号包裹，左边是英文的，右边的是中文的。圆括号标示运行函数。</p></li></ul><p><code>alert</code>我们叫做输出语句，因为他能把程序中的一些值、信息显示给用户。</p><h2 id="3-3-认识console-log"><a href="#3-3-认识console-log" class="headerlink" title="3.3  认识console.log()"></a>3.3 认识<code>console.log()</code></h2><p>在编辑器中输入<code>log</code>按<code>tab</code>键即可展开为：</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">console.<span class="built_in">log</span>();</span><br></pre></td></tr></table></figure><p><code>console</code>就是控制台的意思，<code>log</code>就是输出的意思。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(<span class="string">"你好，我又来了讲故事了"</span>);</span></span><br><span class="line"><span class="javascript">       <span class="built_in">console</span>.log(<span class="string">"哈哈哈哈哈哈"</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>我们的信息将在控制台中显示</p><p><img src="https://s1.ax1x.com/2020/07/05/Up1Qj1.png" alt="Up1Qj1.png"></p><h2 id="3-4-利用控制台挑错"><a href="#3-4-利用控制台挑错" class="headerlink" title="3.4  利用控制台挑错"></a>3.4 利用控制台挑错</h2><p>如果你<code>API</code>写错了，比如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">aleet(<span class="string">"你好"</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/Up32dK.png" alt="Up32dK.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">Uncaught ReferenceError   未被捕获的引用错误</span><br><span class="line">aleet <span class="keyword">is</span> <span class="keyword">not</span> defined      aleet这个词没有被定义，说明你写错了</span><br><span class="line">:<span class="number">11</span>                       发生错误的行号</span><br></pre></td></tr></table></figure></div><p>如果你语法写错了：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">alert(“你好”)<span class="comment">;      引号为中文</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/Up8YSH.png" alt="Up8YSH.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">Uncaught</span> <span class="string">SyntaxError            未被捕获的语法错误</span></span><br><span class="line"><span class="attr">Invalid</span> <span class="string">or unexpected token     非法或者不期望的符号</span></span><br></pre></td></tr></table></figure></div><p>总结一下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVASCRIPT"><figure class="iseeu highlight /javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ReferenceError</span>  表示API用错了，alert拼错了</span><br><span class="line"><span class="built_in">SyntaxError</span>     表示语法错误，出现中文了</span><br></pre></td></tr></table></figure></div><h2 id="3-5-注释"><a href="#3-5-注释" class="headerlink" title="3.5  注释"></a>3.5 注释</h2><p>按快捷键<code>Ctrl+/</code> 生成的是单行注释（/后面一般有个空格）</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 我是一个单行注释</span></span><br></pre></td></tr></table></figure><p>按<code>Ctrl+shift+/</code>，生成块级注释</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">   我是块级注释</span></span><br><span class="line"><span class="comment">   我是块级注释</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></div><p>有的为了美观：补<code>*</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ACTIONSCRIPT"><figure class="iseeu highlight /actionscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* *</span></span><br><span class="line"><span class="comment">*我是块级注释</span></span><br><span class="line"><span class="comment">*我是块级注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></div><h2 id="3-6-控制台是一个REPL环境"><a href="#3-6-控制台是一个REPL环境" class="headerlink" title="3.6  控制台是一个REPL环境"></a>3.6 控制台是一个<code>REPL</code>环境</h2><p>在控制台中可以随时输入一些表达式，按回车之后就会立即显示计算结果，非常方便我们调试学习</p><p>REPL是英语read（读）、Eval（求值）、Print（打印结果）、Loop（循环）</p><p><img src="https://s1.ax1x.com/2020/07/05/UpJ9aV.png" alt="UpJ9aV.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>代码</tag>
      </tags>
  </entry>
  <entry>
    <title>二、分清楚前端和后端，认识前端三层</title>
    <url>/post/261ca974.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="二、分清楚前端和后端，认识前端三层"><a href="#二、分清楚前端和后端，认识前端三层" class="headerlink" title="二、分清楚前端和后端，认识前端三层"></a>二、分清楚前端和后端，认识前端三层</h1><h2 id="2-1-前后端区别"><a href="#2-1-前后端区别" class="headerlink" title="2.1  前后端区别"></a>2.1 前后端区别</h2><p>前端工作流程:</p><p><img src="https://s1.ax1x.com/2020/07/05/Upn874.png" alt="Upn874.png"></p><p>1.网页原本是放在服务器上的</p><p>2.小明打开浏览器输入了网址，此时就发出了http请求（超文本传输协议）</p><p>3.服务器将网页发给小明</p><p>4.小明的电脑执行HTML、CSS 、JavaScript程序</p><p><img src="https://s1.ax1x.com/2020/07/05/UpKGWR.png" alt="UpKGWR.png"></p><p>注意：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MIPSASM"><figure class="iseeu highlight /mipsasm"><table><tr><td class="code"><pre><span class="line">HTML CSS <span class="keyword">JS </span>都是前端语言！！！</span><br><span class="line">PHP  <span class="keyword">Java </span> Python  <span class="keyword">Scala </span> Perl  Go  .net 都是后端语言！它们运行在服务器上。</span><br></pre></td></tr></table></figure></div><h2 id="2-2-前端三层"><a href="#2-2-前端三层" class="headerlink" title="2.2  前端三层"></a>2.2 前端三层</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BRAINFUCK"><figure class="iseeu highlight /brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">结构层	HTML	</span>    <span class="comment">放页面部件，如img、a等，添加语义的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">样式层	CSS	</span>        <span class="comment">写样式的，浮动、定位、精灵等</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">行为层	JavaScript	做特效、表单验证、Ajax、页面软件、数据可视化</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
        <tag>前端</tag>
        <tag>后端</tag>
        <tag>前端三层</tag>
      </tags>
  </entry>
  <entry>
    <title>一、JavsScript简介和功能</title>
    <url>/post/559dd33c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="一、JavsScript简介和功能"><a href="#一、JavsScript简介和功能" class="headerlink" title="一、JavsScript简介和功能"></a>一、JavsScript简介和功能</h1><p>JS诞生于1995年12月4日</p><p>创始人：Brend Eich</p><p><img src="https://s1.ax1x.com/2020/07/05/Upmlod.png" alt="Upmlod.png"></p><p>JS功能：</p><blockquote><p>制作网页上的特效、功能、表单验证等。</p></blockquote><ul><li><p>页面特效是用JavaScript制作的</p></li><li><p>表单验证是JavaScript开发的</p></li><li><p>Ajax技术是用JavaScript开发的</p></li><li><p>页面上像软件一样的功能都是用JavaScript写的</p></li><li><p>数据可视化图表</p></li></ul><p>JavaScript的名字由来：</p><blockquote><p>和Java没有关系 (北大和北大青鸟的关系（没有关系）)</p></blockquote><p>JS不是一直被人喜欢的，中间有低谷</p><p>到今天，JavaScript已经成为了世界上最受欢迎的编程语言之一。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>JavsScript</category>
        <category>JS基础-核心语言</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>JavsScript</tag>
      </tags>
  </entry>
  <entry>
    <title>十一、进度条</title>
    <url>/post/33c08048.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><p>通过这些简单、灵活的进度条，为当前工作流程或动作提供实时反馈。</p><ul><li><p>跨浏览器兼容性：</p><ul><li>进度条组件使用了 <code>CSS3</code> 的 <code>transition</code> 和 <code>animation</code> 属性来完成一些特效。这些特性在 <code>Internet Explorer 9</code> 或以下版本中、<code>Firefox</code> 的老版本中没有被支持。<code>Opera 12</code> 不支持 <code>animation</code> 属性。</li></ul></li><li><p>Content Security Policy (CSP) compatibility内容安全策略（CSP）兼容性</p><ul><li>如果网站的内容安全策略（CSP）不允许使用样式<code>src“unsafe inline”</code>，则无法使用内联样式属性设置进度条宽度，如下面的示例所示。设置与严格csp兼容的宽度的替代方法包括使用一点自定义<code>JavaScript</code>（设置<code>element.style.width</code>）或使用自定义CSS类。</li></ul></li></ul><h1 id="1-基本实例"><a href="#1-基本实例" class="headerlink" title="1  基本实例"></a>1 基本实例</h1><p>默认样式的进度条</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"60"</span> aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"width: 60%;"</span>&gt;</span><br><span class="line">    &lt;span <span class="built_in">class</span>=<span class="string">"sr-only"</span>&gt;<span class="number">60</span>% Complete&lt;/span&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpAClD.png" alt="UpAClD.png"></p><h1 id="2-带有提示标签的进度条"><a href="#2-带有提示标签的进度条" class="headerlink" title="2  带有提示标签的进度条"></a>2 带有提示标签的进度条</h1><p>将设置了 <code>.sr-only</code> 类的 <code>&lt;span&gt;</code> 标签从进度条组件中移除 类，从而让当前进度显示出来。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"60"</span> aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"width: 60%;"</span>&gt;</span><br><span class="line">    <span class="number">60</span>%</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpAJkq.png" alt="UpAJkq.png"></p><p>在展示很低的百分比时，如果需要让文本提示能够清晰可见，可以为进度条设置 <code>min-width</code> 属性。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"0"</span> aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"min-width: 2em;"</span>&gt;</span><br><span class="line">    <span class="number">0</span>%</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"2"</span> aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"min-width: 2em; width: 2%;"</span>&gt;</span><br><span class="line">    <span class="number">2</span>%</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpA6tx.png" alt="UpA6tx.png"></p><h1 id="3-根据情境变化效果"><a href="#3-根据情境变化效果" class="headerlink" title="3  根据情境变化效果"></a>3 根据情境变化效果</h1><p>进度条组件使用与按钮和警告框相同的类，根据不同情境展现相应的效果。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-success"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"40"</span> aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"width: 40%"</span>&gt;</span><br><span class="line"><span class="number">40</span>% (success)</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-info"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"20"</span> aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"width: 20%"</span>&gt;</span><br><span class="line"><span class="number">20</span>%</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-warning"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"60"</span> aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"width: 60%"</span>&gt;</span><br><span class="line">    <span class="number">60</span>% (warning)</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-danger"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"80"</span> aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"width: 80%"</span>&gt;</span><br><span class="line">    <span class="number">80</span>% (danger)</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpAfje.png" alt="UpAfje.png"></p><h1 id="4-条纹效果"><a href="#4-条纹效果" class="headerlink" title="4  条纹效果"></a>4 条纹效果</h1><p>通过<code>渐变</code>可以为进度条创建条纹效果，<code>IE9 及更低版本不支持</code>。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-success progress-bar-striped"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"40"</span></span><br><span class="line">    aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"width: 40%"</span>&gt;</span><br><span class="line">    <span class="number">40</span>% Complete (success)</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-info progress-bar-striped"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"20"</span></span><br><span class="line">    aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"width: 20%"</span>&gt;</span><br><span class="line">    <span class="number">20</span>% Complete</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-warning progress-bar-striped"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"60"</span></span><br><span class="line">    aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"width: 60%"</span>&gt;</span><br><span class="line">    <span class="number">60</span>% Complete (warning)</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-danger progress-bar-striped"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"80"</span></span><br><span class="line">    aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"width: 80%"</span>&gt;</span><br><span class="line">    <span class="number">80</span>% Complete (danger)</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpAOgS.png" alt="UpAOgS.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">.progress-bar-striped, </span><br><span class="line">.progress-striped </span><br><span class="line">.progress-bar &#123;</span><br><span class="line">  background-image: -webkit-linear-gradient(<span class="number">45</span>deg,rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.15</span>) <span class="number">25</span>%,transparent <span class="number">25</span>%,transparent <span class="number">50</span>%,rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.15</span>) <span class="number">50</span>%,rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.15</span>) <span class="number">75</span>%,transparent <span class="number">75</span>%,transparent);</span><br><span class="line">  background-image: -o-linear-gradient(<span class="number">45</span>deg,rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.15</span>) <span class="number">25</span>%,transparent <span class="number">25</span>%,transparent <span class="number">50</span>%,rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.15</span>) <span class="number">50</span>%,rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.15</span>) <span class="number">75</span>%,transparent <span class="number">75</span>%,transparent);</span><br><span class="line">  background-image: linear-gradient(<span class="number">45</span>deg,rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.15</span>) <span class="number">25</span>%,transparent <span class="number">25</span>%,transparent <span class="number">50</span>%,rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.15</span>) <span class="number">50</span>%,rgba(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">.15</span>) <span class="number">75</span>%,transparent <span class="number">75</span>%,transparent);</span><br><span class="line">  -webkit-background-size: <span class="number">40</span>px <span class="number">40</span>px;</span><br><span class="line">  background-size: <span class="number">40</span>px <span class="number">40</span>px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h1 id="5-动画效果"><a href="#5-动画效果" class="headerlink" title="5  动画效果"></a>5 动画效果</h1><p>为 <code>.progress-bar-striped</code> 添加 <code>.active</code> 类，使其呈现出<code>由右向左运动</code>的动画效果。<code>IE9 及更低版本的浏览器不支持</code>。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-striped active"</span> role=<span class="string">"progressbar"</span> aria-valuenow=<span class="string">"45"</span> aria-valuemin=<span class="string">"0"</span> aria-valuemax=<span class="string">"100"</span> style=<span class="string">"width: 45%"</span>&gt;</span><br><span class="line">    &lt;span <span class="built_in">class</span>=<span class="string">"sr-only"</span>&gt;<span class="number">45</span>% Complete&lt;/span&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpEAvF.png" alt="UpEAvF.png"></p><p><img src="https://s1.ax1x.com/2020/07/05/UpEK4x.png" alt="UpEK4x.png"></p><h1 id="6-堆叠效果"><a href="#6-堆叠效果" class="headerlink" title="6  堆叠效果"></a>6 堆叠效果</h1><p>把多个进度条放入同一个 <code>.progress</code> 中，使它们呈现<code>堆叠</code>的效果。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-success"</span> style=<span class="string">"width: 35%"</span>&gt;</span><br><span class="line">    &lt;span <span class="built_in">class</span>=<span class="string">"sr-only"</span>&gt;<span class="number">35</span>% Complete (success)&lt;/span&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-warning progress-bar-striped"</span> style=<span class="string">"width: 20%"</span>&gt;</span><br><span class="line">    &lt;span <span class="built_in">class</span>=<span class="string">"sr-only"</span>&gt;<span class="number">20</span>% Complete (warning)&lt;/span&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"progress-bar progress-bar-danger"</span> style=<span class="string">"width: 10%"</span>&gt;</span><br><span class="line">    &lt;span <span class="built_in">class</span>=<span class="string">"sr-only"</span>&gt;<span class="number">10</span>% Complete (danger)&lt;/span&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/05/UpEGKe.png" alt="UpEGKe.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bootstrap</tag>
        <tag>进度条</tag>
      </tags>
  </entry>
  <entry>
    <title>十、导航</title>
    <url>/post/e142db7b.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><p><code>Bootstrap</code> 中的导航组件都依赖同一个 <code>.nav</code> 类，状态类也是共用的。改变修饰类可以改变样式。</p><ul><li>在标签页上使用导航需要依赖 <code>JavaScript</code> 标签页插件</li></ul><p>由于标签页需要控制内容区的展示，因此，你必须使用 标签页组件的 <code>JavaScript</code> 插件。另外还要添加 <code>role</code> 和 <code>ARIA</code> 属性。</p><ul><li>确保导航组件的可访问性</li></ul><p>如果你在使用导航组件实现导航条功能，务必在 <code>&lt;ul&gt;</code> 的最外侧的逻辑父元素上添加 <code>role=&quot;navigation&quot;</code> 属性，或者用一个 <code>&lt;nav&gt;</code> 元素包裹整个导航组件。不要将 <code>role</code> 属性添加到 <code>&lt;ul&gt;</code> 上，因为这样可以被辅助设备（残疾人用的）上被识别为一个真正的列表。</p><h1 id="1-标签页"><a href="#1-标签页" class="headerlink" title="1  标签页"></a>1 标签页</h1><p>注意 <code>.nav-tabs</code> 类依赖 <code>.nav</code> 基类。</p><p><code>.active</code> 轮换类名</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Profile<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Messages<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/Nxomi8.png" alt="Nxomi8.png"></p><h1 id="2-胶囊式标签页"><a href="#2-胶囊式标签页" class="headerlink" title="2  胶囊式标签页"></a>2 胶囊式标签页</h1><p><code>HTML</code> 标记相同，但使用 <code>.nav-pills</code> 类：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Profile<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Messages<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NxoNJU.png" alt="NxoNJU.png"></p><p>胶囊是标签页也是可以垂直方向堆叠排列的。只需添加 <code>.nav-stacked</code> 类。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills nav-stacked"</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NxoBLR.png" alt="NxoBLR.png"></p><h1 id="3-两端对齐的标签页"><a href="#3-两端对齐的标签页" class="headerlink" title="3  两端对齐的标签页"></a>3 两端对齐的标签页</h1><p>在大于 <code>768px</code> 的屏幕上，通过 <code>.nav-justified</code> 类可以很容易的让标签页或胶囊式标签呈现出<code>同等宽度</code>。在<code>小屏幕上，导航链接呈现堆叠样式</code>。</p><p><strong>两端对齐的导航条导航链接已经被弃用了。</strong></p><p>Safari 和响应式两端对齐导航:</p><p>从 <code>v9.1.2</code> 版本开始，<code>Safari</code> 有一个bug：</p><blockquote><p>对于两端对齐的导航，水平改变浏览器大小将引起绘制错误。此bug可以在两端对齐的导航实例中得到重现。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs nav-justified"</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills nav-justified"</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NxTkpF.png" alt="NxTkpF.png"></p><h1 id="4-禁用的链接"><a href="#4-禁用的链接" class="headerlink" title="4  禁用的链接"></a>4 禁用的链接</h1><p>对任何导航组件（标签页、胶囊式标签页），都可以添加 <code>.disabled</code> 类，从而实现<code>链接为灰色且没有鼠标悬停</code>效果。</p><p><strong>链接功能不受到影响</strong></p><p>这个类<strong>只改变 <code>&lt;a&gt;</code> 的外观，不改变功能</strong>。可以自己写 <code>JavaScript</code> 禁用这里的链接。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Clickable link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Clickable link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Disabled link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NxTGXd.png" alt="NxTGXd.png"></p><h1 id="5-添加下拉菜单"><a href="#5-添加下拉菜单" class="headerlink" title="5  添加下拉菜单"></a>5 添加下拉菜单</h1><p>用一点点额外 <code>HTML</code> 代码并加入下拉菜单插件的 <code>JavaScript</code> 插件即可。</p><p>带下拉菜单的标签页</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Help<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">      Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"separator"</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NxTt0I.png" alt="NxTt0I.png"></p><p>带下拉菜单的胶囊式标签页</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-pills"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Help<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"presentation"</span> <span class="attr">class</span>=<span class="string">"dropdown open"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"separator"</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NxTt0I.png" alt="NxTt0I.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bootstrap</tag>
        <tag>导航</tag>
      </tags>
  </entry>
  <entry>
    <title>九、下拉菜单</title>
    <url>/post/e29b6717.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><p>用于显示链接列表的可切换、有上下文的菜单。下拉菜单的 <code>JavaScript</code> 插件让它具有了交互性。</p><h1 id="1-实例"><a href="#1-实例" class="headerlink" title="1  实例"></a>1 实例</h1><p>将下拉菜单触发器和下拉菜单都包裹在 <code>.dropdown</code> 里，或者另一个声明了 <code>position: relative;</code> 的元素。然后加入组成菜单的 <code>HTML</code> 代码。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"dropdownMenu1"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    Dropdown</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span> <span class="attr">aria-labelledby</span>=<span class="string">"dropdownMenu1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"separator"</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NxWazn.png" alt="NxWazn.png"></p><p>通过为下拉菜单的父元素设置 <code>.dropup</code> 类，可以让菜单向上弹出（默认是向下弹出的）。</p><p><img src="https://s1.ax1x.com/2020/07/04/NxWodO.png" alt="NxWodO.png"></p><h1 id="2-对齐"><a href="#2-对齐" class="headerlink" title="2  对齐"></a>2 对齐</h1><p>默认情况下，下拉菜单自动沿着父元素的上沿和左侧被定位为 <code>100%</code> 宽度。 为 <code>.dropdown-menu</code> 添加 <code>.dropdown-menu-right</code> 类可以让菜单右对齐。</p><h2 id="2-1-可能需要额外的定位"><a href="#2-1-可能需要额外的定位" class="headerlink" title="2.1  可能需要额外的定位"></a>2.1 可能需要额外的定位</h2><p>在正常的文档流中，通过 <code>CSS</code> 为下拉菜单进行定位。这就意味着下拉菜单可能会由于设置了 <code>overflow</code> 属性的父元素而被部分遮挡或超出视口（<code>viewport</code>）的显示范围。如果出现这种问题，请自行解决。</p><h2 id="2-2-不建议使用-pull-right"><a href="#2-2-不建议使用-pull-right" class="headerlink" title="2.2  不建议使用 .pull-right"></a>2.2 不建议使用 <code>.pull-right</code></h2><p>从 <code>v3.1.0</code> 版本开始，不再建议对下拉菜单使用 <code>.pull-right</code> 类。如需将菜单右对齐，请使用 <code>.dropdown-menu-right</code> 类。导航条中如需添加右对齐的导航（<code>nav</code>）组件，请使用 <code>.pull-right</code> 的 <code>mixin</code> 版本，可以自动对齐菜单。如需左对齐，请使用 <code>.dropdown-menu-left</code> 类。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu dropdown-menu-right"</span> <span class="attr">aria-labelledby</span>=<span class="string">"dLabel"</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h1 id="3-标题"><a href="#3-标题" class="headerlink" title="3  标题"></a>3 标题</h1><p>在任何下拉菜单中均可通过添加标题来标明一组动作。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dropdown clearfix"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-default dropdown-toggle"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"dropdownMenu3"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    Dropdown</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span> <span class="attr">aria-labelledby</span>=<span class="string">"dropdownMenu3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown-header"</span>&gt;</span>标题1： <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown-header"</span>&gt;</span>标题2： <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/Nx5VOI.png" alt="Nx5VOI.png"></p><h1 id="4-分割线"><a href="#4-分割线" class="headerlink" title="4  分割线"></a>4 分割线</h1><p>为下拉菜单添加一条分割线，用于将多个链接分组。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span> <span class="attr">aria-labelledby</span>=<span class="string">"dropdownMenuDivider"</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"separator"</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/Nx5N7V.png" alt="Nx5N7V.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.dropdown-menu</span> <span class="selector-class">.divider</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">9px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e5e5e5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h1 id="5-禁用的菜单项"><a href="#5-禁用的菜单项" class="headerlink" title="5  禁用的菜单项"></a>5 禁用的菜单项</h1><p>为下拉菜单中的 <code>&lt;li&gt;</code> 元素添加 <code>.disabled</code> 类，从而禁用相应的菜单项。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span> <span class="attr">aria-labelledby</span>=<span class="string">"dropdownMenu4"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Regular link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"disabled"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Disabled link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Another link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/Nx56n1.png" alt="Nx56n1.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bootstrap</tag>
        <tag>下拉菜单</tag>
      </tags>
  </entry>
  <entry>
    <title>八、Glyphicons字体图标</title>
    <url>/post/e34f906e.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><ul><li><p>所有的图标都需要一个基类和对应每个图标的类。把下面的代码放在任何地方都可以正常使用。注意，为了设置正确的内补（padding），务必在图表和文本之间添加一个空格。</p></li><li><p>不要和其他组件混合使用（应该创建一个嵌套的 <code>&lt;span&gt;</code> 标签，并将图标类标签应用到这个 <code>&lt;span&gt;</code> 标签上）。</p></li><li><p>只对内容为空的元素起作用（图标类只能应用在不包含任何文本内容或子元素的元素上）。</p></li><li><p>改变图标字体文件的位置</p><ul><li><p>Bootstrap 假定所有的图标字体文件全部位于 <code>../fonts/</code> 目录内，相对于预编译版 CSS 文件的目录。如果你修改了图标字体文件的位置，那么，你需要通过下面列出的任何一种方式来更新 CSS 文件：</p><ul><li><p>在 <code>Less</code> 源码文件中修改 <code>@icon-font-path</code> 和<code>/</code>或 <code>@icon-font-name</code> 变量。</p></li><li><p>利用 <code>Less</code> 编译器提供的 相对 URL 地址选项。</p></li><li><p>修改预编译 <code>CSS</code> 文件中的 <code>url()</code> 地址。</p></li><li><p>根据你自身的情况选择一种方式即可。</p></li></ul></li></ul></li><li><p>图标的可访问性：</p><ul><li><p>现代的辅助技术能够识别并朗读由 <code>CSS</code> 生成的内容和特定的 <code>Unicode</code> 字符。为了避免 屏幕识读设备抓取非故意的和可能产生混淆的输出内容（尤其是当图标纯粹作为装饰用途时），我们为这些图标设置了 <code>aria-hidden=&quot;true&quot;</code> 属性。</p></li><li><p>如果你使用图标是为了表达某些含义（不仅仅是为了装饰用），请确保你所要表达的意思能够通过被辅助设备识别，例如，包含额外的内容并通过 <code>.sr-only</code> 类让其在视觉上表现出隐藏的效果。</p></li><li><p>如果你所创建的组件不包含任何文本内容（例如， <code>&lt;button&gt;</code> 内只包含了一个图标），你应当提供其他的内容来表示这个控件的意图，这样就能让使用辅助设备的用户知道其作用了。这种情况下，你可以为控件添加 <code>aria-label</code> 属性。</p></li></ul></li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;span <span class="attribute">class</span>=<span class="string">"glyphicon glyphicon-search"</span> <span class="attribute">aria-hidden</span>=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure></div><p>实例：图标字体</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  我是字体图标：</span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NxgyIH.png" alt="NxgyIH.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span> aria-label=<span class="string">"Left Align"</span>&gt;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-align-left"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br><span class="line">&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">&lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default btn-lg"</span>&gt;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-star"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt; <span class="type">Star</span></span><br><span class="line">&lt;/button&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/Nxg4L8.png" alt="Nxg4L8.png"></p><p><code>alert</code> 组件中所包含的图标是用来表示这是一条错误消息的，通过添加额外的 <code>.sr-only</code> 文本就可以让辅助设备知道这条提示所要表达的意思了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert alert-danger"</span> <span class="attr">role</span>=<span class="string">"alert"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-exclamation-sign"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Error:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  Enter a valid email address</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NxgjyV.png" alt="NxgjyV.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bootstrap</tag>
        <tag>Glyphicons</tag>
        <tag>字体图标</tag>
      </tags>
  </entry>
  <entry>
    <title>七、图片</title>
    <url>/post/8e1f5cb3.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="1-响应式图片"><a href="#1-响应式图片" class="headerlink" title="1  响应式图片"></a>1 响应式图片</h1><p>在 Bootstrap 版本 3 中，通过为图片添加 <code>.img-responsive</code> 类可以让图片支持响应式布局。其实质是为图片设置了 <code>max-width: 100%;</code>、 <code>height: auto;</code> 和 <code>display: block;</code> 属性，从而让图片在其父元素中更好的缩放。</p><p>不加 <code>.img-responsive</code> 类名的图片，如果这个图片比浏览器要大，那它会出现滚动条。加了 <code>.img-responsive</code> 类名，图片的宽度会等于浏览器的宽度。</p><p>如果需要让使用了 <code>.img-responsive</code> 类的图片水平居中，请使用 <code>.center-block</code> 类，不要用 <code>.text-center</code>。 请参考助手类章节 了解更多关于 <code>.center-block</code> 的用法。</p><p>SVG 图像和 IE 8-10：</p><p>在 <code>Internet Explorer 8-10</code> 中，设置为 <code>.img-responsive</code> 的 <code>SVG</code> 图像显示出的尺寸不匀称。为了解决这个问题，在出问题的地方添加 <code>width: 100% \9;</code> 即可。<code>Bootstrap</code> 并没有自动为所有图像元素设置这一属性，因为这会导致其他图像格式出现错乱。</p><h1 id="2-图片形状"><a href="#2-图片形状" class="headerlink" title="2  图片形状"></a>2 图片形状</h1><p>通过为 <code>&lt;img&gt;</code> 元素添加以下相应的类，可以让图片呈现不同的形状。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">"..."</span> <span class="attribute">alt</span>=<span class="string">"..."</span> <span class="attribute">class</span>=<span class="string">"img-rounded"</span>&gt;  圆角</span><br><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">"..."</span> <span class="attribute">alt</span>=<span class="string">"..."</span> <span class="attribute">class</span>=<span class="string">"img-circle"</span>&gt;  园</span><br><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">"..."</span> <span class="attribute">alt</span>=<span class="string">"..."</span> <span class="attribute">class</span>=<span class="string">"img-thumbnail"</span>&gt;  双线</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NvXnl8.png" alt="NvXnl8.png"></p><p>跨浏览器兼容性</p><p>请时刻牢记：</p><blockquote><p>Internet Explorer 8 不支持 CSS3 中的圆角属性。</p></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bootstrap</tag>
        <tag>图片</tag>
      </tags>
  </entry>
  <entry>
    <title>六、按钮</title>
    <url>/post/7f62a27c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><h1 id="1-可作为按钮使用的标签或元素"><a href="#1-可作为按钮使用的标签或元素" class="headerlink" title="1  可作为按钮使用的标签或元素"></a>1 可作为按钮使用的标签或元素</h1><p>为 <code>&lt;a&gt;</code>、<code>&lt;button&gt;</code> 或 <code>&lt;input&gt;</code> 元素添加按钮类 <code>.btn</code> 即可使用 <code>Bootstrap</code> 提供的样式。</p><p>为元素添加 <code>.btn</code> 和 <code>.btn-default</code> 类可完成按钮样式。</p><blockquote><p><code>.btn</code> 是按钮通用样式（基类）。</p></blockquote><blockquote><p><code>.btn-default</code> 是它的增强样式。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;a <span class="attribute">class</span>=<span class="string">"btn btn-default"</span> <span class="attribute">href</span>=<span class="string">"#"</span> <span class="attribute">role</span>=<span class="string">"button"</span>&gt;Link&lt;/a&gt;</span><br><span class="line">&lt;button <span class="attribute">class</span>=<span class="string">"btn btn-default"</span> <span class="attribute">type</span>=<span class="string">"submit"</span>&gt;Button&lt;/button&gt;</span><br><span class="line">&lt;input <span class="attribute">class</span>=<span class="string">"btn btn-default"</span> <span class="attribute">type</span>=<span class="string">"button"</span> <span class="attribute">value</span>=<span class="string">"Input"</span>&gt;</span><br><span class="line">&lt;input <span class="attribute">class</span>=<span class="string">"btn btn-default"</span> <span class="attribute">type</span>=<span class="string">"submit"</span> <span class="attribute">value</span>=<span class="string">"Submit"</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NvoID1.png" alt="NvoID1.png"></p><h2 id="1-1-针对组件的注意事项"><a href="#1-1-针对组件的注意事项" class="headerlink" title="1.1  针对组件的注意事项"></a>1.1 针对组件的注意事项</h2><p>虽然按钮类可以应用到 <code>&lt;a&gt;</code> 和 <code>&lt;button&gt;</code> 元素上，但是，导航和导航条组件只支持 <code>&lt;button&gt;</code> 元素。</p><h2 id="1-2-链接被作为按钮使用时的注意事项"><a href="#1-2-链接被作为按钮使用时的注意事项" class="headerlink" title="1.2  链接被作为按钮使用时的注意事项"></a>1.2 链接被作为按钮使用时的注意事项</h2><p>如果 <code>&lt;a&gt;</code> 元素被作为按钮使用 – <code>并用于在当前页面触发某些功能</code> – 而不是用于链接其他页面或链接当前页面中的其他部分，那么，务必为其设置 <code>role=&quot;button&quot;</code> 属性。</p><h2 id="1-3-跨浏览器展现"><a href="#1-3-跨浏览器展现" class="headerlink" title="1.3  跨浏览器展现"></a>1.3 跨浏览器展现</h2><p>我们总结的最佳实践是：强烈建议尽可能使用 <code>&lt;button&gt;</code> 元素来获得在各个浏览器上获得相匹配的绘制效果。</p><p>另外，我们还发现了 <code>Firefox &lt;30</code> 版本的浏览器上出现的一个 <code>bug</code>，其表现是：阻止我们为基于 <code>&lt;input&gt;</code> 元素所创建的按钮设置 <code>line-height</code> 属性，这就导致在 <code>Firefox</code> 浏览器上不能完全和其他按钮保持一致的高度。</p><h1 id="2-预定义样式"><a href="#2-预定义样式" class="headerlink" title="2  预定义样式"></a>2 预定义样式</h1><p>使用下面列出的类可以快速创建一个带有预定义样式的按钮。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Standard button 标准按钮--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>（默认样式）Default<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Provides extra visual weight and identifies the primary action in a set of buttons </span></span><br><span class="line"><span class="comment">  提供额外的视觉权重并标识一组按钮中的主要操作--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>（首选项）Primary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates a successful or positive action</span></span><br><span class="line"><span class="comment">表示成功或积极的行动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span>&gt;</span>（成功）Success<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Contextual button for informational alert messages </span></span><br><span class="line"><span class="comment">信息警报消息的上下文按钮--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-info"</span>&gt;</span>（一般信息）Info<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates caution should be taken with this action </span></span><br><span class="line"><span class="comment">表示此操作应小心--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-warning"</span>&gt;</span>（警告）Warning<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Indicates a dangerous or potentially negative action </span></span><br><span class="line"><span class="comment">表示危险或潜在的负面行为--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-danger"</span>&gt;</span>（危险）Danger<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Deemphasize a button by making it look like a link while maintaining button behavior</span></span><br><span class="line"><span class="comment">在保持按钮行为的同时使其看起来像一个链接，从而不强调按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-link"</span>&gt;</span>（链接）Link<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NvozDI.png" alt="NvozDI.png"></p><h2 id="2-1-Conveying-meaning-to-assistive-technologies"><a href="#2-1-Conveying-meaning-to-assistive-technologies" class="headerlink" title="2.1  Conveying meaning to assistive technologies"></a>2.1 Conveying meaning to assistive technologies</h2><p>Conveying meaning to assistive technologies 向辅助技术传达意义</p><p>为按钮添加不同的颜色只是一种视觉上的信息表达方式，但是，对于使用辅助技术 – 例如屏幕阅读器 – 的用户来说，颜色是不可见的。建议，确保通过颜色表达的信息或者通过内容自身表达出来（按钮上的文字），或者通过其他方式 – 例如<code>通过 .sr-only 类隐藏的额外文本</code> – 表达出来。</p><h1 id="3-尺寸"><a href="#3-尺寸" class="headerlink" title="3  尺寸"></a>3 尺寸</h1><p>需要让按钮具有不同尺寸吗？使用 <code>.btn-lg</code>、<code>.btn-sm</code> 或 <code>.btn-xs</code> 就可以获得不同尺寸的按钮。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary btn-lg"</span>&gt;（大按钮）<span class="type">Large</span> button&lt;/button&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default btn-lg"</span>&gt;（大按钮）<span class="type">Large</span> button&lt;/button&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span>&gt;（默认尺寸）<span class="type">Default</span> button&lt;/button&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span>&gt;（默认尺寸）<span class="type">Default</span> button&lt;/button&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary btn-sm"</span>&gt;（小按钮）<span class="type">Small</span> button&lt;/button&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default btn-sm"</span>&gt;（小按钮）<span class="type">Small</span> button&lt;/button&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary btn-xs"</span>&gt;（超小尺寸）<span class="type">Extra</span> small button&lt;/button&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default btn-xs"</span>&gt;（超小尺寸）<span class="type">Extra</span> small button&lt;/button&gt;</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NvTHLn.png" alt="NvTHLn.png"></p><p>通过给按钮添加 <code>.btn-block</code> 类可以将其<code>拉伸至父元素100%的宽度</code>，而且按钮也变为了块级（block）元素。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary btn-lg btn-block"</span>&gt;（块级元素）<span class="type">Block</span> level button&lt;/button&gt;</span><br><span class="line">&lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default btn-lg btn-block"</span>&gt;（块级元素）<span class="type">Block</span> level button&lt;/button&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NvH5uj.png" alt="NvH5uj.png"></p><h1 id="4-激活状态"><a href="#4-激活状态" class="headerlink" title="4  激活状态"></a>4 激活状态</h1><p>当按钮处于激活状态时，其表现为被按压下去（底色更深、边框夜色更深、向内投射阴影）。对于 <code>&lt;button&gt;</code> 元素，是通过 <code>:active</code> 状态实现的。对于 <code>&lt;a&gt;</code> 元素，是通过 <code>.active</code> 类实现的。然而，你还可以将 <code>.active</code> 应用到 <code>&lt;button&gt;</code> 上（包含 <code>aria-pressed=&quot;true&quot;</code> 属性)），并通过编程的方式使其处于激活状态。</p><h2 id="4-1-button-元素"><a href="#4-1-button-元素" class="headerlink" title="4.1  button 元素"></a>4.1 button 元素</h2><p>由于 <code>:active</code> 是伪状态，因此无需额外添加，但是在需要让其表现出同样外观的时候可以添加 <code>.active</code> 类。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary btn-lg active"</span>&gt;<span class="type">Primary</span> button&lt;/button&gt;</span><br><span class="line">&lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default btn-lg active"</span>&gt;<span class="type">Button</span>&lt;/button&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NvHzr9.png" alt="NvHzr9.png"></p><h2 id="4-2-链接（-lt-a-gt-）元素"><a href="#4-2-链接（-lt-a-gt-）元素" class="headerlink" title="4.2  链接（&lt;a&gt;）元素"></a>4.2 链接（<code>&lt;a&gt;</code>）元素</h2><p>可以为基于 <code>&lt;a&gt;</code> 元素创建的按钮添加 <code>.active</code> 类。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;a href="#" <span class="keyword">class</span>="btn btn-primary btn-lg active" <span class="keyword">role</span>="button"&gt;<span class="keyword">Primary</span> link&lt;/a&gt;</span><br><span class="line">&lt;a href="#" <span class="keyword">class</span>="btn btn-default btn-lg active" <span class="keyword">role</span>="button"&gt;Link&lt;/a&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/Nvbaaq.png" alt="Nvbaaq.png"></p><h1 id="5-禁用状态"><a href="#5-禁用状态" class="headerlink" title="5  禁用状态"></a>5 禁用状态</h1><p>通过为按钮的背景设置 <code>opacity</code> 属性就可以呈现出无法点击的效果。</p><h2 id="5-1-button-元素"><a href="#5-1-button-元素" class="headerlink" title="5.1  button 元素"></a>5.1 button 元素</h2><p>为 <code>&lt;button&gt;</code> 元素添加 <code>disabled</code> 属性，使其表现出禁用状态。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-lg btn-primary"</span> disabled=<span class="string">"disabled"</span>&gt;<span class="type">Primary</span> button&lt;/button&gt;</span><br><span class="line">&lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default btn-lg"</span> disabled=<span class="string">"disabled"</span>&gt;<span class="type">Button</span>&lt;/button&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/Nvb6sJ.png" alt="Nvb6sJ.png"></p><h3 id="5-1-1-跨浏览器兼容性"><a href="#5-1-1-跨浏览器兼容性" class="headerlink" title="5.1.1  跨浏览器兼容性"></a>5.1.1 跨浏览器兼容性</h3><p>如果为 <code>&lt;button&gt;</code> 元素添加 <code>disabled</code> 属性，<code>Internet Explorer 9</code> 及更低版本的浏览器将会把按钮中的文本绘制为灰色，并带有恶心的阴影，目前还没有解决办法。</p><h2 id="5-2-链接（-lt-a-gt-）元素"><a href="#5-2-链接（-lt-a-gt-）元素" class="headerlink" title="5.2  链接（&lt;a&gt;）元素"></a>5.2 链接（<code>&lt;a&gt;</code>）元素</h2><p>为基于 <code>&lt;a&gt;</code> 元素创建的按钮添加 <code>.disabled</code> 类。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;a href="#" <span class="keyword">class</span>="btn btn-primary btn-lg disabled" <span class="keyword">role</span>="button"&gt;<span class="keyword">Primary</span> link&lt;/a&gt;</span><br><span class="line">&lt;a href="#" <span class="keyword">class</span>="btn btn-default btn-lg disabled" <span class="keyword">role</span>="button"&gt;Link&lt;/a&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/04/NvqVYV.png" alt="NvqVYV.png"></p><p>我们把 <code>.disabled</code> 作为工具类使用，就像 <code>.active</code> 类一样，因此不需要增加前缀。</p><h3 id="5-2-1-链接的原始功能不受影响"><a href="#5-2-1-链接的原始功能不受影响" class="headerlink" title="5.2.1  链接的原始功能不受影响"></a>5.2.1 链接的原始功能不受影响</h3><p>上面提到的类只是通过设置 <code>pointer-events: none</code> 来禁止 <code>&lt;a&gt;</code> 元素作为链接的原始功能，但是，这一 <code>CSS</code> 属性并没有被标准化，并且 <code>Opera 18</code> 及更低版本的浏览器并没有完全支持这一属性，同样，<code>Internet Explorer 11</code> 也不支持。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bootstrap</tag>
        <tag>按钮</tag>
      </tags>
  </entry>
  <entry>
    <title>五、表单</title>
    <url>/post/a52da47b.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><h1 id="1-基本实例"><a href="#1-基本实例" class="headerlink" title="1  基本实例"></a>1 基本实例</h1><p>单独的表单控件会被自动赋予一些全局样式。所有设置了 <code>.form-control</code> 类的 <code>&lt;input&gt;</code>、<code>&lt;textarea&gt;</code> 和 <code>&lt;select&gt;</code> 元素都将被默认设置宽度属性为 <code>width: 100%;</code>。 将 <code>label</code> 元素和前面提到的控件包裹在 <code>.form-group</code> 中可以获得最好的排列。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span>&gt;</span><br><span class="line">  &lt;div <span class="keyword">class</span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">label</span> <span class="keyword">for</span>=<span class="string">"exampleInputEmail1"</span>&gt;Email address&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"email"</span> <span class="keyword">class</span>=<span class="string">"form-control"</span> id=<span class="string">"exampleInputEmail1"</span> placeholder=<span class="string">"Email"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="keyword">class</span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">label</span> <span class="keyword">for</span>=<span class="string">"exampleInputPassword1"</span>&gt;Password&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"password"</span> <span class="keyword">class</span>=<span class="string">"form-control"</span> id=<span class="string">"exampleInputPassword1"</span> placeholder=<span class="string">"Password"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="keyword">class</span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">label</span> <span class="keyword">for</span>=<span class="string">"exampleInputFile"</span>&gt;<span class="keyword">File</span> <span class="keyword">input</span>&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"file"</span> id=<span class="string">"exampleInputFile"</span>&gt;</span><br><span class="line">    &lt;p <span class="keyword">class</span>=<span class="string">"help-block"</span>&gt;Example block-level <span class="keyword">help</span> text here.&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="keyword">class</span>=<span class="string">"checkbox"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">label</span>&gt;</span><br><span class="line">      &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"checkbox"</span>&gt; Check me <span class="keyword">out</span></span><br><span class="line">    &lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;button <span class="keyword">type</span>=<span class="string">"submit"</span> <span class="keyword">class</span>=<span class="string">"btn btn-default"</span>&gt;Submit&lt;/button&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjurY6.png" alt="NjurY6.png"></p><p>不要将表单组直接和输入框组混合使用。建议将输入框组嵌套到表单组中使用。</p><h1 id="2-内联表单"><a href="#2-内联表单" class="headerlink" title="2  内联表单"></a>2 内联表单</h1><p>为 <code>&lt;form&gt;</code> 元素添加 <code>.form-inline</code> 类可使其内容左对齐并且表现为 <code>inline-block</code> 级别的控件。只适用于视口（<code>viewport</code>）至少在 <code>768px</code> 宽度时（视口宽度再小的话就会使表单折叠）。</p><h2 id="2-1-可能需要手动设置宽度"><a href="#2-1-可能需要手动设置宽度" class="headerlink" title="2.1  可能需要手动设置宽度"></a>2.1 可能需要手动设置宽度</h2><p>在 <code>Bootstrap</code> 中，输入框和单选/多选框控件默认被设置为 <code>width: 100%;</code> 宽度。在内联表单，我们将这些元素的宽度设置为 <code>width: auto;</code>，因此，多个控件可以排列在同一行。根据你的布局需求，可能需要一些额外的定制化组件。</p><h2 id="2-2-一定要添加-label-标签"><a href="#2-2-一定要添加-label-标签" class="headerlink" title="2.2  一定要添加 label 标签"></a>2.2 一定要添加 <code>label</code> 标签</h2><p>如果你没有为每个输入控件设置 <code>label</code> 标签，屏幕阅读器将无法正确识别。对于这些内联表单，你可以通过为 <code>label</code> 设置 <code>.sr-only</code> 类将其隐藏。还有一些辅助技术提供<code>label</code>标签的替代方案，比如 <code>aria-label</code>、<code>aria-labelledby</code> 或 <code>title</code> 属性。如果这些都不存在，屏幕阅读器可能会采取使用 <code>placeholder</code> 属性，如果存在的话，使用占位符来替代其他的标记，但要注意，这种方法是<code>不妥当</code>的。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-inline"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"exampleInputName2"</span>&gt;<span class="type">Name</span>&lt;/label&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"exampleInputName2"</span> placeholder=<span class="string">"Jane Doe"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"exampleInputEmail2"</span>&gt;<span class="type">Email</span>&lt;/label&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"email"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"exampleInputEmail2"</span> placeholder=<span class="string">"jane.doe@example.com"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span>&gt;<span class="type">Send</span> invitation&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/Nju7p8.png" alt="Nju7p8.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-inline"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span> <span class="keyword">for</span>=<span class="string">"exampleInputEmail3"</span>&gt;<span class="type">Email</span> address&lt;/label&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"email"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"exampleInputEmail3"</span> placeholder=<span class="string">"Email"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span> <span class="keyword">for</span>=<span class="string">"exampleInputPassword3"</span>&gt;<span class="type">Password</span>&lt;/label&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"password"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"exampleInputPassword3"</span> placeholder=<span class="string">"Password"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkbox"</span>&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"checkbox"</span>&gt; <span class="type">Remember</span> me</span><br><span class="line">    &lt;/label&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span>&gt;<span class="type">Sign</span> in&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjKC1U.png" alt="NjKC1U.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-inline"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span> <span class="keyword">for</span>=<span class="string">"exampleInputAmount"</span>&gt;<span class="type">Amount</span> (in dollars)&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"input-group"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"input-group-addon"</span>&gt;$&lt;/div&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"exampleInputAmount"</span> placeholder=<span class="string">"Amount"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"input-group-addon"</span>&gt;<span class="number">.00</span>&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span>&gt;<span class="type">Transfer</span> cash&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjKiX4.png" alt="NjKiX4.png"></p><h1 id="3-水平排列的表单"><a href="#3-水平排列的表单" class="headerlink" title="3  水平排列的表单"></a>3 水平排列的表单</h1><p>通过为表单添加 <code>.form-horizontal</code> 类，并联合使用 <code>Bootstrap</code> 预置的栅格类，可以将 <code>label</code> 标签和控件组水平并排布局。这样做将改变 <code>.form-group</code> 的行为，使其表现为栅格系统中的行（row），因此就无需再额外添加 <code>.row</code> 了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-horizontal"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"inputEmail3"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;<span class="type">Email</span>&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"email"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputEmail3"</span> placeholder=<span class="string">"Email"</span>&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"inputPassword3"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;<span class="type">Password</span>&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"password"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputPassword3"</span> placeholder=<span class="string">"Password"</span>&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-offset-2 col-sm-10"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"checkbox"</span>&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"checkbox"</span>&gt; <span class="type">Remember</span> me</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-offset-2 col-sm-10"</span>&gt;</span><br><span class="line">      &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span>&gt;<span class="type">Sign</span> in&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjKE7R.png" alt="NjKE7R.png"></p><h1 id="4-被支持的控件"><a href="#4-被支持的控件" class="headerlink" title="4  被支持的控件"></a>4 被支持的控件</h1><p>表单布局实例中展示了其所支持的标准表单控件。</p><h2 id="4-1-输入框"><a href="#4-1-输入框" class="headerlink" title="4.1  输入框"></a>4.1 输入框</h2><p>包括大部分表单控件、文本输入域控件，还支持所有 <code>HTML5</code> 类型的输入控件： <code>text</code>、<code>password</code>、<code>datetime</code>、<code>datetime-local</code>、<code>date</code>、<code>month</code>、<code>time</code>、<code>week</code>、<code>number</code>、<code>email</code>、<code>url</code>、<code>search</code>、<code>tel</code> 和 <code>color</code>。</p><p>必须添加类型声明:</p><p>只有正确设置了 type 属性的输入控件才能被赋予正确的样式。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">"text"</span> <span class="attribute">class</span>=<span class="string">"form-control"</span> <span class="attribute">placeholder</span>=<span class="string">"Text input"</span>&gt;</span><br></pre></td></tr></table></figure></div><p>输入控件组:</p><p>如需在文本输入域 <code>&lt;input&gt;</code> 前面或后面添加文本内容或按钮控件，请参考输入控件组。</p><h2 id="4-2-文本域"><a href="#4-2-文本域" class="headerlink" title="4.2  文本域"></a>4.2 文本域</h2><p>支持多行文本的表单控件。可根据需要改变 <code>rows</code> 属性。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;textarea <span class="attribute">class</span>=<span class="string">"form-control"</span> <span class="attribute">rows</span>=<span class="string">"3"</span>&gt;&lt;/textarea&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjK6Nq.png" alt="NjK6Nq.png"></p><h2 id="4-3-多选和单选框"><a href="#4-3-多选和单选框" class="headerlink" title="4.3  多选和单选框"></a>4.3 多选和单选框</h2><p>多选框（<code>checkbox</code>）用于选择列表中的一个或多个选项，而单选框（<code>radio</code>）用于从多个选项中只选择一个。</p><p>支持禁用的复选框和单选框，但要在父项<code>&lt;label&gt;</code>悬停时提供“<code>不允许</code>”光标，需要将<code>.Disabled</code>类添加到父项<code>.radio</code>、<code>.radio inline</code>、<code>.checkbox</code>或<code>.checkbox inline</code>。</p><h3 id="4-3-1-默认外观（堆叠在一起）"><a href="#4-3-1-默认外观（堆叠在一起）" class="headerlink" title="4.3.1  默认外观（堆叠在一起）"></a>4.3.1 默认外观（堆叠在一起）</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"checkbox"</span>&gt;</span><br><span class="line">  &lt;label&gt;</span><br><span class="line">    &lt;input type=<span class="string">"checkbox"</span> value=<span class="string">""</span>&gt;</span><br><span class="line">    Option one <span class="keyword">is</span> this <span class="keyword">and</span> <span class="keyword">that</span>&amp;mdash;be sure <span class="keyword">to</span> include why <span class="keyword">it</span>'s great选择一是这个，那一定要包括为什么它是伟大的</span><br><span class="line">  &lt;/label&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"checkbox disabled"</span>&gt;</span><br><span class="line">  &lt;label&gt;</span><br><span class="line">    &lt;input type=<span class="string">"checkbox"</span> value=<span class="string">""</span> disabled&gt;</span><br><span class="line">    Option two <span class="keyword">is</span> disabled选项二被禁用</span><br><span class="line">  &lt;/label&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"radio"</span>&gt;</span><br><span class="line">  &lt;label&gt;</span><br><span class="line">    &lt;input type=<span class="string">"radio"</span> <span class="built_in">name</span>=<span class="string">"optionsRadios"</span> <span class="built_in">id</span>=<span class="string">"optionsRadios1"</span> value=<span class="string">"option1"</span> checked&gt;</span><br><span class="line">    Option one <span class="keyword">is</span> this <span class="keyword">and</span> <span class="keyword">that</span>&amp;mdash;be sure <span class="keyword">to</span> include why <span class="keyword">it</span>'s great</span><br><span class="line">  &lt;/label&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"radio"</span>&gt;</span><br><span class="line">  &lt;label&gt;</span><br><span class="line">    &lt;input type=<span class="string">"radio"</span> <span class="built_in">name</span>=<span class="string">"optionsRadios"</span> <span class="built_in">id</span>=<span class="string">"optionsRadios2"</span> value=<span class="string">"option2"</span>&gt;</span><br><span class="line">    Option two can be something <span class="keyword">else</span> <span class="keyword">and</span> selecting <span class="keyword">it</span> will deselect option one选项<span class="number">2</span>可以是其他选项，选择它将取消选择选项<span class="number">1</span></span><br><span class="line">  &lt;/label&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"radio disabled"</span>&gt;</span><br><span class="line">  &lt;label&gt;</span><br><span class="line">    &lt;input type=<span class="string">"radio"</span> <span class="built_in">name</span>=<span class="string">"optionsRadios"</span> <span class="built_in">id</span>=<span class="string">"optionsRadios3"</span> value=<span class="string">"option3"</span> disabled&gt;</span><br><span class="line">    Option three <span class="keyword">is</span> disabled选项 <span class="number">3</span> 被禁用</span><br><span class="line">  &lt;/label&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjKL8K.png" alt="NjKL8K.png"></p><h3 id="4-3-2-内联单选和多选框"><a href="#4-3-2-内联单选和多选框" class="headerlink" title="4.3.2  内联单选和多选框"></a>4.3.2 内联单选和多选框</h3><p>通过将 <code>.checkbox-inline</code> 或 <code>.radio-inline</code> 类应用到一系列的多选框（<code>checkbox</code>）或单选框（<code>radio</code>）控件上，可以使这些控件排列在一行。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">label</span> <span class="keyword">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"checkbox"</span> id=<span class="string">"inlineCheckbox1"</span> value=<span class="string">"option1"</span>&gt; 1</span><br><span class="line">&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">&lt;<span class="keyword">label</span> <span class="keyword">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"checkbox"</span> id=<span class="string">"inlineCheckbox2"</span> value=<span class="string">"option2"</span>&gt; 2</span><br><span class="line">&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">&lt;<span class="keyword">label</span> <span class="keyword">class</span>=<span class="string">"checkbox-inline"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"checkbox"</span> id=<span class="string">"inlineCheckbox3"</span> value=<span class="string">"option3"</span>&gt; 3</span><br><span class="line">&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="keyword">label</span> <span class="keyword">class</span>=<span class="string">"radio-inline"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"inlineRadioOptions"</span> id=<span class="string">"inlineRadio1"</span> value=<span class="string">"option1"</span>&gt; 1</span><br><span class="line">&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">&lt;<span class="keyword">label</span> <span class="keyword">class</span>=<span class="string">"radio-inline"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"inlineRadioOptions"</span> id=<span class="string">"inlineRadio2"</span> value=<span class="string">"option2"</span>&gt; 2</span><br><span class="line">&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">&lt;<span class="keyword">label</span> <span class="keyword">class</span>=<span class="string">"radio-inline"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"inlineRadioOptions"</span> id=<span class="string">"inlineRadio3"</span> value=<span class="string">"option3"</span>&gt; 3</span><br><span class="line">&lt;/<span class="keyword">label</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjKvKe.png" alt="NjKvKe.png"></p><h3 id="4-3-3-不带label文本的Checkbox-和-radio"><a href="#4-3-3-不带label文本的Checkbox-和-radio" class="headerlink" title="4.3.3  不带label文本的Checkbox 和 radio"></a>4.3.3 不带<code>label</code>文本的<code>Checkbox</code> 和 <code>radio</code></h3><p>如果需要 <code>&lt;label&gt;</code> 内没有文字，输入框（<code>input</code>）正是你所期望的。 目前只适用于非内联的 <code>checkbox</code> 和 <code>radio</code>。 请记住，仍然需要为使用辅助技术的用户提供某种形式的 <code>label</code>（例如，使用 <code>aria-label</code>）。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">"checkbox"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">label</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"checkbox"</span> id=<span class="string">"blankCheckbox"</span> value=<span class="string">"option1"</span> aria-<span class="keyword">label</span>=<span class="string">"..."</span>&gt;</span><br><span class="line">  &lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div <span class="keyword">class</span>=<span class="string">"radio"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">label</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"blankRadio"</span> id=<span class="string">"blankRadio1"</span> value=<span class="string">"option1"</span> aria-<span class="keyword">label</span>=<span class="string">"..."</span>&gt;</span><br><span class="line">  &lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjMiPP.png" alt="NjMiPP.png"></p><h2 id="4-4-下拉列表（select）"><a href="#4-4-下拉列表（select）" class="headerlink" title="4.4  下拉列表（select）"></a>4.4 下拉列表（<code>select</code>）</h2><p>注意，很多原生选择菜单 - 即在 <code>Safari</code> 和 <code>Chrome</code> 中 - 的圆角是无法通过修改 <code>border-radius</code> 属性来改变的。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">select</span> <span class="keyword">class</span>="form-control"&gt;</span><br><span class="line">  &lt;<span class="keyword">option</span>&gt;<span class="number">1</span>&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">option</span>&gt;<span class="number">2</span>&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">option</span>&gt;<span class="number">3</span>&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">option</span>&gt;<span class="number">4</span>&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">option</span>&gt;<span class="number">5</span>&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjMebj.png" alt="NjMebj.png"></p><p>对于标记了 <code>multiple</code> 属性的 <code>&lt;select&gt;</code> 控件来说，默认显示多选项。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">select</span> multiple <span class="keyword">class</span>="form-control"&gt;</span><br><span class="line">  &lt;<span class="keyword">option</span>&gt;<span class="number">1</span>&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">option</span>&gt;<span class="number">2</span>&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">option</span>&gt;<span class="number">3</span>&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">option</span>&gt;<span class="number">4</span>&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">option</span>&gt;<span class="number">5</span>&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjMK5q.png" alt="NjMK5q.png"></p><h1 id="5-静态控件"><a href="#5-静态控件" class="headerlink" title="5  静态控件"></a>5 静态控件</h1><p>如果需要在表单中将一行纯文本和 <code>label</code> 元素放置于同一行，为 <code>&lt;p&gt;</code> 元素添加 <code>.form-control-static</code> 类即可。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-horizontal"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;<span class="type">Email</span>&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">      &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control-static"</span>&gt;email<span class="meta">@example</span>.com&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"inputPassword"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span>&gt;<span class="type">Password</span>&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"password"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputPassword"</span> placeholder=<span class="string">"Password"</span>&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjMqds.png" alt="NjMqds.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-inline"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;<span class="type">Email</span>&lt;/label&gt;</span><br><span class="line">    &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control-static"</span>&gt;email<span class="meta">@example</span>.com&lt;/p&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;label <span class="keyword">for</span>=<span class="string">"inputPassword2"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;<span class="type">Password</span>&lt;/label&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"password"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputPassword2"</span> placeholder=<span class="string">"Password"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;button <span class="class"><span class="keyword">type</span></span>=<span class="string">"submit"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span>&gt;<span class="type">Confirm</span> identity&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjQGfP.png" alt="NjQGfP.png"></p><h1 id="6-焦点状态"><a href="#6-焦点状态" class="headerlink" title="6  焦点状态"></a>6 焦点状态</h1><p>我们将某些表单控件的默认 <code>outline</code> 样式移除，然后对 <code>:focus</code> 状态赋予 <code>box-shadow</code> 属性。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span>&gt;</span><br><span class="line">      &lt;<span class="keyword">input</span> <span class="keyword">class</span>=<span class="string">"form-control"</span> id=<span class="string">"focusedInput"</span> <span class="keyword">type</span>=<span class="string">"text"</span> value=<span class="string">"Demonstrative focus state"</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjlxrF.png" alt="NjlxrF.png"></p><h1 id="7-禁用状态"><a href="#7-禁用状态" class="headerlink" title="7  禁用状态"></a>7 禁用状态</h1><p>为输入框设置 <code>disabled</code> 属性可以禁止其与用户有任何交互（焦点、输入等）。被禁用的输入框颜色更浅，并且还添加了 <code>not-allowed</code> 鼠标状态。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span>&gt;</span><br><span class="line">      &lt;<span class="keyword">input</span> <span class="keyword">class</span>=<span class="string">"form-control"</span> id=<span class="string">"disabledInput"</span> <span class="keyword">type</span>=<span class="string">"text"</span> placeholder=<span class="string">"Disabled input here…"</span> disabled=<span class="string">""</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/Nj1k26.png" alt="Nj1k26.png"></p><h2 id="7-1-被禁用的-fieldset"><a href="#7-1-被禁用的-fieldset" class="headerlink" title="7.1  被禁用的 fieldset"></a>7.1 被禁用的 <code>fieldset</code></h2><p>为<code>&lt;fieldset&gt;</code> 设置 <code>disabled</code> 属性,可以禁用 <code>&lt;fieldset&gt;</code> 中包含的所有控件。</p><h2 id="7-2-lt-a-gt-标签的链接功能不受影响"><a href="#7-2-lt-a-gt-标签的链接功能不受影响" class="headerlink" title="7.2  &lt;a&gt; 标签的链接功能不受影响 :"></a>7.2 <code>&lt;a&gt;</code> 标签的链接功能不受影响 :</h2><p>默认情况下，浏览器会将 <code>&lt;fieldset disabled&gt;</code> 内所有的原生的表单控件（<code>&lt;input&gt;</code>、<code>&lt;select&gt;</code> 和 <code>&lt;button&gt;</code> 元素）设置为禁用状态，防止键盘和鼠标与他们交互。然而，如果表单中还包含 <code>&lt;a ... class=&quot;btn btn-*&quot;&gt;</code> 元素，这些元素将只被赋予 <code>pointer-events: none</code> 属性。正如在关于 <code>禁用状态的按钮</code> 章节中（尤其是关于锚点元素的子章节中）所描述的那样，该 CSS 属性尚不规范，并且在 <code>Opera 18</code> 及更低版本的浏览器或 <code>Internet Explorer 11</code> 总没有得到全面支持，并且不会阻止键盘用户能够获取焦点或激活这些链接。所以为了安全起见，建议使用自定义 <code>JavaScript</code> 来禁用这些链接。</p><h2 id="7-3-跨浏览器兼容性"><a href="#7-3-跨浏览器兼容性" class="headerlink" title="7.3  跨浏览器兼容性"></a>7.3 跨浏览器兼容性</h2><p>虽然 <code>Bootstrap</code> 会将这些样式应用到所有浏览器上，<code>Internet Explorer 11</code> 及以下浏览器中的 <code>&lt;fieldset&gt;</code> 元素并不完全支持 <code>disabled</code> 属性。因此建议在这些浏览器上通过 <code>JavaScript</code> 代码来禁用 <code>&lt;fieldset&gt;</code>。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">fieldset</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"disabledTextInput"</span>&gt;</span>Disabled input<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"disabledTextInput"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Disabled input"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"disabledSelect"</span>&gt;</span>Disabled select menu<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"disabledSelect"</span> <span class="attr">class</span>=<span class="string">"form-control"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span>&gt;</span>Disabled select<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"checkbox"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>&gt;</span> Can't check this</span><br><span class="line">      <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/Nj32X8.png" alt="Nj32X8.png"></p><h1 id="8-只读状态"><a href="#8-只读状态" class="headerlink" title="8  只读状态"></a>8 只读状态</h1><p>为输入框设置 <code>readonly</code> 属性可以禁止用户修改输入框中的内容。处于只读状态的输入框颜色更浅（就像被禁用的输入框一样），但是仍然保留标准的鼠标状态。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> placeholder=<span class="string">"Readonly input here…"</span> readonly&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/Nj3Its.png" alt="Nj3Its.png"></p><h1 id="9-Help-text"><a href="#9-Help-text" class="headerlink" title="9  Help text"></a>9 Help text</h1><blockquote><p>Block level help text for form controls. 窗体控件的块级帮助文本</p></blockquote><blockquote><p>Associating help text with form controls将帮助文本与表单控件关联</p></blockquote><p>帮助文本应该显式地与表单控件关联，该控件与使用<code>aria-describedby</code>属性（<code>aria-describedby=&quot;helpBlock&quot;</code>）相关。这将确保辅助技术（如屏幕阅读器）在用户聚焦或进入控件时公布此帮助文本。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span>&gt;</span><br><span class="line">  &lt;div <span class="keyword">class</span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">label</span> <span class="keyword">for</span>=<span class="string">"inputHelpBlock"</span>&gt;<span class="keyword">Input</span> with <span class="keyword">help</span> text输入帮助文本&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"text"</span> id=<span class="string">"inputHelpBlock"</span> <span class="keyword">class</span>=<span class="string">"form-control"</span> aria-describedby=<span class="string">"helpBlock"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;span id=<span class="string">"helpBlock"</span> <span class="keyword">class</span>=<span class="string">"help-block"</span>&gt;A block of <span class="keyword">help</span> text that breaks onto a new <span class="keyword">line</span> and may extend beyond <span class="keyword">one</span> <span class="keyword">line</span>.一个帮助文本块，它打断成一个新行，并可能超出一行。&lt;/span&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/Nj8ijK.png" alt="Nj8ijK.png"></p><h1 id="10-校验状态"><a href="#10-校验状态" class="headerlink" title="10  校验状态"></a>10 校验状态</h1><p><code>Bootstrap</code> 对表单控件的校验状态，如 <code>error</code>、<code>warning</code> 和 <code>success</code> 状态，都定义了样式。使用时，添加 <code>.has-warning</code>、<code>.has-error</code> 或 <code>.has-success</code> 类到这些控件的父元素即可。任何包含在此元素之内的 <code>.control-label</code>、<code>.form-control</code> 和 <code>.help-block</code> 元素都将接受这些校验状态的样式。</p><h2 id="10-1-将验证状态传达给辅助设备和盲人用户"><a href="#10-1-将验证状态传达给辅助设备和盲人用户" class="headerlink" title="10.1  将验证状态传达给辅助设备和盲人用户"></a>10.1 将验证状态传达给辅助设备和盲人用户</h2><p>使用这些校验样式只是为表单控件提供一个可视的、基于色彩的提示，但是并不能将这种提示信息传达给使用辅助设备的用户 - 例如屏幕阅读器 - 或者色盲用户。</p><p>为了确保所有用户都能获取正确信息，<code>Bootstrap</code> 还提供了另一种提示方式。例如，你可以在表单控件的 <code>&lt;label&gt;</code> 标签上以文本的形式显示提示信息（就像下面代码中所展示的）；包含一个 <code>Glyphicon</code> 字体图标 （还有赋予 <code>.sr-only</code> 类的文本信息 - 参考<code>Glyphicon</code> 字体图标实例）；或者提供一个额外的 <code>辅助信息</code> 块。另外，对于使用辅助设备的用户，无效的表单控件还可以赋予一个 <code>aria-invalid=&quot;true&quot;</code> 属性。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"form-group has-success"</span>&gt;</span><br><span class="line">  &lt;label <span class="built_in">class</span>=<span class="string">"control-label"</span> <span class="keyword">for</span>=<span class="string">"inputSuccess1"</span>&gt;Input <span class="keyword">with</span> success输入成功&lt;/label&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> <span class="built_in">class</span>=<span class="string">"form-control"</span> <span class="built_in">id</span>=<span class="string">"inputSuccess1"</span> aria-describedby=<span class="string">"helpBlock2"</span>&gt;</span><br><span class="line">  &lt;span <span class="built_in">id</span>=<span class="string">"helpBlock2"</span> <span class="built_in">class</span>=<span class="string">"help-block"</span>&gt;A block <span class="keyword">of</span> help <span class="built_in">text</span> <span class="keyword">that</span> breaks <span class="keyword">onto</span> a new line <span class="keyword">and</span> may extend beyond one line.一个帮助文本块，它打断成一个新行，并可能超出一行。&lt;/span&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"form-group has-warning"</span>&gt;</span><br><span class="line">  &lt;label <span class="built_in">class</span>=<span class="string">"control-label"</span> <span class="keyword">for</span>=<span class="string">"inputWarning1"</span>&gt;Input <span class="keyword">with</span> warning带警告的输入&lt;/label&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> <span class="built_in">class</span>=<span class="string">"form-control"</span> <span class="built_in">id</span>=<span class="string">"inputWarning1"</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"form-group has-error"</span>&gt;</span><br><span class="line">  &lt;label <span class="built_in">class</span>=<span class="string">"control-label"</span> <span class="keyword">for</span>=<span class="string">"inputError1"</span>&gt;Input <span class="keyword">with</span> <span class="keyword">error</span>输入错误&lt;/label&gt;</span><br><span class="line">  &lt;input type=<span class="string">"text"</span> <span class="built_in">class</span>=<span class="string">"form-control"</span> <span class="built_in">id</span>=<span class="string">"inputError1"</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"has-success"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"checkbox"</span>&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      &lt;input type=<span class="string">"checkbox"</span> <span class="built_in">id</span>=<span class="string">"checkboxSuccess"</span> value=<span class="string">"option1"</span>&gt;</span><br><span class="line">      Checkbox <span class="keyword">with</span> success成功的复选框</span><br><span class="line">    &lt;/label&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"has-warning"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"checkbox"</span>&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      &lt;input type=<span class="string">"checkbox"</span> <span class="built_in">id</span>=<span class="string">"checkboxWarning"</span> value=<span class="string">"option1"</span>&gt;</span><br><span class="line">      Checkbox <span class="keyword">with</span> warning带警告的复选框</span><br><span class="line">    &lt;/label&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"has-error"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"checkbox"</span>&gt;</span><br><span class="line">    &lt;label&gt;</span><br><span class="line">      &lt;input type=<span class="string">"checkbox"</span> <span class="built_in">id</span>=<span class="string">"checkboxError"</span> value=<span class="string">"option1"</span>&gt;</span><br><span class="line">      Checkbox <span class="keyword">with</span> <span class="keyword">error</span>有错误的复选框</span><br><span class="line">    &lt;/label&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/Nj8dg0.png" alt="Nj8dg0.png"></p><h2 id="10-2-添加额外的图标"><a href="#10-2-添加额外的图标" class="headerlink" title="10.2  添加额外的图标"></a>10.2 添加额外的图标</h2><p>你还可以针对校验状态为输入框添加额外的图标。只需设置相应的 <code>.has-feedback</code> 类并添加正确的图标即可。</p><p>反馈图标（<code>feedback icon</code>）只能使用在文本输入框 <code>&lt;input class=&quot;form-control&quot;&gt;</code> 元素上。</p><h3 id="10-2-1-图标、label-和输入控件组"><a href="#10-2-1-图标、label-和输入控件组" class="headerlink" title="10.2.1  图标、label 和输入控件组"></a>10.2.1 图标、label 和输入控件组</h3><p>对于不带有 <code>label</code> 标签的输入框以及右侧带有附加组件的输入框组，需要手动为其图标定位。为了让所有用户都能访问你的网站，我们强烈建议为所有输入框添加 <code>label</code> 标签。如果你不希望将 <code>label</code> 标签展示出来，可以通过添加 <code>.sr-only</code> 类来实现。如果的确不能添加 <code>label</code> 标签，请调整图标的 <code>top</code> 值。对于输入框组，请根据你的实际情况调整 <code>right</code> 值。</p><h3 id="10-2-2-向辅助技术设备传递图标的含义"><a href="#10-2-2-向辅助技术设备传递图标的含义" class="headerlink" title="10.2.2  向辅助技术设备传递图标的含义"></a>10.2.2 向辅助技术设备传递图标的含义</h3><p>为了确保辅助技术- 如屏幕阅读器 - 正确传达一个图标的含义，额外的隐藏的文本应包含在 <code>.sr-only</code> 类中，并明确关联使用了 <code>aria-describedby</code> 的表单控件。或者，以某些其他形式（例如，文本输入字段有一个特定的警告信息）传达含义，例如改变与表单控件实际相关联的 <code>&lt;label&gt;</code> 的文本。</p><p>虽然下面的例子已经提到各自表单控件本身的 <code>&lt;label&gt;</code> 文本的验证状态，上述技术（使用 <code>.sr-only</code> 文本 和 <code>aria-describedby</code>) ）已经包括了需要说明的目的。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group has-success has-feedback"</span>&gt;</span><br><span class="line">  &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-label"</span> <span class="keyword">for</span>=<span class="string">"inputSuccess2"</span>&gt;<span class="type">Input</span> <span class="keyword">with</span> success&lt;/label&gt;</span><br><span class="line">  &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputSuccess2"</span> aria-describedby=<span class="string">"inputSuccess2Status"</span>&gt;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-ok form-control-feedback"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br><span class="line">  &lt;span id=<span class="string">"inputSuccess2Status"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;(success)&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group has-warning has-feedback"</span>&gt;</span><br><span class="line">  &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-label"</span> <span class="keyword">for</span>=<span class="string">"inputWarning2"</span>&gt;<span class="type">Input</span> <span class="keyword">with</span> warning&lt;/label&gt;</span><br><span class="line">  &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputWarning2"</span> aria-describedby=<span class="string">"inputWarning2Status"</span>&gt;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-warning-sign form-control-feedback"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br><span class="line">  &lt;span id=<span class="string">"inputWarning2Status"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;(warning)&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group has-error has-feedback"</span>&gt;</span><br><span class="line">  &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-label"</span> <span class="keyword">for</span>=<span class="string">"inputError2"</span>&gt;<span class="type">Input</span> <span class="keyword">with</span> error&lt;/label&gt;</span><br><span class="line">  &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputError2"</span> aria-describedby=<span class="string">"inputError2Status"</span>&gt;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-remove form-control-feedback"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br><span class="line">  &lt;span id=<span class="string">"inputError2Status"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;(error)&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group has-success has-feedback"</span>&gt;</span><br><span class="line">  &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-label"</span> <span class="keyword">for</span>=<span class="string">"inputGroupSuccess1"</span>&gt;<span class="type">Input</span> group <span class="keyword">with</span> success成功输入组&lt;/label&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"input-group"</span>&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"input-group-addon"</span>&gt;@&lt;/span&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputGroupSuccess1"</span> aria-describedby=<span class="string">"inputGroupSuccess1Status"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-ok form-control-feedback"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br><span class="line">  &lt;span id=<span class="string">"inputGroupSuccess1Status"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;(success)&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/Nj8vKf.png" alt="Nj8vKf.png"></p><h3 id="10-2-3-为水平排列的表单和内联表单设置可选的图标"><a href="#10-2-3-为水平排列的表单和内联表单设置可选的图标" class="headerlink" title="10.2.3  为水平排列的表单和内联表单设置可选的图标"></a>10.2.3 为水平排列的表单和内联表单设置可选的图标</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-horizontal"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group has-success has-feedback"</span>&gt;</span><br><span class="line">    &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-label col-sm-3"</span> <span class="keyword">for</span>=<span class="string">"inputSuccess3"</span>&gt;<span class="type">Input</span> <span class="keyword">with</span> success&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-9"</span>&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputSuccess3"</span> aria-describedby=<span class="string">"inputSuccess3Status"</span>&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-ok form-control-feedback"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br><span class="line">      &lt;span id=<span class="string">"inputSuccess3Status"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;(success)&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group has-success has-feedback"</span>&gt;</span><br><span class="line">    &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-label col-sm-3"</span> <span class="keyword">for</span>=<span class="string">"inputGroupSuccess2"</span>&gt;<span class="type">Input</span> group <span class="keyword">with</span> success&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-9"</span>&gt;</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"input-group"</span>&gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"input-group-addon"</span>&gt;@&lt;/span&gt;</span><br><span class="line">        &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputGroupSuccess2"</span> aria-describedby=<span class="string">"inputGroupSuccess2Status"</span>&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-ok form-control-feedback"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br><span class="line">      &lt;span id=<span class="string">"inputGroupSuccess2Status"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;(success)&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjGC5j.png" alt="NjGC5j.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-inline"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group has-success has-feedback"</span>&gt;</span><br><span class="line">    &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-label"</span> <span class="keyword">for</span>=<span class="string">"inputSuccess4"</span>&gt;<span class="type">Input</span> <span class="keyword">with</span> success&lt;/label&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputSuccess4"</span> aria-describedby=<span class="string">"inputSuccess4Status"</span>&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-ok form-control-feedback"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br><span class="line">    &lt;span id=<span class="string">"inputSuccess4Status"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;(success)&lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-inline"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group has-success has-feedback"</span>&gt;</span><br><span class="line">    &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-label"</span> <span class="keyword">for</span>=<span class="string">"inputGroupSuccess3"</span>&gt;<span class="type">Input</span> group <span class="keyword">with</span> success&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"input-group"</span>&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"input-group-addon"</span>&gt;@&lt;/span&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputGroupSuccess3"</span> aria-describedby=<span class="string">"inputGroupSuccess3Status"</span>&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-ok form-control-feedback"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br><span class="line">    &lt;span id=<span class="string">"inputGroupSuccess3Status"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;(success)&lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjGiPs.png" alt="NjGiPs.png"></p><h3 id="10-2-4-可选的图标与设置-sr-only-类的-label"><a href="#10-2-4-可选的图标与设置-sr-only-类的-label" class="headerlink" title="10.2.4  可选的图标与设置 .sr-only 类的 label"></a>10.2.4 可选的图标与设置 <code>.sr-only</code> 类的 <code>label</code></h3><p>如果你使用 <code>.sr-only</code> 类来隐藏表单控件的 <code>&lt;label&gt;</code> （而不是使用其它标签选项，如 <code>aria-label</code> 属性）， 一旦它被添加，<code>Bootstrap</code> 会自动调整图标的位置。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group has-success has-feedback"</span>&gt;</span><br><span class="line">  &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-label sr-only"</span> <span class="keyword">for</span>=<span class="string">"inputSuccess5"</span>&gt;<span class="type">Hidden</span> label&lt;/label&gt;</span><br><span class="line">  &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputSuccess5"</span> aria-describedby=<span class="string">"inputSuccess5Status"</span>&gt;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-ok form-control-feedback"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br><span class="line">  &lt;span id=<span class="string">"inputSuccess5Status"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;(success)&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group has-success has-feedback"</span>&gt;</span><br><span class="line">  &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"control-label sr-only"</span> <span class="keyword">for</span>=<span class="string">"inputGroupSuccess4"</span>&gt;<span class="type">Input</span> group <span class="keyword">with</span> success&lt;/label&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"input-group"</span>&gt;</span><br><span class="line">    &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"input-group-addon"</span>&gt;@&lt;/span&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"inputGroupSuccess4"</span> aria-describedby=<span class="string">"inputGroupSuccess4Status"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-ok form-control-feedback"</span> aria-hidden=<span class="string">"true"</span>&gt;&lt;/span&gt;</span><br><span class="line">  &lt;span id=<span class="string">"inputGroupSuccess4Status"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"sr-only"</span>&gt;(success)&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjGRoQ.png" alt="NjGRoQ.png"></p><h1 id="11-控件尺寸"><a href="#11-控件尺寸" class="headerlink" title="11  控件尺寸"></a>11 控件尺寸</h1><p>通过 <code>.input-lg</code> 类似的类可以为控件设置高度，通过 <code>.col-lg-*</code> 类似的类可以为控件设置宽度。</p><h2 id="11-1-高度尺寸"><a href="#11-1-高度尺寸" class="headerlink" title="11.1  高度尺寸"></a>11.1 高度尺寸</h2><p>创建大一些或小一些的表单控件以匹配按钮尺寸。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">  &lt;div <span class="keyword">class</span>="controls"&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">class</span>="form-control input-lg" <span class="keyword">type</span>="text" placeholder=".input-lg"&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>="text" <span class="keyword">class</span>="form-control" placeholder="Default input默认输入"&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">class</span>="form-control input-sm" <span class="keyword">type</span>="text" placeholder=".input-sm"&gt;</span><br><span class="line"></span><br><span class="line">    &lt;<span class="keyword">select</span> <span class="keyword">class</span>="form-control input-lg"&gt;</span><br><span class="line">      &lt;<span class="keyword">option</span> <span class="keyword">value</span>=""&gt;.<span class="keyword">input</span>-lg&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">select</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">select</span> <span class="keyword">class</span>="form-control"&gt;</span><br><span class="line">      &lt;<span class="keyword">option</span> <span class="keyword">value</span>=""&gt;<span class="keyword">Default</span> <span class="keyword">select</span>默认选择&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">select</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">select</span> <span class="keyword">class</span>="form-control input-sm"&gt;</span><br><span class="line">      &lt;<span class="keyword">option</span> <span class="keyword">value</span>=""&gt;.<span class="keyword">input</span>-sm&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">select</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjWS5d.png" alt="NjWS5d.png"></p><h2 id="11-2-水平排列的表单组的尺寸"><a href="#11-2-水平排列的表单组的尺寸" class="headerlink" title="11.2  水平排列的表单组的尺寸"></a>11.2 水平排列的表单组的尺寸</h2><p>通过添加 <code>.form-group-lg</code> 或 <code>.form-group-sm</code> 类，为 <code>.form-horizontal</code> 包裹的 <code>label</code> 元素和表单控件快速设置尺寸。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-horizontal"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group form-group-lg"</span>&gt;</span><br><span class="line">    &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span> <span class="keyword">for</span>=<span class="string">"formGroupInputLarge"</span>&gt;<span class="type">Large</span> label大标签&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> id=<span class="string">"formGroupInputLarge"</span> placeholder=<span class="string">"Large input"</span>&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group form-group-sm"</span>&gt;</span><br><span class="line">    &lt;label <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-2 control-label"</span> <span class="keyword">for</span>=<span class="string">"formGroupInputSmall"</span>&gt;<span class="type">Small</span> label小标签&lt;/label&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-sm-10"</span>&gt;</span><br><span class="line">      &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> id=<span class="string">"formGroupInputSmall"</span> placeholder=<span class="string">"Small input"</span>&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjWZVg.png" alt="NjWZVg.png"></p><h2 id="11-3-调整列（column）尺寸"><a href="#11-3-调整列（column）尺寸" class="headerlink" title="11.3  调整列（column）尺寸"></a>11.3 调整列（column）尺寸</h2><p>用栅格系统中的列（column）包裹输入框或其任何父元素，都可很容易的为其设置宽度。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCALA"><figure class="iseeu highlight /scala"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-xs-2"</span>&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> placeholder=<span class="string">".col-xs-2"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-xs-3"</span>&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> placeholder=<span class="string">".col-xs-3"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-xs-4"</span>&gt;</span><br><span class="line">    &lt;input <span class="class"><span class="keyword">type</span></span>=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> placeholder=<span class="string">".col-xs-4"</span>&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjWKGn.png" alt="NjWKGn.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>表单</tag>
        <tag>bootstrap</tag>
      </tags>
  </entry>
  <entry>
    <title>四、表格</title>
    <url>/post/e84f9f54.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:27 GMT+0800 (GMT+08:00) --><p>表格</p><h1 id="1-基本实例-table"><a href="#1-基本实例-table" class="headerlink" title="1  基本实例 .table"></a>1 基本实例 <code>.table</code></h1><p>为任意 <code>&lt;table&gt;</code> 标签添加 <code>.table</code> 类可以为其赋予基本的样式 — <code>少量的内补（padding）和水平方向的分隔线</code>。表格元素使用的很广泛，如果我们为其赋予默认样式可能会影响例如日历和日期选择之类的插件，所以我们选择将此样式独立出来。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">caption</span>&gt;</span>Optional table caption.<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mark<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Otto<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>@mdo<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jacob<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Thornton<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>@fat<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>Larry<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>the Bird<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>@twitter<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjeztK.png" alt="NjeztK.png"></p><h1 id="2-条纹状表格-table-striped"><a href="#2-条纹状表格-table-striped" class="headerlink" title="2  条纹状表格 .table-striped"></a>2 条纹状表格 <code>.table-striped</code></h1><p>通过 <code>.table-striped</code> 类可以给 <code>&lt;tbody&gt;</code> 之内的每一行增加斑马条纹样式。</p><p>跨浏览器兼容性</p><p>条纹状表格是依赖 <code>:nth-child</code> CSS 选择器实现的，而这一功能不被 <code>Internet Explorer 8</code> 支持。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-striped"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mark<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Otto<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>@mdo<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jacob<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Thornton<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>@fat<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Larry<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>the Bird<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>@twitter<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjmK1g.png" alt="NjmK1g.png"></p><h1 id="3-带边框的表格-table-bordered"><a href="#3-带边框的表格-table-bordered" class="headerlink" title="3  带边框的表格 .table-bordered"></a>3 带边框的表格 <code>.table-bordered</code></h1><p>添加 <code>.table-bordered</code> 类为表格和其中的每个单元格增加边框。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mark<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Otto<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>@mdo<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jacob<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Thornton<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>@fat<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Larry<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>the Bird<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>@twitter<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/Njma3F.png" alt="Njma3F.png"></p><h1 id="4-鼠标悬停-table-hover"><a href="#4-鼠标悬停-table-hover" class="headerlink" title="4  鼠标悬停 .table-hover"></a>4 鼠标悬停 <code>.table-hover</code></h1><p>通过添加 <code>.table-hover</code> 类可以让 <code>&lt;tbody&gt;</code> 中的每一行对鼠标悬停状态作出响应。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-hover"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mark<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Otto<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>@mdo<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jacob<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Thornton<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>@fat<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Larry<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>the Bird<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>@twitter<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjmIHI.png" alt="NjmIHI.png"></p><h1 id="5-紧缩表格-table-condensed"><a href="#5-紧缩表格-table-condensed" class="headerlink" title="5  紧缩表格 .table-condensed"></a>5 紧缩表格 <code>.table-condensed</code></h1><p>通过添加 <code>.table-condensed</code> 类可以让表格更加紧凑，单元格中的内补（<code>padding</code>）均会减半。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-condensed"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Mark<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Otto<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>@mdo<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Jacob<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Thornton<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>@fat<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>Larry the Bird<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>@twitter<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjnAv4.png" alt="NjnAv4.png"></p><h1 id="6-状态类"><a href="#6-状态类" class="headerlink" title="6  状态类"></a>6 状态类</h1><p>通过这些状态类可以为行或单元格设置颜色。</p><blockquote><p>.active 鼠标悬停在行或单元格上时所设置的颜色</p></blockquote><blockquote><p>.success 标识成功或积极的动作</p></blockquote><blockquote><p>.info 标识普通的提示信息或动作</p></blockquote><blockquote><p>.warning 标识警告或需要用户注意</p></blockquote><blockquote><p>.danger 标识危险或潜在的带来负面影响的动作</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>Column heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>Column heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span>&gt;</span>Column heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>.active	鼠标悬停在行或单元格上时所设置的颜色<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"success"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>.success	标识成功或积极的动作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>.info	标识普通的提示信息或动作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"warning"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>.warning	标识警告或需要用户注意<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"danger"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>.danger	标识危险或潜在的带来负面影响的动作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Column content<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjnwPf.png" alt="NjnwPf.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- On rows --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"success"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"warning"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"danger"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- On cells (`td` or `th`) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"success"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"warning"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"danger"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>向使用辅助技术的用户传达用意</p><p>通过为表格中的一行或一个单元格添加颜色而赋予不同的意义只是提供了一种视觉上的表现，并不能为使用辅助技术 – <code>例如屏幕阅读器</code> – 浏览网页的用户提供更多信息。因此，请确保通过颜色而赋予的不同意义可以通过内容本身来表达（即在相应行或单元格中的可见的文本内容）；或者通过包含额外的方式 – 例如应用了 <code>.sr-only 类而隐藏的文本</code> – 来表达出来。</p><h1 id="7-响应式表格-table-responsive"><a href="#7-响应式表格-table-responsive" class="headerlink" title="7  响应式表格 .table-responsive"></a>7 响应式表格 <code>.table-responsive</code></h1><p>将任何 <code>.table</code> 元素包裹在 <code>.table-responsive</code> 元素内，即可创建响应式表格，其会在小屏幕设备上（小于768px）水平滚动。当屏幕大于 768px 宽度时，水平滚动条消失。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bs-example"</span> <span class="attr">data-example-id</span>=<span class="string">"simple-responsive-table"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-responsive"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.table-responsive --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-responsive"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>Table heading<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>Table cell<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.table-responsive --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/03/NjnvRO.png" alt="NjnvRO.png"></p><h2 id="7-1-垂直方向的内容截断"><a href="#7-1-垂直方向的内容截断" class="headerlink" title="7.1  垂直方向的内容截断"></a>7.1 垂直方向的内容截断</h2><p>响应式表格使用了 <code>overflow-y: hidden</code> 属性，这样就能将超出表格<code>底部和顶部的内容截断</code>。特别是，也可以截断下拉菜单和其他第三方组件。</p><h2 id="7-2-Firefox-和-fieldset-元素"><a href="#7-2-Firefox-和-fieldset-元素" class="headerlink" title="7.2  Firefox 和 fieldset 元素"></a>7.2 <code>Firefox</code> 和 <code>fieldset</code> 元素</h2><p><code>Firefox</code> 浏览器对 <code>fieldset</code> 元素设置了一些影响 <code>width</code> 属性的样式，导致响应式表格出现问题。可以使用下面提供的针对 <code>Firefox</code> 的 <code>hack</code> 代码解决，但是以下代码并未集成在 <code>Bootstrap</code> 中：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">fieldset</span>：字段集;元素</span><br><span class="line"><span class="keyword">@-moz-document</span> url-prefix() &#123;</span><br><span class="line">  <span class="selector-tag">fieldset</span> &#123; <span class="attribute">display</span>: table-cell; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bootstrap</tag>
        <tag>表格</tag>
      </tags>
  </entry>
  <entry>
    <title>三、排版</title>
    <url>/post/cdf2ab31.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><p>使用bootstrap的排版特性，可以创建标题、段落、列表及其他内联元素，实际上它是把大部分在HTML的基本标签加了样式。</p><h1 id="1-标题"><a href="#1-标题" class="headerlink" title="1  标题"></a>1 标题</h1><p>HTML 中的所有标题标签，<code>&lt;h1&gt;</code> 到 <code>&lt;h6&gt;</code> 均可使用。另外，还提供了 <code>.h1</code> 到 <code>.h6</code> 类，为的是给内联（<code>inline</code>）属性的文本赋予标题的样式。</p><h1 id="2-内联子标题"><a href="#2-内联子标题" class="headerlink" title="2  内联子标题"></a>2 内联子标题</h1><p>如果需要向任何标题添加一个子标题，只需要在标题标签中添加 <code>&lt;small&gt;</code> ，用<code>small</code>标签包裹副标题的内容，或者添加 <code>.small</code> 类2，这样可以得到一个字号更小的颜色更浅的文本。</p><p>使用bootstrap时需要按照它的规则来创建相关元素，而不要自己去写一样式，不然bootstrap的使用就没有了意义，所以<code>需要记住一些bootstrap的规则</code>。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>h1. Bootstrap heading <span class="tag">&lt;<span class="name">small</span>&gt;</span>Secondary text<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>h2. Bootstrap heading <span class="tag">&lt;<span class="name">small</span>&gt;</span>Secondary text<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>h3. Bootstrap heading <span class="tag">&lt;<span class="name">small</span>&gt;</span>Secondary text<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>h4. Bootstrap heading <span class="tag">&lt;<span class="name">small</span>&gt;</span>Secondary text<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>h5. Bootstrap heading <span class="tag">&lt;<span class="name">small</span>&gt;</span>Secondary text<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>h6. Bootstrap heading <span class="tag">&lt;<span class="name">small</span>&gt;</span>Secondary text<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL1kY6.png" alt="NL1kY6.png"></p><h1 id="3-引导主体副本"><a href="#3-引导主体副本" class="headerlink" title="3  引导主体副本"></a>3 引导主体副本</h1><p>为了给段落添加强调文本，则可以添加 <code>class=&quot;lead&quot;</code> ，这将得到更大更粗、行高更高的文本，它的作用相当于是文章摘要。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>文章摘要文章摘要文章摘要文章摘要文章摘要文章摘要文章摘要文章摘要文章摘要<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"lead"</span>&gt;</span>文章摘要文章摘要文章摘要文章摘要文章摘要文章摘要文章摘要文章摘要文章摘要<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL1lkt.png" alt="NL1lkt.png"></p><h1 id="4-强调标签"><a href="#4-强调标签" class="headerlink" title="4  强调标签"></a>4 强调标签</h1><p>bootstrap直接使用了HTML中用于标注强调的标签，并给它们另外赋予了少许样式。这几个用于强调的标签是： <code>small</code> <code>strong</code> <code>em</code></p><p><code>&lt;small&gt;</code> 对于不需要强调的inline或block类型的文本，使用 <code>&lt;small&gt;</code> 标签包裹，其内的文本将被设置为父容器字体大小的 <code>85%</code>。标题元素中嵌套的 <code>&lt;small&gt;</code> 元素被设置不同的 <code>font-size</code> 。</p><p>你还可以为行内元素赋予 <code>.small</code> 类以代替任何 <code>&lt;small&gt;</code> 元素。</p><p><code>&lt;strong&gt;</code> bootstrap中，为<code>strong</code>标签添加了<code>font-weight:blod;</code>样式来加粗文本。实际上本身<code>strong</code>标签默认的也是<code>font-weight:blod;</code></p><p><code>&lt;em&gt;</code> 用斜体字强调一段文本。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">Alternate elements（替代元素）</span><br><span class="line"></span><br><span class="line">  在 HTML5 中可以放心使用 <span class="tag">&lt;<span class="name">b</span>&gt;</span> 和 <span class="tag">&lt;<span class="name">i</span>&gt;</span> 标签。<span class="tag">&lt;<span class="name">b</span>&gt;</span> 用于高亮单词或短语，不带有任何着重的意味；</span><br><span class="line"></span><br><span class="line">  而 <span class="tag">&lt;<span class="name">i</span>&gt;</span> 标签主要用于发言、技术词汇等。</span><br></pre></td></tr></table></figure></div><h1 id="5-对齐类"><a href="#5-对齐类" class="headerlink" title="5  对齐类"></a>5 对齐类</h1><p>简单方便将文字对齐的类，它们一般应用在 <code>p</code> 标签上（用在<code>div</code>上不符合规范，用在<code>span</code>标签则不能生效）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">.text-left  .text-center  .text-right</span><br><span class="line"></span><br><span class="line">&lt;p <span class="keyword">class</span>="text-left"&gt;Left aligned <span class="type">text</span>.靠左&lt;/p&gt;</span><br><span class="line">&lt;p <span class="keyword">class</span>="text-center"&gt;Center aligned <span class="type">text</span>.居中&lt;/p&gt;</span><br><span class="line">&lt;p <span class="keyword">class</span>="text-right"&gt;Right aligned <span class="type">text</span>.靠右&lt;/p&gt;</span><br><span class="line">&lt;p <span class="keyword">class</span>="text-justify"&gt;Justified <span class="type">text</span>.对正文本&lt;/p&gt;</span><br><span class="line">&lt;p <span class="keyword">class</span>="text-nowrap"&gt;<span class="keyword">No</span> wrap <span class="type">text</span>.无换行文字&lt;/p&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL3S9f.png" alt="NL3S9f.png"></p><h1 id="6-强调类"><a href="#6-强调类" class="headerlink" title="6  强调类"></a>6 强调类</h1><p>这些强调类，通过颜色来表示强调。 <code>p</code> 元素加了这些类，会显示不同的颜色。</p><blockquote><p>text-muted muted减弱的，以#777来显示。</p></blockquote><blockquote><p>text-warning 这是警告色，橙灰色。</p></blockquote><blockquote><p>text-danger 危险的，错误提示</p></blockquote><blockquote><p>text-info 信息</p></blockquote><blockquote><p>text-success 正确的信息</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;p <span class="built_in">class</span>=<span class="string">"text-muted"</span>&gt;<span class="built_in">text</span>-muted     muted减弱的，以<span class="comment">#777来显示。&lt;/p&gt;</span></span><br><span class="line">&lt;p <span class="built_in">class</span>=<span class="string">"text-warning"</span>&gt;<span class="built_in">text</span>-warning    这是警告色，橙灰色。<span class="comment">#8a6d3b&lt;/p&gt;</span></span><br><span class="line">&lt;p <span class="built_in">class</span>=<span class="string">"text-danger"</span>&gt;<span class="built_in">text</span>-danger     危险的，错误提示<span class="comment">#a94442&lt;/p&gt;</span></span><br><span class="line">&lt;p <span class="built_in">class</span>=<span class="string">"text-info"</span>&gt;<span class="built_in">text</span>-info        信息<span class="comment">#31708f&lt;/p&gt;</span></span><br><span class="line">&lt;p <span class="built_in">class</span>=<span class="string">"text-success"</span>&gt;<span class="built_in">text</span>-success     正确的信息<span class="comment">#3c763d&lt;/p&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL3KvF.png" alt="NL3KvF.png"></p><h1 id="7-改变大小写"><a href="#7-改变大小写" class="headerlink" title="7  改变大小写"></a>7 改变大小写</h1><p>通过这几个类可以改变文本的大小写。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-lowercase"</span>&gt;</span>Lowercased Text.小写文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-uppercase"</span>&gt;</span>uppercased text.全部大写文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-capitalize"</span>&gt;</span>capitalized text.首字母大写文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL3wKe.png" alt="NL3wKe.png"></p><h1 id="8-缩略语"><a href="#8-缩略语" class="headerlink" title="8  缩略语"></a>8 缩略语</h1><p>当鼠标悬停在缩写和缩写词上时就会显示完整内容，<code>Bootstrap</code> 实现了对 <code>HTML</code> 的 <code>&lt;abbr&gt;</code> 元素的增强样式。缩略语元素带有 <code>title</code> 属性，外观表现为带有较浅的虚线框，鼠标移至上面时会变成带有“问号”的指针。如想看完整的内容可把鼠标悬停在缩略语上（对使用辅助技术的用户也可见）, 但需要包含 <code>title</code> 属性。</p><h2 id="8-1-基本缩略语"><a href="#8-1-基本缩略语" class="headerlink" title="8.1  基本缩略语"></a>8.1 基本缩略语</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"attribute"</span>&gt;</span>attr<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL3y5t.png" alt="NL3y5t.png"></p><h2 id="8-2-首字母缩略语"><a href="#8-2-首字母缩略语" class="headerlink" title="8.2  首字母缩略语"></a>8.2 首字母缩略语</h2><p>为缩略语添加 <code>.initialism</code> 类，可以让 <code>font-size</code> 变得稍微小些。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;abbr <span class="attribute">title</span>=<span class="string">"HyperText Markup Language"</span> <span class="attribute">class</span>=<span class="string">"initialism"</span>&gt;HTML&lt;/abbr&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL3LxU.png" alt="NL3LxU.png"></p><h1 id="9-地址"><a href="#9-地址" class="headerlink" title="9  地址"></a>9 地址</h1><p>让联系信息以最接近日常使用的格式呈现。在每行结尾添加 <code>&lt;br&gt;</code> 可以保留需要的样式。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Twitter, Inc.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  1355 Market Street, Suite 900<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  San Francisco, CA 94103<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"Phone"</span>&gt;</span>P:<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> (123) 456-7890</span><br><span class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>Full Name<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:#"</span>&gt;</span>first.last@example.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL8CPx.png" alt="NL8CPx.png"></p><h1 id="10-引用"><a href="#10-引用" class="headerlink" title="10  引用"></a>10 引用</h1><p>在你的文档中引用其他来源的内容。</p><h2 id="10-1-默认样式的引用"><a href="#10-1-默认样式的引用" class="headerlink" title="10.1  默认样式的引用"></a>10.1 默认样式的引用</h2><p>将任何 <code>HTML</code> 元素包裹在 <code>&lt;blockquote&gt;</code> 中即可表现为引用样式。对于直接引用，我们建议用 <code>&lt;p&gt;</code> 标签。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.奥勒姆·伊普苏姆·多洛尔坐在阿梅特的位子上，向精英们致意。整数运算<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL8QRf.png" alt="NL8QRf.png"></p><h2 id="10-2-多种引用样式"><a href="#10-2-多种引用样式" class="headerlink" title="10.2  多种引用样式"></a>10.2 多种引用样式</h2><p>对于标准样式的 <code>&lt;blockquote&gt;</code>，可以通过几个简单的变体就能改变风格和内容。</p><p>命名来源</p><p>添加 <code>&lt;footer&gt;</code> 用于标明引用来源。来源的名称可以包裹进 <code>&lt;cite&gt;</code>标签中。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span>Someone famous in 一个有名的人<span class="tag">&lt;<span class="name">cite</span> <span class="attr">title</span>=<span class="string">"Source Title 源标题"</span>&gt;</span>Source Title<span class="tag">&lt;/<span class="name">cite</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL8WJx.png" alt="NL8WJx.png"></p><p>另一种展示风格</p><p>通过赋予 <code>.blockquote-reverse</code> 类可以让引用呈现内容右对齐的效果。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"blockquote-reverse"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span>Someone famous in 一个有名的人<span class="tag">&lt;<span class="name">cite</span> <span class="attr">title</span>=<span class="string">"Source Title 源标题"</span>&gt;</span>Source Title<span class="tag">&lt;/<span class="name">cite</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL84SK.png" alt="NL84SK.png"></p><h1 id="11-列表"><a href="#11-列表" class="headerlink" title="11  列表"></a>11 列表</h1><h2 id="11-1-无序列表"><a href="#11-1-无序列表" class="headerlink" title="11.1  无序列表"></a>11.1 无序列表</h2><p>排列顺序无关紧要的一列元素。</p><h2 id="11-2-有序列表"><a href="#11-2-有序列表" class="headerlink" title="11.2  有序列表"></a>11.2 有序列表</h2><p>顺序至关重要的一组元素。</p><h2 id="11-3-无样式列表"><a href="#11-3-无样式列表" class="headerlink" title="11.3  无样式列表"></a>11.3 无样式列表</h2><p>移除了默认的 <code>list-style</code> 样式和左侧外边距的一组元素（只针对直接子元素）。这是针对直接子元素的，也就是说，你需要对所有嵌套的列表都添加这个类才能具有同样的样式。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-unstyled"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Lorem ipsum dolor sit amet<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Lorem ipsum dolor sit amet<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Lorem ipsum dolor sit amet<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Lorem ipsum dolor sit amet<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NL8LFI.png" alt="NL8LFI.png"></p><h2 id="11-4-内联列表"><a href="#11-4-内联列表" class="headerlink" title="11.4  内联列表"></a>11.4 内联列表</h2><p>通过设置 <code>display: inline-block;</code> 并添加少量的内补（<code>padding</code>），将所有元素放置于同一行。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-inline"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Lorem ipsum dolor sit amet<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Lorem ipsum dolor sit amet<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Lorem ipsum dolor sit amet<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Lorem ipsum dolor sit amet<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLGCwj.png" alt="NLGCwj.png"></p><h2 id="11-5-描述（定义列表）"><a href="#11-5-描述（定义列表）" class="headerlink" title="11.5  描述（定义列表）"></a>11.5 描述（定义列表）</h2><h3 id="11-5-1-带有描述的短语列表"><a href="#11-5-1-带有描述的短语列表" class="headerlink" title="11.5.1  带有描述的短语列表"></a>11.5.1 带有描述的短语列表</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>...<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>...<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="11-5-2-水平排列的描述"><a href="#11-5-2-水平排列的描述" class="headerlink" title="11.5.2  水平排列的描述"></a>11.5.2 水平排列的描述</h3><p><code>.dl-horizontal</code> 可以让 <code>&lt;dl&gt;</code> 内的短语及其描述排在一行。开始是像 <code>&lt;dl&gt;</code> 的默认样式堆叠在一起，随着导航条逐渐展开而排列在一行。</p><figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line">&lt;<span class="built_in">dl</span> class=<span class="string">"dl-horizontal"</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">dt</span>&gt;Description lists&lt;/<span class="built_in">dt</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">dd</span>&gt;A description list is perfect for defining terms.&lt;/<span class="built_in">dd</span>&gt;</span><br><span class="line">&lt;/<span class="built_in">dl</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="built_in">dl</span> class=<span class="string">"dl-horizontal"</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">dt</span>&gt;Euismod&lt;/<span class="built_in">dt</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">dd</span>&gt;Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.&lt;/<span class="built_in">dd</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">dd</span>&gt;Donec id elit non mi porta gravida <span class="meta">at</span> eget metus.&lt;/<span class="built_in">dd</span>&gt;</span><br><span class="line">&lt;/<span class="built_in">dl</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="built_in">dl</span> class=<span class="string">"dl-horizontal"</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">dt</span>&gt;Felis euismod semper eget lacinia&lt;/<span class="built_in">dt</span>&gt;</span><br><span class="line">  &lt;<span class="built_in">dd</span>&gt;Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus<span class="number">.</span>Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.&lt;/<span class="built_in">dd</span>&gt;</span><br><span class="line">&lt;/<span class="built_in">dl</span>&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/07/02/NLGum4.png" alt="NLGum4.png"></p><h2 id="11-6-自动截断"><a href="#11-6-自动截断" class="headerlink" title="11.6  自动截断"></a>11.6 自动截断</h2><p>通过 <code>text-overflow</code> 属性，水平排列的描述列表将会截断左侧太长的短语。在较窄的视口（<code>viewport</code>）内，列表将变为默认堆叠排列的布局方式。</p><p><img src="https://s1.ax1x.com/2020/07/02/NLGUne.png" alt="NLGUne.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bootstrap</tag>
        <tag>排版</tag>
      </tags>
  </entry>
  <entry>
    <title>二、栅格系统</title>
    <url>/post/83e1301b.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:26 GMT+0800 (GMT+08:00) --><p>说白了就是媒体查询和百分比布局</p><p>bootstrap包含了一个响应式的、移动设备优先的、不固定的网格系统，可以随着设备或视口大小的增加而适当的扩展到12列。它包含了用于简单的布局选项的预定义类，也包含了用于生成更多语义布局的功能强大的混合类。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARMASM"><figure class="iseeu highlight /armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bootstrap3是移动设备优先</span></span><br><span class="line"><span class="keyword">bootstrap的栅格系统最多12列</span></span><br><span class="line"><span class="keyword">bootstrap中包含了许多预定义类。</span></span><br></pre></td></tr></table></figure></div><p>在通常我们写的页面里，浏览器缩小到一定程度，页面会错位、变形，这在bootstrap中不会，因为他是自适应的。</p><p>下图是栅格系统，它最多可以分为12列，你可以按自己喜欢的比例来划分页面，只要它们加起来不超过12。</p><p><img src="https://s1.ax1x.com/2020/07/02/NL9SqH.png" alt="NL9SqH.png"></p><h1 id="1、栅格参数"><a href="#1、栅格参数" class="headerlink" title="1、栅格参数"></a>1、栅格参数</h1><p>通过下表可以详细查看 Bootstrap 的栅格系统是如何在多种屏幕设备上工作的。</p><p><img src="https://s1.ax1x.com/2020/07/02/NL9Ez8.png" alt="NL9Ez8.png"></p><h1 id="2、类名说明"><a href="#2、类名说明" class="headerlink" title="2、类名说明"></a>2、类名说明</h1><p>容器：container（固定宽度）（版心） container-fluid（100%）（通栏）</p><p>行：row</p><p>列：col-xs-5 col-sm col-md col-lg</p><p>“行（row）”必须包含在 .container （固定宽度）或 .container-fluid （100% 宽度）中，以便为其赋予合适的排列（aligment）和内补（padding）。</p><p>通过“行（row）”在水平方向创建一组“列（column）”。</p><p>内容应当放置于“列（column）”内，并且，只有“列（column）”可以作为行（row）”的直接子元素。</p><p>类似 .row 和 .col-xs-4 这种预定义的类，可以用来快速创建栅格布局。Bootstrap 源码中定义的 mixin 也可以用来创建语义化的布局。</p><p>通过为“列（column）”设置 padding 属性，从而创建列与列之间的间隔（gutter）。通过为 .row 元素设置负值 margin 从而抵消掉为 .container 元素设置的 padding，也就间接为“行（row）”所包含的“列（column）”抵消掉了padding。</p><p>负值的 margin就是下面的示例为什么是向外突出的原因。在栅格列中的内容排成一行。</p><p>栅格系统中的列是通过指定1到12的值来表示其跨越的范围。例如，三个等宽的列可以使用三个 .col-xs-4 来创建。</p><p>如果一“行（row）”中包含了的“列（column）”大于 12，多余的“列（column）”所在的元素将被作为一个整体另起一行排列。</p><p>栅格类适用于与屏幕宽度大于或等于分界点大小的设备 ， 并且针对小屏幕设备覆盖栅格类。 因此，在元素上应用任何 .col-md-* 栅格类适用于与屏幕宽度大于或等于分界点大小的设备 ， 并且针对小屏幕设备覆盖栅格类。 因此，在元素上应用任何 .col-lg-* 不存在， 也影响大屏幕设备。</p><h1 id="3、案例"><a href="#3、案例" class="headerlink" title="3、案例"></a>3、案例</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 版心 bootstrap中叫做容器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 行 row 写栅格系统必须写 row--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 栅格系统 列 column  .col-mg-n  n范围 1~12 表示该盒子宽度占有整行总共12列的 n 列 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是第一个板块<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-4"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 特殊样式另外起类名 栅格系统内容不要动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-11"</span>&gt;</span>11列<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.bg-red &#123;</span><br><span class="line">            background-color: red;</span><br><span class="line">            font-size: 50px;</span><br><span class="line">            line-height: 50px;</span><br><span class="line">            height: 100px;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLPOGq.png" alt="NLPOGq.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- lg 大屏幕一行显示6个盒子</span></span><br><span class="line"><span class="comment">         md 中屏幕一行显示3个盒子</span></span><br><span class="line"><span class="comment">         sm 小屏幕一行显示2个盒子</span></span><br><span class="line"><span class="comment">         xs 超小屏幕一行默认只显示 1个盒子 </span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 1 行最多显示 12列--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-2 col-md-4 col-sm-6 bg01"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-2 col-md-4 col-sm-6 bg02"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-2 col-md-4 col-sm-6 bg03"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-2 col-md-4 col-sm-6 bg04"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-2 col-md-4 col-sm-6 bg05"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-2 col-md-4 col-sm-6 bg06"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.bg01 &#123;</span><br><span class="line">    background-color: red;</span><br><span class="line">    height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">.bg02 &#123;</span><br><span class="line">    background-color: blue;</span><br><span class="line">    height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">.bg03 &#123;</span><br><span class="line">    background-color: green;</span><br><span class="line">    height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">.bg04 &#123;</span><br><span class="line">    background-color: orange;</span><br><span class="line">    height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">.bg05 &#123;</span><br><span class="line">    background-color: pink;</span><br><span class="line">    height: 200px;</span><br><span class="line">&#125;</span><br><span class="line">.bg06 &#123;</span><br><span class="line">    background-color: lightblue;</span><br><span class="line">    height: 200px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLum9g.png" alt="NLum9g.png"></p><h1 id="4、实例：从堆叠到水平排列"><a href="#4、实例：从堆叠到水平排列" class="headerlink" title="4、实例：从堆叠到水平排列"></a>4、实例：从堆叠到水平排列</h1><p>使用单一的一组 .col-md-* 栅格类，就可以创建一个基本的栅格系统，在手机和平板设备上一开始是堆叠在一起的（超小屏幕到小屏幕这一范围），在桌面（中等）屏幕设备上变为水平排列。所有“列（column）必须放在 ” .row 内。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-1 bd"</span>&gt;.col-md<span class="number">-1</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt; </span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt; </span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-8 bd"</span>&gt;.col-md<span class="number">-8</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-4 bd"</span>&gt;.col-md<span class="number">-4</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt; </span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt; </span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-4 bd"</span>&gt;.col-md<span class="number">-4</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-4 bd"</span>&gt;.col-md<span class="number">-4</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-4 bd"</span>&gt;.col-md<span class="number">-4</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt; </span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt; </span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-6 bd"</span>&gt;.col-md<span class="number">-6</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-6 bd"</span>&gt;.col-md<span class="number">-6</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line"></span><br><span class="line">.bd &#123;</span><br><span class="line">    background-color: lightblue;</span><br><span class="line">    height: <span class="number">50</span>px;</span><br><span class="line">    border: <span class="number">1</span>px solid <span class="comment">#000;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLnO76.png" alt="NLnO76.png"></p><h1 id="5、实例：流式布局容器"><a href="#5、实例：流式布局容器" class="headerlink" title="5、实例：流式布局容器"></a>5、实例：流式布局容器</h1><p>将最外面的布局元素 .container 修改为 .container-fluid，就可以将固定宽度的栅格布局转换为 100% 宽度的布局。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"container-fluid"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">        ...</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line"></span><br><span class="line">.row &#123;</span><br><span class="line">    background-color: lightblue;</span><br><span class="line">    height: <span class="number">50</span>px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLuQun.png" alt="NLuQun.png"></p><h1 id="6、实例：移动设备和桌面屏幕"><a href="#6、实例：移动设备和桌面屏幕" class="headerlink" title="6、实例：移动设备和桌面屏幕"></a>6、实例：移动设备和桌面屏幕</h1><p>是否不希望在小屏幕设备上所有列都堆叠在一起？那就使用针对超小屏幕和中等屏幕设备所定义的类吧，即 .col-xs-* 和 .col-md-*。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Stack the columns on mobile by making one full-width and the other half-width --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 col-md-8 bd"</span>&gt;</span>.col-xs-12 .col-md-8<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-md-4 bd"</span>&gt;</span>.col-xs-6 .col-md-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment">&lt;!-- Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-md-4 bd"</span>&gt;</span>.col-xs-6 .col-md-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-md-4 bd"</span>&gt;</span>.col-xs-6 .col-md-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-md-4 bd"</span>&gt;</span>.col-xs-6 .col-md-4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">    <span class="comment">&lt;!-- Columns are always 50% wide, on mobile and desktop --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 bd"</span>&gt;</span>.col-xs-6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 bd"</span>&gt;</span>.col-xs-6<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.bd &#123;</span><br><span class="line">    background-color: lightblue;</span><br><span class="line">    border: 1px solid #000;</span><br><span class="line">    height: 30px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLuN34.png" alt="NLuN34.png"></p><h1 id="7、实例：手机、平板、桌面"><a href="#7、实例：手机、平板、桌面" class="headerlink" title="7、实例：手机、平板、桌面"></a>7、实例：手机、平板、桌面</h1><p>在上面案例的基础上，通过使用针对平板设备的 .col-sm-* 类，来创建更加动态和强大的布局吧。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"container"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-12 col-sm-6 col-md-8 bd"</span>&gt;.col-xs<span class="number">-12</span> .col-sm<span class="number">-6</span> .col-md<span class="number">-8</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-6 col-md-4 bd"</span>&gt;.col-xs<span class="number">-6</span> .col-md<span class="number">-4</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-6 col-sm-4 bd"</span>&gt;.col-xs<span class="number">-6</span> .col-sm<span class="number">-4</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-6 col-sm-4 bd"</span>&gt;.col-xs<span class="number">-6</span> .col-sm<span class="number">-4</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;!<span class="comment">-- Optional: clear the XS cols if their content doesn't match in height --&gt;</span></span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"clearfix visible-xs-block"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-6 col-sm-4 bd"</span>&gt;.col-xs<span class="number">-6</span> .col-sm<span class="number">-4</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLurE6.png" alt="NLurE6.png"></p><h2 id="注：预定义类-clearfix-visible-xs-block的作用"><a href="#注：预定义类-clearfix-visible-xs-block的作用" class="headerlink" title="注：预定义类 clearfix visible-xs-block的作用"></a>注：预定义类 clearfix visible-xs-block的作用</h2><p>1.不使用clearfix和visible-xs-block</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-cn"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>bootstrap test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,minimum=1.0,maxmum=1.0,user-scalable=no"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./css/bootstrap.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>1.col-xs-6 .col-sm-3Resize your viewport or check it out on your phone for an example.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>2.col-xs-6 .col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>3.col-xs-6 .col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>4.col-xs-6 .col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLKtdP.png" alt="NLKtdP.png"></p><p>2.使用了clearfix和visible-xs-block类之后</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-cn"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>bootstrap test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1.0,minimum=1.0,maxmum=1.0,user-scalable=no"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./css/bootstrap.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>1.col-xs-6 .col-sm-3Resize your viewport or check it out on your phone for an example.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>2.col-xs-6 .col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- Add the extra clearfix for only the required viewport --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clearfix visible-xs-block"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>3.col-xs-6 .col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>4.col-xs-6 .col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLMVSg.png" alt="NLMVSg.png"></p><h1 id="8、实例：多余的列（column）将另起一行排列"><a href="#8、实例：多余的列（column）将另起一行排列" class="headerlink" title="8、实例：多余的列（column）将另起一行排列"></a>8、实例：多余的列（column）将另起一行排列</h1><p>如果在一个 .row 内包含的列（column）大于12个，包含多余列（column）的元素将作为一个整体单元被另起一行排列。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-9"</span>&gt;.col-xs<span class="number">-9</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-4"</span>&gt;.col-xs<span class="number">-4</span>&lt;br&gt;Since <span class="number">9</span> + <span class="number">4</span> = <span class="number">13</span> &amp;gt; <span class="number">12</span>, this <span class="number">4</span>-column-wide <span class="keyword">div</span> gets wrapped <span class="keyword">onto</span> a new line <span class="keyword">as</span> one contiguous unit.&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-6"</span>&gt;.col-xs<span class="number">-6</span>&lt;br&gt;Subsequent columns <span class="keyword">continue</span> along <span class="keyword">the</span> new line.&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLMJl4.png" alt="NLMJl4.png"></p><h1 id="9、响应式列重置"><a href="#9、响应式列重置" class="headerlink" title="9、响应式列重置"></a>9、响应式列重置</h1><p>即便有上面给出的四组栅格class，你也不免会碰到一些问题，例如，在某些阈值时，某些列可能会出现比别的列高的情况。为了克服这一问题，建议联合使用 .clearfix 和 响应式工具类。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>.col-xs-6 .col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>.col-xs-6 .col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- Add the extra clearfix for only the required viewport --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clearfix visible-xs-block"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>.col-xs-6 .col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-3"</span>&gt;</span>.col-xs-6 .col-sm-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLM0k6.png" alt="NLM0k6.png"></p><p>除了列在分界点清除响应， 可能需要 <code>重置偏移, 后推或前拉某个列</code>。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-sm-5 col-md-6"</span>&gt;</span><br><span class="line">        .col-sm<span class="number">-5</span> .col-md<span class="number">-6</span></span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-sm-5 col-sm-offset-2 col-md-6 col-md-offset-0"</span>&gt;</span><br><span class="line">        .col-sm<span class="number">-5</span> .col-sm-<span class="built_in">offset</span><span class="number">-2</span> .col-md<span class="number">-6</span> .col-md-<span class="built_in">offset</span><span class="number">-0</span></span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">              </span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-sm-6 col-md-5 col-lg-6"</span>&gt;</span><br><span class="line">        .col-sm<span class="number">-6</span> .col-md<span class="number">-5</span> .col-lg<span class="number">-6</span></span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-sm-6 col-md-5 col-md-offset-2 col-lg-6 col-lg-offset-0"</span>&gt;</span><br><span class="line">        .col-sm<span class="number">-6</span> .col-md<span class="number">-5</span> .col-md-<span class="built_in">offset</span><span class="number">-2</span> .col-lg<span class="number">-6</span> .col-lg-<span class="built_in">offset</span><span class="number">-0</span></span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLM5h8.png" alt="NLM5h8.png"></p><h1 id="10、列偏移"><a href="#10、列偏移" class="headerlink" title="10、列偏移"></a>10、列偏移</h1><p>使用 .col-md-offset-* 类可以将列向右侧偏移。这些类实际是通过使用 * 选择器为当前元素增加了左侧的边距（margin）。例如，.col-md-offset-4 类将 .col-md-4 元素向右侧偏移了4个列（column）的宽度。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-4"</span>&gt;.col-md<span class="number">-4</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-4 col-md-offset-4"</span>&gt;.col-md<span class="number">-4</span> .col-md-<span class="built_in">offset</span><span class="number">-4</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-3 col-md-offset-3"</span>&gt;.col-md<span class="number">-3</span> .col-md-<span class="built_in">offset</span><span class="number">-3</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-3 col-md-offset-3"</span>&gt;.col-md<span class="number">-3</span> .col-md-<span class="built_in">offset</span><span class="number">-3</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-6 col-md-offset-3"</span>&gt;.col-md<span class="number">-6</span> .col-md-<span class="built_in">offset</span><span class="number">-3</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLMjA0.png" alt="NLMjA0.png"></p><p>还可以使用<code>.col-*-offset-0</code>类覆盖较低网格层的偏移量。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-6 col-sm-4"</span>&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-6 col-sm-4"</span>&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-6 col-xs-offset-3 col-sm-4 col-sm-offset-0"</span>&gt;</span><br><span class="line">  &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><h1 id="11、嵌套列"><a href="#11、嵌套列" class="headerlink" title="11、嵌套列"></a>11、嵌套列</h1><p>为了使用内置的栅格系统将内容再次嵌套，可以通过添加一个新的 .row 元素和一系列 .col-sm-* 元素到已经存在的 .col-sm-* 元素内。被嵌套的行（row）所包含的列（column）的个数不能超过12（其实，没有要求你必须占满12列）。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-sm-9"</span>&gt;</span><br><span class="line">            Level <span class="number">1</span>: .col-sm<span class="number">-9</span></span><br><span class="line">            &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">                    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-8 col-sm-6"</span>&gt;</span><br><span class="line">                        Level <span class="number">2</span>: .col-xs<span class="number">-8</span> .col-sm<span class="number">-6</span></span><br><span class="line">                    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">                    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-xs-4 col-sm-6"</span>&gt;</span><br><span class="line">                        Level <span class="number">2</span>: .col-xs<span class="number">-4</span> .col-sm<span class="number">-6</span></span><br><span class="line">                    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">            &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLQy5V.png" alt="NLQy5V.png"></p><h1 id="12、列排序"><a href="#12、列排序" class="headerlink" title="12、列排序"></a>12、列排序</h1><p>通过使用 <code>.col-md-push-*</code> 和 <code>.col-md-pull-*</code> 类就可以很容易的改变列（column）的顺序。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"row"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-9 col-md-push-3"</span>&gt;.col-md<span class="number">-9</span> .col-md-push<span class="number">-3</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"col-md-3 col-md-pull-9"</span>&gt;.col-md<span class="number">-3</span> .col-md-pull<span class="number">-9</span>&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/02/NLlSat.png" alt="NLlSat.png"></p><h1 id="13-Less-mixin-和变量"><a href="#13-Less-mixin-和变量" class="headerlink" title="13  Less mixin 和变量"></a>13 Less mixin 和变量</h1><p>除了用于快速布局的预定义栅格类，Bootstrap 还包含了一组 Less 变量和 mixin 用于帮你生成简单、语义化的布局。</p><h2 id="13-1-变量"><a href="#13-1-变量" class="headerlink" title="13.1  变量"></a>13.1 变量</h2><p>通过变量来定义列数、槽（gutter）宽、媒体查询阈值（用于确定合适让列浮动）。我们使用这些变量生成预定义的栅格类，如上所示，还有如下所示的定制 mixin。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@grid-columns:</span>              <span class="number">12</span>;</span><br><span class="line"><span class="variable">@grid-gutter-width:</span>         <span class="number">30px</span>;</span><br><span class="line"><span class="variable">@grid-float-breakpoint:</span>     <span class="number">768px</span>;</span><br></pre></td></tr></table></figure></div><h2 id="13-2-mixin"><a href="#13-2-mixin" class="headerlink" title="13.2  mixin"></a>13.2 mixin</h2><p>mixin 用来和栅格变量一同使用，为每个列（column）生成语义化的 CSS 代码。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Creates a wrapper for a series of columns</span></span><br><span class="line"><span class="selector-class">.make-row</span>(<span class="variable">@gutter</span>: <span class="variable">@grid-gutter-width</span>) &#123;</span><br><span class="line">  <span class="comment">// Then clear the floated columns</span></span><br><span class="line">  <span class="selector-class">.clearfix</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-sm-min</span>) &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>:  (<span class="variable">@gutter</span> / -<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">margin-right</span>: (<span class="variable">@gutter</span> / -<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Negative margin nested rows out to align the content of columns</span></span><br><span class="line">  <span class="selector-class">.row</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>:  (<span class="variable">@gutter</span> / -<span class="number">2</span>);</span><br><span class="line">    <span class="attribute">margin-right</span>: (<span class="variable">@gutter</span> / -<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the extra small columns</span></span><br><span class="line"><span class="selector-class">.make-xs-column</span>(<span class="variable">@columns</span>; <span class="variable">@gutter</span>: <span class="variable">@grid-gutter-width</span>) &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">// Prevent columns from collapsing when empty</span></span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="comment">// Inner gutter via padding</span></span><br><span class="line">  <span class="attribute">padding-left</span>:  (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line">  <span class="attribute">padding-right</span>: (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Calculate width based on number of columns available</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@grid-float-breakpoint</span>) &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the small columns</span></span><br><span class="line"><span class="selector-class">.make-sm-column</span>(<span class="variable">@columns</span>; <span class="variable">@gutter</span>: <span class="variable">@grid-gutter-width</span>) &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">// Prevent columns from collapsing when empty</span></span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="comment">// Inner gutter via padding</span></span><br><span class="line">  <span class="attribute">padding-left</span>:  (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line">  <span class="attribute">padding-right</span>: (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Calculate width based on number of columns available</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-sm-min</span>) &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the small column offsets</span></span><br><span class="line"><span class="selector-class">.make-sm-column-offset</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-sm-min</span>) &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-sm-column-push</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-sm-min</span>) &#123;</span><br><span class="line">    <span class="attribute">left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-sm-column-pull</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-sm-min</span>) &#123;</span><br><span class="line">    <span class="attribute">right</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the medium columns</span></span><br><span class="line"><span class="selector-class">.make-md-column</span>(<span class="variable">@columns</span>; <span class="variable">@gutter</span>: <span class="variable">@grid-gutter-width</span>) &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">// Prevent columns from collapsing when empty</span></span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="comment">// Inner gutter via padding</span></span><br><span class="line">  <span class="attribute">padding-left</span>:  (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line">  <span class="attribute">padding-right</span>: (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Calculate width based on number of columns available</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-md-min</span>) &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the medium column offsets</span></span><br><span class="line"><span class="selector-class">.make-md-column-offset</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-md-min</span>) &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-md-column-push</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-md-min</span>) &#123;</span><br><span class="line">    <span class="attribute">left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-md-column-pull</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-md-min</span>) &#123;</span><br><span class="line">    <span class="attribute">right</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the large columns</span></span><br><span class="line"><span class="selector-class">.make-lg-column</span>(<span class="variable">@columns</span>; <span class="variable">@gutter</span>: <span class="variable">@grid-gutter-width</span>) &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="comment">// Prevent columns from collapsing when empty</span></span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="comment">// Inner gutter via padding</span></span><br><span class="line">  <span class="attribute">padding-left</span>:  (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line">  <span class="attribute">padding-right</span>: (<span class="variable">@gutter</span> / <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Calculate width based on number of columns available</span></span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-lg-min</span>) &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generate the large column offsets</span></span><br><span class="line"><span class="selector-class">.make-lg-column-offset</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-lg-min</span>) &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-lg-column-push</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-lg-min</span>) &#123;</span><br><span class="line">    <span class="attribute">left</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.make-lg-column-pull</span>(<span class="variable">@columns</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> (<span class="attribute">min-width</span>: <span class="variable">@screen-lg-min</span>) &#123;</span><br><span class="line">    <span class="attribute">right</span>: percentage((<span class="variable">@columns</span> / <span class="variable">@grid-columns</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="13-3-实例展示"><a href="#13-3-实例展示" class="headerlink" title="13.3  实例展示"></a>13.3 实例展示</h2><p>你可以重新修改这些变量的值，或者用默认值调用这些 mixin。下面就是一个利用默认设置生成两列布局（列之间有间隔）的案例。</p><figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line"><span class="meta">.wrapper</span> &#123;</span><br><span class="line"><span class="meta">  .make-row</span>()<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">.content-main</span> &#123;</span><br><span class="line"><span class="meta">  .make-lg-column</span>(<span class="number">8</span>)<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">.content-secondary</span> &#123;</span><br><span class="line"><span class="meta">  .make-lg-column</span>(<span class="number">3</span>)<span class="comment">;</span></span><br><span class="line"><span class="meta">  .make-lg-column-offset</span>(<span class="number">1</span>)<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="keyword">div</span> class=<span class="string">"wrapper"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> class=<span class="string">"content-main"</span>&gt;...&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> class=<span class="string">"content-secondary"</span>&gt;...&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bootstrap</tag>
        <tag>栅格系统</tag>
      </tags>
  </entry>
  <entry>
    <title>一、bootstrap介绍</title>
    <url>/post/1f762a04.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="1、-bootstrap是什么"><a href="#1、-bootstrap是什么" class="headerlink" title="1、  bootstrap是什么"></a>1、 bootstrap是什么</h1><p><a href="https://v3.bootcss.com/" target="_blank" rel="noopener" class="LinkCard">Bootstrap中文文档</a></p><p>由@mdo 和 @fat 在Twitter工作时创建，Bootstrap使用 LESS CSS 并用 Node 编译，托管在 GitHub 上，方便大家使用这一框架构建更好的web应用。</p><p>Bootstrap 是最受欢迎的 HTML、CSS 和 JS 框架，用于开发响应式布局、移动设备优先的 WEB 项目。</p><p>它对HTML、CSS和JavaScript进行了封装，是他们使用起来更方便。我们只需要使用它已经设定好的类，或规则，即可快速应用它提供的功能。</p><p>bootstrap使用了一些HTML5元素和CSS3属性（如媒体查询）。为了让这些正常工作，需要使用HTML5文档类型 <code>&lt;!DOCTYPE html&gt;</code> 。如果在bootstrap创建的网页开头不使用HTML5的文档类型，可能会面临一些浏览器显示不一致的问题。</p><p>框架是代码的可重用设计，体现为一些组件，或抽象的方法。</p><p>bootstrap分为：<code>全局CSS样式</code>、<code>组件</code>、<code>JavaScript插件</code> 这几个主要部分。</p><p>设置CSS样式：</p><blockquote><p>基本的HTML元素均可以通过class设置样式并得到增强效果；还有先进的栅格系统。</p></blockquote><p>组件：</p><blockquote><p>无数可重复的组件，包括字体图标、下拉菜单、导航、警告框、弹出框等更多功能。</p></blockquote><p>JavaScript插件：</p><blockquote><p>jQuery插件为bootstrap的组件赋予了“生命”。可以简单的一次性引入所有插件，或者逐个引入到你的页面中。</p></blockquote><p>响应式设计：</p><blockquote><p>bootstrap的响应式CSS能够自适应于台式机、平板电脑和手机。</p></blockquote><h1 id="2、怎么使用bootstrap"><a href="#2、怎么使用bootstrap" class="headerlink" title="2、怎么使用bootstrap"></a>2、怎么使用bootstrap</h1><h2 id="2-1、下载"><a href="#2-1、下载" class="headerlink" title="2.1、下载"></a>2.1、下载</h2><p><a href="http://www.bootcss.com/" target="_blank" rel="noopener" class="LinkCard">Bootstrap中文网</a></p><p>点击bootstrap4中文文档，点击下载<code>bootstrap4</code></p><h2 id="2-2、下载“用于生产环境的”"><a href="#2-2、下载“用于生产环境的”" class="headerlink" title="2.2、下载“用于生产环境的”"></a>2.2、下载“用于生产环境的”</h2><p>下载完后它有3个文件夹</p><h2 id="2-3、在html文档中引入bootstrap"><a href="#2-3、在html文档中引入bootstrap" class="headerlink" title="2.3、在html文档中引入bootstrap"></a>2.3、在html文档中引入bootstrap</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>)  <span class="selector-tag">bootstrap</span><span class="selector-class">.min</span><span class="selector-class">.css</span></span><br><span class="line"><span class="selector-tag">b</span>)  <span class="selector-tag">bootstrap</span><span class="selector-class">.min</span><span class="selector-class">.js</span></span><br><span class="line"><span class="selector-tag">c</span>)  <span class="selector-tag">jquery</span></span><br></pre></td></tr></table></figure></div><p>引入CSS中的“<code>bootstrap.min.css</code>”和js文件夹下的<code>bootstrap.min.js</code>。由于bootstrap是基于jQuery的，所以在引入<code>bootstrap.min.js</code>前，要先引入jQuery。并且js和jQuery要放在body的最底部。</p><h2 id="2-4、使用html5的文档类型声明"><a href="#2-4、使用html5的文档类型声明" class="headerlink" title="2.4、使用html5的文档类型声明"></a>2.4、使用html5的文档类型声明</h2><p><code>&lt;!DOCTYPE html&gt;</code>，bootstrap用到了h5，所以它包含一个html5版本的DOCTYPE</p><h2 id="2-5、添加适用于移动端的meta标签"><a href="#2-5、添加适用于移动端的meta标签" class="headerlink" title="2.5、添加适用于移动端的meta标签"></a>2.5、添加适用于移动端的meta标签</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=”viewport” <span class="attribute">content</span>=”width=device-width, <span class="attribute">initial-scale</span>=1.0”&gt;</span><br></pre></td></tr></table></figure></div><p>因为现在越来越多的用户使用移动设备，为了让bootstrap开发的网站对移动设备友好，确保适当的绘制和触屏缩放，需要在网页的head中添加viewport meta标签。</p><p>基本模板:</p><p>使用以下给出的这份超级简单的 HTML 模版，或者修改这些实例。</p><p>拷贝并粘贴下面给出的 HTML 代码，这就是一个最简单的 Bootstrap 页面了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 约束是口宽度 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap 101 Template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入的是压缩版本 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，世界！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>bootstrap</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>bootstrap</tag>
      </tags>
  </entry>
  <entry>
    <title>九、响应式网页制作</title>
    <url>/post/473c838d.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="九、响应式网页制作"><a href="#九、响应式网页制作" class="headerlink" title="九、响应式网页制作"></a>九、响应式网页制作</h1><h2 id="9-1-概念"><a href="#9-1-概念" class="headerlink" title="9.1  概念"></a>9.1 概念</h2><p>同一个网页根据视口的不同，显示不同的版式。</p><p>响应式网页制作：responsive web design (RWD)</p><p><img src="https://s1.ax1x.com/2020/06/30/NIwncF.png" alt="NIwncF.png"></p><h2 id="9-2-优缺点"><a href="#9-2-优缺点" class="headerlink" title="9.2  优缺点"></a>9.2 优缺点</h2><p>优点：</p><blockquote><p>对于不同视口都可以显示非常饱满的网页结构，没有横向滚动条。</p></blockquote><p>缺点：</p><blockquote><p>制作复杂，同时对于移动端而言，需要加载非常多的pc端的样式和图片等资源，影响加载速度，同时费流量。（国内没有纯响应式网站）</p></blockquote><h2 id="9-3-原理"><a href="#9-3-原理" class="headerlink" title="9.3  原理"></a>9.3 原理</h2><p>同一个HTML页面根据视口不同加载不同CSS</p><p>CSS3可以使用媒体查询完成。</p><h3 id="9-3-1-外链式媒体查询"><a href="#9-3-1-外链式媒体查询" class="headerlink" title="9.3.1  外链式媒体查询"></a>9.3.1 外链式媒体查询</h3><p>外链式加载CSS</p><blockquote><p>media：媒体</p></blockquote><blockquote><p>screen：屏幕</p></blockquote><blockquote><p>min-width:最小宽度，表示当视口大于或等于改值时，加载CSS</p></blockquote><blockquote><p>max-width:最大宽度，表示当视口小0于或等于改值时，加载CSS</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 所有视口都加载 01.css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"01.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 媒体查询 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 大视口 &gt;= 1200px 才会加载 01.css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"01.css"</span> <span class="attr">media</span>=<span class="string">"screen and (min-width: 1200px)"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 小视口加载 02.css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"02.css"</span> <span class="attr">media</span>=<span class="string">"screen and (max-width: 1199px)"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIReO0.png" alt="NIReO0.png"></p><p>视口可以分为多个端口</p><p><code>&gt;= 1200px</code></p><p><code>1199px &gt;= 视口 &gt;= 700px</code></p><p><code>&lt;= 699px</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 媒体查询 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 大视口 &gt;= 1200px 才会加载 01.css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"01.css"</span> <span class="attr">media</span>=<span class="string">"screen and (min-width: 1200px)"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 中等视口 1199px &gt;= 视口 &gt;= 700px 加载 02.css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"02.css"</span> <span class="attr">media</span>=<span class="string">"screen and (max-width: 1199px) and (min-width:700px)"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 小视口 &lt;= 699px 才会加载 03.css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"03.css"</span> <span class="attr">media</span>=<span class="string">"screen and (max-width: 699px)"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIWUvn.png" alt="NIWUvn.png"></p><p>“留活口”：对于IE不兼容media，需要书写一个不添加media</p><p>如果不书写media ，表示所有视口都加载media</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 留活口语句必须先书写 所有视口都加载 01.css 可以将公共样式写在这里 简化代码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"01.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 媒体查询 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 大视口 &gt;= 1200px 才会加载 01.css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"01.css"</span> <span class="attr">media</span>=<span class="string">"screen and (min-width: 1200px)"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 中等视口 1199px &gt;= 视口 &gt;= 700px 加载 02.css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"02.css"</span> <span class="attr">media</span>=<span class="string">"screen and (max-width: 1199px) and (min-width:700px)"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 小视口 &lt;= 699px 才会加载 03.css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"03.css"</span> <span class="attr">media</span>=<span class="string">"screen and (max-width: 699px)"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="9-3-2-内嵌式媒体查询"><a href="#9-3-2-内嵌式媒体查询" class="headerlink" title="9.3.2  内嵌式媒体查询"></a>9.3.2 内嵌式媒体查询</h3><p><code>@media screen and (视口) { }</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 清除默认样式 */</span></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 媒体查询 */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">min-width:</span> <span class="number">1200px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">1199px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0px</span> auto;</span><br><span class="line">        <span class="attribute">background-color</span>: green;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="9-3-练习"><a href="#9-3-练习" class="headerlink" title="9.3  练习"></a>9.3 练习</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span>logo<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>网站栏目1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>网站栏目2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>网站栏目3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>网站栏目4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>网站栏目5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>网站栏目6<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>网站栏目7<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>网站栏目8<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 利用类名 将特殊的效果渲染 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"hide"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>网站栏目9<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"hide"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>网站栏目10<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 大尺寸 留活口必须书写在第一条--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"01.css"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 小尺寸 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"02.css"</span> <span class="attr">media</span>=<span class="string">"screen and (max-width: 1199px)"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>01.css ：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 清楚默认样式 */</span></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-class">.logo</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-tag">nav</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="comment">/* 均分盒模型 水平方向一般使用边框模拟 */</span></span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">10px</span> solid <span class="number">#fff</span>;</span><br><span class="line">    <span class="comment">/* 内减盒模型 */</span></span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>02.css ：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.header</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-tag">nav</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header</span> <span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.hide</span> &#123;</span><br><span class="line">    <span class="comment">/* 消失 */</span></span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.content</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIWxVf.png" alt="NIWxVf.png"></p><p><img src="https://s1.ax1x.com/2020/06/30/NIfP2j.png" alt="NIfP2j.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>视口布局</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>响应式网页</tag>
      </tags>
  </entry>
  <entry>
    <title>八、移动端常用模型</title>
    <url>/post/e4cf004f.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="八、移动端常用模型"><a href="#八、移动端常用模型" class="headerlink" title="八、移动端常用模型"></a>八、移动端常用模型</h1><h2 id="8-1-固比固模型"><a href="#8-1-固比固模型" class="headerlink" title="8.1  固比固模型"></a>8.1 固比固模型</h2><p>固比固模型：</p><blockquote><p>第一和第三部分宽度确定，第二部分宽度自适应。</p></blockquote><h3 id="8-1-1-浮动方法："><a href="#8-1-1-浮动方法：" class="headerlink" title="8.1.1  浮动方法："></a>8.1.1 浮动方法：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">p</span><span class="selector-class">.no2</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">400px</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIdFJK.png" alt="NIdFJK.png"></p><h3 id="8-1-2-绝对定位方法（常用）："><a href="#8-1-2-绝对定位方法（常用）：" class="headerlink" title="8.1.2  绝对定位方法（常用）："></a>8.1.2 绝对定位方法（常用）：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="comment">/* 相对于父盒子内容宽的比值 */</span></span><br><span class="line">    <span class="comment">/* 内减盒模型 width 表示最终实际占有宽度 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="comment">/* 用父盒子padding挤出 no1 和 no3 的位置 */</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">200px</span>;</span><br><span class="line">    <span class="comment">/* 内减盒模型 */</span></span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.no1</span> &#123;</span><br><span class="line">    <span class="comment">/* 绝对定位 左侧 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.no3</span> &#123;</span><br><span class="line">    <span class="comment">/* 绝对定位 右侧 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.no2</span> &#123;</span><br><span class="line">    <span class="comment">/* 标准流 绝对定位脱标 让出标准流的位置 */</span></span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIdFJK.png" alt="NIdFJK.png"></p><h2 id="8-2-min-width-和-max-width"><a href="#8-2-min-width-和-max-width" class="headerlink" title="8.2 min-width 和 max-width"></a>8.2 min-width 和 max-width</h2><p>移动端书写宽度一般使用百分数，但是对于最小宽度min-width 和最大宽度 max-width 只能使用像素值。</p><blockquote><p>当百分数的结果在最大值和最小值之间时，按百分比的结果显示</p></blockquote><blockquote><p>当百分数的结果超出最大值和最小值时，按最大值或最小值显示</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">1000px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIdGQg.png" alt="NIdGQg.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>视口布局</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>移动端模型</tag>
      </tags>
  </entry>
  <entry>
    <title>七、多行文字截取</title>
    <url>/post/93671d67.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="七、多行文字截取"><a href="#七、多行文字截取" class="headerlink" title="七、多行文字截取"></a>七、多行文字截取</h1><h2 id="7-1-多行文字截取显示省略号"><a href="#7-1-多行文字截取显示省略号" class="headerlink" title="7.1  多行文字截取显示省略号"></a>7.1 多行文字截取显示省略号</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;  </span><br><span class="line">    <span class="comment">/* 设置显示模式box */</span></span><br><span class="line">    <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">    <span class="comment">/* 盒子排列方式  垂直排列*/</span></span><br><span class="line">    <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">    <span class="comment">/* 显示行数 */</span></span><br><span class="line">    <span class="attribute">-webkit-line-clamp</span>: <span class="number">2</span>;</span><br><span class="line">    <span class="comment">/* 文字超出显示省略号 */</span></span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="comment">/* 文字超出盒子溢出隐藏 */</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIam5V.png" alt="NIam5V.png"></p><h2 id="7-2-单行文字截取显示省略号"><a href="#7-2-单行文字截取显示省略号" class="headerlink" title="7.2  单行文字截取显示省略号"></a>7.2 单行文字截取显示省略号</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 单行文字显示省略号 */</span></span><br><span class="line"><span class="comment">/* 文字不换行 */</span></span><br><span class="line"><span class="attribute">white-space</span>: nowrap;</span><br><span class="line"><span class="comment">/* 文字超出显示省略号 */</span></span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line"><span class="comment">/* 内容溢出隐藏 */</span></span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIaK8U.png" alt="NIaK8U.png"></p><h2 id="7-3-英文字母强制换行（慎重使用）"><a href="#7-3-英文字母强制换行（慎重使用）" class="headerlink" title="7.3  英文字母强制换行（慎重使用）"></a>7.3 英文字母强制换行（慎重使用）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box2</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">    <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">    <span class="attribute">-webkit-line-clamp</span>: <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="comment">/* 强制将文字换行 慎重使用 */</span></span><br><span class="line">    <span class="attribute">word-break</span>: break-all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIaJV1.png" alt="NIaJV1.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>视口布局</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>多行文字截取</tag>
      </tags>
  </entry>
  <entry>
    <title>六、弹性盒</title>
    <url>/post/3f63028d.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="六、弹性盒"><a href="#六、弹性盒" class="headerlink" title="六、弹性盒"></a>六、弹性盒</h1><p>父盒子设置：</p><blockquote><p>display：-前缀-flex; 表示父盒子是弹性盒容器，自动可以将盒子并排显示</p></blockquote><p>子盒子设置：</p><blockquote><p>只设置宽度，不设置浮动，就可以达到并排显示。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="comment">/* 父盒子弹性盒容器 */</span></span><br><span class="line">    <span class="attribute">display</span>: -webkit-flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.no1</span> &#123;</span><br><span class="line">    <span class="comment">/* 子盒子不要书写浮动 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.no2</span> &#123;</span><br><span class="line">    <span class="comment">/* 子盒子不要书写浮动 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.no3</span> &#123;</span><br><span class="line">    <span class="comment">/* 子盒子不要书写浮动 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIUXDA.png" alt="NIUXDA.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>视口布局</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>弹性盒</tag>
      </tags>
  </entry>
  <entry>
    <title>五、内减盒模型</title>
    <url>/post/346324a4.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="五、内减盒模型"><a href="#五、内减盒模型" class="headerlink" title="五、内减盒模型"></a>五、内减盒模型</h1><p>之前我们的盒模型：书写width height 再写padding border margin ，是外扩盒模型</p><p>css3新增加的内减盒模型</p><h2 id="5-1-box-sizing-border-box"><a href="#5-1-box-sizing-border-box" class="headerlink" title="5.1  box-sizing:border-box"></a>5.1 box-sizing:border-box</h2><p>书写了width height 再设置padding border ，盒子占有不会变大，padding border是在内容宽高基础上内减的。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">    <span class="comment">/* 内减盒模型 */</span></span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIUm1e.png" alt="NIUm1e.png"></p><blockquote><p>一旦书写了box-sizing:border-box</p></blockquote><blockquote><p>width height 表示盒子占有的宽高</p></blockquote><h2 id="5-2-应用"><a href="#5-2-应用" class="headerlink" title="5.2  应用"></a>5.2 应用</h2><p>应用在有边框有padding盒子的均分</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="comment">/* 实际宽度50% */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">50px</span>;</span><br><span class="line">    <span class="comment">/* 内减盒模型 */</span></span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box  ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIUY9S.png" alt="NIUY9S.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>视口布局</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>内减盒模型</tag>
      </tags>
  </entry>
  <entry>
    <title>四、圣杯模型</title>
    <url>/post/935e13d2.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="四、圣杯模型"><a href="#四、圣杯模型" class="headerlink" title="四、圣杯模型"></a>四、圣杯模型</h1><p>盒子高矮不同，最终效果所有的盒子高度相同，并且是最高盒子的高度</p><h2 id="4-1-原理"><a href="#4-1-原理" class="headerlink" title="4.1  原理"></a>4.1 原理</h2><blockquote><p>margin-bottom：负数 可以改变盒子的浏览器读取高度</p></blockquote><blockquote><p>overflow：hidden； 盒子溢出隐藏，可以读取子盒子的高度并且以子盒子的高度撑开父盒子高度</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">        <span class="comment">/* 不书写高度 利用overflow读取子盒子高度 */</span></span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">        <span class="attribute">overflow</span>: hidden;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-class">.son</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;   </span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">        <span class="comment">/* margin-bottom:负值 改变盒子的高度 */</span></span><br><span class="line">        <span class="attribute">margin-bottom</span>: -<span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><h2 id="4-2-圣杯模型"><a href="#4-2-圣杯模型" class="headerlink" title="4.2  圣杯模型"></a>4.2 圣杯模型</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;!-- son1宽度<span class="number">20%</span> son2宽度<span class="number">50%</span> son3宽度<span class="number">30%</span> --&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span> class=<span class="string">"son1"</span>&gt;<span class="number">1</span>&lt;/p&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span> class=<span class="string">"son2"</span>&gt;<span class="number">2</span>&lt;/p&gt;</span><br><span class="line">    &lt;<span class="selector-tag">p</span> class=<span class="string">"son3"</span>&gt;<span class="number">3</span>&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">        <span class="comment">/* 读取子盒子最大的读取高度并且以这个高度撑开自身 */</span></span><br><span class="line">        <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-class">.son1</span> &#123;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: green;</span><br><span class="line">        <span class="comment">/* padding-bottom 让盒子变高 */</span></span><br><span class="line">        <span class="attribute">padding-bottom</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="comment">/* margin-bottom 让盒子变矮 */</span></span><br><span class="line">        <span class="attribute">margin-bottom</span>: -<span class="number">400px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-class">.son2</span> &#123;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">        <span class="comment">/* padding-bottom 让盒子变高 </span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">            margin-bottom 让盒子变矮</span></span><br><span class="line"><span class="comment">            </span></span><br><span class="line"><span class="comment">            一般做法：将盒子padding-bottom margin-bottom设置为 </span></span><br><span class="line"><span class="comment">            数值 &gt;= 该盒子高度和最高盒子高度差值</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">        <span class="attribute">padding-bottom</span>: <span class="number">2000px</span>;</span><br><span class="line">        <span class="attribute">margin-bottom</span>: -<span class="number">2000px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-class">.son3</span> &#123;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">30%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: blue;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NINRTP.png" alt="NINRTP.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>视口布局</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>圣杯模型</tag>
      </tags>
  </entry>
  <entry>
    <title>三、双飞翼模型</title>
    <url>/post/ea9a79da.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="三、双飞翼模型"><a href="#三、双飞翼模型" class="headerlink" title="三、双飞翼模型"></a>三、双飞翼模型</h1><h2 id="3-1-原理"><a href="#3-1-原理" class="headerlink" title="3.1  原理"></a>3.1 原理</h2><p>浮动元素margin-left：负数，表示相对于上一个元素位置偏移。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-class">.no2</span> &#123;</span><br><span class="line">        <span class="attribute">background-color</span>: green;</span><br><span class="line">        <span class="comment">/* margin-left:负数 表示相对于no1位置偏移 */</span></span><br><span class="line">        <span class="attribute">margin-left</span>: -<span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">opacity</span>: <span class="number">0.2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-class">.no3</span> &#123;</span><br><span class="line">        <span class="attribute">background-color</span>: blue;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NIYrtO.png" alt="NIYrtO.png"></p><h2 id="3-2-双飞翼模型"><a href="#3-2-双飞翼模型" class="headerlink" title="3.2  双飞翼模型"></a>3.2 双飞翼模型</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=<span class="string">"main"</span>&gt;主内容&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"left"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"right"</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* box left right 同级的浮动元素 */</span></span><br><span class="line">    <span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="comment">/* 通栏效果 */</span></span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-class">.main</span> &#123;</span><br><span class="line">        <span class="comment">/* 标准流 宽度自适应 标准流不设置宽度 </span></span><br><span class="line"><span class="comment">        同时设置margin：正数 也会占有位置 </span></span><br><span class="line"><span class="comment">        子盒子不设置宽度 子盒子实际占有宽度（包含margin）撑满父盒子内容宽度</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">210px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: green;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.left</span> &#123;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="comment">/* 固定宽度 */</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">        <span class="comment">/* 相对于no1位置的偏移 */</span></span><br><span class="line">        <span class="attribute">margin-left</span>: -<span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.right</span> &#123;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="comment">/* 固定宽度 */</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: blue;</span><br><span class="line">        <span class="comment">/* 移动自身宽度 */</span></span><br><span class="line">        <span class="attribute">margin-left</span>: -<span class="number">200px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/NINGQJ.png" alt="NINGQJ.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>视口布局</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>双飞翼模型</tag>
      </tags>
  </entry>
  <entry>
    <title>二、百分比布局</title>
    <url>/post/25d0a922.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="二、百分比布局"><a href="#二、百分比布局" class="headerlink" title="二、百分比布局"></a>二、百分比布局</h1><p>PC端有版心效果，移动端没有版心。因为移动端约束后的视口宽度是300~400之间，不设置版心，显示更多内容。</p><p>为了移动端效果和APP效果也是没有版心，移动端布局宽度一般使用百分比布局。</p><h2 id="2-1-标准文档流（浮动效果和标准文档流一样）"><a href="#2-1-标准文档流（浮动效果和标准文档流一样）" class="headerlink" title="2.1  标准文档流（浮动效果和标准文档流一样）"></a>2.1 标准文档流（浮动效果和标准文档流一样）</h2><blockquote><p>width：表示相对于父盒子内容宽度的比值</p></blockquote><blockquote><p>height：表示相对于父盒子内容高度的比值</p></blockquote><blockquote><p>padding：表示相对于父盒子内容宽度的比值</p></blockquote><blockquote><p>margin：表示相对于父盒子内容宽度的比值</p></blockquote><blockquote><p>border：边框不能使用百分比</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-class">.son</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">10%</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">10%</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/N5DPr4.png" alt="N5DPr4.png"></p><h2 id="2-2-绝对定位（脱标）："><a href="#2-2-绝对定位（脱标）：" class="headerlink" title="2.2  绝对定位（脱标）："></a>2.2 绝对定位（脱标）：</h2><blockquote><p>width：表示相对于定位参考盒子内容宽度+padding的比值</p></blockquote><blockquote><p>height：表示相对于定位参考盒子内容高度+padding的比值</p></blockquote><blockquote><p>padding：表示相对于定位参考盒子内容宽度+padding的比值</p></blockquote><blockquote><p>margin：表示相对于定位参考盒子内容宽度+padding的比值</p></blockquote><blockquote><p>border：边框不能使用百分比</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#000</span>;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-class">.son</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">10%</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">10%</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/N56gAJ.png" alt="N56gAJ.png"></p><h2 id="2-3-应用（均分）"><a href="#2-3-应用（均分）" class="headerlink" title="2.3  应用（均分）"></a>2.3 应用（均分）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span>="<span class="title">box</span>"&gt;</span></span><br><span class="line"><span class="class">    &lt;p&gt;1&lt;/p&gt;</span></span><br><span class="line"><span class="class">    &lt;p&gt;2&lt;/p&gt;</span></span><br><span class="line"><span class="class">    &lt;p&gt;3&lt;/p&gt;</span></span><br><span class="line"><span class="class">    &lt;p&gt;4&lt;/p&gt;</span></span><br><span class="line"><span class="class">&lt;/div&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">.<span class="title">box</span> &#123;</span></span><br><span class="line">        <span class="built_in">width</span>: <span class="number">100</span>%;</span><br><span class="line">        <span class="built_in">height</span>: <span class="number">300</span>px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* p均分box */</span></span><br><span class="line">.box p &#123;</span><br><span class="line">    <span class="keyword">float</span>: left;</span><br><span class="line">    <span class="built_in">width</span>: <span class="number">25</span>%;</span><br><span class="line">    <span class="built_in">height</span>: <span class="number">300</span>px;</span><br><span class="line">    <span class="built_in">background</span>-color: green;</span><br><span class="line">&#125;</span><br><span class="line">.box p:nth-child(<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="built_in">background</span>-color: red;</span><br><span class="line">&#125;</span><br><span class="line">.box p:last-child &#123;</span><br><span class="line">    <span class="built_in">background</span>-color: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/30/N5cqqU.png" alt="N5cqqU.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>视口布局</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>百分比布局</tag>
      </tags>
  </entry>
  <entry>
    <title>一、视口</title>
    <url>/post/e125e69e.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="一、视口"><a href="#一、视口" class="headerlink" title="一、视口"></a>一、视口</h1><p>像素点：物理元件最小的发光单位。</p><p>分辨率：就是屏幕像素的数量，比如1600*900，指的是横向有1600的像素点，纵向有900的像素点。</p><p>视口：PC端视口宽度在没有缩放时就相当于分辨率宽度。</p><p>手机分辨率很大，但为了更好的显示网页效果，将手机宽度设置为<code>980px</code>，而不是像素宽度，这个宽度就是视口。</p><p>也就是说，做前端开发的完全没必要关心手机的分辨率。</p><p>但是980px对于手机页面来说，也大，所以用meta标签，来设置视口宽度：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 自定义视口宽度 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=400px"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>一旦设置了，浏览器此时就会认为自己的宽度是400px.此时就会按照400px的宽度来渲染页面。</p><blockquote><p>ppi： pixel per inch 每英尺多少个像素点</p></blockquote><blockquote><p>电脑的分辨率 / 电脑的ppi = 手机的分辨率（视口宽度） / 手机的ppi</p></blockquote><p>所以任何手机如果想要有显示和计算机一样的宽度，就要根据自己的分辨率、ppi的不同，而设置不同的视口。</p><p>如果我们加上：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;!—移动端添加视口约束宽度 --&gt;</span><br><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"viewport"</span> <span class="attribute">content</span>=<span class="string">"width=device-width"</span>&gt;</span><br></pre></td></tr></table></figure></div><p>此时每个手机的视口宽度，都是“<code>视口约束宽度</code>”。</p><p>每个手机的<code>视口约束宽度</code>不一样，这是为了给人看上去的屋里感觉是一样的：</p><blockquote><p>各个设备约束视口之后的视口宽度（300~400）</p></blockquote><p>你会发现这个宽度都不一样，但是此时人看上去的感觉是一样的。字号是一样大的。</p><p>做手机页面的时候，一定要加上：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"viewport"</span> <span class="attribute">content</span>=<span class="string">"width=device-width"</span>&gt;</span><br></pre></td></tr></table></figure></div><p>此时如果你写了一个p的字号为14px，不用担心用户能不能看清！此时厂商已经计算好了一个所谓的视口约束宽度。14px的PC端和手机端的感觉完全一样！</p><p>一般来说，手机视口约束之后都是320<del>420之间。而分辨率基本都是1000</del>1200.也就是说，视口约束之后所谓的1px，实际上手机用了2点多个像素来渲染。<code>手机中的图片，必须使用放大两倍的图片缩小使用</code>，这样能精细。</p><p>比如手机上需要10x10的图片，插入的时候就需要20x20的大的原图。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"viewport"</span> <span class="attribute">content</span>=<span class="string">"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"</span> <span class="attribute">id</span>=<span class="string">"viewport"</span>&gt;</span><br></pre></td></tr></table></figure></div><blockquote><p>width=device-width 约束视口</p></blockquote><blockquote><p>initial-scale=1.0 初始视口倍数是1倍</p></blockquote><blockquote><p>minimum-scale=1.0 最小允许视口宽度是1倍</p></blockquote><blockquote><p>maximum-scale=1.0 最大允许视口宽度是1倍</p></blockquote><blockquote><p>user-scalable=no 不允许用户缩放视口</p></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>视口布局</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>视口</tag>
      </tags>
  </entry>
  <entry>
    <title>九、动画</title>
    <url>/post/8e0794c2.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="九、动画"><a href="#九、动画" class="headerlink" title="九、动画"></a>九、动画</h1><h2 id="9-1-定义动画-keyframes"><a href="#9-1-定义动画-keyframes" class="headerlink" title="9.1  定义动画@- keyframes"></a>9.1 定义动画@- keyframes</h2><p>定义动画：</p><p>需要添加前缀</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@-</span>浏览器前缀-keyframes 动画名称&#123;</span><br><span class="line"><span class="selector-tag">from</span>&#123; &#125; 开始帧</span><br><span class="line">to&#123; &#125;  结束帧</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>key：关键</p></blockquote><blockquote><p>frame：帧</p></blockquote><p>每一帧书写的属性必须一一对应。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 定义动画 */</span></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> donghua &#123;</span><br><span class="line">    <span class="comment">/* 每一帧状态书写 */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 开始帧 */</span></span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>:lightblue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 结束帧 */</span></span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: green;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="9-2-调用动画-animation"><a href="#9-2-调用动画-animation" class="headerlink" title="9.2  调用动画 animation"></a>9.2 调用动画 animation</h2><p>animation 调用动画</p><p>需要添加浏览器前缀</p><p>第一个参数：动画名称</p><p>第二个参数：动画完成时间。单位：s （表示从动画开始到结束一次动画完成时间）</p><p>第三个参数：缓冲描述 linear ease 贝塞尔曲线</p><p>第四个参数：延迟时间。 单位 s （只有最开始有延迟时间 不写默认为0s）</p><p>第五个参数：动画次数 （数字 默认一次 可以定义任意次数 infinite无限次）</p><p>第六个参数：自动补全反方向动画 （alternate 添加自动补全，反方向也算一次动画）</p><p>第七个参数：保持最后一帧的状态（forwards 使用此参数不能设置无限次）</p><p>参数不写，则为默认值</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="comment">/* 调用动画 */</span></span><br><span class="line">            <span class="attribute">-webkit-animation</span>:donghua <span class="number">5s</span> linear <span class="number">0s</span> <span class="number">3</span> alternate forwards;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><h2 id="9-3-百分数定义动画"><a href="#9-3-百分数定义动画" class="headerlink" title="9.3  百分数定义动画"></a>9.3 百分数定义动画</h2><p>表示在整个动画中在该时间动画完成状态。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 定义动画 */</span></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> donghua &#123;</span><br><span class="line">    <span class="comment">/* 每一帧状态书写 */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 开始帧 */</span></span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>:lightblue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 中间段 */</span></span><br><span class="line">    10% &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line">    30% &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: yellow;</span><br><span class="line">    &#125;</span><br><span class="line">    90% &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: pink;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 结束帧 */</span></span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: green;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>从0%——100%是一次动画 0%相当于from 100%相当于to</p><h2 id="9-4-动画属性"><a href="#9-4-动画属性" class="headerlink" title="9.4  动画属性"></a>9.4 动画属性</h2><p>animation-play-state：paused</p><p>play 播放</p><p>state 状态</p><p>paused 暂停</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 暂停 */</span></span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-animation-play-state</span>: paused;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NaPDeg.png" alt="NaPDeg.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>动画</tag>
      </tags>
  </entry>
  <entry>
    <title>八、变形</title>
    <url>/post/495d679d.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="八、变形"><a href="#八、变形" class="headerlink" title="八、变形"></a>八、变形</h1><h2 id="8-1-2D变形"><a href="#8-1-2D变形" class="headerlink" title="8.1  2D变形"></a>8.1 2D变形</h2><p>transform: 变形</p><h3 id="8-1-1-旋转：rotate"><a href="#8-1-1-旋转：rotate" class="headerlink" title="8.1.1  旋转：rotate()"></a>8.1.1 旋转：rotate()</h3><p>旋转：rotate()</p><p>单位是deg</p><p>正方向：顺时针</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUzZmd.png" alt="NUzZmd.png"></p><p>img是行内元素，需要转块</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">display</span>: <span class="built_in">block</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUzc7R.png" alt="NUzc7R.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">            <span class="attribute">transform</span>:<span class="built_in">rotate</span>(<span class="number">30deg</span>);  <span class="comment">/*顺时针旋转30°*/</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NaS45q.png" alt="NaS45q.png"></p><h3 id="8-1-2-放缩-scale（数字）"><a href="#8-1-2-放缩-scale（数字）" class="headerlink" title="8.1.2  放缩 scale（数字）"></a>8.1.2 放缩 scale（数字）</h3><p>scale(数字)</p><p>没有单位</p><p>0-1表示缩小</p><p>1-无穷 表示放大</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 父盒子 溢出隐藏 */</span></span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line"></span><br><span class="line"><span class="attribute">transform</span>: scale(<span class="number">1.2</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NaptJ0.png" alt="NaptJ0.png"></p><h3 id="8-1-3-水平、垂直斜切-skew（）"><a href="#8-1-3-水平、垂直斜切-skew（）" class="headerlink" title="8.1.3  水平、垂直斜切 skew（）"></a>8.1.3 水平、垂直斜切 skew（）</h3><p>skew()</p><p>单位：deg</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">transform:skew(<span class="number">10</span>deg,<span class="number">40</span>deg);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NapDeJ.png" alt="NapDeJ.png"></p><h3 id="8-1-4-2D变形综合"><a href="#8-1-4-2D变形综合" class="headerlink" title="8.1.4  2D变形综合"></a>8.1.4 2D变形综合</h3><p>同一个元素可以有多个变形，用空格隔开。</p><p>元素没有变形 none</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">transform:rotate(<span class="number">90</span>deg) scale(<span class="number">1.2</span>) skew(<span class="number">30</span>deg,<span class="number">45</span>deg);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NapWQO.png" alt="NapWQO.png"></p><h2 id="8-2-2D空间移动"><a href="#8-2-2D空间移动" class="headerlink" title="8.2  2D空间移动"></a>8.2 2D空间移动</h2><p>空间移动：</p><blockquote><p>transform：translateX（）表示水平方向移动（表示相对于自身当前位置进行偏移）</p></blockquote><blockquote><p>transform：translateY（）表示垂直方向移动</p></blockquote><blockquote><p>transform：translate（ 水平方向，垂直方向 ）</p></blockquote><p>单位：px</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">transform</span>:translateX(<span class="number">10px</span>); </span><br><span class="line"><span class="attribute">transform</span>:translateY(<span class="number">10px</span>);</span><br><span class="line"><span class="attribute">transform</span>:translate(<span class="number">10px</span>,<span class="number">10px</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NapbfP.png" alt="NapbfP.png"></p><p>绝对定位的水平居中：</p><blockquote><p>left:50%;</p></blockquote><blockquote><p>margin-left:-自身宽度/2 （可以用空间移动来实现）</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*子绝父相*/</span></span><br><span class="line"><span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line"><span class="attribute">transform</span>: translateX(-<span class="number">50%</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NapX6S.png" alt="NapX6S.png"></p><h2 id="8-3-练习"><a href="#8-3-练习" class="headerlink" title="8.3 练习"></a>8.3 练习</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>我要约考<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no2"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>班型介绍<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no3"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>班车服务<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no4"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>在线法培<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"no5"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span>网上约车<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">     <span class="comment">/* 清除默认样式 */</span></span></span><br><span class="line">     * &#123;</span><br><span class="line">         padding: 0;</span><br><span class="line">         margin: 0;</span><br><span class="line">     &#125;</span><br><span class="line">     a &#123;</span><br><span class="line">         text-decoration: none;</span><br><span class="line"><span class="css">         <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">     &#125;</span><br><span class="line">     ul, ol &#123;</span><br><span class="line">         list-style: none;</span><br><span class="line">     &#125;</span><br><span class="line">     body &#123;</span><br><span class="line">         font-family: "Arial", "Microsoft Yahei";</span><br><span class="line">         font-size: 14px;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">         width: 700px;</span><br><span class="line">         padding: 20px;</span><br><span class="line"><span class="css">         <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css">         <span class="selector-tag">background-color</span>: <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.2</span>);</span></span><br><span class="line">         margin: 50px auto;</span><br><span class="line">         overflow: hidden;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line">         float: left;</span><br><span class="line">         width: 107px;</span><br><span class="line">         height: 107px;</span><br><span class="line"><span class="css">         <span class="comment">/* 同级元素有距离margin */</span></span></span><br><span class="line">         margin-right: 20px;</span><br><span class="line">         position: relative;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">         content: "";</span><br><span class="line">         position: absolute;</span><br><span class="line">         height: 107px;</span><br><span class="line">         width: 107px;</span><br><span class="line">         background-image: url(images/a_1.png);</span><br><span class="line">         top: 0;</span><br><span class="line">         left: 0;</span><br><span class="line">         transition: all 1s linear 0s;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no2</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">         background-image: url(images/a_2.png);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no3</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">         background-image: url(images/a_3.png);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no4</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">         background-image: url(images/a_4.png);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no5</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">         background-image: url(images/a_5.png);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line">         content: "";</span><br><span class="line">         position: absolute;</span><br><span class="line">         width: 46px;</span><br><span class="line">         height: 42px;</span><br><span class="line">         background-image: url(images/tb_1.png);</span><br><span class="line">         left: 50%;</span><br><span class="line">         top: 20px;</span><br><span class="line">         transform: translateX(-50%);</span><br><span class="line"><span class="css">         <span class="comment">/* 自定义压盖顺序 */</span></span></span><br><span class="line">         z-index: 4;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no2</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line">         background-image: url(images/tb_2.png);</span><br><span class="line">         width: 40px;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no3</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line">         background-image: url(images/tb_3.png);</span><br><span class="line">         width: 34px;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no4</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line">         background-image: url(images/tb_4.png);</span><br><span class="line">         width: 41px;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no5</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line">         background-image: url(images/tb_5.png);</span><br><span class="line">         width: 44px;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">         display: block;</span><br><span class="line">         width: 100%;</span><br><span class="line">         height: 100%;</span><br><span class="line"><span class="css">         <span class="comment">/* line-hight 数值大于盒子高度 偏下显示 */</span></span></span><br><span class="line">         line-height: 150px;</span><br><span class="line">         text-align: center;</span><br><span class="line">         /* 有定位的元素压盖没有定位的元素</span><br><span class="line">            有定位的元素才可以设置z-index</span><br><span class="line">          */</span><br><span class="line">          position: relative;</span><br><span class="line">          z-index: 10;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">         background-image: url(images/a_1_h1.png);</span><br><span class="line">         transform: rotate(360deg);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no2</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">         background-image: url(images/a_2_h1.png);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no3</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">         background-image: url(images/a_3_h1.png);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no4</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">         background-image: url(images/a_4_h1.png);</span><br><span class="line">     &#125;</span><br><span class="line"><span class="css">     <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.no5</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">         background-image: url(images/a_5_h1.png);</span><br><span class="line">     &#125;   </span><br><span class="line"> <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/Na9FpV.png" alt="Na9FpV.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>变形</tag>
        <tag>2D变形</tag>
        <tag>空间移动</tag>
      </tags>
  </entry>
  <entry>
    <title>七、过渡</title>
    <url>/post/9e7199fa.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="七、过渡"><a href="#七、过渡" class="headerlink" title="七、过渡"></a>七、过渡</h1><h2 id="7-1-过渡的基本形式"><a href="#7-1-过渡的基本形式" class="headerlink" title="7.1  过渡的基本形式"></a>7.1 过渡的基本形式</h2><p>元素——&gt;元素:hover</p><p>之前都是干嘣的效果，瞬间从开始完成到结束状态，中间过程看不到，可以认为几乎不花时间。</p><p>过渡效果：将开始状态到结束状态，可以将中间过程也可以看到。</p><p>过渡一般写在原样式中，而不是 元素:hover中。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">transition:<span class="keyword">all</span></span><br><span class="line">第一个参数：参与过渡的属性（一般习惯书写<span class="keyword">all</span>，表示所有参与变化的属性都参与过渡）。</span><br><span class="line">第二个参数：完成时间，单位s</span><br><span class="line">第三个参数：缓冲描述（linear匀速 ease变速 贝塞尔曲线）。</span><br><span class="line">第四个参数：延迟时间，单位s，如果没有延迟则为<span class="number">0</span>s。</span><br></pre></td></tr></table></figure></div><p>贝塞尔曲线：无法直接书写，需要自己调，然后复制粘贴</p><p><img src="https://s1.ax1x.com/2020/06/23/NUxeiV.png" alt="NUxeiV.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">transition: all <span class="number">1</span>s cubic-bezier(<span class="number">0.35</span>, <span class="number">1.13</span>, <span class="number">0.82</span>,<span class="number">-0.08</span>) <span class="number">0</span>s;</span><br></pre></td></tr></table></figure></div><p>可以拆分为四个小属性：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GROOVY"><figure class="iseeu highlight /groovy"><table><tr><td class="code"><pre><span class="line">transition-<span class="string">property:</span> 参与过渡的属性</span><br><span class="line">transition-<span class="string">duration:</span>  完成时间</span><br><span class="line">transition-timing-<span class="string">function:</span>  缓冲描述</span><br><span class="line">transition-<span class="string">delay:</span>  延迟时间</span><br></pre></td></tr></table></figure></div><h2 id="7-2-过渡参与的属性"><a href="#7-2-过渡参与的属性" class="headerlink" title="7.2  过渡参与的属性"></a>7.2 过渡参与的属性</h2><blockquote><p>transition-property: 参与过渡的属性</p></blockquote><p>数值型的属性可以参与过渡。比如<code>width</code> <code>height</code> <code>font-size</code>等</p><p><code>background-color</code> 和<code>background-position</code> 可以参与过渡</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">    <span class="comment">/* 过渡 */</span></span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">2s</span> ease <span class="number">0s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">68px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">29px</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(images/top.png) no-repeat;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">2s</span> linear <span class="number">0s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-position</span>: <span class="number">0</span> -<span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>过渡</tag>
      </tags>
  </entry>
  <entry>
    <title>六、背景</title>
    <url>/post/6f490a8f.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="六、背景"><a href="#六、背景" class="headerlink" title="六、背景"></a>六、背景</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">background</span>-<span class="built_in">color</span>： 背景色</span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">image</span>： 背景图</span><br><span class="line"><span class="built_in">background</span>-repeat： 背景图是否重复</span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">position</span>： 背景位置</span><br><span class="line"><span class="built_in">background</span>-attachment： 背景是否滚动</span><br></pre></td></tr></table></figure></div><h2 id="6-1-背景起源origin"><a href="#6-1-背景起源origin" class="headerlink" title="6.1  背景起源origin"></a>6.1 背景起源origin</h2><blockquote><p>background-origin： content-box；（内容盒）</p></blockquote><p>不设置content-box背景图默认背景起源位置是border以内。</p><p><img src="https://s1.ax1x.com/2020/06/23/NUh3VJ.png" alt="NUh3VJ.png"></p><p>设置content-box 背景图显示在内容盒以内。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">padding: 50px;</span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">origin</span>: <span class="built_in">content</span>-<span class="built_in">box</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUhUxK.png" alt="NUhUxK.png"></p><blockquote><p>background-position：背景图相对于背景起源位置的偏移（向右10px 向下50px）</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">background-position: <span class="number">10</span>px <span class="number">50</span>px;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUh5ZQ.png" alt="NUh5ZQ.png"></p><h2 id="6-2-背景裁切-clip"><a href="#6-2-背景裁切-clip" class="headerlink" title="6.2  背景裁切 clip"></a>6.2 背景裁切 clip</h2><blockquote><p>background-clip：content-box；</p></blockquote><p>表示将其他区域的背景裁切掉，<code>只剩下内容盒背景图</code></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">background</span>: url(images/people.png);</span><br><span class="line">            <span class="built_in">background</span>-<span class="built_in">origin</span>: <span class="built_in">content</span>-<span class="built_in">box</span>; </span><br><span class="line">            <span class="built_in">background</span>-clip: <span class="built_in">content</span>-<span class="built_in">box</span>;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NU4iz6.png" alt="NU4iz6.png"></p><p>等价写法：合并书写（未写no-repeat）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background</span>: url(<span class="string">images/people.png</span>) content-box;</span><br></pre></td></tr></table></figure></div><h2 id="6-3-背景尺寸-size"><a href="#6-3-背景尺寸-size" class="headerlink" title="6.3  背景尺寸 size"></a>6.3 背景尺寸 size</h2><blockquote><p>background-size：背景宽度 背景高度；</p></blockquote><p>调整背景图片尺寸，只写宽等比例调，宽高都写则使图片按照需要宽高尺寸调整。</p><h3 id="6-3-1-像素表示法："><a href="#6-3-1-像素表示法：" class="headerlink" title="6.3.1  像素表示法："></a>6.3.1 像素表示法：</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">background-size: <span class="number">400</span>px <span class="number">500</span>px;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NU41Qf.png" alt="NU41Qf.png"></p><h3 id="6-3-2-百分数表示法"><a href="#6-3-2-百分数表示法" class="headerlink" title="6.3.2  百分数表示法"></a>6.3.2 百分数表示法</h3><p>background-size：背景图宽度相对于大背景宽度比值 背景图高度相对于大背景高度比值；</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YAML"><figure class="iseeu highlight /yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">background-size:</span> <span class="number">50</span><span class="string">%</span> <span class="number">25</span><span class="string">%;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUj36J.png" alt="NUj36J.png"></p><h3 id="6-3-3-单词表示法"><a href="#6-3-3-单词表示法" class="headerlink" title="6.3.3  单词表示法"></a>6.3.3 单词表示法</h3><h4 id="6-3-3-1-cover（覆盖，尽可能大）"><a href="#6-3-3-1-cover（覆盖，尽可能大）" class="headerlink" title="6.3.3.1  cover（覆盖，尽可能大）"></a>6.3.3.1 cover（覆盖，尽可能大）</h4><p>背景图一定可以将大背景都覆盖住，并且背景图不会变形，等比例放大或缩小。背景图可能显示不完整。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">background</span>-<span class="built_in">size</span>: cover;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUjUk6.png" alt="NUjUk6.png"></p><h4 id="6-3-3-2-contain（容纳，显示背景图的全部）"><a href="#6-3-3-2-contain（容纳，显示背景图的全部）" class="headerlink" title="6.3.3.2  contain（容纳，显示背景图的全部）"></a>6.3.3.2 contain（容纳，显示背景图的全部）</h4><p>背景图一定可以显示完整，并且背景图不会变形，等比例放大或缩小。大背景可能会留白。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">background</span>-<span class="built_in">size</span>: contain;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUjrXd.png" alt="NUjrXd.png"></p><h3 id="6-3-4-结合精灵图的使用"><a href="#6-3-4-结合精灵图的使用" class="headerlink" title="6.3.4  结合精灵图的使用"></a>6.3.4 结合精灵图的使用</h3><p>background-size 结合精灵图的使用：</p><blockquote><p>①盒子宽高放大或缩小</p></blockquote><blockquote><p>②背景图放大或缩小 background-size</p></blockquote><blockquote><p>③精灵图位置放大或缩小background-position</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*原精灵图*/</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="comment">/* 1 限制盒子宽高 */</span></span><br><span class="line">           <span class="attribute">width</span>: <span class="number">110px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">           <span class="attribute">background-image</span>: url(images/index-sprites9.png);</span><br><span class="line">            <span class="comment">/* 2 通过background-position 得到任意精灵图 */</span></span><br><span class="line">            <span class="attribute">background-position</span>: -<span class="number">60px</span> -<span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box1</span> &#123;</span><br><span class="line">            <span class="comment">/* 让精灵图缩小一半显示 */</span></span><br><span class="line">            <span class="comment">/* 1 盒子宽高减半 */</span></span><br><span class="line">            <span class="comment">/* 2 背景图减半 background-size */</span></span><br><span class="line">            <span class="comment">/* 3 background-position减半 */</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">55px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">17.5px</span>;</span><br><span class="line">            <span class="attribute">background-image</span>: url(images/index-sprites9.png);</span><br><span class="line">            <span class="attribute">background-size</span>: <span class="number">100px</span> <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">background-position</span>: -<span class="number">30px</span> -<span class="number">25px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box2</span> &#123;</span><br><span class="line">            <span class="comment">/* 让精灵图放大一倍显示 */</span></span><br><span class="line">            <span class="comment">/* 1 盒子宽高放大 */</span></span><br><span class="line">            <span class="comment">/* 2 背景图放大 background-size */</span></span><br><span class="line">            <span class="comment">/* 3 background-position放大 */</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">220px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">            <span class="attribute">background-image</span>: url(images/index-sprites9.png);</span><br><span class="line">            <span class="attribute">background-size</span>: <span class="number">400px</span> <span class="number">400px</span>;</span><br><span class="line">            <span class="attribute">background-position</span>: -<span class="number">120px</span> -<span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUjWh8.png" alt="NUjWh8.png"></p><h2 id="6-4-背景渐变"><a href="#6-4-背景渐变" class="headerlink" title="6.4  背景渐变"></a>6.4 背景渐变</h2><p>背景渐变使用的是<code>background-image</code>，而不是<code>background-color</code></p><p>css3新的属性或者属性值处于试验阶段会添加浏览器前缀。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">Chrome，Safari</span>   <span class="string">-webkit-</span></span><br><span class="line"><span class="attr">firefox</span>           <span class="string">-moz-</span></span><br><span class="line"><span class="attr">IE</span>               <span class="string">-ms-</span></span><br><span class="line"><span class="attr">opera</span>            <span class="string">-o-</span></span><br></pre></td></tr></table></figure></div><p>线性渐变：</p><blockquote><p>linear 线性</p></blockquote><blockquote><p>gradient 渐变</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">background</span>-<span class="built_in">image</span>: -前缀-<span class="built_in">linear</span>-gradient(渐变起始方向,渐变颜色,渐变颜色,……);</span><br></pre></td></tr></table></figure></div><p>处于试验阶段完整写法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 渐变 上面是红色下面是绿色 （渐变处于试验阶段属性值，各浏览器都要加前缀） */</span></span><br><span class="line"><span class="comment">/* 谷歌 Chrome 苹果 Safari 加前缀 -webkit- */</span></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">image</span>: -webkit-linear-gradient(top,<span class="built_in">red</span>,<span class="built_in">green</span>);</span><br><span class="line"><span class="comment">/* 火狐 firefox 加前缀 -moz- */</span></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">image</span>: -moz-linear-gradient(top,<span class="built_in">red</span>,<span class="built_in">green</span>);</span><br><span class="line"><span class="comment">/* IE  加前缀 -ms- */</span></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">image</span>: -ms-linear-gradient(top,<span class="built_in">red</span>,<span class="built_in">green</span>);</span><br><span class="line"><span class="comment">/* 欧朋 Opera 加前缀 -o- */</span></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">image</span>: -o-linear-gradient(top,<span class="built_in">red</span>,<span class="built_in">green</span>);</span><br><span class="line"><span class="comment">/* 当不处于试验阶段时，没有前缀 */</span></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">image</span>: linear-gradient(top,<span class="built_in">red</span>,<span class="built_in">green</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUvk4K.png" alt="NUvk4K.png"></p><p>第一个参数：渐变开始方向（只需要写开始的方向，不要写结束方向）</p><p>左上角：top left</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="built_in">background</span>-<span class="built_in">image</span>: -webkit-<span class="built_in">linear</span>-gradient(top left,orange,pink);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUvZge.png" alt="NUvZge.png"></p><p>第二个参数：渐变颜色，可以用逗号隔开书写多个颜色</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line"><span class="built_in">background</span>-<span class="built_in">image</span>: -webkit-linear-gradient(right,orange,pink,<span class="built_in">green</span>,<span class="built_in">red</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUvKHI.png" alt="NUvKHI.png"></p><p>颜色后面可以用空格隔开百分数，表示该颜色在整体渐变中出现的位置。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line"><span class="built_in">background</span>-<span class="built_in">image</span>: -webkit-linear-gradient(left,<span class="built_in">blue</span>,<span class="built_in">green</span>,<span class="built_in">red</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">image</span>: -webkit-linear-gradient(left,<span class="built_in">blue</span> <span class="number">10</span>%,<span class="built_in">green</span> <span class="number">20</span>%,<span class="built_in">red</span> <span class="number">30</span>%);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUv14f.png" alt="NUv14f.png"></p><h2 id="6-5-多背景"><a href="#6-5-多背景" class="headerlink" title="6.5  多背景"></a>6.5 多背景</h2><p>一个元素可以渲染多个背景，用逗号隔开</p><p>其他单一属性也可以用逗号隔开，表示对应背景图设置</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">background</span>: url(images/boya.png) content-box, url(images/p1.png);</span><br><span class="line"><span class="attribute">background-repeat</span>: no-repeat, no-repeat;</span><br><span class="line"><span class="attribute">background-size</span>: <span class="number">100px</span> <span class="number">100px</span>, cover;</span><br><span class="line"><span class="comment">/* 相对于背景图起源位置进行偏移 */</span></span><br><span class="line"><span class="attribute">background-position</span>: <span class="number">20px</span> <span class="number">20px</span>, <span class="number">20px</span> <span class="number">20px</span>;</span><br><span class="line"><span class="attribute">color</span>:blue;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUvabn.png" alt="NUvabn.png"></p><h2 id="6-6-综合应用"><a href="#6-6-综合应用" class="headerlink" title="6.6 综合应用"></a>6.6 综合应用</h2><p>先写普通精灵图片，再写渐变。否则无法单一对应渐变调整属性值 线性渐变无法写定位位置</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">.btn &#123;</span><br><span class="line">    <span class="comment">/* 行内元素 转块 */</span></span><br><span class="line">    <span class="built_in">display</span>: <span class="built_in">block</span>;</span><br><span class="line">    <span class="built_in">width</span>: 250px;</span><br><span class="line">    <span class="built_in">height</span>: 60px;</span><br><span class="line">    <span class="built_in">border</span>: 1px solid #<span class="number">333</span>;</span><br><span class="line">    <span class="built_in">border</span>-<span class="built_in">radius</span>: 8px;</span><br><span class="line">    margin: 50px;</span><br><span class="line">    <span class="comment">/* 先写普通精灵图片，再写渐变。否则无法单一对应渐变调整属性值 线性渐变无法写定位位置 */</span></span><br><span class="line">    <span class="comment">/* 放两张普通精灵图片，如果两张图片位置重合，则显示的精灵图颜色加深*/</span></span><br><span class="line">    <span class="built_in">background</span>-<span class="built_in">image</span>: url(images/header-sprites13.png), url(images/header-sprites13.png), -webkit-<span class="built_in">linear</span>-gradient(top, lightblue,blue);</span><br><span class="line">    <span class="comment">/* 线性渐变无法写定位位置 */</span></span><br><span class="line">    <span class="built_in">background</span>-<span class="built_in">position</span>: right top, left bottom;</span><br><span class="line">    text-align:<span class="built_in">center</span>;</span><br><span class="line">    line-<span class="built_in">height</span>: 60px;</span><br><span class="line">    <span class="built_in">color</span>: #fff;</span><br><span class="line">    <span class="built_in">font</span>-weight:bold;</span><br><span class="line">    <span class="built_in">font</span>-size: 30px;</span><br><span class="line">    <span class="comment">/* 文字阴影 */</span></span><br><span class="line">    text-shadow: <span class="number">0px</span> <span class="number">0px</span> 15px rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">8</span>);</span><br><span class="line">    <span class="comment">/* 盒子阴影 */</span></span><br><span class="line">    <span class="built_in">box</span>-shadow: 3px 3px 20px rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>);</span><br><span class="line">    <span class="comment">/* 过渡 */</span></span><br><span class="line">    transition: all 1s <span class="built_in">linear</span> <span class="number">0s</span>;</span><br><span class="line">&#125;</span><br><span class="line">.btn:hover &#123;</span><br><span class="line">    <span class="built_in">background</span>-<span class="built_in">position</span>: left bottom, -43px -209px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- javascript:void(<span class="number">0</span>);  点击 a 标签，不发生跳转 --&gt;</span><br><span class="line">&lt;a href=<span class="string">"javascript:void(0);"</span> class=<span class="string">"btn"</span>&gt;按&amp;nbsp;&amp;nbsp;钮&lt;/a&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUvy2F.png" alt="NUvy2F.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>背景</tag>
      </tags>
  </entry>
  <entry>
    <title>五、盒子阴影和文字阴影</title>
    <url>/post/1add8cb4.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="五、盒子阴影和文字阴影"><a href="#五、盒子阴影和文字阴影" class="headerlink" title="五、盒子阴影和文字阴影"></a>五、盒子阴影和文字阴影</h1><h2 id="5-1-盒子阴影"><a href="#5-1-盒子阴影" class="headerlink" title="5.1  盒子阴影"></a>5.1 盒子阴影</h2><h3 id="5-1-1-box-shadow参数用空格隔开"><a href="#5-1-1-box-shadow参数用空格隔开" class="headerlink" title="5.1.1  box-shadow参数用空格隔开"></a>5.1.1 box-shadow参数用空格隔开</h3><p>box-shadow：右偏移量 下偏移量 模糊半径 延伸量（可以省略） 颜色；</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="number">5px</span> <span class="number">10px</span> <span class="number">15px</span> <span class="number">20px</span> red;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUf1ht.png" alt="NUf1ht.png"></p><h3 id="5-1-2-一个盒子可以设置多个阴影，用逗号隔开"><a href="#5-1-2-一个盒子可以设置多个阴影，用逗号隔开" class="headerlink" title="5.1.2  一个盒子可以设置多个阴影，用逗号隔开"></a>5.1.2 一个盒子可以设置多个阴影，用逗号隔开</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">20</span>px red, <span class="number">20</span>px <span class="number">20</span>px <span class="number">10</span>px blue, <span class="number">40</span>px <span class="number">40</span>px <span class="number">10</span>px orange;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUfNng.png" alt="NUfNng.png"></p><h3 id="5-1-3-内阴影和外阴影"><a href="#5-1-3-内阴影和外阴影" class="headerlink" title="5.1.3  内阴影和外阴影"></a>5.1.3 内阴影和外阴影</h3><p>内阴影：只需要添加 inset</p><p>外阴影：默认都是外阴影 outset 可以不写</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">box-shadow:inset <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">20</span>px red;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUfs3V.png" alt="NUfs3V.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px <span class="number">20</span>px red;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUfRHJ.png" alt="NUfRHJ.png"></p><h3 id="5-1-4-常用阴影-盒子一周显示阴影"><a href="#5-1-4-常用阴影-盒子一周显示阴影" class="headerlink" title="5.1.4  常用阴影 盒子一周显示阴影"></a>5.1.4 常用阴影 盒子一周显示阴影</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">box-shadow: <span class="number">0</span>px <span class="number">0</span>px <span class="number">10</span>px rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">.5</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUfbuD.png" alt="NUfbuD.png"></p><h2 id="5-2-文字阴影"><a href="#5-2-文字阴影" class="headerlink" title="5.2  文字阴影"></a>5.2 文字阴影</h2><p>text-shadow: 右偏移量 下偏移量 模糊半径 颜色 ；</p><p>（和盒子阴影相似，但是没有内阴影和延伸量）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">text-shadow:<span class="number">3</span>px <span class="number">3</span>px <span class="number">8</span>px rgba(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">.6</span>);</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUfv4I.png" alt="NUfv4I.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>盒子阴影</tag>
        <tag>文字阴影</tag>
      </tags>
  </entry>
  <entry>
    <title>四、圆角 border-radius</title>
    <url>/post/71a638c8.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="四、圆角-border-radius"><a href="#四、圆角-border-radius" class="headerlink" title="四、圆角 border-radius"></a>四、圆角 border-radius</h1><h2 id="4-1-像素表示法："><a href="#4-1-像素表示法：" class="headerlink" title="4.1  像素表示法："></a>4.1 像素表示法：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        <span class="comment">/* 圆角 20px 表示以 20px为半径画圆的弧度*/</span></span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NU20tx.png" alt="NU20tx.png"></p><h2 id="4-1-1-可以进行拆分：从左上角开始，顺时针方向"><a href="#4-1-1-可以进行拆分：从左上角开始，顺时针方向" class="headerlink" title="4.1.1  可以进行拆分：从左上角开始，顺时针方向"></a>4.1.1 可以进行拆分：从左上角开始，顺时针方向</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">20px</span> <span class="number">40px</span> <span class="number">60px</span> <span class="number">80px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NU22Bd.png" alt="NU22Bd.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">border-radius: <span class="number">20</span>px <span class="number">80</span>px;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NU2I9f.png" alt="NU2I9f.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">border-radius: <span class="number">20</span>px <span class="number">80</span>px <span class="number">40</span>px;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NU27jg.png" alt="NU27jg.png"></p><h3 id="4-1-2-按角度拆分"><a href="#4-1-2-按角度拆分" class="headerlink" title="4.1.2  按角度拆分"></a>4.1.2 按角度拆分</h3><p>必须先写上下，再写左右</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COQ"><figure class="iseeu highlight /coq"><table><tr><td class="code"><pre><span class="line">border-<span class="built_in">top</span>-<span class="built_in">left</span>-radius: <span class="number">20</span>px;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NU2jNq.png" alt="NU2jNq.png"></p><h3 id="4-1-3-圆形"><a href="#4-1-3-圆形" class="headerlink" title="4.1.3  圆形"></a>4.1.3 圆形</h3><p>值为边长的一半（极限）或一半以上</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        </span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">100px</span>;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">203343430px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NURFb9.png" alt="NURFb9.png"></p><h3 id="4-1-4-胶囊型"><a href="#4-1-4-胶囊型" class="headerlink" title="4.1.4  胶囊型"></a>4.1.4 胶囊型</h3><p>圆角四个角度都设置，紧着短边来（极限是短边一半）（胶囊型）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NURMKe.png" alt="NURMKe.png"></p><h3 id="4-1-5-半圆"><a href="#4-1-5-半圆" class="headerlink" title="4.1.5  半圆"></a>4.1.5 半圆</h3><p>如果有些角度不设置圆角，会有更多的边转为圆角，极限是短边全部（半圆）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">100px</span> <span class="number">100px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NURt8f.png" alt="NURt8f.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">border-radius: <span class="number">0</span>px <span class="number">0</span>px <span class="number">100</span>px <span class="number">100</span>px;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NURwrQ.png" alt="NURwrQ.png"></p><h2 id="4-2-百分数表示法"><a href="#4-2-百分数表示法" class="headerlink" title="4.2  百分数表示法"></a>4.2 百分数表示法</h2><h3 id="4-2-1-圆形"><a href="#4-2-1-圆形" class="headerlink" title="4.2.1 圆形"></a>4.2.1 圆形</h3><p>正方形，极限50%</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NURs5q.png" alt="NURs5q.png"></p><h3 id="4-2-2-椭圆"><a href="#4-2-2-椭圆" class="headerlink" title="4.2.2  椭圆"></a>4.2.2 椭圆</h3><p>长方形，极限50%</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NURIaR.png" alt="NURIaR.png"></p><h3 id="4-2-3-树叶形"><a href="#4-2-3-树叶形" class="headerlink" title="4.2.3  树叶形"></a>4.2.3 树叶形</h3><p>有些角度不设置，极限100%</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">100%</span> <span class="number">0</span> <span class="number">100%</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NURXse.png" alt="NURXse.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>圆角</tag>
      </tags>
  </entry>
  <entry>
    <title>三、CSS3伪元素</title>
    <url>/post/d9448500.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="三、CSS3伪元素"><a href="#三、CSS3伪元素" class="headerlink" title="三、CSS3伪元素"></a>三、CSS3伪元素</h1><h2 id="3-1-before"><a href="#3-1-before" class="headerlink" title="3.1  ::before"></a>3.1 ::before</h2><p>元素::before</p><p>表示在原有内容之前插入</p><p>必须书写的一个属性content（内容） 属性值可以书写要添加的内容或者””</p><p>行内元素不能设置宽高，想设置宽高要转块</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">p:</span>:<span class="class">before </span>&#123;</span><br><span class="line">            <span class="comment">/* 必须书写content 不能省略 */</span></span><br><span class="line"><span class="symbol">            content:</span> <span class="string">"我是前面增加的内容"</span>;</span><br><span class="line">            font-size: <span class="number">50</span>px;</span><br><span class="line"><span class="symbol">            color:</span> red;</span><br><span class="line">            font-weight: bold;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="params">&lt;p&gt;</span>我是段落<span class="params">&lt;/p&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUgkM4.png" alt="NUgkM4.png"></p><h2 id="3-2-after"><a href="#3-2-after" class="headerlink" title="3.2  ::after"></a>3.2 ::after</h2><p>元素::after</p><p>表示在原有内容之后插入</p><p>必须书写的一个属性content（内容） 属性值可以书写要添加的内容或者””</p><p>行内元素不能设置宽高，想设置宽高要转块</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 伪元素：在CSS书写结构 */</span></span><br><span class="line">        <span class="selector-tag">p</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">            <span class="comment">/* 必须书写content 不能省略 */</span></span><br><span class="line">            <span class="attribute">content</span>: <span class="string">"我是后面增加的内容"</span>;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line">            <span class="attribute">font-weight</span>: bold;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUgZZR.png" alt="NUgZZR.png"></p><h2 id="3-3-应用"><a href="#3-3-应用" class="headerlink" title="3.3  应用"></a>3.3 应用</h2><h3 id="3-3-1-先导符号的使用"><a href="#3-3-1-先导符号的使用" class="headerlink" title="3.3.1  先导符号的使用"></a>3.3.1 先导符号的使用</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"box"</span>&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;&lt;<span class="selector-tag">a</span> href=<span class="string">""</span>&gt;文字文字文字文字文字文字文字文字文字文字&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;<span class="selector-tag">a</span> href=<span class="string">""</span>&gt;文字文字文字文字文字文字文字文字&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;<span class="selector-tag">a</span> href=<span class="string">""</span>&gt;文字文字文字文字文字文字&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;<span class="selector-tag">a</span> href=<span class="string">""</span>&gt;文字文字文字文字文字文字文字文字文字&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;<span class="selector-tag">a</span> href=<span class="string">""</span>&gt;文字文字文字文字文字文字文字文字文字文字&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;li&gt;&lt;<span class="selector-tag">a</span> href=<span class="string">""</span>&gt;文字文字文字文字&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">        <span class="attribute">list-style</span>: none;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">60px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">60px</span>;  </span><br><span class="line">        <span class="comment">/* a 是before父节点  */</span></span><br><span class="line">        <span class="attribute">position</span>: relative;</span><br><span class="line">        <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>::before &#123;</span><br><span class="line">        <span class="comment">/* 必须书写content */</span></span><br><span class="line">        <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">        <span class="comment">/* 行内元素  绝对定位 脱标 可以设置宽高*/</span></span><br><span class="line">        <span class="attribute">position</span>: absolute;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">23px</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>:hover &#123;</span><br><span class="line">        <span class="attribute">color</span>:orange;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>:hover::before &#123;</span><br><span class="line">        <span class="comment">/* 伪元素鼠标悬停效果 */</span></span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUgaJf.png" alt="NUgaJf.png"></p><h3 id="3-3-2-清除浮动的影响"><a href="#3-3-2-清除浮动的影响" class="headerlink" title="3.3.2  清除浮动的影响"></a>3.3.2 清除浮动的影响</h3><p>内墙法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cl"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cl"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">.cl &#123;</span><br><span class="line">        clear: both;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p>利用内墙法的原理添加伪元素清除浮动：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 使用伪元素清除浮动 */</span></span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="comment">/* 行内元素 转块 换行形成一堵墙 */</span></span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUg7wR.png" alt="NUg7wR.png"></p><h3 id="3-3-3-模拟交互效果"><a href="#3-3-3-模拟交互效果" class="headerlink" title="3.3.3  模拟交互效果"></a>3.3.3 模拟交互效果</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="params">&lt;div class="box"&gt;</span></span><br><span class="line">    <span class="params">&lt;p&gt;</span>文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字文字<span class="params">&lt;/p&gt;</span></span><br><span class="line"><span class="params">&lt;/div&gt;</span></span><br><span class="line"></span><br><span class="line">.<span class="class">box </span>&#123;</span><br><span class="line"><span class="symbol">        width:</span> <span class="number">300</span>px;</span><br><span class="line"><span class="symbol">        height:</span> <span class="number">300</span>px;</span><br><span class="line"><span class="symbol">        border:</span> <span class="number">1</span>px solid <span class="meta">#000;</span></span><br><span class="line"><span class="symbol">        margin:</span> <span class="number">50</span>px auto;</span><br><span class="line">        line-height: <span class="number">40</span>px;</span><br><span class="line"><span class="symbol">        position:</span> relative;</span><br><span class="line">        <span class="comment">/* 溢出隐藏 */</span></span><br><span class="line"><span class="symbol">        overflow:</span> hidden;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 蒙版 */</span></span><br><span class="line">    .box::<span class="class">after </span>&#123;</span><br><span class="line"><span class="symbol">        content:</span> <span class="string">"查看更多"</span>;</span><br><span class="line"><span class="symbol">        position:</span> absolute;</span><br><span class="line"><span class="symbol">        width:</span> <span class="number">300</span>px;</span><br><span class="line"><span class="symbol">        height:</span> <span class="number">300</span>px;</span><br><span class="line">        background-color: rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">.7</span>);</span><br><span class="line">        <span class="comment">/* 文字的水平居中 */</span></span><br><span class="line">        text-align: center;</span><br><span class="line">        <span class="comment">/* 文字的垂直居中 */</span></span><br><span class="line">        line-height: <span class="number">300</span>px;</span><br><span class="line"><span class="symbol">        left:</span> <span class="number">0</span>;</span><br><span class="line"><span class="symbol">        top:</span> <span class="number">300</span>px;</span><br><span class="line"><span class="symbol">        color:</span> <span class="meta">#fff;</span></span><br><span class="line">        font-weight: bold;  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 鼠标进入出现蒙版 */</span></span><br><span class="line">    .box:hover::<span class="class">after </span>&#123;</span><br><span class="line"><span class="symbol">        top:</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUgx6e.png" alt="NUgx6e.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>伪元素</tag>
      </tags>
  </entry>
  <entry>
    <title>二、CSS3伪类</title>
    <url>/post/dfe0dfe8.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="二、CSS3伪类"><a href="#二、CSS3伪类" class="headerlink" title="二、CSS3伪类"></a>二、CSS3伪类</h1><p>之前只有 a 标签具有合法伪类：</p><blockquote><p>a:link a:visited a:hover a:active</p></blockquote><h2 id="2-1-任何标签都可以书写hover伪类"><a href="#2-1-任何标签都可以书写hover伪类" class="headerlink" title="2.1  任何标签都可以书写hover伪类"></a>2.1 任何标签都可以书写hover伪类</h2><h2 id="2-2-表单元素伪类"><a href="#2-2-表单元素伪类" class="headerlink" title="2.2  表单元素伪类"></a>2.2 表单元素伪类</h2><h3 id="2-2-1-focus-表单获取焦点伪类"><a href="#2-2-1-focus-表单获取焦点伪类" class="headerlink" title="2.2.1  :focus  表单获取焦点伪类"></a>2.2.1 :focus 表单获取焦点伪类</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 获取焦点伪类 :hover */</span></span><br><span class="line"><span class="symbol">    input:</span><span class="class">hover </span>&#123;</span><br><span class="line">        <span class="comment">/* 去掉默认表单边框 */</span></span><br><span class="line"><span class="symbol">        outline:</span> none;</span><br><span class="line">        <span class="comment">/* 自己单独添加边框 */</span></span><br><span class="line"><span class="symbol">        border:</span> <span class="number">5</span>px solid <span class="meta">#000;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="params">&lt;form action=""&gt;</span></span><br><span class="line">    <span class="params">&lt;p&gt;</span></span><br><span class="line">        搜索框：<span class="params">&lt;input type="search" placeholder="占位符"&gt;</span></span><br><span class="line">    <span class="params">&lt;/p&gt;</span></span><br><span class="line">    <span class="params">&lt;p&gt;</span></span><br><span class="line">        电子邮箱：<span class="params">&lt;input type="email"&gt;</span></span><br><span class="line">    <span class="params">&lt;/p&gt;</span></span><br><span class="line"><span class="params">&lt;/form&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/22/NJOEAe.png" alt="NJOEAe.png"></p><h3 id="2-2-2-disabled-不可用表单伪类"><a href="#2-2-2-disabled-不可用表单伪类" class="headerlink" title="2.2.2  :disabled  不可用表单伪类"></a>2.2.2 :disabled 不可用表单伪类</h3><p>:disabled 不可用表单伪类</p><p>:enabled 可用表单伪类</p><p>表单可以设置一个属性disabled（不可用表单），所有表单默认都是可用表单。</p><blockquote><p>可用和不可用表单伪类都是直接渲染在浏览器上</p></blockquote><p>不可用表单属性（不能输入）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    电话：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"tel"</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/22/NJOfu6.png" alt="NJOfu6.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* :disabled 不可用表单伪类 */</span></span><br><span class="line">        <span class="selector-tag">input</span><span class="selector-pseudo">:disabled</span> &#123;</span><br><span class="line">            <span class="attribute">outline</span>: none;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">5px</span> solid red;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/22/NJOqgI.png" alt="NJOqgI.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:enabled</span> &#123;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">5px</span> solid green;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/22/NJXp5Q.png" alt="NJXp5Q.png"></p><h3 id="2-2-3-checked-表单被选中伪类"><a href="#2-2-3-checked-表单被选中伪类" class="headerlink" title="2.2.3  :checked 表单被选中伪类"></a>2.2.3 :checked 表单被选中伪类</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">input</span>[<span class="keyword">type</span>=<span class="string">"radio"</span>]:checked + span &#123;</span><br><span class="line">    color:red;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="keyword">label</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"sex"</span> checked&gt;&lt;span&gt;女&lt;/span&gt;</span><br><span class="line">&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">&lt;<span class="keyword">label</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"sex"</span>&gt;&lt;span&gt;男&lt;/span&gt;</span><br><span class="line">&lt;/<span class="keyword">label</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/22/NJXhzn.png" alt="NJXhzn.png"></p><h2 id="2-3-节点伪类"><a href="#2-3-节点伪类" class="headerlink" title="2.3  节点伪类"></a>2.3 节点伪类</h2><h3 id="2-3-1-only-child"><a href="#2-3-1-only-child" class="headerlink" title="2.3.1  :only-child"></a>2.3.1 :only-child</h3><p>:only-child 选中元素必须是某个元素唯一的一个儿子节点伪类</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 选中元素 li 必须是 ul 唯一的一个儿子 */</span></span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:only-child</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUcs56.png" alt="NUcs56.png"></p><h3 id="2-3-2-empty"><a href="#2-3-2-empty" class="headerlink" title="2.3.2  :empty"></a>2.3.2 :empty</h3><p>:empty 空节点伪类 （标签内没有任何内容 空格、缩进、换行等也算内容）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="class">div </span>&#123;</span><br><span class="line"><span class="symbol">        width:</span> <span class="number">100</span>px;</span><br><span class="line"><span class="symbol">        height:</span> <span class="number">100</span>px;</span><br><span class="line">        background-color: <span class="meta">#eee;</span></span><br><span class="line">        margin-bottom: <span class="number">10</span>px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="symbol">    div:</span><span class="class">empty </span>&#123;</span><br><span class="line">        background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="params">&lt;div&gt;</span><span class="params">&lt;/div&gt;</span></span><br><span class="line"><span class="params">&lt;div&gt;</span>空<span class="params">&lt;/div&gt;</span></span><br><span class="line"><span class="params">&lt;div&gt;</span>         <span class="params">&lt;/div&gt;</span></span><br><span class="line"><span class="params">&lt;div&gt;</span>                           <span class="params">&lt;/div&gt;</span></span><br><span class="line"><span class="params">&lt;div&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="params">&lt;/div&gt;</span></span><br><span class="line"><span class="params">&lt;div&gt;</span></span><br><span class="line">    <span class="params">&lt;span&gt;</span><span class="params">&lt;/span&gt;</span></span><br><span class="line"><span class="params">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/23/NUc2xe.png" alt="NUc2xe.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>伪类</tag>
      </tags>
  </entry>
  <entry>
    <title>一、CSS3</title>
    <url>/post/14671be9.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="一、CSS3"><a href="#一、CSS3" class="headerlink" title="一、CSS3"></a>一、CSS3</h1><h2 id="1-1-css3"><a href="#1-1-css3" class="headerlink" title="1.1  css3"></a>1.1 css3</h2><p>css3一些改变：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line">盒模型</span><br><span class="line">弹性盒</span><br><span class="line">媒体查询</span><br><span class="line"><span class="attribute">background</span>的改变</span><br><span class="line"><span class="attribute">transition</span> 过渡</span><br><span class="line"><span class="attribute">transform</span> 变形</span><br><span class="line"><span class="attribute">animation</span> 动画</span><br><span class="line">圆角</span><br><span class="line">盒子阴影和文字阴影</span><br><span class="line">选择器的增加</span><br></pre></td></tr></table></figure></div><p>css3 的使用不用进行任何声明，HTML可以使用css3 ，html 5 也可以使用css3 。只要浏览器支持就能渲染。</p><p>浏览器对于css3不认识的新属性不会报错，采用静默不处理方式。</p><h2 id="1-2-属性选择器"><a href="#1-2-属性选择器" class="headerlink" title="1.2  属性选择器"></a>1.2 属性选择器</h2><p>之前学习的选择器有：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">基础选择器：<span class="selector-tag">div</span>&#123;&#125;   <span class="selector-id">#box</span>&#123;&#125;   <span class="selector-class">.box</span>&#123;&#125;   *&#123;&#125; </span><br><span class="line">高级选择器：<span class="selector-tag">div</span> <span class="selector-tag">p</span>&#123;&#125;   <span class="selector-tag">div</span><span class="selector-class">.box</span>&#123;&#125;   <span class="selector-tag">h3</span>, <span class="selector-tag">div</span>, <span class="selector-tag">p</span>&#123;&#125;</span><br></pre></td></tr></table></figure></div><h3 id="1-2-1-属性选择器："><a href="#1-2-1-属性选择器：" class="headerlink" title="1.2.1  属性选择器：[]"></a>1.2.1 属性选择器：[]</h3><p>css 3 中通过标签属性进行选中元素</p><p>[]</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 属性选择器 */</span></span><br><span class="line"><span class="selector-tag">img</span>[src=<span class="string">"images/02.jpg"</span>] &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"images/01.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"images/02.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"images/04.jpg"</span> alt=<span class="string">""</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"images/05.jpg"</span> alt=<span class="string">""</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnPDmQ.png" alt="NnPDmQ.png"></p><h3 id="1-2-2-开头匹配："><a href="#1-2-2-开头匹配：" class="headerlink" title="1.2.2  开头匹配：^="></a>1.2.2 开头匹配：^=</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 开头匹配  选择href中以 html开头的 a 标签*/</span></span><br><span class="line"><span class="selector-tag">a</span>[href ^=<span class="string">"html"</span>] &#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"html/01.page"</span>&gt;html/<span class="number">01</span>.page&lt;/a&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"html/02.page"</span>&gt;html/<span class="number">02</span>.page&lt;/a&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"page/01.html"</span>&gt;page/<span class="number">01</span>.html&lt;/a&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"page/02.html"</span>&gt;page/<span class="number">02</span>.html&lt;/a&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnPjXD.png" alt="NnPjXD.png"></p><h3 id="1-2-3-结尾匹配："><a href="#1-2-3-结尾匹配：" class="headerlink" title="1.2.3  结尾匹配：$="></a>1.2.3 结尾匹配：$=</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 结尾匹配  选择href中以 html结尾的 a 标签*/</span></span><br><span class="line">    <span class="selector-tag">a</span>[href $=<span class="string">"html"</span>] &#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"html/01.page"</span>&gt;html/<span class="number">01</span>.page&lt;/a&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"html/02.page"</span>&gt;html/<span class="number">02</span>.page&lt;/a&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"page/01.html"</span>&gt;page/<span class="number">01</span>.html&lt;/a&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"page/02.html"</span>&gt;page/<span class="number">02</span>.html&lt;/a&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/Nnil90.png" alt="Nnil90.png"></p><h3 id="1-2-4-任意匹配："><a href="#1-2-4-任意匹配：" class="headerlink" title="1.2.4  任意匹配：*="></a>1.2.4 任意匹配：*=</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 任意匹配  选择href中有 2 的 a 标签*/</span></span><br><span class="line">    <span class="selector-tag">a</span>[href *=<span class="string">"2"</span>] &#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"html/01.page"</span>&gt;html/<span class="number">01</span>.page&lt;/a&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"html/02.page"</span>&gt;html/<span class="number">02</span>.page&lt;/a&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"page/01.html"</span>&gt;page/<span class="number">01</span>.html&lt;/a&gt;</span><br><span class="line">&lt;<span class="selector-tag">a</span> href=<span class="string">"page/02.html"</span>&gt;page/<span class="number">02</span>.html&lt;/a&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnFV8x.png" alt="NnFV8x.png"></p><h3 id="1-2-5-分组匹配："><a href="#1-2-5-分组匹配：" class="headerlink" title="1.2.5  分组匹配：~="></a>1.2.5 分组匹配：~=</h3><p>表示含义：属性值必须是独立单位（只存在一个属性值，或者有其他属性值但必须用空格隔开）</p><p>html 5 可以自定义属性，以data- 开头</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">/* 分组匹配 */</span><br><span class="line">        div[data-xi ~="box"]&#123;</span><br><span class="line">            /* 选中元素属性值必须具有box 并且box是独立成分 */</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 分组匹配 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-xi</span>=<span class="string">"box"</span>&gt;</span>box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-xi</span>=<span class="string">"box box2"</span>&gt;</span>box box2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-xi</span>=<span class="string">"box2 box"</span>&gt;</span>box2 box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-xi</span>=<span class="string">"box2-box"</span>&gt;</span>box2-box<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnF7z6.png" alt="NnF7z6.png"></p><h3 id="1-2-6-短横匹配："><a href="#1-2-6-短横匹配：" class="headerlink" title="1.2.6  短横匹配：|="></a>1.2.6 短横匹配：|=</h3><p>选中元素必须以属性值开头，如果还有其他属性值必须以短横隔开</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AXAPTA"><figure class="iseeu highlight /axapta"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 短横匹配 */</span></span><br><span class="line">    <span class="keyword">div</span>[data-xi |=<span class="string">"box"</span>]&#123;</span><br><span class="line">    <span class="comment">/* 选中元素属性值必须是box开头 如果有其他属性值必须以短横隔开 */</span></span><br><span class="line">        background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="keyword">div</span> data-xi=<span class="string">"box"</span>&gt;box&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> data-xi=<span class="string">"box box2"</span>&gt;box box2&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> data-xi=<span class="string">"box2 box"</span>&gt;box2 box&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> data-xi=<span class="string">"box2-box"</span>&gt;box2-box&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> data-xi=<span class="string">"box-2box"</span>&gt;box<span class="number">-2</span>box&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnnD29.png" alt="NnnD29.png"></p><h3 id="1-2-7-注意：可以省略标签名"><a href="#1-2-7-注意：可以省略标签名" class="headerlink" title="1.2.7  注意：可以省略标签名"></a>1.2.7 注意：可以省略标签名</h3><p>属性选择器并不是必须以标签开头。省略标签名也是合法的。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARMASM"><figure class="iseeu highlight /armasm"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 省略标签名 */</span></span><br><span class="line">    [<span class="meta">data</span>-xi ^=<span class="string">"box2"</span>]&#123;</span><br><span class="line">        <span class="keyword">background-color: </span>red<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="meta">data</span>-xi=<span class="string">"box"</span>&gt;<span class="keyword">box&lt;/div&gt;</span></span><br><span class="line"><span class="keyword">&lt;div </span><span class="meta">data</span>-xi=<span class="string">"box box2"</span>&gt;<span class="keyword">box </span><span class="keyword">box2&lt;/div&gt;</span></span><br><span class="line"><span class="keyword">&lt;div </span><span class="meta">data</span>-xi=<span class="string">"box2 box"</span>&gt;<span class="keyword">box2 </span><span class="keyword">box&lt;/div&gt;</span></span><br><span class="line"><span class="keyword">&lt;div </span><span class="meta">data</span>-xi=<span class="string">"box2-box"</span>&gt;<span class="keyword">box2-box&lt;/div&gt;</span></span><br><span class="line"><span class="keyword">&lt;div </span><span class="meta">data</span>-xi=<span class="string">"box-2box"</span>&gt;<span class="keyword">box-2box&lt;/div&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnnRUO.png" alt="NnnRUO.png"></p><h3 id="1-2-8-注意：属性选择器也可以使用连续交集"><a href="#1-2-8-注意：属性选择器也可以使用连续交集" class="headerlink" title="1.2.8  注意：属性选择器也可以使用连续交集"></a>1.2.8 注意：属性选择器也可以使用连续交集</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 属性选择器可以使用交集 中间不能有空格 */</span></span><br><span class="line">    <span class="selector-tag">img</span>[src=<span class="string">"images/02.jpg"</span>][alt=<span class="string">"图片加载失败"</span>] &#123;</span><br><span class="line">        <span class="attribute">border-color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"images/01.jpg"</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"images/02.jpg"</span> alt=<span class="string">"图片加载失败"</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"images/02.jpg"</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"images/04.jpg"</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">img</span> src=<span class="string">"images/05.jpg"</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnnvGQ.png" alt="NnnvGQ.png"></p><h2 id="1-3-儿子序选择器"><a href="#1-3-儿子序选择器" class="headerlink" title="1.3  儿子序选择器"></a>1.3 儿子序选择器</h2><p>儿子序选择器：</p><p>通过儿子在父级元素排名进行选中，只关心儿子在父亲盒子排名是老几，不关心儿子标签类型。</p><h3 id="1-3-1-first-child"><a href="#1-3-1-first-child" class="headerlink" title="1.3.1  :first-child { }"></a>1.3.1 :first-child { }</h3><p>元素：first-child {选中父级元素中第一个儿子}</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">.box h3:first-child &#123;</span><br><span class="line">            <span class="comment">/* 表示h3是box中的老大 */</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="keyword">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnuyWQ.png" alt="NnuyWQ.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">p</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/Nnu4oT.png" alt="Nnu4oT.png"></p><h3 id="1-3-2-last-child"><a href="#1-3-2-last-child" class="headerlink" title="1.3.2  :last-child { }"></a>1.3.2 :last-child { }</h3><p>元素：last-child {选中父级元素中最后一个儿子}</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">.box p:last-child &#123;</span><br><span class="line">        <span class="comment">/* 表示p是box中的最后一个 */</span></span><br><span class="line">        color: red;</span><br><span class="line">        font-weight: bold;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="keyword">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnK6AK.png" alt="NnK6AK.png"></p><h3 id="1-3-3-nth-child-n"><a href="#1-3-3-nth-child-n" class="headerlink" title="1.3.3  :nth-child(n) {}"></a>1.3.3 :nth-child(n) {}</h3><p>元素：nth-child(n) {任意一个儿子} n 是从 1 开始数的</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">.box h3:nth-child(<span class="number">3</span>) &#123;</span><br><span class="line">        <span class="comment">/* 表示h3是box中第3个 */</span></span><br><span class="line">        color: red;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="keyword">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnM3gH.png" alt="NnM3gH.png"></p><h3 id="1-3-4-nth-child-an-b"><a href="#1-3-4-nth-child-an-b" class="headerlink" title="1.3.4  :nth-child(an+b) {}"></a>1.3.4 :nth-child(an+b) {}</h3><p>元素：nth-child(an+b) { 连续多个} n 是从0开始</p><p>an 表示2、4、6……</p><p>an+b 表示1、3、5……</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:nth-child(2n)</span> &#123;</span><br><span class="line">    <span class="comment">/* 表示h3是box中第 2、4、6、8、……个 */</span></span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnQFdP.png" alt="NnQFdP.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:nth-child(2n+1)</span> &#123;</span><br><span class="line">    <span class="comment">/* 表示h3是box中第 1、3、5、7、……个 */</span></span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NnQfeI.png" alt="NnQfeI.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">table</span>, <span class="selector-tag">tr</span>, <span class="selector-tag">td</span> &#123;</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">        <span class="comment">/* 成为单线表格 */</span></span><br><span class="line">        <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">td</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">table</span> <span class="selector-tag">tr</span><span class="selector-pseudo">:nth-child(3n+2)</span> &#123;</span><br><span class="line">        <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>tr<em>20 20行 td</em>10 10列</p></blockquote><p><img src="https://s1.ax1x.com/2020/06/22/NJoFit.png" alt="NJoFit.png"></p><h3 id="1-3-5-nth-last-child-n"><a href="#1-3-5-nth-last-child-n" class="headerlink" title="1.3.5  nth-last-child(n) { }"></a>1.3.5 nth-last-child(n) { }</h3><p>元素：nth-last-child(n) {倒数第几个儿子} n 从倒数第一开始</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">p</span><span class="selector-pseudo">:nth-last-child(3)</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/22/NJoJQU.png" alt="NJoJQU.png"></p><h3 id="1-3-6-nth-last-child-an-b"><a href="#1-3-6-nth-last-child-an-b" class="headerlink" title="1.3.6  :nth-last-child(an+b) { }"></a>1.3.6 :nth-last-child(an+b) { }</h3><p>元素：nth-last-child(an+b) { 倒数连续多个} n 是从0开始（倒数）</p><p>an 表示2、4、6……</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">p</span><span class="selector-pseudo">:nth-last-child(3n+2)</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/22/NJT17d.png" alt="NJT17d.png"></p><h2 id="1-4-儿子类型序选择器"><a href="#1-4-儿子类型序选择器" class="headerlink" title="1.4  儿子类型序选择器"></a>1.4 儿子类型序选择器</h2><p>强调同种标签（类型的含义）中排名</p><p>:first-of-type 同种标签的老大</p><p>:last-of-type 最后一个</p><p>:nth-of-type(n) 任意 序号是从1 开始</p><p>:nth-of-type(an+b) 任意连续 n从0开始</p><p>:nth-last-of-type(n) 任意 n从倒数第一开始</p><p>:nth-last-of-type(an+b) 任意连续 n从0开始（倒数）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 关注的是同种标签中的排名，而不是所有儿子标签中的整体的排名 */</span></span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">p</span><span class="selector-pseudo">:first-of-type</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/22/NJTc90.png" alt="NJTc90.png"></p><h2 id="1-5-关系节点选择器"><a href="#1-5-关系节点选择器" class="headerlink" title="1.5  关系节点选择器"></a>1.5 关系节点选择器</h2><h3 id="1-5-1-后代选择器-div-p"><a href="#1-5-1-后代选择器-div-p" class="headerlink" title="1.5.1  后代选择器 div p { }"></a>1.5.1 后代选择器 div p { }</h3><h3 id="1-5-2-子代选择器-gt"><a href="#1-5-2-子代选择器-gt" class="headerlink" title="1.5.2  子代选择器 &gt;"></a>1.5.2 子代选择器 &gt;</h3><p>选中元素必须是儿子节点，不能选中孙子等其他元素</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">.box &gt; p &#123;</span><br><span class="line">        <span class="comment">/* 子代选择器 选中 p 必须是.box 的儿子 */</span></span><br><span class="line">        color: red;</span><br><span class="line">        font-size: <span class="number">30</span>px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="keyword">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt; 我是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">&lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span>&gt;</span><br><span class="line">            &lt;<span class="symbol">p</span>&gt;我也是<span class="symbol">p</span>标签&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/22/NJ7CCt.png" alt="NJ7CCt.png"></p><h3 id="1-5-3-后面第一个亲兄弟（同一个父节点）"><a href="#1-5-3-后面第一个亲兄弟（同一个父节点）" class="headerlink" title="1.5.3  + 后面第一个亲兄弟（同一个父节点）"></a>1.5.3 + 后面第一个亲兄弟（同一个父节点）</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* + 表示后面第一个亲兄弟 */</span></span><br><span class="line">    h3 + p &#123;</span><br><span class="line">        color:green;</span><br><span class="line">        font-size: <span class="number">50</span>px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="keyword">class</span>="<span class="symbol">box2</span>"&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;我是<span class="symbol">h3</span>&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是<span class="symbol">p</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/22/NJ7lvT.png" alt="NJ7lvT.png"></p><h3 id="1-5-4-表示后面所有的亲兄弟"><a href="#1-5-4-表示后面所有的亲兄弟" class="headerlink" title="1.5.4  ~  表示后面所有的亲兄弟"></a>1.5.4 ~ 表示后面所有的亲兄弟</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ~ 表示后面所有亲兄弟 */</span></span><br><span class="line">    <span class="selector-tag">h3</span> ~ <span class="selector-tag">p</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>:green;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/22/NJ7RPI.png" alt="NJ7RPI.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS3</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>CSS3</tag>
        <tag>选择器</tag>
      </tags>
  </entry>
  <entry>
    <title>四、插入视频、音频</title>
    <url>/post/33d895b7.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="四、插入视频、音频"><a href="#四、插入视频、音频" class="headerlink" title="四、插入视频、音频"></a>四、插入视频、音频</h1><h2 id="4-1-传统方法插入视频"><a href="#4-1-传统方法插入视频" class="headerlink" title="4.1  传统方法插入视频"></a>4.1 传统方法插入视频</h2><p>通过将视频先上传到视频网站，通过分享将视频引入网页中。</p><p><img src="https://s1.ax1x.com/2020/06/18/NnSiEq.png" alt="NnSiEq.png"></p><p><img src="https://s1.ax1x.com/2020/06/18/NnS8PK.png" alt="NnS8PK.png"></p><p>缺点：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">必须本地计算机具有flash插件才可以播放</span><br><span class="line">原视频有广告，引入的也有广告</span><br></pre></td></tr></table></figure></div><p>优点：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">不占用本地服务器资源</span><br></pre></td></tr></table></figure></div><h2 id="4-2-HTML5插入视频"><a href="#4-2-HTML5插入视频" class="headerlink" title="4.2  HTML5插入视频"></a>4.2 HTML5插入视频</h2><p>HTML5有插入视频标签</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ADA"><figure class="iseeu highlight /ada"><table><tr><td class="code"><pre><span class="line">video：标签</span><br><span class="line">src：视频路径</span><br><span class="line">controls：控制条</span><br><span class="line"><span class="keyword">loop</span>：循环播放</span><br><span class="line">autoplay：自动播放 如果无法自动播放则再添加一个 muted属性</span><br><span class="line">muted：静音</span><br></pre></td></tr></table></figure></div><p>优点：不需要借助flash插件，不会有广告</p><p>缺点：占用服务器资源</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"images/47HK2MpfKwqx1510325093_10s.mp4"</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>source标签可以引入视频路径</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span> <span class="attr">muted</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"images/s6amq2UYRyBp1510819081_10s.mp4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>video标签虽然是行内元素，但仍可以设置宽度：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"images/47HK2MpfKwqx1510325093_10s.mp4"</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span> <span class="attr">muted</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span> <span class="attr">muted</span> <span class="attr">width</span>=<span class="string">"200px"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"images/s6amq2UYRyBp1510819081_10s.mp4"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="4-3-插入音频"><a href="#4-3-插入音频" class="headerlink" title="4.3  插入音频"></a>4.3 插入音频</h2><p>传统方法和插入视频一样</p><p>audio：插入音频<br>src：路径<br>controls：控制条<br>autoplay：自动播放<br>loop：循环播放</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 一般不书写controls 作为背景音乐 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"audios/koushaozhange.mp3"</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
        <tag>视频</tag>
        <tag>音频</tag>
      </tags>
  </entry>
  <entry>
    <title>三、HTML 5 表单</title>
    <url>/post/90b1b42f.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="三、HTML-5-表单"><a href="#三、HTML-5-表单" class="headerlink" title="三、HTML 5 表单"></a>三、HTML 5 表单</h1><h2 id="3-1-form-标签"><a href="#3-1-form-标签" class="headerlink" title="3.1  form 标签"></a>3.1 form 标签</h2><p>form标签是功能性标签，用于表单提交，将所有的表单元书写在form标签内。</p><p>通过form标签id属性和其他表单元素form属性产生绑定，用于提交。</p><p>HTML 5 表单元素可以不书写在form标签内，使用属性产生绑定</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html 5 form标签改变 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">id</span>=<span class="string">"biaodan"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"请输入用户名"</span> <span class="attr">form</span>=<span class="string">"biaodan"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 之前的写法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交表单"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NmxEd0.png" alt="NmxEd0.png"></p><h2 id="3-2-label标签"><a href="#3-2-label标签" class="headerlink" title="3.2  label标签"></a>3.2 label标签</h2><p>label标签可以直接将要控制的表单书写在label标签内部，省略不写<code>for</code>属性</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">id</span>=<span class="string">"nv"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"nv"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- label 标签改变 直接将表单书写在label标签内部 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>&gt;</span>男</span><br><span class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><input type="radio" name="sex" id="nv"><label for="nv">女</label></p><p><label><input type="radio" name="sex">男</label></p><h2 id="3-3-placeholder属性"><a href="#3-3-placeholder属性" class="headerlink" title="3.3  placeholder属性"></a>3.3 placeholder属性</h2><p>占位符：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- placeholder 占位符 --&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 不使用 placeholder 占位符  使用value --&gt;</span></span><br><span class="line">    昵称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"请输入用户名"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>用户名：<input type="text" placeholder="请输入用户名"></p><p>昵称：<input type="text" value="请输入用户名"></p><h2 id="3-4-autofocus属性"><a href="#3-4-autofocus属性" class="headerlink" title="3.4  autofocus属性"></a>3.4 autofocus属性</h2><p><code>focus</code> 焦点</p><p><code>autofocus</code>自动获取焦点（提高用户体验）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- placeholder 占位符   autofocus 自动获取焦点--&gt;</span></span><br><span class="line">    用户名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span> <span class="attr">autofocus</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>用户名：<input type="text" placeholder="请输入用户名" autofocus></p><h2 id="3-5-required-属性"><a href="#3-5-required-属性" class="headerlink" title="3.5  required 属性"></a>3.5 required 属性</h2><p>必填项（表单提交时会进行验证，如果不书写，则无法提交）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 不使用 placeholder 占位符  使用value required 必填项--&gt;</span></span><br><span class="line">       昵称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"请输入用户名"</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>昵称：<input type="text" value="请输入用户名" required></p><h2 id="3-6-datalist自动感应"><a href="#3-6-datalist自动感应" class="headerlink" title="3.6  datalist自动感应"></a>3.6 datalist自动感应</h2><p><code>datalist</code>自动感应标签</p><p>通过其他表单元素<code>list</code>属性和<code>datalist</code>标签<code>id</code>属性产生绑定。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 自动感应的标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    你学会的技能：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">list</span>=<span class="string">"ganying"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">"ganying"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"html"</span>&gt;</span>网页制作<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"css"</span>&gt;</span>样式书写<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"js"</span>&gt;</span>js交互<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>你学会的技能：<input type="text" list="ganying"><datalist id="ganying"><option value="html">网页制作</option><option value="css">样式书写</option><option value="js">js交互</option></datalist></p><h2 id="3-7-新的输入表单元素"><a href="#3-7-新的输入表单元素" class="headerlink" title="3.7  新的输入表单元素"></a>3.7 新的输入表单元素</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XQUERY"><figure class="iseeu highlight /xquery"><table><tr><td class="code"><pre><span class="line">密码：password</span><br><span class="line">搜索框： search</span><br><span class="line">网址：url   会对网址进行正则验证</span><br><span class="line">电子邮箱：email</span><br><span class="line">数字<span class="built_in">：number</span>  可以设置最大最小和默认值</span><br><span class="line">电话：tel</span><br><span class="line">拖拽条：range  可以设置最大最小和默认值</span><br><span class="line">日期：date</span><br><span class="line">周：week</span><br><span class="line">颜色：color</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    用户名：</span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    密码：</span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    搜索框：</span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">placeholder</span>=<span class="string">"占位符"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    url（网址）: </span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"url"</span> <span class="attr">required</span> <span class="attr">placeholder</span>=<span class="string">"进行正则验证"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    电子邮箱：</span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    数字：</span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">min</span>=<span class="string">"1"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">value</span>=<span class="string">"50"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    电话：</span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"tel"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 拖拽条用法类似number min是最小值 max是最大值 --&gt;</span></span></span><br><span class="line"><span class="xml">    拖拽条：</span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">min</span>=<span class="string">"1"</span> <span class="attr">max</span>=<span class="string">"200"</span> <span class="attr">value</span>=<span class="string">"50"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    日期：</span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    周：</span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"week"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    颜色：</span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"color"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交表单"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><p>用户名：<input type="text"></p><p>密码：<input type="password"></p><p>搜索框：<input type="search" placeholder="占位符"></p><p>url（网址）: <input type="url" required placeholder="进行正则验证"></p><p>电子邮箱：<input type="email"></p><p>数字：<input type="number" min="1" max="100" value="50"></p><p>电话：<input type="tel"></p><p>拖拽条：<input type="range" min="1" max="200" value="50"></p><p>日期：<input type="date"></p><p>周：<input type="week"></p><p>颜色：<input type="color"></p><p><input type="submit" value="提交表单"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
        <tag>表单</tag>
      </tags>
  </entry>
  <entry>
    <title>二、html 5 骨架</title>
    <url>/post/7e074327.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="二、html-5-骨架"><a href="#二、html-5-骨架" class="headerlink" title="二、html 5 骨架"></a>二、html 5 骨架</h1><h2 id="2-1-HTML-5-骨架"><a href="#2-1-HTML-5-骨架" class="headerlink" title="2.1  HTML 5 骨架"></a>2.1 HTML 5 骨架</h2><p>1、HTML 5 的doctype非常简单。表明你的HTML 内容使用HTML 5 ，只需要简单的使用：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>DTD（文档类型声明头）。需要注意的是，现在的HTML5没有XHTML系列了。</p><p>这样做会让目前还不支持的HTML5的浏览器采用标准模式解析，这意味着它们会解析那些HTML5中兼容的旧的HTML的标签的部分，而忽略它们不支持HTML5的新特性。</p><p>2、在一个页面上做的第一件事通常是声明使用的字符集。在以前版本的HTML，它是一个非常复杂的<code>&lt;meta&gt;</code>元素，现在它变得非常简单：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;meta <span class="attribute">charset</span>=<span class="string">"UTF-8"</span>&gt;</span><br></pre></td></tr></table></figure></div><p>HTML 5 完整骨架：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="2-2-新的语言特性"><a href="#2-2-新的语言特性" class="headerlink" title="2.2  新的语言特性"></a>2.2 新的语言特性</h2><p>1、所有的type都不用写了（现在只有这3个可以省略）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 下面标签的type属性可以省略 可以使用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>2、所有自封闭标签，现在不写反斜杠合法</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 所有自封闭标签，现在不写反斜杠合法  可以使用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>3、标签名大小写都合法 （工作中不使用）</p><p>4、现在不写引号合法（工作中不使用）</p><h2 id="2-3-新的语义化标签"><a href="#2-3-新的语义化标签" class="headerlink" title="2.3  新的语义化标签"></a>2.3 新的语义化标签</h2><h3 id="2-3-1-lt-section-gt-lt-article-gt-lt-nav-gt-lt-header-gt-lt-footer-gt-lt-aside-gt"><a href="#2-3-1-lt-section-gt-lt-article-gt-lt-nav-gt-lt-header-gt-lt-footer-gt-lt-aside-gt" class="headerlink" title="2.3.1  &lt;section&gt; &lt;article&gt; &lt;nav&gt; &lt;header&gt; &lt;footer&gt; &lt;aside&gt;"></a>2.3.1 <code>&lt;section&gt;</code> <code>&lt;article&gt;</code> <code>&lt;nav&gt;</code> <code>&lt;header&gt;</code> <code>&lt;footer&gt;</code> <code>&lt;aside&gt;</code></h3><p>HTML就是负责页面语义的，HTML4.01中，div负责的任务太多，具体的语义没有拆分。</p><p>HTML 5 中，就是把div拆分为了更多的标签：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">区域<span class="tag">&lt;<span class="name">section</span>&gt;</span> </span><br><span class="line">文章<span class="tag">&lt;<span class="name">article</span>&gt;</span> </span><br><span class="line">导航 <span class="tag">&lt;<span class="name">nav</span>&gt;</span> </span><br><span class="line">头部<span class="tag">&lt;<span class="name">header</span>&gt;</span> </span><br><span class="line">底部 <span class="tag">&lt;<span class="name">footer</span>&gt;</span> </span><br><span class="line">侧边栏<span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>这些标签都和div一样，是容器级标签，可以互相嵌套，放什么都行，放自己也行。都是<code>block-level</code>，标准流中是块级元素。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- header 头部语义 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- nav 导航语义 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- section 区域语义 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- aside 侧边栏语义 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span>&gt;</span><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- article 文章语义 含有标题和段落 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- footer 底部语义 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="2-3-2-lt-figure-gt-lt-figcaption-gt-lt-time-gt-lt-mark-gt-lt-details-gt-lt-summary-gt"><a href="#2-3-2-lt-figure-gt-lt-figcaption-gt-lt-time-gt-lt-mark-gt-lt-details-gt-lt-summary-gt" class="headerlink" title="2.3.2  &lt;figure&gt; &lt;figcaption&gt; &lt;time&gt; &lt;mark&gt; &lt;details&gt; &lt;summary&gt;"></a>2.3.2 <code>&lt;figure&gt;</code> <code>&lt;figcaption&gt;</code> <code>&lt;time&gt;</code> <code>&lt;mark&gt;</code> <code>&lt;details&gt;</code> <code>&lt;summary&gt;</code></h3><p>以前的语义标签：<code>ul</code> <code>dl</code> <code>ol</code> <code>table</code> <code>p</code> <code>h</code> <code>span</code> <code>a</code> <code>img</code> <code>em</code> <code>u</code> <code>b</code> <code>i</code> 等等。</p><p>HTML 5 增加了一些语义化标签：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span> 和<span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>（一般用于图片介绍）</span><br><span class="line"><span class="tag">&lt;<span class="name">time</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span>和 <span class="tag">&lt;<span class="name">summary</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><code>&lt;details&gt;</code>标签用于描述文档或文档某个部分的细节。</p><p><code>&lt;summary&gt;</code>元素包含<code>&lt;details&gt;</code>元素的标题。</p><p><code>&lt;details&gt;</code>元素用于描述有关文档或文档片段的更多详情。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 图片解释说明 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 标题figcaption --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>图片标题<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/boya.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- time日期 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我们上课时间<span class="tag">&lt;<span class="name">time</span>&gt;</span>9点<span class="tag">&lt;/<span class="name">time</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- nark 强调 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>学习前端最重要的是<span class="tag">&lt;<span class="name">mark</span>&gt;</span>多练习<span class="tag">&lt;/<span class="name">mark</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 含有总结语义的标签 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- details 细节 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- summary 总结 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">summary</span>&gt;</span>我们每一阶段都有测试<span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>html基础测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>js基础测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>js进阶测试<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/18/NmcPKA.png" alt="NmcPKA.png"></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
      </tags>
  </entry>
  <entry>
    <title>一、html 5 简介</title>
    <url>/post/f7d8480c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="一、html-5-简介"><a href="#一、html-5-简介" class="headerlink" title="一、html 5 简介"></a>一、html 5 简介</h1><h2 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1  概述"></a>1.1 概述</h2><p>HTML 5 是HTML标准的最新演进版本。这个术语代表了两个不同的概念：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">①他是一个新的HTML语言版本，包含了新的元素、属性和行为</span><br><span class="line">②同时包含了一系列可以被用来让Web站点和应用更加多样化，功能更加强大的技术。</span><br></pre></td></tr></table></figure></div><h2 id="1-2-html-5-简介"><a href="#1-2-html-5-简介" class="headerlink" title="1.2  html 5 简介"></a>1.2 html 5 简介</h2><p>语义：能够让你更恰当的描述你的内容是什么。</p><p>连通性：能够让你和服务器之间通过创新的新技术方法进行通信。</p><p>离线&amp;存储：能够让网页在客户端本地存储数据以及更高效的离线运行。</p><p>多媒体：使video和audio成为了在所有Web中的一等公民。</p><p>2D/3D绘图&amp;效果：提供了一个更加分化范围的呈现选择。</p><p>性能&amp;集成：提供了非常显著的性能优化和更有效的计算机硬件使用。</p><p>设备访问Device Access：能够处理各种输入和输出设备。</p><p>样式设计：让作者们来创作更加复杂的主题吧！</p><p>HTML 5 的改变，涵盖了CSS3和JS的一些新特性，这些东西统称HTML 5 技术。</p><p>2014年10月29日，万维网联盟宣布，经过近乎8年的努力，HTML 5 标准规范最终制定完成，并已公开发布。</p><h2 id="1-3-兼容性"><a href="#1-3-兼容性" class="headerlink" title="1.3  兼容性"></a>1.3 兼容性</h2><p><code>官方HTML5 浏览器性能评分：</code></p><p><a href="http://html5test.com/" target="_blank" rel="noopener" class="LinkCard">官方HTML5 浏览器性能评分</a></p><p>满分555分，1个特性就是1分，一共555个新特性。</p><p><code>caniuse.com</code></p><p>可以检索任何一个HTML 5 新特性，在各个浏览器里面的兼容情况。比如我们检索box-shadow的支持情况：</p><blockquote><p>多啦A梦测试，这是测试css3的：</p></blockquote><p><a href="http://www1.pconline.com.cn/pcedu/specialtopic/css3-doraemon/" target="_blank" rel="noopener" class="LinkCard">多啦A梦测试</a></p><p><img src="https://s1.ax1x.com/2020/06/18/Nm37CT.png" alt="Nm37CT.png"></p><p>所以CSS3现在已经在手机网页上应用了，但是电脑页面上还不敢大范围使用。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html5</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>html5</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub Please verify your email address to access all of GitHub’s features</title>
    <url>/post/ad959942.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><p>在推送新的博客内容到github时，结果失败了，而github上出现这么一段：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">Please verify your email<span class="built_in"> address </span><span class="keyword">to</span> access all of GitHub’s features.</span><br></pre></td></tr></table></figure></div><p>解决方法如下：</p><p>可以在“Add email address” 这个地方再添加一个网址，通过其他的网址验证，辅助验证当前无效的网址</p><p>我这原本是163的邮箱，后面又添加了一个QQ邮箱，然后通过QQ邮箱验证通过，再去验证以前的邮箱，然后再删除这个辅助邮箱，前面邮箱就可以使用了！</p><p>参考：<br><a href="https://www.jianshu.com/p/df5b7562121c" target="_blank" rel="noopener" class="LinkCard">GitHub Please verify your email address to access all of GitHub’s features</a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>十一、背景相关属性</title>
    <url>/post/34f1eb75.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="1-background-repeat"><a href="#1-background-repeat" class="headerlink" title="1  background-repeat"></a>1 background-repeat</h1><p>默认情况下，背景图片会平铺</p><p>Background 是背景的意思，repeat 是重复的意思</p><p>Background-repeat 属性用来设置背景的重复情形，一共有三种情形</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box</span>&#123;</span></span><br><span class="line">    width: 500px;</span><br><span class="line">    height: 500px;</span><br><span class="line">background-image: url(images/girl.png);</span><br><span class="line">border: 1px solid black;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/10/tTgSG8.png" alt="tTgSG8.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">.<span class="built_in">box</span>&#123;</span><br><span class="line">    <span class="built_in">width</span>: 500px;</span><br><span class="line">    <span class="built_in">height</span>: 500px;</span><br><span class="line">    <span class="built_in">background</span>-<span class="built_in">image</span>: url(images/girl.png);</span><br><span class="line">    <span class="built_in">border</span>: 1px solid black;</span><br><span class="line">    <span class="built_in">background</span>-repeat: repeat-y;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/<span class="built_in">style</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div class=<span class="string">"box"</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/10/tTgNRO.png" alt="tTgNRO.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">.<span class="built_in">box</span>&#123;</span><br><span class="line">    <span class="built_in">width</span>: 500px;</span><br><span class="line">    <span class="built_in">height</span>: 500px;</span><br><span class="line">    <span class="built_in">background</span>-<span class="built_in">image</span>: url(images/girl.png);</span><br><span class="line">    <span class="built_in">border</span>: 1px solid black;</span><br><span class="line">    <span class="built_in">background</span>-repeat: no-repeat;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/<span class="built_in">style</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div class=<span class="string">"box"</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/10/tTg0Ld.png" alt="tTg0Ld.png"></p><p>我们可以制作一个1px宽度的图片，然后设置为body的背景图片，设置repeat-x仅横向平铺</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line">body&#123;</span><br><span class="line">    <span class="built_in">background</span>-<span class="built_in">image</span>: url(images/bj.fw.png);</span><br><span class="line">    <span class="built_in">background</span>-repeat: repeat-x;</span><br><span class="line">  &#125;</span><br><span class="line">  .<span class="built_in">box</span>&#123;</span><br><span class="line">    <span class="built_in">width</span>: 500px;</span><br><span class="line">    <span class="built_in">height</span>: 500px;</span><br><span class="line">    <span class="built_in">background</span>-<span class="built_in">image</span>: url(images/girl.png);</span><br><span class="line">    <span class="built_in">border</span>: 1px solid black;</span><br><span class="line">    <span class="built_in">background</span>-repeat: no-repeat;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/<span class="built_in">style</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div class=<span class="string">"box"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/10/tTgfyQ.png" alt="tTgfyQ.png"></p><h1 id="2-background-position"><a href="#2-background-position" class="headerlink" title="2  background-position"></a>2 background-position</h1><p>背景图片定位</p><p>除了背景背景平铺外，CSS还提供了另一个强大的功能，即背景定位技术，能够精确控制背景在对象中的位置。</p><p>默认情况下，背景图像都是从元素 <code>padding</code> 区域的左上角开始出现的，但设计师往往希望背景能够出现在任何位置。通过 <code>background-position</code>属性，可以很轻松的控制背景图像在对象的背景区域中的起始显示位置。其语法格式为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line">background-position: xpos ypos | <span class="symbol">x</span>% <span class="symbol">y</span>% | <span class="symbol">x</span> <span class="symbol">y</span></span><br></pre></td></tr></table></figure></div><p>CSS1中，<code>background-position</code>属性需要 <code>2</code> 个参数值，第一个值用于横坐标，第二个值用于纵坐标，默认值为 0% 0%，即背景图像的左上角与对象背景区域的左上角对齐。如果只提供一个值，则用于 <code>x</code> 轴方向，<code>y</code> 轴方向使用默认值 <code>center</code>，即垂直居中。</p><p>上述语法格式表明，背景图像有 <code>3</code> 种定位方式：</p><h2 id="1）关键字定位"><a href="#1）关键字定位" class="headerlink" title="1）关键字定位"></a>1）关键字定位</h2><p>水平方向可选关键字有 left | center | right，垂直方向可选关键字有 top | center | bottom。</p><p>关键字定位，应用的是对齐规则，而不是坐标规则。</p><p>left 表示图像的左边与对象的左边对齐，为 right 表示图像的右边和对象的右边对齐；</p><p>top 表示图像的顶部和对象的顶部对齐，为 bottom 表示图像的底部和对象的底部对齐；</p><p>center 表示图像在水平和垂直方向的中心，和对象在水平和垂直方向的中心对齐。</p><p>例如背景图案 bg.gif，其尺寸为 100px * 100px，对象的尺寸为 200px * 200px，背景图像的位置使用预定义关键字定位。如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#ccc</span>;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-position</span>: center center;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(img/bg.gif);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/10/t7FuE4.png" alt="t7FuE4.png"></p><p>上述定位，就表示背景图像的中心，与背景区域的中心对齐，即背景图像位于对象的中央位置。</p><p>合写在一起时可以这样写（与上面的定位内容无关）：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COQ"><figure class="iseeu highlight /coq"><table><tr><td class="code"><pre><span class="line">background:url(images/girl.png) no-<span class="built_in">repeat</span> <span class="built_in">right</span> <span class="built_in">bottom</span></span><br></pre></td></tr></table></figure></div><h2 id="2）百分比定位"><a href="#2）百分比定位" class="headerlink" title="2）百分比定位"></a>2）百分比定位</h2><p>x% y%：表示使用百分比定位，是将图像本身（x%, y%）的那个点，与背景区域的（x%, y%）的那个点重合。最终得到背景图像起始位置坐标的计算公式为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="INI"><figure class="iseeu highlight /ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">x</span> = (对象的宽度 - 图像的宽度) * x%<span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">y</span> = (对象的高度 - 图像的高度) * y%<span class="comment">;</span></span><br></pre></td></tr></table></figure></div><p>还是上面的例子，改为百分比定位，要使背景图像居中，只需把背景图像的位置设置为50% 50% 即可。使用上面的公式，得到背景图像起始位置的坐标为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">x：(<span class="number">200</span>px - <span class="number">100</span>px) * <span class="number">50</span>%  = <span class="number">100</span>px * <span class="number">50</span>% = <span class="number">50</span>px</span><br><span class="line"></span><br><span class="line">y：(<span class="number">200</span>px - <span class="number">100</span>px) * <span class="number">50</span>%  = <span class="number">100</span>px * <span class="number">50</span>% = <span class="number">50</span>px</span><br></pre></td></tr></table></figure></div><p>得到的结果与上例相同。</p><p>当然，百分比的值也可以是负值，计算公式依然不变。还是上面的例子，把百分比改为 -50% -50%。此时，得到背景图像起始位置的坐标为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">x：(<span class="number">200</span>px - <span class="number">100</span>px) * (<span class="number">-50</span>%) = <span class="number">100</span>px * (<span class="number">-50</span>%) = <span class="number">-50</span>px</span><br><span class="line"></span><br><span class="line">y：(<span class="number">200</span>px - <span class="number">100</span>px) * (<span class="number">-50</span>%) = <span class="number">100</span>px * (<span class="number">-50</span>%) = <span class="number">-50</span>px</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/10/t7F2Vg.png" alt="t7F2Vg.png"></p><p>从上图可以看出，此时的背景图像只显示了原本图像的 1/4，这是因为背景图像的起始位置向左、向上移动后，只有1/4 的图案落到了背景区域。由于背景被设置为不重复，所以，就只显示了原本图像的 1/4。</p><h2 id="3）使用长度值定位"><a href="#3）使用长度值定位" class="headerlink" title="3）使用长度值定位"></a>3）使用长度值定位</h2><p>x y：表示使用长度值定位，是将背景图像的左上角，放置在对象的背景区域中（x, y）所指定的位置，即 x, y 定义的是背景图像的左上角，相对于背景区域左上角的偏移量。</p><p>偏移量长度可以是正值，也可以是负值。x 为正值表示向右偏移，负值表示向左偏移；y 为正值表示向下偏移，负值表示向上偏移。背景图像发生移动后，就有可能超出对象的背景区域。此时，超出的部分将不会显示，只会显示落入背景区域的部分。</p><p>如果把上面的例子改为长度值定位，要使背景图像居中，只需把背景图像的位置设置为50px 50px 即可。它就表示背景图像的左上角顶点，相对于对象背景区域的左上角顶点在 x轴右移 50px，在 y 轴下移 50px。得到的结果依然是背景图像位于对象的中央。</p><p>在CSS3中，background-position属性支持 4 个参数值，前两个值用于横坐标，后两个值用于纵坐标。这意味着我们可以相对于上左下右任意一个角落定位，而不是之前只能相对于左上角定位。可以用长度值、或百分比来指定背景图像的起始位置。</p><p>如果只提供一个值，则第二个值为center。如果提供两个值，第一个长度或百分比表示水平偏移，第二个长度或百分比表示垂直偏移。长度或百分比，表示背景图像的左上角相对于背景位置区域左上角的偏移。如，下面几个声明给出了背景的起点相对于背景区域左上角的偏移：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARDUINO"><figure class="iseeu highlight /arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">background</span>-<span class="built_in">position</span>: left <span class="number">10</span>px top <span class="number">15</span>px; <span class="comment">/* 10px, 15px */</span></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">position</span>: left top ; <span class="comment">/* 0px, 0px */</span></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">position</span>: <span class="number">10</span>px <span class="number">15</span>px; <span class="comment">/* 10px, 15px */</span></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">position</span>: left <span class="number">15</span>px; <span class="comment">/* 0px, 15px */</span></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">position</span>: <span class="number">10</span>px top ; <span class="comment">/* 10px, 0px */</span></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">position</span>: left top <span class="number">15</span>px; <span class="comment">/* 0px, 15px */</span></span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">position</span>: left <span class="number">10</span>px top ; <span class="comment">/* 10px, 0px */</span></span><br></pre></td></tr></table></figure></div><h1 id="3-精灵"><a href="#3-精灵" class="headerlink" title="3  精灵"></a>3 精灵</h1><p>如果背景图片的尺寸是900多<em>1000多，但是盒子只有250</em>250，此时盒子势必只能呈现背景图片的某一部分</p><p>使用background-position属性可以调整背景图片的位置，通过设置值为负数，可以向左、向上拉动背景图片</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"> .box&#123;</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">250</span>px;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">250</span>px;</span><br><span class="line"><span class="symbol">    border:</span><span class="number">1</span>px solid red;</span><br><span class="line"><span class="symbol">    background:</span>url(images/boya.png) no-repeat <span class="number">-200</span>px <span class="number">-30</span>px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="params">&lt;/style&gt;</span></span><br><span class="line"><span class="params">&lt;/head&gt;</span></span><br><span class="line"><span class="params">&lt;body&gt;</span></span><br><span class="line">  <span class="params">&lt;div class="box"&gt;</span><span class="params">&lt;/div&gt;</span></span><br><span class="line"><span class="params">&lt;/body&gt;</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">101px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">97px</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(images/boya.png) no-repeat -<span class="number">382px</span> -<span class="number">16px</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div><p>CSS精灵的英文解释</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">CSS Image Sprite</span><br><span class="line"> An image sprite is a collection of images put into a single image. Aweb<span class="built_in"> page </span>with many images can take a long time <span class="keyword">to</span> load <span class="keyword">and</span> generates multiple<span class="built_in"> server </span>requests. Usingimage sprites will reduce the number of<span class="built_in"> server </span>requests <span class="keyword">and</span> save bandwidth.</span><br><span class="line">图像精灵是将图像放入单个图像中的集合。一个包含多个图像的网页需要很长时间才能加载并生成多个服务器请求。使用图像精灵将减少服务器请求的数量和节省带宽。</span><br></pre></td></tr></table></figure></div><p>精灵也叫雪碧技术</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.re</span>&#123;</span></span><br><span class="line">    width: 16px;</span><br><span class="line">    height: 18px;</span><br><span class="line">    background:url(images/baidujingling.png) no-repeat 0px -451px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.kai</span>&#123;</span></span><br><span class="line">    width: 33px;</span><br><span class="line">    height: 19px;</span><br><span class="line">    background:url(images/baidujingling.png) no-repeat 0px -650px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"re"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"kai"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p>上传图床失败，没图了 ε=ε=ε=ε=ε=ε=┌(;￣◇￣)┘</p></blockquote><h1 id="4-钩子"><a href="#4-钩子" class="headerlink" title="4  钩子"></a>4 钩子</h1><p>精灵有一个非常重要的使用方法，就是使用CSS钩子<br>曾几何时，有几个标签：b用来加粗 u用来加下划线 i用来倾斜</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    正常文字</span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span>&gt;</span>倾斜<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>现在已经被CSS取代了，比如加粗用font-weight:bold; 下划线text-decoration:underline;<br>现在可以用来当做钩子，勾住背景图片，通常伴随绝对定位！！</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"> ul&#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">  &#125;</span><br><span class="line">  ul li&#123;</span><br><span class="line"><span class="symbol">    position:</span> relative;</span><br><span class="line">  &#125;</span><br><span class="line">  ul li b&#123;</span><br><span class="line"><span class="symbol">    position:</span> absolute;</span><br><span class="line"><span class="symbol">    top:</span><span class="number">6</span>px;</span><br><span class="line"><span class="symbol">    left:</span><span class="number">-15</span>px;</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">10</span>px;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">10</span>px;</span><br><span class="line"><span class="symbol">    background:</span> red;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="params">&lt;/style&gt;</span></span><br><span class="line"><span class="params">&lt;/head&gt;</span></span><br><span class="line"><span class="params">&lt;body&gt;</span></span><br><span class="line">  <span class="params">&lt;ul&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span><span class="params">&lt;b&gt;</span><span class="params">&lt;/b&gt;</span>文字文字文字<span class="params">&lt;/li&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span><span class="params">&lt;b&gt;</span><span class="params">&lt;/b&gt;</span>文字文字文字<span class="params">&lt;/li&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span><span class="params">&lt;b&gt;</span><span class="params">&lt;/b&gt;</span>文字文字文字<span class="params">&lt;/li&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span><span class="params">&lt;b&gt;</span><span class="params">&lt;/b&gt;</span>文字文字文字<span class="params">&lt;/li&gt;</span></span><br><span class="line">  <span class="params">&lt;/ul&gt;</span></span><br><span class="line"><span class="params">&lt;/body&gt;</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"> ul&#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">  &#125;</span><br><span class="line">  ul li&#123;</span><br><span class="line"><span class="symbol">    position:</span> relative;</span><br><span class="line">  &#125;</span><br><span class="line">  ul li b&#123;</span><br><span class="line"><span class="symbol">    position:</span> absolute;</span><br><span class="line"><span class="symbol">    top:</span><span class="number">4</span>px;</span><br><span class="line"><span class="symbol">    left:</span><span class="number">-15</span>px;</span><br><span class="line"><span class="symbol">    width:</span> <span class="number">12</span>px;</span><br><span class="line"><span class="symbol">    height:</span> <span class="number">12</span>px;</span><br><span class="line"><span class="symbol">    background:</span>url(images/baidu.png) no-repeat <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="params">&lt;/style&gt;</span></span><br><span class="line"><span class="params">&lt;/head&gt;</span></span><br><span class="line"><span class="params">&lt;body&gt;</span></span><br><span class="line">  <span class="params">&lt;ul&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span><span class="params">&lt;b&gt;</span><span class="params">&lt;/b&gt;</span>文字文字文字<span class="params">&lt;/li&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span><span class="params">&lt;b&gt;</span><span class="params">&lt;/b&gt;</span>文字文字文字<span class="params">&lt;/li&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span><span class="params">&lt;b&gt;</span><span class="params">&lt;/b&gt;</span>文字文字文字<span class="params">&lt;/li&gt;</span></span><br><span class="line">    <span class="params">&lt;li&gt;</span><span class="params">&lt;b&gt;</span><span class="params">&lt;/b&gt;</span>文字文字文字<span class="params">&lt;/li&gt;</span></span><br><span class="line">  <span class="params">&lt;/ul&gt;</span></span><br><span class="line"><span class="params">&lt;/body&gt;</span></span><br></pre></td></tr></table></figure></div><h1 id="5-background-attachment"><a href="#5-background-attachment" class="headerlink" title="5  background-attachment"></a>5 background-attachment</h1><p>背景图是否卷动（<em>只能应用在body中</em>）</p><p>默认：</p><blockquote><p>scroll 背景图跟随页面滚动而卷动</p></blockquote><blockquote><p>fixed 背景图不跟随页面的滚动而卷动 固定</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"> body&#123;</span><br><span class="line">            background-image:url(images/<span class="number">22.</span>jpg);</span><br><span class="line">            background-repeat: no-repeat;</span><br><span class="line">            background-attachment: fixed;</span><br><span class="line">        &#125;</span><br><span class="line">        .box &#123;</span><br><span class="line">            width: <span class="number">200</span>px;</span><br><span class="line">            height: <span class="number">200</span>px;</span><br><span class="line">            margin-bottom: <span class="number">20</span>px;</span><br><span class="line">            background-color: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>="<span class="symbol">box</span>"&gt;文字<span class="symbol">1111</span>&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;文字&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;文字&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;文字&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;文字&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;文字&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;文字&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;文字&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;文字&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;文字&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;文字<span class="symbol">222</span>&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">body</span>&gt;</span><br></pre></td></tr></table></figure></div><h1 id="6-background综合使用"><a href="#6-background综合使用" class="headerlink" title="6  background综合使用"></a>6 background综合使用</h1><p>background是复合属性，可以书写复合写法，每一个属性值用空格隔开<br>属性值可以写全，也可以省略表示使用默认值（background-position必须先写水平再写垂直）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background</span>: lightblue url(<span class="string">images/boya.png</span>) no-repeat <span class="number">0px</span> <span class="number">0px</span> fixed;</span><br></pre></td></tr></table></figure></div><h1 id="7-透明度rgba-0-0-0-0-5-opacity-0"><a href="#7-透明度rgba-0-0-0-0-5-opacity-0" class="headerlink" title="7  透明度rgba(0,0,0,0.5) opacity: 0;"></a>7 透明度rgba(0,0,0,0.5) opacity: 0;</h1><p><code>rgba(0,0,0,0.5)</code> 写在<code>background</code>中，调整的是背景图的透明度</p><p><code>opacity</code> 属性值<code>0-1</code>之间的小数 添加在盒子整个元素上，调整的是整个元素的透明度</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">opacity</span>:<span class="number">0</span>; 盒子完全透明  元素存在</span><br><span class="line"><span class="attribute">display</span>：<span class="attribute">none</span>; 消失 不存在页面中</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>十、css样式设置小技巧</title>
    <url>/post/fe392684.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="1-水平居中设置-行内元素"><a href="#1-水平居中设置-行内元素" class="headerlink" title="1  水平居中设置-行内元素"></a>1 水平居中设置-行内元素</h1><p>我们在实际工作中常会遇到需要设置水平居中的场景，比如为了美观，文章的标题一般都是水平居中显示的。</p><p>这里我们又得分两种情况：<code>行内元素</code> 还是 <code>块状元素</code> ，块状元素里面又分为定宽块状元素，以及不定宽块状元素。</p><p>如果被设置元素为文本、图片等行内元素时，水平居中是通过给父元素设置 <code>text-align:center</code> 来实现的。</p><p>父元素和子元素：如下面的html代码中，div是“我想要在父容器中水平居中显示”这个文本的父元素。反之这个文本是div的子元素</p><p>如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">html代码：</span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"txtCenter"</span>&gt;</span>我想要在父容器中水平居中显示。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">css代码：</span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.txtCenter</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h1 id="2-水平居中设置-定宽块状元素"><a href="#2-水平居中设置-定宽块状元素" class="headerlink" title="2  水平居中设置-定宽块状元素"></a>2 水平居中设置-定宽块状元素</h1><p>当被设置元素为 <code>块状元素</code> 时用 <code>text-align：center</code> 就不起作用了，这时也分两种情况：定宽块状元素和不定宽块状元素。</p><p>定宽块状元素：块状元素的宽度width为固定值。</p><p>满足定宽和块状两个条件的元素是可以通过设置“左右margin”值为“auto”来实现居中的。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">html代码：</span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是定宽块状元素，哈哈，我要水平居中显示。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">css代码：</span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  div&#123;</span><br><span class="line"><span class="css">      <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-tag">red</span>;<span class="comment">/*为了显示居中效果明显为 div 设置了边框*/</span></span></span><br><span class="line">      </span><br><span class="line"><span class="css">      <span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;<span class="comment">/*定宽*/</span></span></span><br><span class="line"><span class="css">      <span class="selector-tag">margin</span><span class="selector-pseudo">:20px</span> <span class="selector-tag">auto</span>;<span class="comment">/* margin-left 与 margin-right 设置为 auto */</span></span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>也可以写成：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COQ"><figure class="iseeu highlight /coq"><table><tr><td class="code"><pre><span class="line">margin-<span class="built_in">left</span>:<span class="built_in">auto</span>;</span><br><span class="line">margin-<span class="built_in">right</span>:<span class="built_in">auto</span>;</span><br></pre></td></tr></table></figure></div><p>注意：</p><blockquote><p>元素的“上下 margin” 是可以随意设置的。</p></blockquote><h1 id="3-水平居中总结-不定宽块状元素方法（一）"><a href="#3-水平居中总结-不定宽块状元素方法（一）" class="headerlink" title="3  水平居中总结-不定宽块状元素方法（一）"></a>3 水平居中总结-不定宽块状元素方法（一）</h1><p>在实际工作中我们会遇到需要为“不定宽度的块状元素”设置居中，比如网页上的分页导航，因为分页的数量是不确定的，所以我们不能通过设置宽度来限制它的弹性。</p><p>不定宽块状元素：块状元素的宽度width不固定。</p><p>不定宽度的块状元素有三种方法居中（这三种方法目前使用的都很多）：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>加入 table 标签</span><br><span class="line"><span class="number">2.</span>设置 display: inline 方法：与第一种类似，显示类型设为 行内元素，进行不定宽元素的属性设置</span><br><span class="line"><span class="number">3.</span>设置 position:relative 和 left:<span class="number">50</span>%：利用 相对定位 的方式，将元素向左偏移 <span class="number">50</span>% ，即达到居中的目的</span><br></pre></td></tr></table></figure></div><p>第一种方法：</p><p>为什么选择方法一加入table标签? 是利用table标签的长度自适应性—即不定义其长度也不默认父元素body的长度（table其长度根据其内文本长度决定），因此可以看做一个定宽度块元素，然后再利用定宽度块状居中的margin的方法，使其水平居中。</p><p>第一步：为需要设置的居中的元素外面加入一个 table 标签 ( 包括 <code>&lt;tbody&gt;</code>、<code>&lt;tr&gt;</code>、<code>&lt;td&gt;</code> )。</p><p>第二步：为这个 table 设置“左右 margin 居中”（这个和定宽块状元素的方法一样）。</p><p>举例如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">html代码：</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第一行文本<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第二行文本<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是第三行文本<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">css代码：</span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    table&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span> <span class="selector-tag">auto</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h1 id="4-水平居中总结-不定宽块状元素方法（二）"><a href="#4-水平居中总结-不定宽块状元素方法（二）" class="headerlink" title="4  水平居中总结-不定宽块状元素方法（二）"></a>4 水平居中总结-不定宽块状元素方法（二）</h1><p>第二种方法：改变块级元素的 display 为 inline 类型（设置为 行内元素 显示），然后使用 text-align:center 来实现居中效果。</p><p>如下例子：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">html代码：</span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">css代码：</span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* margin:0;padding:0（消除文本与div边框之间的间隙）*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">list-style</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">padding</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">display</span><span class="selector-pseudo">:inline</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="comment">/* margin-right:8px（设置li文本之间的间隔）*/</span></span></span><br><span class="line"><span class="css">    <span class="selector-class">.container</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">margin-right</span><span class="selector-pseudo">:8px</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">display</span><span class="selector-pseudo">:inline</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>这种方法相比第一种方法的优势是不用增加无语义标签，但也存在着一些问题：</p><blockquote><p>它将块状元素的 display 类型改为 inline，变成了行内元素，所以少了一些功能，比如设定长度值。</p></blockquote><h1 id="5-水平居中总结-不定宽块状元素方法（三）"><a href="#5-水平居中总结-不定宽块状元素方法（三）" class="headerlink" title="5  水平居中总结-不定宽块状元素方法（三）"></a>5 水平居中总结-不定宽块状元素方法（三）</h1><p>方法三：通过给父元素设置 float，然后给父元素设置 position:relative 和 left:50%，子元素设置 position:relative 和 left: -50% 来实现水平居中。</p><p>我们可以这样理解：假想ul层的父层（即下面例子中的div层）中间有条平分线将ul层的父层（div层）平均分为两份，ul层的css代码是将ul层的最左端与ul层的父层（div层）的平分线对齐；</p><p>而li层的css代码则是将li层的平分线与ul层的最左端（也是div层的平分线）对齐，从而实现li层的居中。</p><p>代码如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">html代码：</span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">css代码：</span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">position</span><span class="selector-pseudo">:relative</span>;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">left</span><span class="selector-pseudo">:50</span>%</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">      <span class="selector-class">.container</span> <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">list-style</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">padding</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">          </span><br><span class="line"><span class="css">          <span class="selector-tag">position</span><span class="selector-pseudo">:relative</span>;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">left</span><span class="selector-pseudo">:-50</span>%;</span></span><br><span class="line">      &#125;</span><br><span class="line"><span class="css">      <span class="selector-class">.container</span> <span class="selector-tag">li</span>&#123;<span class="attribute">float</span>:left;<span class="attribute">display</span>:inline;<span class="attribute">margin-right</span>:<span class="number">8px</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p>这三种方法使用得都非常广泛，各有优缺点，具体选用哪种方法，可以视具体情况而定。</p></blockquote><h1 id="6-垂直居中-父元素高度确定的单行文本"><a href="#6-垂直居中-父元素高度确定的单行文本" class="headerlink" title="6  垂直居中-父元素高度确定的单行文本"></a>6 垂直居中-父元素高度确定的单行文本</h1><p>我们在实际工作中也会遇到需要设置垂直居中的场景，比如好多报纸的文章标题在左右一侧时，常常会设置为垂直居中，为了用户体验性好。</p><p>这里我们又得分两种情况：</p><blockquote><p>父元素高度确定的单行文本，以及父元素高度确定的多行文本。</p></blockquote><p>父元素高度确定的单行文本的竖直居中的方法是通过设置父元素的 <code>height</code> 和 <code>line-height</code> 高度一致来实现的。</p><p>height: 该元素的高度，line-height: 顾名思义，行高（行间距），指在文本中，行与行之间的 基线间的距离。</p><p><code>line-height</code> 与 <code>font-size</code> 的计算值之差，在 CSS 中称为“行间距”。分为两半，分别加到一个文本行内容的顶部和底部。</p><p>这种文字行高与块高一致带来了一个弊端：</p><blockquote><p>当文字内容的长度大于块的宽时，就有内容脱离了块。</p></blockquote><p>如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        hi,Mango!</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">css代码：</span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">height</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">line-height</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">background</span>:<span class="selector-id">#999</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h1 id="7-垂直居中-父元素高度确定的多行文本（方法一）"><a href="#7-垂直居中-父元素高度确定的多行文本（方法一）" class="headerlink" title="7  垂直居中-父元素高度确定的多行文本（方法一）"></a>7 垂直居中-父元素高度确定的多行文本（方法一）</h1><p>父元素高度确定的多行文本、图片等的竖直居中的方法有两种</p><p>方法一：使用插入 table (包括tbody、tr、td)标签，同时设置 <code>vertical-align：middle</code>。<br>css 中有一个用于竖直居中的属性 <code>vertical-align</code>，在父元素设置此样式时，会对<code>inline-block</code>类型的子元素都有用。</p><p>下面看一下例子：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">html代码：</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td <span class="keyword">class</span>="<span class="symbol">wrap</span>"&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;看我是否可以居中。&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">td</span>&gt;&lt;/<span class="symbol">tr</span>&gt;&lt;/<span class="symbol">tbody</span>&gt;&lt;/<span class="symbol">table</span>&gt;</span><br><span class="line">  &lt;/<span class="symbol">body</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="symbol">css</span>代码：</span><br><span class="line">  <span class="symbol">table</span> <span class="symbol">td</span>&#123;height:<span class="number">500</span>px;background:#ccc&#125;</span><br></pre></td></tr></table></figure></div><p>因为 <code>td</code> 标签默认情况下就默认设置了 <code>vertical-align</code> 为 <code>middle</code>，所以我们不需要显式地设置了。</p><h1 id="8-垂直居中-父元素高度确定的多行文本（方法二）"><a href="#8-垂直居中-父元素高度确定的多行文本（方法二）" class="headerlink" title="8  垂直居中-父元素高度确定的多行文本（方法二）"></a>8 垂直居中-父元素高度确定的多行文本（方法二）</h1><p>除了插入table标签，可以使父元素高度确定的多行文本垂直居中之外，另外还有一种实现这种效果的方法。但这种方法兼容性比较差。</p><p>在 <code>chrome</code>、<code>firefox</code> 及 <code>IE8</code> 以上的浏览器下可以设置块级元素的 <code>display</code> 为 <code>table-cell</code>（设置为表格单元显示），激活 <code>vertical-align</code> 属性，但注意 <code>IE6</code>、<code>7</code> 并不支持这个样式, 兼容性比较差。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">html代码：</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>看我是否可以居中。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>看我是否可以居中。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>看我是否可以居中。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">css代码：</span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">height</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">background</span>:<span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">display</span><span class="selector-pseudo">:table-cell</span>;<span class="comment">/*IE8以上及Chrome、Firefox*/</span></span></span><br><span class="line"><span class="css">          <span class="selector-tag">vertical-align</span><span class="selector-pseudo">:middle</span>;<span class="comment">/*IE8以上及Chrome、Firefox*/</span></span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>这种方法的好处是不用添加多余的无意义的标签，但缺点也很明显，它的兼容性不是很好，不兼容 IE6、7而且这样修改display的block变成了table-cell，破坏了原有的块状元素的性质。</p><h1 id="9-隐性改变display类型"><a href="#9-隐性改变display类型" class="headerlink" title="9  隐性改变display类型"></a>9 隐性改变display类型</h1><p>有一个有趣的现象就是当为元素（不论之前是什么类型元素，<code>display:none</code>除外）设置以下 2 个句之一：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"> <span class="number">1.</span> position : absolute </span><br><span class="line"> <span class="number">2.</span> <span class="built_in">float</span> : left 或 <span class="built_in">float</span>:right</span><br></pre></td></tr></table></figure></div><p>简单来说，只要html代码中出现以上两句之一，元素的display显示类型就会自动变为以 <code>display:inline-block</code>（块状元素）的方式显示，当然就可以设置元素的 <code>width</code> 和 <code>height</code> 了，且默认宽度不占满父元素。</p><p>如下面的代码，小伙伴们都知道 <code>a</code> 标签是 行内元素 ，所以设置它的 <code>width</code> 是 <code>没有效果</code>的，但是设置为 <code>position:absolute</code> 以后，就可以了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">title</span>=<span class="string">""</span>&gt;</span>Mango<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">css代码:</span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">      <span class="selector-class">.container</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">position</span><span class="selector-pseudo">:absolute</span>;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">width</span><span class="selector-pseudo">:200px</span>;</span></span><br><span class="line"><span class="css">          <span class="selector-tag">background</span>:<span class="selector-id">#ccc</span>;</span></span><br><span class="line">      &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>九、单位和值</title>
    <url>/post/394da41.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="1-颜色值"><a href="#1-颜色值" class="headerlink" title="1  颜色值"></a>1 颜色值</h1><p>在网页中的颜色设置是非常重要，有字体颜色（color）、背景颜色（background-color）、边框颜色（border）等，设置颜色的方法也有很多种：</p><h2 id="1-1、英文命令颜色"><a href="#1-1、英文命令颜色" class="headerlink" title="1.1、英文命令颜色"></a>1.1、英文命令颜色</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure></div><h2 id="1-2、RGB颜色"><a href="#1-2、RGB颜色" class="headerlink" title="1.2、RGB颜色"></a>1.2、RGB颜色</h2><p>这个与 photoshop 中的 RGB 颜色是一致的，由 R(red)、G(green)、B(blue) 三种颜色的比例来配色。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">133</span>,<span class="number">45</span>,<span class="number">200</span>);&#125;</span><br></pre></td></tr></table></figure></div><p>每一项的值可以是 <code>0~255</code> 之间的整数，也可以是 <code>0%~100%</code> 的百分数。如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">color</span>:<span class="built_in">rgb</span>(<span class="number">20%</span>,<span class="number">33%</span>,<span class="number">25%</span>);&#125;</span><br></pre></td></tr></table></figure></div><h2 id="1-3、十六进制颜色"><a href="#1-3、十六进制颜色" class="headerlink" title="1.3、十六进制颜色"></a>1.3、十六进制颜色</h2><p>这种颜色设置方法是现在比较普遍使用的方法，其原理其实也是 RGB 设置，但是其每一项的值由 0-255 变成了十六进制 00-ff。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">color</span>:<span class="number">#00ffff</span>;&#125;</span><br></pre></td></tr></table></figure></div><p>配色表：<br><img src="https://s1.ax1x.com/2020/06/10/tTGOf0.png" alt="tTGOf0.png"></p><h1 id="2-长度值"><a href="#2-长度值" class="headerlink" title="2  长度值"></a>2 长度值</h1><p>目前比较常用到px（像素）、em、% 百分比，要注意其实这三种单位都是相对单位。</p><h2 id="2-1-像素"><a href="#2-1-像素" class="headerlink" title="2.1  像素"></a>2.1 像素</h2><p>像素指的是显示器上的小点（CSS规范中假设“90像素=1英寸”）。</p><p>实际情况是浏览器会使用显示器的实际像素值有关，在目前大多数的设计者都倾向于使用像素（px）作为单位。</p><h2 id="2-2-em"><a href="#2-2-em" class="headerlink" title="2.2  em"></a>2.2 em</h2><p>就是本元素给定字体的 font-size 值，如果元素的 font-size 为 14px ，那么 1em = 14px；如果 font-size 为 18px，那么 1em = 18px。</p><p>如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">text-indent</span>:<span class="number">2em</span>;&#125;</span><br></pre></td></tr></table></figure></div><p>上面代码就是可以实现段落首行缩进 24px（也就是两个字体大小的距离）。</p><p>下面注意一个特殊情况：</p><p>当给 font-size 设置单位为 em 时，此时计算的标准以 p 的父元素的 font-size 为基础。</p><p>如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">html:</span></span><br><span class="line">  <span class="params">&lt;p&gt;</span>以这个<span class="params">&lt;span&gt;</span>例子<span class="params">&lt;/span&gt;</span>为例。<span class="params">&lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">css:</span></span><br><span class="line">  p&#123;font-size:<span class="number">14</span>px&#125;</span><br><span class="line">  span&#123;font-size:<span class="number">0.8</span>em;&#125;</span><br></pre></td></tr></table></figure></div><p>结果:</p><blockquote><p>span 中的字体“例子”字体大小就为 11.2px（14 * 0.8 = 11.2px）。</p></blockquote><h2 id="2-3-百分比"><a href="#2-3-百分比" class="headerlink" title="2.3  百分比"></a>2.3 百分比</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">line-height</span>:<span class="number">130%</span>&#125;</span><br></pre></td></tr></table></figure></div><p>设置行高（行间距）为字体的130%（12 * 1.3 = 15.6px）。</p><h2 id="2-4-rem"><a href="#2-4-rem" class="headerlink" title="2.4  rem"></a>2.4 rem</h2><p>相对单位，相对于根元素（html）字号的比值。属性值是数字，可以带有小数点</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>八、CSS代码缩写，占用更少的带宽</title>
    <url>/post/147f428c.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="1-盒模型代码简写"><a href="#1-盒模型代码简写" class="headerlink" title="1  盒模型代码简写"></a>1 盒模型代码简写</h1><p>盒模型的外边距(margin)、内边距(padding)和边框(border)设置上下左右四个方向的边距是按照顺时针方向设置的：上右下左。</p><p>具体应用在margin和padding的例子如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">margin:<span class="number">10</span>px <span class="number">15</span>px <span class="number">12</span>px <span class="number">14</span>px;<span class="comment">/*上设置为10px、右设置为15px、下设置为12px、左设置为14px*/</span></span><br></pre></td></tr></table></figure></div><p>通常有下面三种缩写方法:</p><p>1、如果top、right、bottom、left的值相同，如下面代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">margin:<span class="number">10</span>px <span class="number">10</span>px <span class="number">10</span>px <span class="number">10</span>px;</span><br></pre></td></tr></table></figure></div><p>可缩写为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin</span>:<span class="number">10px</span>;</span><br></pre></td></tr></table></figure></div><p>2、如果top和bottom值相同、left和 right的值相同，如下面代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">margin:<span class="number">10</span>px <span class="number">20</span>px <span class="number">10</span>px <span class="number">20</span>px;</span><br></pre></td></tr></table></figure></div><p>可缩写为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">margin:<span class="number">10</span>px <span class="number">20</span>px;</span><br></pre></td></tr></table></figure></div><p>3、如果left和right的值相同，如下面代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">margin:<span class="number">10</span>px <span class="number">20</span>px <span class="number">30</span>px <span class="number">20</span>px;</span><br></pre></td></tr></table></figure></div><p>可缩写为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">margin:<span class="number">10</span>px <span class="number">20</span>px <span class="number">30</span>px;</span><br></pre></td></tr></table></figure></div><blockquote><p>注意：padding、border的缩写方法和margin是一致的。</p></blockquote><h1 id="2-颜色值缩写"><a href="#2-颜色值缩写" class="headerlink" title="2  颜色值缩写"></a>2 颜色值缩写</h1><p>关于颜色的css样式也是可以缩写的，当你设置的颜色是16进制的色彩值时，如果每两位的值相同，可以缩写一半。</p><p>例子1：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">color</span>:<span class="number">#000000</span>;&#125;</span><br></pre></td></tr></table></figure></div><p>可以缩写为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">color</span>: <span class="number">#000</span>;&#125;</span><br></pre></td></tr></table></figure></div><p>例子2：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">color</span>: <span class="number">#336699</span>;&#125;</span><br></pre></td></tr></table></figure></div><p>可以缩写为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">color</span>: <span class="number">#369</span>;&#125;</span><br></pre></td></tr></table></figure></div><h1 id="3-字体缩写"><a href="#3-字体缩写" class="headerlink" title="3  字体缩写"></a>3 字体缩写</h1><p>网页中的字体css样式代码也有他自己的缩写方式，下面是给网页设置字体的代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">font-style</span>:italic;</span><br><span class="line">    <span class="attribute">font-variant</span>:small-caps; </span><br><span class="line">    <span class="attribute">font-weight</span>:bold; </span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">12px</span>; </span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">1.5em</span>; </span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">"宋体"</span>,sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这么多行的代码其实可以缩写为一句：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">font</span>:italic  small-caps  bold  <span class="number">12px</span>/<span class="number">1.5em</span>  <span class="string">"宋体"</span>,sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>注意：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、使用这一简写方式你至少要指定 <span class="built_in">font</span>-size 和 <span class="built_in">font</span>-family 属性，其他的属性(如 <span class="built_in">font</span>-weight、<span class="built_in">font</span>-<span class="built_in">style</span>、<span class="built_in">font</span>-variant、line-<span class="built_in">height</span>)如未指定将自动使用默认值。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、在缩写时 <span class="built_in">font</span>-size 与 line-<span class="built_in">height</span> 中间要加入“/”斜扛。</span><br></pre></td></tr></table></figure></div><p>一般情况下因为对于中文网站，英文还是比较少的，所以下面缩写代码比较常用：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">font</span>:<span class="number">12px</span>/<span class="number">1.5em</span>  <span class="string">"宋体"</span>,sans-serif;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>只是有字号、行间距、中文字体、英文字体设置。</p></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>七、CSS布局模型</title>
    <url>/post/7d18fbbc.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="1-css布局模型"><a href="#1-css布局模型" class="headerlink" title="1  css布局模型"></a>1 css布局模型</h1><p>CSS包含3种基本的布局模型，用英文概括为：Flow、Layer 和 Float。</p><p>在网页中，元素有三种布局模型：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、流动模型（Flow）</span><br><span class="line"><span class="number">2</span>、浮动模型 (Float)</span><br><span class="line"><span class="number">3</span>、层模型（Layer）</span><br></pre></td></tr></table></figure></div><h1 id="2-流动模型"><a href="#2-流动模型" class="headerlink" title="2  流动模型"></a>2 流动模型</h1><p>流动（Flow）是默认的网页布局模式。也就是说网页在默认状态下的 HTML 网页元素都是根据流动模型来分布网页内容的。</p><p>流动布局模型具有2个比较典型的特征：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">第一点，块状元素都会在所处的包含元素内自上而下按顺序垂直延伸分布，因为在默认状态下，块状元素的宽度都为<span class="number">100</span>%。实际上，块状元素都会以行的形式占据位置。</span><br><span class="line"></span><br><span class="line">第二点，在流动模型下，内联元素都会在所处的包含元素内从左到右水平分布显示。（内联元素可不像块状元素这么霸道独占一行）</span><br></pre></td></tr></table></figure></div><h1 id="3-浮动模型"><a href="#3-浮动模型" class="headerlink" title="3  浮动模型"></a>3 浮动模型</h1><p>块状元素这么霸道都是独占一行，如果现在我们想让两个块状元素并排显示，设置元素浮动就可以实现。</p><p>任何元素在默认情况下是不能浮动的，但可以用 CSS 定义为浮动，如 div、p、table、img 等元素都可以被定义为浮动。</p><p>如下代码可以实现两个 div 元素一行显示。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GML"><figure class="iseeu highlight /gml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">div</span>&#123;</span><br><span class="line">    width:<span class="number">200</span>px;</span><br><span class="line">    height:<span class="number">200</span>px;</span><br><span class="line">    border:<span class="number">2</span>px red <span class="symbol">solid</span>;</span><br><span class="line">    float:left;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="symbol">id</span>=<span class="string">"div1"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="symbol">id</span>=<span class="string">"div2"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p>当然也可以同时设置两个元素右浮动也可以实现一行显示。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">2px</span> red solid;</span><br><span class="line">    <span class="attribute">float</span>:right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>设置两个元素一左一右也可以实现一行显示：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">2px</span> red solid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div1</span>&#123;<span class="attribute">float</span>:left;&#125;</span><br><span class="line"><span class="selector-id">#div2</span>&#123;<span class="attribute">float</span>:right;&#125;</span><br></pre></td></tr></table></figure></div><p>关于浮动的三个注意事项：</p><p>①要浮动，所有兄弟都要浮动</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">两个盒子想要并排，则两个盒子都要设置浮动。不能只设置一个浮动</span><br></pre></td></tr></table></figure></div><p>②一定要把浮动的元素放在一个div中</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROCESSING"><figure class="iseeu highlight /processing"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">"up"</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">"box1"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class=<span class="string">"box2"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">"down"</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    .up&#123;</span><br><span class="line">            <span class="built_in">width</span>: <span class="number">400</span>px;</span><br><span class="line">            <span class="built_in">height</span>: <span class="number">200</span>px;</span><br><span class="line">            <span class="built_in">background</span>-<span class="built_in">color</span>: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">        .up .box1&#123;</span><br><span class="line">           <span class="built_in">width</span>: <span class="number">200</span>px;</span><br><span class="line">           <span class="built_in">height</span>: <span class="number">200</span>px;</span><br><span class="line">           <span class="built_in">background</span>-<span class="built_in">color</span>:<span class="built_in">red</span>;</span><br><span class="line">           <span class="built_in">float</span>: left;</span><br><span class="line">       &#125;</span><br><span class="line">        .up .box2&#123;</span><br><span class="line">           <span class="built_in">width</span>: <span class="number">200</span>px;</span><br><span class="line">           <span class="built_in">height</span>: <span class="number">200</span>px;</span><br><span class="line">           <span class="built_in">background</span>-<span class="built_in">color</span>:<span class="built_in">blue</span>;</span><br><span class="line">           <span class="built_in">float</span>: left;</span><br><span class="line">       &#125;</span><br><span class="line">       .down&#123;</span><br><span class="line">           <span class="built_in">width</span>: <span class="number">400</span>px;</span><br><span class="line">           <span class="built_in">height</span>: <span class="number">200</span>px;</span><br><span class="line">           <span class="built_in">background</span>-<span class="built_in">color</span>:orange;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">  .up .box1&#123;</span><br><span class="line">           <span class="built_in">width</span>: <span class="number">200</span>px;</span><br><span class="line">           <span class="built_in">height</span>: <span class="number">200</span>px;</span><br><span class="line">           <span class="built_in">background</span>-<span class="built_in">color</span>:<span class="built_in">red</span>;</span><br><span class="line">           <span class="built_in">float</span>: left;</span><br><span class="line">       &#125;</span><br><span class="line">        .up .box2&#123;</span><br><span class="line">           <span class="built_in">width</span>: <span class="number">200</span>px;</span><br><span class="line">           <span class="built_in">height</span>: <span class="number">200</span>px;</span><br><span class="line">           <span class="built_in">background</span>-<span class="built_in">color</span>:<span class="built_in">blue</span>;</span><br><span class="line">           <span class="built_in">float</span>: left;</span><br><span class="line">       &#125;</span><br><span class="line">       .down&#123;</span><br><span class="line">           <span class="built_in">width</span>: <span class="number">400</span>px;</span><br><span class="line">           <span class="built_in">height</span>: <span class="number">200</span>px;</span><br><span class="line">           <span class="built_in">background</span>-<span class="built_in">color</span>:orange;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></div><p>③父盒子要有足够空间，否则掉下来</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">    <span class="selector-class">.up</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">399px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">101</span>, <span class="number">198</span>, <span class="number">211</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.up</span> <span class="selector-class">.box1</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>:red;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">       &#125;</span><br><span class="line">        <span class="selector-class">.up</span> <span class="selector-class">.box2</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>:blue;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.down</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>:orange;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></div><h1 id="3-1-浮动元素双向贴边"><a href="#3-1-浮动元素双向贴边" class="headerlink" title="3.1  浮动元素双向贴边"></a>3.1 浮动元素双向贴边</h1><p>浮动的同级元素有距离一样使用margin</p><p>浮动元素，都是紧贴相同方向上的上一个元素的贴边</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">    .box &#123;</span><br><span class="line">            width: <span class="number">500</span>px;</span><br><span class="line">            height: <span class="number">600</span>px;</span><br><span class="line">            border: <span class="number">1</span>px solid #<span class="number">000</span>;</span><br><span class="line">            margin: <span class="number">50</span>px <span class="built_in">auto</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .box p &#123;</span><br><span class="line">            <span class="built_in">float</span>:left;</span><br><span class="line">            width:<span class="number">120</span>px;</span><br><span class="line">            height: <span class="number">80</span>px;</span><br><span class="line">            <span class="comment">/* 浮动的同级元素有距离一样使用margin */</span></span><br><span class="line">            margin-right: <span class="number">20</span>px;</span><br><span class="line">            margin-bottom: <span class="number">10</span>px;</span><br><span class="line">            background-color: lightblue;</span><br><span class="line">        &#125;</span><br><span class="line">        .box .fr&#123;</span><br><span class="line">            <span class="built_in">float</span>:right;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&lt;div <span class="keyword">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">1</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span> <span class="symbol">class</span>="<span class="symbol">fr</span>"&gt;<span class="symbol">2</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">3</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span> <span class="symbol">class</span>="<span class="symbol">fr</span>"&gt;<span class="symbol">4</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">5</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span> <span class="symbol">class</span>="<span class="symbol">fr</span>"&gt;<span class="symbol">6</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">7</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tI9yqA.png" alt="浮动元素双向贴边.png"></p><h1 id="3-2-浮动元素没有margin塌陷"><a href="#3-2-浮动元素没有margin塌陷" class="headerlink" title="3.2  浮动元素没有margin塌陷"></a>3.2 浮动元素没有margin塌陷</h1><p>上下两个浮动的元素，上盒子有一个下margin，下盒子有一个上margin，他们的距离是margin之和。没有垂直方向margin塌陷。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-class">.no1</span> &#123;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: blue;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-class">.no2</span> &#123;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">margin-top</span>: <span class="number">80px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tICPd1.png" alt=" 浮动元素没有margin塌陷.png"></p><h1 id="3-3-浮动元素让出标准流的位置"><a href="#3-3-浮动元素让出标准流的位置" class="headerlink" title="3.3  浮动元素让出标准流的位置"></a>3.3 浮动元素让出标准流的位置</h1><p>两个同级的盒子，第一个浮动（脱标），第二个不浮动（标准流）。结果浮动的元素让出标准流的位置，视觉上形成了“压盖”效果。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">        .box1, .box3 &#123;</span><br><span class="line">            <span class="comment">/* 浮动脱离标准流 */</span></span><br><span class="line">            <span class="built_in">float</span>: left;</span><br><span class="line">            width: <span class="number">100</span>px;</span><br><span class="line">            height: <span class="number">100</span>px;</span><br><span class="line">            background-color: blue;</span><br><span class="line">        &#125;</span><br><span class="line">        .box2 &#123;</span><br><span class="line">            <span class="comment">/* 不浮动就是标准流 */</span></span><br><span class="line">            width: <span class="number">200</span>px;</span><br><span class="line">            height: <span class="number">200</span>px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div <span class="keyword">class</span>="<span class="symbol">box1</span>"&gt;浮动&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box2</span>"&gt;不浮动&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box3</span>"&gt;浮动&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">&lt;/<span class="symbol">body</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tICnLd.png" alt="浮动元素让出标准流的位置.png"></p><p>压盖效果：</p><blockquote><p>不用浮动，用定位实现</p></blockquote><p>总结：</p><blockquote><p>同级元素，要浮动都浮动，要不浮动都不浮动</p></blockquote><h1 id="3-4-字围效果"><a href="#3-4-字围效果" class="headerlink" title="3.4  字围效果"></a>3.4 字围效果</h1><p>浮动元素会压盖住标准流，但是文字不会被压盖住，而是在浮动元素一周显示。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">    <span class="selector-class">.box</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-class">.no1</span> &#123;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">            <span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tICdwn.png" alt="字围效果.png"></p><h1 id="4-浮动存在的问题"><a href="#4-浮动存在的问题" class="headerlink" title="4  浮动存在的问题"></a>4 浮动存在的问题</h1><p>1、浮动的元素不能撑高父盒子的高度（高度自适应）</p><p>2、浮动的元素影响后面浮动的元素</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"> .box &#123;</span><br><span class="line">            width: <span class="number">600</span>px;</span><br><span class="line">            <span class="comment">/* 不给父盒子添加高度，会被自动撑高 */</span></span><br><span class="line">            border: <span class="number">1</span>px solid #<span class="number">000</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> &lt;div <span class="keyword">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">1</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">2</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">3</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">4</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">1</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">2</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">3</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">4</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIC7lD.png" alt="tIC7lD.png"></p><p>设置子元素浮动后：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"> <span class="selector-class">.box</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: blue;</span><br><span class="line">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tICH6e.png" alt="tICH6e.png"></p><h1 id="5-解决方法（清除浮动）"><a href="#5-解决方法（清除浮动）" class="headerlink" title="5  解决方法（清除浮动）"></a>5 解决方法（清除浮动）</h1><p>二流配合：</p><blockquote><p>浮动流、标准流配合</p></blockquote><p>基本布局介绍：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box1"</span>&gt;我是box1&lt;/<span class="keyword">div</span>&gt;   →标准流的</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box2"</span>&gt;我是box2&lt;/<span class="keyword">div</span>&gt; →标准流的</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"f-box"</span>&gt;          →标准流的，内部有浮动的盒子</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"c1"</span>&gt;&lt;/<span class="keyword">div</span>&gt;  →浮动的盒子</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"c2"</span>&gt;&lt;/<span class="keyword">div</span>&gt;  →浮动的盒子</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box3"</span>&gt;我是box3&lt;/<span class="keyword">div</span>&gt;  →标准流的</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box4"</span>&gt;我是box4&lt;/<span class="keyword">div</span>&gt;  →标准流的</span><br></pre></td></tr></table></figure></div><p>我们研究的是如何让内部有浮动的盒子，能够和谐的和别人配合，说白了一句话：</p><blockquote><p>将浮动关住自己内部。</p></blockquote><h2 id="方法一：给父盒子设置高度"><a href="#方法一：给父盒子设置高度" class="headerlink" title="方法一：给父盒子设置高度"></a>方法一：给父盒子设置高度</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box1"</span>&gt;我是box1&lt;/<span class="keyword">div</span>&gt;   →标准流的</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box2"</span>&gt;我是box2&lt;/<span class="keyword">div</span>&gt; →标准流的</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"f-box"</span>&gt; →标准流的，内部有浮动的盒子 《==设置高度==》</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"c1"</span>&gt;&lt;/<span class="keyword">div</span>&gt;  →浮动的盒子</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"c2"</span>&gt;&lt;/<span class="keyword">div</span>&gt;  →浮动的盒子</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box3"</span>&gt;我是box3&lt;/<span class="keyword">div</span>&gt;  →标准流的</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box4"</span>&gt;我是box4&lt;/<span class="keyword">div</span>&gt;  →标准流的</span><br></pre></td></tr></table></figure></div><p>如果不设置高度，就会乱套</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">    <span class="selector-class">.box1</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box2</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box3</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box4</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span> <span class="selector-class">.c1</span>&#123;</span><br><span class="line">            <span class="attribute">float</span>:left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: orange;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span> <span class="selector-class">.c2</span>&#123;</span><br><span class="line">            <span class="attribute">float</span>:left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIP740.png" alt="tIP740.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">  <span class="selector-class">.box1</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box2</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box3</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box4</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span> <span class="selector-class">.c1</span>&#123;</span><br><span class="line">            <span class="attribute">float</span>:left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: orange;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span> <span class="selector-class">.c2</span>&#123;</span><br><span class="line">            <span class="attribute">float</span>:left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIPTNq.png" alt="tIPTNq.png"></p><h2 id="方法二：给父盒子写overflow：hidden"><a href="#方法二：给父盒子写overflow：hidden" class="headerlink" title="方法二：给父盒子写overflow：hidden"></a>方法二：给父盒子写overflow：hidden</h2><p>overflow属性：溢出隐藏处理方法</p><p>auto ：溢出滚动。当内容超过盒子高度时，自动出现滚动条，拉动滚动条可以查看全部内容</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">            <span class="attribute">overflow</span>: auto;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIKvrt.png" alt="tIKvrt.png"></p><p>hidden ： 溢出隐藏（当内容超过盒子高度时，超出部分直接隐藏）</p><p>隐藏的是border之外的内容，对于下padding不隐藏</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIKjKI.png" alt="tIKjKI.png"></p><p>浮动解决：</p><blockquote><p>给父盒子添加overflow：hidden可以完美解决所有的问题</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">            <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#000</span>;</span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: blue;</span><br><span class="line">            <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIM1z9.png" alt="tIM1z9.png"></p><p>overflow：hidden两个引申含义（给父盒子添加overflow：hidden）：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">①强制让父盒子检测内部子元素高度，并且将检测到的高度撑高自身</span><br><span class="line">②强制让父盒子管理住浮动的子盒子，不让子盒子影响其他浮动的元素</span><br></pre></td></tr></table></figure></div><p>总结：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line">同级元素要浮动都浮动</span><br><span class="line">子盒子浮动，父盒子尽量添加<span class="attribute">overflow</span>：hidden或<span class="attribute">height</span></span><br></pre></td></tr></table></figure></div><h2 id="方法三：clear属性"><a href="#方法三：clear属性" class="headerlink" title="方法三：clear属性"></a>方法三：clear属性</h2><p>clear：清除浮动的影响</p><p>属性值：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="NSIS"><figure class="iseeu highlight /nsis"><table><tr><td class="code"><pre><span class="line"><span class="literal">left</span>（清除左浮动的影响）</span><br><span class="line"><span class="literal">right</span>（清除右浮动的影响）</span><br><span class="line"><span class="literal">both</span>（清除左右浮动的影响）</span><br></pre></td></tr></table></figure></div><p>给父盒子添加clear属性（没必要两个盒子都添加，消除上面4 对下面1 的影响，只需要对下面的盒子添加clear属性）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">    <span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">            <span class="attribute">clear</span>: both;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIQeld.png" alt="tIQeld.png"></p><blockquote><p>解决了对后面浮动元素的影响</p></blockquote><blockquote><p>没解决：高度自适应</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box1"</span>&gt;我是box1&lt;/<span class="keyword">div</span>&gt;   →标准流的</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box2"</span>&gt;我是box2&lt;/<span class="keyword">div</span>&gt; →标准流的</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"f-box"</span>&gt; →标准流的，内部有浮动的盒子 </span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"c1"</span>&gt;&lt;/<span class="keyword">div</span>&gt;  →浮动的盒子</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"c2"</span>&gt;&lt;/<span class="keyword">div</span>&gt;  →浮动的盒子</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box3"</span>&gt;我是box3&lt;/<span class="keyword">div</span>&gt;  →标准流的 《==设置clear：both==》</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box4"</span>&gt;我是box4&lt;/<span class="keyword">div</span>&gt;  →标准流的</span><br></pre></td></tr></table></figure></div><p>Clear表示“清除”，both表示“全部”</p><p>Clear属性用来表示这个盒子不希望自己的哪边出现出现浮动，both表示“两边”</p><p>Clear：both 的缺点：</p><blockquote><p>①内部有浮动的父元素现在还是没有高度</p></blockquote><blockquote><p>② Margin失效</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="selector-class">.box2</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box3</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">            <span class="attribute">clear</span>:both;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box4</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span> <span class="selector-class">.c1</span>&#123;</span><br><span class="line">            <span class="attribute">float</span>:left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: orange;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span> <span class="selector-class">.c2</span>&#123;</span><br><span class="line">            <span class="attribute">float</span>:left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIQ71H.png" alt="tIQ71H.png"></p><h2 id="方法四：内墙法"><a href="#方法四：内墙法" class="headerlink" title="方法四：内墙法"></a>方法四：内墙法</h2><p>在所有浮动元素的最后添加一堵清除了浮动的影响的墙</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">    <span class="comment">/* 内墙法 */</span></span><br><span class="line">        .cl &#123;</span><br><span class="line">            <span class="comment">/* 清除浮动的影响 */</span></span><br><span class="line">            clear:both;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> &lt;div <span class="keyword">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">1</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">2</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">3</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">4</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">cl</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">1</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">2</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">3</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">p</span>&gt;<span class="symbol">4</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">cl</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIl93Q.png" alt="tIl93Q.png"></p><blockquote><p>解决：问题都解决了</p></blockquote><blockquote><p>虽然所有问题都解决了，但是我们不使用这种办法，这种办法给网页结构增加了很多无意义的标签，增大网页加载</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box1"</span>&gt;我是box1&lt;/<span class="keyword">div</span>&gt;   →标准流的</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box2"</span>&gt;我是box2&lt;/<span class="keyword">div</span>&gt; →标准流的</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"f-box"</span>&gt; →标准流的，内部有浮动的盒子 </span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"c1"</span>&gt;&lt;/<span class="keyword">div</span>&gt;  →浮动的盒子</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"c2"</span>&gt;&lt;/<span class="keyword">div</span>&gt;  →浮动的盒子</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=”clearfix”&gt;&lt;/<span class="keyword">div</span>&gt;          《==clear:both==》</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box3"</span>&gt;我是box3&lt;/<span class="keyword">div</span>&gt;  →标准流的</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box4"</span>&gt;我是box4&lt;/<span class="keyword">div</span>&gt;  →标准流的</span><br></pre></td></tr></table></figure></div><p>在有浮动的盒子最后，放一个新盒子，写clear：both</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"> <span class="selector-class">.f-box</span> <span class="selector-class">.clearfix</span>&#123;</span><br><span class="line">            <span class="attribute">clear</span>:both;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p>这个方法没有任何问题，并且给人的感受特别扎实。</p><p>Clearfix是约定成俗的类名</p><p>为了更加安全：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line">    <span class="selector-class">.f-box</span> .clearfix&#123;</span><br><span class="line">            <span class="attribute">clear</span>:both;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    .box1&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        .box2&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        .box3&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        .box4&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">120px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        .f-box&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">20px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span> .c1&#123;</span><br><span class="line">            <span class="attribute">float</span>:left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: orange;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span> .c2&#123;</span><br><span class="line">            <span class="attribute">float</span>:left;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.f-box</span> .clearfix&#123;</span><br><span class="line">            <span class="attribute">clear</span>:both;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">overflow</span>: hidden;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=<span class="string">"box1"</span>&gt;我是box1&lt;/div&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=<span class="string">"box2"</span>&gt;我是box2&lt;/div&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=<span class="string">"f-box"</span>&gt;</span><br><span class="line">        &lt;<span class="selector-tag">div</span> class=<span class="string">"c1"</span>&gt;&lt;/div&gt;</span><br><span class="line">        &lt;<span class="selector-tag">div</span> class=<span class="string">"c2"</span>&gt;&lt;/div&gt;</span><br><span class="line">        &lt;<span class="selector-tag">div</span> class=<span class="string">"clearfix"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=<span class="string">"box3"</span>&gt;我是box3&lt;/div&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=<span class="string">"box4"</span>&gt;我是box4&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIP740.png" alt="tIP740.png"></p><h2 id="方法五-外墙法"><a href="#方法五-外墙法" class="headerlink" title="方法五:外墙法"></a>方法五:外墙法</h2><p>在两个大盒子（父盒子）之间添加一堵（有高度，清除了浮动的）墙</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">    /* 外墙法 */</span><br><span class="line">        .cl &#123;</span><br><span class="line">            /* 有高度 */</span><br><span class="line">            height: 10px;</span><br><span class="line">            /* 清除浮动的影响 */</span><br><span class="line">            clear:both;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加一堵墙 必须是块级元素 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cl"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIljM9.png" alt="tIljM9.png"></p><blockquote><p>解决：对后面的影响（height：10px 视觉上有10px的间隔）</p></blockquote><blockquote><p>没解决：高度自适应</p></blockquote><p>总结：</p><blockquote><p>子盒子浮动时要看一下父盒子有没有高度或overflow</p></blockquote><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line">同级元素要浮动都浮动</span><br><span class="line">子盒子浮动，父盒子尽量添加<span class="attribute">overflow</span>：hidden或<span class="attribute">height</span></span><br></pre></td></tr></table></figure></div><h1 id="6-什么是层模型？"><a href="#6-什么是层模型？" class="headerlink" title="6  什么是层模型？"></a>6 什么是层模型？</h1><p>CSS定义了一组定位（positioning）属性来支持层布局模型。</p><p>层模型有三种形式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LESS"><figure class="iseeu highlight /less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">1</span>、绝对定位(<span class="attribute">position</span>: absolute)</span><br><span class="line"><span class="selector-tag">2</span>、相对定位(<span class="attribute">position</span>: relative)</span><br><span class="line"><span class="selector-tag">3</span>、固定定位(<span class="attribute">position</span>: fixed)</span><br></pre></td></tr></table></figure></div><h2 id="6-1-层模型–绝对定位"><a href="#6-1-层模型–绝对定位" class="headerlink" title="6.1  层模型–绝对定位"></a>6.1 层模型–绝对定位</h2><p>如果想为元素设置层模型中的绝对定位，需要设置<code>position:absolute</code>(表示绝对定位)，这条语句的作用将元素从文档流中拖出来，然后使用<code>left</code>、<code>right</code>、<code>top</code>、<code>bottom</code>属性相对于其最接近的一个具有定位属性的父包含块进行绝对定位。</p><p>如果不存在这样的包含块，则相对于<code>body</code>元素，即相对于<code>浏览器窗口</code>。</p><p>如下面代码可以实现div元素相对于浏览器窗口向右移动100px，向下移动50px。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line">div&#123;</span><br><span class="line"><span class="symbol">    width:</span><span class="number">200</span>px;</span><br><span class="line"><span class="symbol">    height:</span><span class="number">200</span>px;</span><br><span class="line"><span class="symbol">    border:</span><span class="number">2</span>px red solid;</span><br><span class="line"><span class="symbol">    position:</span>absolute;</span><br><span class="line"><span class="symbol">    left:</span><span class="number">100</span>px;</span><br><span class="line"><span class="symbol">    top:</span><span class="number">50</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="params">&lt;div id="div1"&gt;</span><span class="params">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure></div><p>绝对定位：</p><blockquote><p>以网页的左上角为坐标轴原点，进行定位</p></blockquote><p>绝对定位的元素脱标，立即释放自己在标准流中的位置</p><p>在实际中，一般使用“<code>子绝父相</code>”，即，子元素使用绝对定位，父元素使用相对定位</p><p>绝对定位默认是无视父亲的，默认情况下会以网页的左上角进行定位</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        *&#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        div&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            margin: 50px auto;</span><br><span class="line">        &#125;</span><br><span class="line">        div p&#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tI38fO.png" alt="tI38fO.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">  *&#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">div</span>&#123;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">div</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>:red;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">70px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tI8u8S.png" alt="tI8u8S.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">    *&#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">div</span>&#123;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">div</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>:red;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">70px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tI8oVI.png" alt="tI8oVI.png"></p><h2 id="6-2-绝对定位5个用途"><a href="#6-2-绝对定位5个用途" class="headerlink" title="6.2  绝对定位5个用途"></a>6.2 绝对定位5个用途</h2><p>压盖、遮罩、垂中、出版心、、运动</p><p>###　用途1：压盖</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">       *&#123;</span><br><span class="line">           margin: 0;</span><br><span class="line">           padding: 0;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="css">       <span class="selector-class">.movie</span>&#123;</span></span><br><span class="line"><span class="css">           <span class="selector-tag">width</span><span class="selector-pseudo">:1000px</span>;</span></span><br><span class="line">           margin: 50px auto;</span><br><span class="line">           overflow: hidden;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="css">       <span class="selector-class">.movie</span> <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line">           list-style: none;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="css">       <span class="selector-class">.movie</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line">           float: left;</span><br><span class="line">           width: 200px;</span><br><span class="line">           text-align: center;</span><br><span class="line">           position: relative;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="css">       <span class="selector-class">.movie</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.vip</span>&#123;</span></span><br><span class="line">           position: absolute;</span><br><span class="line"><span class="css">           <span class="selector-tag">top</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="css">           <span class="selector-tag">right</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line">           width: 30px;</span><br><span class="line">       &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"movie"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/p1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"vip"</span> <span class="attr">src</span>=<span class="string">"images/vip.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/p1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/p1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"vip"</span> <span class="attr">src</span>=<span class="string">"images/vip.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/p1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/p1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"vip"</span> <span class="attr">src</span>=<span class="string">"images/vip.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIGces.png" alt="tIGces.png"></p><p>注意：</p><blockquote><p>li元素要设置相对定位，让所有的VIP图片都能够以自己这个li定位</p></blockquote><h3 id="用途2：遮罩"><a href="#用途2：遮罩" class="headerlink" title="用途2：遮罩"></a>用途2：遮罩</h3><p>绝对定位的元素脱标（脱离标准流）了，所以不能设置宽度，宽度不能自动撑满了</p><p>遮罩就是给每个元素蒙上一个半透明的盒子。这个盒子一定是绝对定位的，并且top：0；left：0；</p><p>默认情况下，HTML代码中后出现的绝对定位的元素，能够压盖住先定位的元素，但是可以用<code>z-index</code>来调整元素位置</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">       *&#123;</span><br><span class="line">           margin: 0;</span><br><span class="line">           padding: 0;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="css">       <span class="selector-class">.movie</span>&#123;</span></span><br><span class="line"><span class="css">           <span class="selector-tag">width</span><span class="selector-pseudo">:1000px</span>;</span></span><br><span class="line">           height: 277px;</span><br><span class="line">           margin: 50px auto;</span><br><span class="line">           overflow: hidden;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="css">       <span class="selector-class">.movie</span> <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line">           list-style: none;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="css">       <span class="selector-class">.movie</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line">           float: left;</span><br><span class="line">           width: 200px;</span><br><span class="line">           position: relative;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="css">       <span class="selector-class">.movie</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.vip</span>&#123;</span></span><br><span class="line">           position: absolute;</span><br><span class="line"><span class="css">           <span class="selector-tag">top</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="css">           <span class="selector-tag">right</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line">           width: 30px;</span><br><span class="line">       &#125;</span><br><span class="line"><span class="css">       <span class="selector-class">.movie</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-class">.cover</span>&#123;</span></span><br><span class="line">           position: absolute;</span><br><span class="line">           width: 196px;</span><br><span class="line">           height: 277px;</span><br><span class="line"><span class="css">           <span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">           <span class="selector-tag">left</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">           <span class="selector-tag">background-color</span><span class="selector-pseudo">:rgba(0</span>,0,0,0<span class="selector-class">.4</span>);</span></span><br><span class="line"><span class="css">           <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line">       &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"movie"</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/p1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"vip"</span> <span class="attr">src</span>=<span class="string">"images/vip.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cover"</span>&gt;</span>诛仙很好看<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/p1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cover"</span>&gt;</span>诛仙很好看<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/p1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"vip"</span> <span class="attr">src</span>=<span class="string">"images/vip.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cover"</span>&gt;</span>诛仙很好看<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/p1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cover"</span>&gt;</span>诛仙很好看<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/p1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"vip"</span> <span class="attr">src</span>=<span class="string">"images/vip.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cover"</span>&gt;</span>诛仙很好看<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIJe1S.png" alt="tIJe1S.png"></p><p>默认情况下，HTML代码中后出现的绝对定位的元素，能够压盖住先定位的元素，但是可以用z-index来调整元素位置:</p><blockquote><p>z-index:999; z-index属性值越大，越能盖住属性值小的</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/p1.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cover"</span>&gt;</span>诛仙很好看<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"vip"</span> <span class="attr">src</span>=<span class="string">"images/vip.png"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIJDtx.png" alt="tIJDtx.png"></p><h3 id="用途3：垂中"><a href="#用途3：垂中" class="headerlink" title="用途3：垂中"></a>用途3：垂中</h3><p>水平居中用margin:0 auto;就可以实现，但是垂直居中不是那么好做</p><p>垂直居中最简单的方法就是绝对定位</p><p>公式就是：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line"><span class="attribute">top</span>:<span class="number">50%</span>;</span><br><span class="line"><span class="attribute">left</span>:<span class="number">50%</span>;</span><br></pre></td></tr></table></figure></div><p>用margin为负数拉回自己身体宽度、高度的一半</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="selector-tag">body</span>&#123;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="selector-class">.box</span>&#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">      <span class="attribute">position</span>: absolute;</span><br><span class="line">      <span class="attribute">top</span>:<span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">      <span class="attribute">margin-left</span>: -<span class="number">500px</span>;</span><br><span class="line">      <span class="attribute">margin-top</span>: -<span class="number">200px</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></div><h3 id="用途4：出版心（所有杂碎的东西都用绝对定位做）"><a href="#用途4：出版心（所有杂碎的东西都用绝对定位做）" class="headerlink" title="用途4：出版心（所有杂碎的东西都用绝对定位做）"></a>用途4：出版心（所有杂碎的东西都用绝对定位做）</h3><p>一些东西耍宝、卖萌，出了盒子的边框线，此时想都不要想，直接用绝对定位制作！</p><p>我们先了解一个绝对定位的性质：</p><blockquote><p>无视父亲的padding</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">   *&#123;</span><br><span class="line">      margin: 0;</span><br><span class="line">      padding: 0;</span><br><span class="line">   &#125;</span><br><span class="line">   div&#123;</span><br><span class="line"><span class="css">      <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">      width: 300px;</span><br><span class="line">      height: 300px;</span><br><span class="line">      margin: 50px auto;</span><br><span class="line">      position: relative;</span><br><span class="line">   &#125;</span><br><span class="line">   div p&#123;</span><br><span class="line">      width: 60px;</span><br><span class="line">      height: 60px;</span><br><span class="line"><span class="css">      <span class="selector-tag">background</span><span class="selector-pseudo">:orange</span>;</span></span><br><span class="line">      position: absolute;</span><br><span class="line"><span class="css">      <span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">left</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      文字文字文字文字</span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIYa28.png" alt="tIYa28.png"></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"> <span class="selector-tag">div</span>&#123;</span><br><span class="line">      <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">      <span class="attribute">position</span>: relative;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tIY65q.png" alt="tIY65q.png"></p><p>说明绝对定位的元素（案例中的p）无视父亲的padding</p><p>即使父亲有padding，此时绝对定位的元素是无视父亲的padding的</p><h2 id="6-2-层模型–相对定位"><a href="#6-2-层模型–相对定位" class="headerlink" title="6.2  层模型–相对定位"></a>6.2 层模型–相对定位</h2><p>如果想为元素设置层模型中的相对定位，需要设置<code>position:relative</code>（表示相对定位），它通过left、right、top、bottom属性确定元素在正常文档流中的偏移位置。</p><p>相对定位完成的过程是首先按<code>static(float)</code>方式生成一个元素(并且元素像层一样浮动了起来)，然后相对于以前的位置移动，移动的方向和幅度由left、right、top、bottom属性确定，偏移前的位置保留不动。</p><p>如下代码实现相对于以前位置向下移动50px，向右移动100px:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="meta">#div1&#123;</span></span><br><span class="line"><span class="symbol">    width:</span><span class="number">200</span>px;</span><br><span class="line"><span class="symbol">    height:</span><span class="number">200</span>px;</span><br><span class="line"><span class="symbol">    border:</span><span class="number">2</span>px red solid;</span><br><span class="line"><span class="symbol">    position:</span>relative;</span><br><span class="line"><span class="symbol">    left:</span><span class="number">100</span>px;</span><br><span class="line"><span class="symbol">    top:</span><span class="number">50</span>px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="params">&lt;div id="div1"&gt;</span><span class="params">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure></div><p>效果图：<br><img src="https://s1.ax1x.com/2020/06/09/tItyOe.png" alt="tItyOe.png"></p><p>什么叫做“<code>偏移前的位置保留不动</code>”呢？</p><p>大家可以做一个实验，在右侧代码编辑器的19行div标签的后面加入一个span标签，在标并在span标签中写入一些文字。如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>偏移前的位置还保留不动，覆盖不了前面的div没有偏移前的位置<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>效果图：<br><img src="https://s1.ax1x.com/2020/06/09/tItxpV.png" alt="tItxpV.png"></p><p>从效果图中可以明显的看出，虽然div元素相对于以前的位置产生了偏移，但是div元素以前的位置还是保留着，所以后面的span元素是显示在了div元素以前位置的后面。</p><h2 id="6-3-层模型–固定定位"><a href="#6-3-层模型–固定定位" class="headerlink" title="6.3  层模型–固定定位"></a>6.3 层模型–固定定位</h2><p>fixed：表示固定定位，与absolute定位类型类似，但它的相对移动的坐标是视图（<code>屏幕内的网页窗口</code>）本身。</p><p>由于视图本身是固定的，它不会随浏览器窗口的滚动条滚动而变化，除非你在屏幕中移动浏览器窗口的屏幕位置，或改变浏览器窗口的显示大小，因此固定定位的元素会始终位于浏览器窗口内视图的某个位置，不会受文档流动影响，这与background-attachment:fixed;属性功能相同。</p><p>以下代码可以实现相对于浏览器视图向右移动100px，向下移动50px。并且拖动滚动条时位置固定不变。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"> *&#123;</span><br><span class="line">    margin: <span class="number">0</span>;</span><br><span class="line">    padding: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  .header&#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    <span class="comment">/*固定定位脱离文档流，所以div就不能自动撑满*/</span></span><br><span class="line">    width: <span class="number">100</span>%;</span><br><span class="line">    height: <span class="number">60</span>px;</span><br><span class="line">    background-color: #<span class="number">333333</span>;</span><br><span class="line">    top: <span class="number">0</span>;</span><br><span class="line">    left: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  .content&#123;</span><br><span class="line">    padding-top: <span class="number">60</span>px;</span><br><span class="line">  &#125;.backtop&#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    right: <span class="number">100</span>px;</span><br><span class="line">    bottom: <span class="number">100</span>px;</span><br><span class="line">    background-color: orange;</span><br><span class="line">    width: <span class="number">100</span>px;</span><br><span class="line">    height: <span class="number">100</span>px;</span><br><span class="line">    font-</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div <span class="keyword">class</span>="<span class="symbol">header</span>"&gt;&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">  &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">backtop</span>"&gt;返回顶部&lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">  &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">content</span>"&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;我是第一行&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;撑高&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;撑高&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;撑高&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;撑高&lt;/<span class="symbol">p</span>&gt;</span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/06/09/tINQ7d.png" alt="tINQ7d.png"></p><h2 id="6-4-Relative与Absolute组合使用"><a href="#6-4-Relative与Absolute组合使用" class="headerlink" title="6.4  Relative与Absolute组合使用"></a>6.4 Relative与Absolute组合使用</h2><p>使用position:absolute可以实现被设置元素相对于浏览器（body）设置定位以后，使用position:relative来进行相对定位，但是必须遵守下面规范：</p><p>1、参照定位的元素必须是相对定位元素的前辈元素：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box1"</span>&gt;</span><span class="comment">&lt;!--参照定位的元素--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box2"</span>&gt;</span>相对参照元素进行定位<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!--相对定位元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>从上面代码可以看出box1是box2的父元素（父元素当然也是前辈元素了）。</p><p>2、参照定位的元素必须加入position:relative;</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box1</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">position</span>:relative;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>3、定位元素加入position:absolute，便可以使用top、bottom、left、right来进行偏移定位了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#box2</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">30px</span>;         </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这样box2就可以相对于父元素box1定位了（这里注意参照物就可以不是浏览器了，而可以自由设置了）。</p><h1 id="7-z-index"><a href="#7-z-index" class="headerlink" title="7  z-index"></a>7 z-index</h1><p>默认压盖顺序：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">有定位的元素压盖住没有定位的元素</span><br><span class="line"></span><br><span class="line">都有定位后面的压盖住前面的</span><br></pre></td></tr></table></figure></div><p>z-index: 自定义压盖顺序：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AXAPTA"><figure class="iseeu highlight /axapta"><table><tr><td class="code"><pre><span class="line">有定位的元素才可以使用z-<span class="keyword">index</span>（浮动元素不能使用z-<span class="keyword">index</span>）</span><br><span class="line"></span><br><span class="line">属性值是数字，数字越大，压盖顺序越靠上</span><br><span class="line"></span><br><span class="line">数值相同，后面的压盖住前面的</span><br><span class="line"></span><br><span class="line">父子盒都有z-<span class="keyword">index</span>，父盒子z-<span class="keyword">index</span>小，子盒子z-<span class="keyword">index</span>即使再大也没用（父盒子会带着所有的内部元素一起压盖）</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>六、CSS盒模型</title>
    <url>/post/cad4c2bf.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><p>盒模型是CSS布局的基石，它规定了网页元素如何显示以及元素间相互关系。</p><h1 id="1-Div盒子的基本使用"><a href="#1-Div盒子的基本使用" class="headerlink" title="1  Div盒子的基本使用"></a>1 Div盒子的基本使用</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">div</span>.box1</span><br><span class="line">或</span><br><span class="line">.box1</span><br><span class="line"></span><br><span class="line">按<span class="literal">tab</span>，自动扩展为:</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box1"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">w200</span><br><span class="line">    按<span class="literal">tab</span>，自动扩展为:</span><br><span class="line">width: <span class="number">200</span>px;</span><br></pre></td></tr></table></figure></div><table><thead><tr><th align="left">属性</th><th align="center">中文</th><th align="right">Sublime快捷键</th></tr></thead><tbody><tr><td align="left">width</td><td align="center">宽度</td><td align="right">w</td></tr><tr><td align="left">height</td><td align="center">高度</td><td align="right">h</td></tr><tr><td align="left">background-color</td><td align="center">背景颜色</td><td align="right">bgc</td></tr></tbody></table><h1 id="2-Div的兄弟和父子"><a href="#2-Div的兄弟和父子" class="headerlink" title="2  Div的兄弟和父子"></a>2 Div的兄弟和父子</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box1"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"inner"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"box2"</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><blockquote><p>Box1和box2是兄弟</p></blockquote><blockquote><p>Box1和inner是父子</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>:red;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.box2</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>:blue;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.box1</span> <span class="selector-class">.inner</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>:green;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></div><p>兄弟的div默认竖直排列，儿子会在父亲内部显示</p><h1 id="3-元素分类"><a href="#3-元素分类" class="headerlink" title="3  元素分类"></a>3 元素分类</h1><p>在CSS中，html中的标签元素大体被分为三种不同的类型：块状元素、内联元素(又叫行内元素)和内联块状元素。</p><p>常用的块状元素有：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>、<span class="tag">&lt;<span class="name">p</span>&gt;</span>、<span class="tag">&lt;<span class="name">h1</span>&gt;</span>...<span class="tag">&lt;<span class="name">h6</span>&gt;</span>、<span class="tag">&lt;<span class="name">ol</span>&gt;</span>、<span class="tag">&lt;<span class="name">ul</span>&gt;</span>、<span class="tag">&lt;<span class="name">dl</span>&gt;</span>、<span class="tag">&lt;<span class="name">table</span>&gt;</span>、<span class="tag">&lt;<span class="name">address</span>&gt;</span>、<span class="tag">&lt;<span class="name">blockquote</span>&gt;</span> 、<span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>常用的内联元素有：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>、<span class="tag">&lt;<span class="name">span</span>&gt;</span>、<span class="tag">&lt;<span class="name">br</span>&gt;</span>、<span class="tag">&lt;<span class="name">i</span>&gt;</span>、<span class="tag">&lt;<span class="name">em</span>&gt;</span>、<span class="tag">&lt;<span class="name">strong</span>&gt;</span>、<span class="tag">&lt;<span class="name">label</span>&gt;</span>、<span class="tag">&lt;<span class="name">q</span>&gt;</span>、<span class="tag">&lt;<span class="name">var</span>&gt;</span>、<span class="tag">&lt;<span class="name">cite</span>&gt;</span>、<span class="tag">&lt;<span class="name">code</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>常用的内联块状元素有：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span>&gt;</span>、<span class="tag">&lt;<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h1 id="4-元素分类–块级元素"><a href="#4-元素分类–块级元素" class="headerlink" title="4  元素分类–块级元素"></a>4 元素分类–块级元素</h1><p>在html中<code>&lt;div&gt;</code>、 <code>&lt;p&gt;</code>、<code>&lt;h1&gt;</code>、<code>&lt;form&gt;</code>、<code>&lt;ul&gt;</code> 和 <code>&lt;li&gt;</code>就是块级元素。</p><p>设置<code>display:block</code>就是将元素显示为块级元素。</p><p>如下代码就是将内联元素<code>a</code>转换为块状元素，从而使<code>a</code>元素具有块状元素特点。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>&#123;<span class="attribute">display</span>:block;&#125;</span><br></pre></td></tr></table></figure></div><p>块级元素特点：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、每个块级元素都从新的一行开始，并且其后的元素也另起一行。（真霸道，一个块级元素独占一行）</span><br><span class="line"><span class="number">2</span>、元素的高度、宽度、行高以及顶和底边距都可设置。</span><br><span class="line"><span class="number">3</span>、元素宽度在不设置的情况下，是它本身父容器的<span class="number">100</span>%（和父元素的宽度一致），除非设定一个宽度。</span><br></pre></td></tr></table></figure></div><h1 id="5-元素分类–内联元素（行内元素）"><a href="#5-元素分类–内联元素（行内元素）" class="headerlink" title="5  元素分类–内联元素（行内元素）"></a>5 元素分类–内联元素（行内元素）</h1><p>在html中，<code>&lt;span&gt;</code>、<code>&lt;a&gt;</code>、<code>&lt;label&gt;</code>、 <code>&lt;strong&gt;</code> 和<code>&lt;em&gt;</code>就是典型的内联元素（行内元素）（<code>inline</code>）元素。当然块状元素也可以通过代码<code>display:inline</code>将元素设置为内联元素。</p><p>如下代码就是将块状元素<code>div</code>转换为内联元素，从而使 <code>div</code> 元素具有内联元素特点。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:inline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>内联元素特点：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、和其他元素都在一行上；</span><br><span class="line"><span class="number">2</span>、元素的高度、宽度及顶部和底部边距不可设置；</span><br><span class="line"><span class="number">3</span>、元素的宽度就是它包含的文字或图片的宽度，不可改变。</span><br></pre></td></tr></table></figure></div><h1 id="6-元素分类–内联块状元素"><a href="#6-元素分类–内联块状元素" class="headerlink" title="6  元素分类–内联块状元素"></a>6 元素分类–内联块状元素</h1><p>内联块状元素（<code>inline-block</code>）就是同时具备内联元素、块状元素的特点，代码<code>display:inline-block</code>就是将元素设置为内联块状元素。(css2.1新增)，<code>&lt;img&gt;</code>、<code>&lt;input&gt;</code>标签就是这种内联块状标签。<br><code>inline-block</code> 元素特点：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、和其他元素都在一行上；</span><br><span class="line"><span class="number">2</span>、元素的高度、宽度、行高以及顶和底边距都可设置。</span><br></pre></td></tr></table></figure></div><h1 id="7-什么是盒模型"><a href="#7-什么是盒模型" class="headerlink" title="7  什么是盒模型"></a>7 什么是盒模型</h1><p>任何一个HTML标签都遵守盒模型设置（不要认为只有div是和模型，所有的标签都是盒模型）</p><p>一个盒子是有由<code>width</code> <code>height</code> <code>padding</code> <code>border</code> <code>margin</code>几部分组成，他们组成的矩形小天地就是盒模型。</p><blockquote><p>注意：padding border是外扩的，不包含在width height中</p></blockquote><h1 id="8-盒模型–边框"><a href="#8-盒模型–边框" class="headerlink" title="8  盒模型–边框"></a>8 盒模型–边框</h1><p>盒子模型的边框就是围绕着内容及补白的线，这条线你可以设置它的粗细、样式和颜色(边框三个属性)。</p><p>如下面代码为 div 来设置边框粗细为 2px、样式为实心的、颜色为红色的边框：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">2px</span>  solid  red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>上面是 border 代码的缩写形式，可以分开写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border-width</span>:<span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>:solid;</span><br><span class="line">    <span class="attribute">border-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>注意：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="built_in">border</span>-<span class="built_in">style</span>（边框样式）常见样式有：</span><br><span class="line">dashed（虚线）| dotted（点线）| solid（实线）。</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、<span class="built_in">border</span>-<span class="built_in">color</span>（边框颜色）中的颜色可设置为十六进制颜色，如:</span><br><span class="line"><span class="built_in">border</span>-<span class="built_in">color</span>:#<span class="number">888</span>;//前面的井号不要忘掉。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、<span class="built_in">border</span>-<span class="built_in">width</span>（边框宽度）中的宽度也可以设置为：</span><br><span class="line">thin | medium | thick（但不是很常用），最常还是用像素（px）。</span><br></pre></td></tr></table></figure></div><p>现在有一个问题，如果有想为 p 标签单独设置下边框，而其它三边都不设置边框样式怎么办呢？</p><p>css 样式中允许只为一个方向的边框设置样式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;<span class="attribute">border-bottom</span>:<span class="number">1px</span> solid red;&#125;</span><br></pre></td></tr></table></figure></div><p>同样可以使用下面代码实现其它三边(上、右、左)边框的设置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="COQ"><figure class="iseeu highlight /coq"><table><tr><td class="code"><pre><span class="line">border-<span class="built_in">top</span>:<span class="number">1</span>px solid <span class="built_in">red</span>;</span><br><span class="line">border-<span class="built_in">right</span>:<span class="number">1</span>px solid <span class="built_in">red</span>; </span><br><span class="line">border-<span class="built_in">left</span>:<span class="number">1</span>px solid <span class="built_in">red</span>;</span><br></pre></td></tr></table></figure></div><p>如果一个盒子的边框上下左是红色，右是绿色，可以写为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"> <span class="selector-class">.box</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">border</span>:<span class="number">10px</span> solid red;</span><br><span class="line">            <span class="attribute">border-right-color</span>:green;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p>如果一个盒子的边框上下左是红色，没有右边框，可以写为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"> <span class="selector-class">.box</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">border</span>:<span class="number">10px</span> solid red;</span><br><span class="line">            <span class="attribute">border-right</span>:none;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><h1 id="7-盒模型–宽度和高度"><a href="#7-盒模型–宽度和高度" class="headerlink" title="7  盒模型–宽度和高度"></a>7 盒模型–宽度和高度</h1><p>盒模型宽度和高度和我们平常所说的物体的宽度和高度理解是不一样的，css内定义的宽（width）和高（height），指的是填充以里的内容范围。</p><p>因此一个元素实际宽度（盒子的宽度）=<code>左边界</code>+<code>左边框</code>+<code>左填充</code>+<code>内容宽度</code>+<code>右填充</code>+<code>右边框</code>+<code>右边界</code>。</p><p>元素的高度也是同理。</p><p>比如：</p><p>css代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">10px</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>html代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>文本内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p>元素的实际长度为：10px+1px+20px+200px+20px+1px+10px=262px。</p></blockquote><h1 id="8-盒模型–填充"><a href="#8-盒模型–填充" class="headerlink" title="8  盒模型–填充"></a>8 盒模型–填充</h1><p>元素内容与边框之间是可以设置距离的，称之为“填充”。</p><p>填充也可分为上、右、下、左(顺时针)。如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">div&#123;padding:<span class="number">20</span>px <span class="number">10</span>px <span class="number">15</span>px <span class="number">30</span>px;&#125;</span><br></pre></td></tr></table></figure></div><p>顺序一定不要搞混。可以分开写上面代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">   <span class="attribute">padding-top</span>:<span class="number">20px</span>;</span><br><span class="line">   <span class="attribute">padding-right</span>:<span class="number">10px</span>;</span><br><span class="line">   <span class="attribute">padding-bottom</span>:<span class="number">15px</span>;</span><br><span class="line">   <span class="attribute">padding-left</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>如果上、右、下、左的填充都为10px;可以这么写:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;<span class="attribute">padding</span>:<span class="number">10px</span>;&#125;</span><br></pre></td></tr></table></figure></div><p>如果上下填充一样为10px，左右一样为20px，可以这么写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;<span class="attribute">padding</span>:<span class="number">10px</span> <span class="number">20px</span>;&#125;</span><br></pre></td></tr></table></figure></div><p>如果左右填充一样为10px，上为20px，下30px可以这么写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;<span class="attribute">padding</span>:<span class="number">20px</span> <span class="number">10px</span> <span class="number">30px</span>;&#125;</span><br></pre></td></tr></table></figure></div><h1 id="9-盒模型–边界"><a href="#9-盒模型–边界" class="headerlink" title="9  盒模型–边界"></a>9 盒模型–边界</h1><p>元素与其它元素之间的距离可以使用边界（margin）来设置。</p><p>边界也是可分为上、右、下、左。如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">div&#123;margin:<span class="number">20</span>px <span class="number">10</span>px <span class="number">15</span>px <span class="number">30</span>px;&#125;</span><br></pre></td></tr></table></figure></div><p>也可以分开写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">   <span class="attribute">margin-top</span>:<span class="number">20px</span>;</span><br><span class="line">   <span class="attribute">margin-right</span>:<span class="number">10px</span>;</span><br><span class="line">   <span class="attribute">margin-bottom</span>:<span class="number">15px</span>;</span><br><span class="line">   <span class="attribute">margin-left</span>:<span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>如果上右下左的边界都为10px;可以这么写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123; <span class="attribute">margin</span>:<span class="number">10px</span>;&#125;</span><br></pre></td></tr></table></figure></div><p>如果上下边界一样为10px，左右一样为20px，可以这么写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123; <span class="attribute">margin</span>:<span class="number">10px</span> <span class="number">20px</span>;&#125;</span><br></pre></td></tr></table></figure></div><p>总结一下：</p><blockquote><p>padding和margin的区别，padding在边框里，margin在边框外。</p></blockquote><p>Margin有三个事情必须注意：</p><p>①塌陷现象</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">            <span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box2</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: blue;</span><br><span class="line">            <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">我们说小的<span class="selector-tag">margin</span>塌陷在大的<span class="selector-tag">margin</span>里面了</span><br></pre></td></tr></table></figure></div><p>②绝对别用儿子的margin踹父亲，margin是兄弟之间用的！应该用父亲的padding</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"> <span class="selector-class">.box1</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box1</span> <span class="selector-class">.box2</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: blue;</span><br><span class="line">            <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p>产生不了父亲和子元素之间的距离</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"> <span class="selector-class">.box1</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#000</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box1</span> <span class="selector-class">.box2</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: blue;</span><br><span class="line">            <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"> <span class="selector-class">.box1</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">            <span class="attribute">padding-top</span>:<span class="number">30px</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.box1</span> <span class="selector-class">.box2</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: blue;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p>③有一堆东西，天生带margin</p><p>比如p标签：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        p&#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>这个时候就给我们做网页带来了麻烦，所以要去掉这些默认的margin padding</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">           <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>但这种方法效率低，工作时常用 （百度搜索CSS reset）</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-tag">div</span>, <span class="selector-tag">span</span>, applet, <span class="selector-tag">object</span>, <span class="selector-tag">iframe</span>,<span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, <span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>, pre,<span class="selector-tag">a</span>, <span class="selector-tag">abbr</span>, acronym, <span class="selector-tag">address</span>, big, <span class="selector-tag">cite</span>, <span class="selector-tag">code</span>,<span class="selector-tag">del</span>, <span class="selector-tag">dfn</span>, <span class="selector-tag">em</span>, <span class="selector-tag">img</span>, <span class="selector-tag">ins</span>, <span class="selector-tag">kbd</span>, <span class="selector-tag">q</span>, s, <span class="selector-tag">samp</span>,small, strike, <span class="selector-tag">strong</span>, sub, <span class="selector-tag">sup</span>, tt, <span class="selector-tag">var</span>,<span class="selector-tag">b</span>, u, <span class="selector-tag">i</span>, center,<span class="selector-tag">dl</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">li</span>,<span class="selector-tag">fieldset</span>, <span class="selector-tag">form</span>, <span class="selector-tag">label</span>, <span class="selector-tag">legend</span>,<span class="selector-tag">table</span>, <span class="selector-tag">caption</span>, <span class="selector-tag">tbody</span>, <span class="selector-tag">tfoot</span>, <span class="selector-tag">thead</span>, <span class="selector-tag">tr</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span>,<span class="selector-tag">article</span>, <span class="selector-tag">aside</span>, <span class="selector-tag">canvas</span>, <span class="selector-tag">details</span>, embed, <span class="selector-tag">figure</span>, <span class="selector-tag">figcaption</span>, <span class="selector-tag">footer</span>, <span class="selector-tag">header</span>, <span class="selector-tag">hgroup</span>, <span class="selector-tag">menu</span>, <span class="selector-tag">nav</span>, output, ruby, <span class="selector-tag">section</span>, <span class="selector-tag">summary</span>,<span class="selector-tag">time</span>, <span class="selector-tag">mark</span>, <span class="selector-tag">audio</span>, <span class="selector-tag">video</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>代码中用逗号（并集选择器）罗列了所有标签名，去掉margin padding 效率要比*高</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>五、CSS格式化排版</title>
    <url>/post/ef0667d9.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="1-文字排版–字体"><a href="#1-文字排版–字体" class="headerlink" title="1  文字排版–字体"></a>1 文字排版–字体</h1><p>我们可以使用css样式为网页中的文字设置字体、字号、颜色等样式属性。</p><p>为网页中的文字设置字体为宋体：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">font-family</span>:<span class="string">"宋体"</span>;&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>这里注意不要设置不常用的字体，因为如果用户本地电脑上如果没有安装你设置的字体，就会显示浏览器默认的字体。（因为用户是否可以看到你设置的字体样式取决于用户本地电脑上是否安装你设置的字体。）</p></blockquote><p>现在一般网页喜欢设置“微软雅黑”，如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">font-family</span>:<span class="string">"Microsoft Yahei"</span>;&#125;</span><br><span class="line">或</span><br><span class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">font-family</span>:<span class="string">"微软雅黑"</span>;&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>注意：第一种方法比第二种方法兼容性更好一些。</p></blockquote><blockquote><p>因为这种字体即美观又可以在客户端安全的显示出来（用户本地一般都是默认安装的）。</p></blockquote><h1 id="2-文字排版–字号、颜色"><a href="#2-文字排版–字号、颜色" class="headerlink" title="2  文字排版–字号、颜色"></a>2 文字排版–字号、颜色</h1><p>可以使用下面代码设置网页中文字的字号为12像素，并把字体颜色设置为#666(灰色)：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">color</span>:<span class="number">#666</span>&#125;</span><br></pre></td></tr></table></figure></div><h1 id="3-文字排版–粗体"><a href="#3-文字排版–粗体" class="headerlink" title="3  文字排版–粗体"></a>3 文字排版–粗体</h1><p>使用css样式来改变文字的样式：粗体、斜体、下划线、删除线，可以使用下面代码实现设置文字以粗体样式显示出来。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">span</span>&#123;<span class="attribute">font-weight</span>:bold;&#125;</span><br></pre></td></tr></table></figure></div><h1 id="4-文字排版–斜体"><a href="#4-文字排版–斜体" class="headerlink" title="4  文字排版–斜体"></a>4 文字排版–斜体</h1><p>以下代码可以实现文字以斜体样式在浏览器中显示：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;<span class="attribute">font-style</span>:italic;&#125;</span><br></pre></td></tr></table></figure></div><h1 id="5-文字排版–下划线"><a href="#5-文字排版–下划线" class="headerlink" title="5  文字排版–下划线"></a>5 文字排版–下划线</h1><p>有些情况下想为文字设置为下划线样式，这样可以在视觉上强调文字，可以使用下面代码来实现：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;<span class="attribute">text-decoration</span>:underline;&#125;</span><br></pre></td></tr></table></figure></div><h1 id="6-文字排版–删除线"><a href="#6-文字排版–删除线" class="headerlink" title="6  文字排版–删除线"></a>6 文字排版–删除线</h1><p>删除线使用下面代码就可以实现：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.oldPrice</span>&#123;<span class="attribute">text-decoration</span>:line-through;&#125;</span><br></pre></td></tr></table></figure></div><h1 id="7-段落排版–缩进"><a href="#7-段落排版–缩进" class="headerlink" title="7  段落排版–缩进"></a>7 段落排版–缩进</h1><p>中文文字中的段前习惯空两个文字的空白，这个特殊的样式可以用下面代码来实现：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">text-indent</span>:<span class="number">2em</span>;&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>注意：2em的意思就是文字的2倍大小。</p></blockquote><h1 id="8-段落排版–行间距（行高）"><a href="#8-段落排版–行间距（行高）" class="headerlink" title="8  段落排版–行间距（行高）"></a>8 段落排版–行间距（行高）</h1><p>行间距（行高）属性（line-height），如下代码实现设置段落行间距为1.5倍。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">line-height</span>:<span class="number">1.5em</span>;&#125;</span><br></pre></td></tr></table></figure></div><h1 id="9-段落排版–中文字间距、字母间距"><a href="#9-段落排版–中文字间距、字母间距" class="headerlink" title="9  段落排版–中文字间距、字母间距"></a>9 段落排版–中文字间距、字母间距</h1><p>如果想在网页排版中设置文字间隔或者字母间隔就可以使用<code>letter-spacing</code>来实现，如下面代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">letter-spacing</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>注意：这个样式使用在英文单词时，是设置<code>字母与字母</code>之间的间距。</p></blockquote><p>单词间距设置：</p><p>可以使用 word-spacing 来实现。如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">word-spacing</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h1 id="10-段落排版–对齐"><a href="#10-段落排版–对齐" class="headerlink" title="10  段落排版–对齐"></a>10 段落排版–对齐</h1><p>为块状元素中的文本、图片设置居中样式,可以使用<code>text-align</code>样式代码，如下代码可实现文本居中显示。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>:center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>同样可以设置居左：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>:left;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>还可以设置居右：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">text-align</span>:right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>四、CSS的继承、层叠和特殊性</title>
    <url>/post/7ba8d35f.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="1-继承"><a href="#1-继承" class="headerlink" title="1  继承"></a>1 继承</h1><p>CSS的某些样式是具有继承性的，继承是一种规则，它允许样式不仅应用于某个特定html标签元素，而且应用于其后代。比如下面代码：如某种颜色应用于p标签，这个颜色设置不仅应用p标签，还应用于p标签中的所有子元素文本，这里子元素为span标签。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line">p&#123;color:red;&#125;</span><br><span class="line"></span><br><span class="line"><span class="params">&lt;p&gt;</span>三年级时，我还是一个<span class="params">&lt;span&gt;</span>胆小如鼠<span class="params">&lt;/span&gt;</span>的孩子。<span class="params">&lt;/p&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p中的文本与span中的文本都设置为了红色。但注意有一些css样式是不具有继承性的。如</span><br><span class="line"><span class="symbol">border:</span><span class="number">1</span>px solid red;</span><br><span class="line"></span><br><span class="line">p&#123;border:<span class="number">1</span>px solid red;&#125;</span><br><span class="line"></span><br><span class="line"><span class="params">&lt;p&gt;</span>三年级时，我还是一个<span class="params">&lt;span&gt;</span>胆小如鼠<span class="params">&lt;/span&gt;</span>的孩子。<span class="params">&lt;/p&gt;</span></span><br></pre></td></tr></table></figure></div><p>在上面例子中它代码的作用只是给p标签设置了边框为1像素、红色、实心边框线，而对于子元素span是没用起到作用的。</p><p>具有继承的属性：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MATHEMATICA"><figure class="iseeu highlight /mathematica"><table><tr><td class="code"><pre><span class="line">Color</span><br><span class="line"><span class="keyword">List</span>-</span><br><span class="line"><span class="keyword">Text</span>-</span><br><span class="line"><span class="keyword">Font</span>-</span><br><span class="line"><span class="keyword">Line</span>-</span><br></pre></td></tr></table></figure></div><p>有继承性的属性的，都是关于文字、列表的。</p><h1 id="2-特殊性"><a href="#2-特殊性" class="headerlink" title="2  特殊性"></a>2 特殊性</h1><p>有的时候我们为同一个元素设置了不同的CSS样式代码，那么元素会启用哪一个CSS样式呢?我们来看一下面的代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">p&#123;color:red;&#125;</span><br><span class="line">.first&#123;color:green;&#125;</span><br><span class="line">&lt;p <span class="keyword">class</span>="<span class="symbol">first</span>"&gt;三年级时，我还是一个&lt;<span class="symbol">span</span>&gt;胆小如鼠&lt;/<span class="symbol">span</span>&gt;的孩子。&lt;/<span class="symbol">p</span>&gt;</span><br></pre></td></tr></table></figure></div><p>p和.first都匹配到了p这个标签上，那么会显示哪种颜色呢？</p><p>green是正确的颜色，那么为什么呢？是因为浏览器是根据权值来判断使用哪种css样式的，权值高的就使用哪种css样式。</p><p>下面是权值的规则：</p><blockquote><p>标签的权值为1，类选择符的权值为10，ID选择符的权值最高为100。</p></blockquote><p>例如下面的代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">color</span>:red;&#125; <span class="comment">/*权值为1*/</span></span><br><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">span</span>&#123;<span class="attribute">color</span>:green;&#125; <span class="comment">/*权值为1+1=2*/</span></span><br><span class="line"><span class="selector-class">.warning</span>&#123;<span class="attribute">color</span>:white;&#125; <span class="comment">/*权值为10*/</span></span><br><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">span</span><span class="selector-class">.warning</span>&#123;<span class="attribute">color</span>:purple;&#125; <span class="comment">/*权值为1+1+10=12*/</span></span><br><span class="line"><span class="selector-id">#footer</span> <span class="selector-class">.note</span> <span class="selector-tag">p</span>&#123;<span class="attribute">color</span>:yellow;&#125; <span class="comment">/*权值为100+10+1=111*/</span></span><br></pre></td></tr></table></figure></div><blockquote><p>注意：还有一个权值比较特殊–继承也有权值但很低，有的文献提出它只有0.1，所以可以理解为继承的权值最低。</p></blockquote><p>如果选择器很复杂，此时就要数id的数量、类的数量、标签的数量，综合评定：</p><p>比如HTML结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">    &lt;div <span class="keyword">class</span>="<span class="symbol">box1</span>" <span class="symbol">id</span>="<span class="symbol">box1</span>"&gt;</span><br><span class="line">        &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box2</span>" <span class="symbol">id</span>="<span class="symbol">box2</span>"&gt;</span><br><span class="line">            &lt;<span class="symbol">div</span> <span class="symbol">class</span>="<span class="symbol">box3</span>" <span class="symbol">id</span>="<span class="symbol">box3</span>"&gt;</span><br><span class="line">                &lt;<span class="symbol">p</span> <span class="symbol">class</span>="<span class="symbol">pp</span>" <span class="symbol">id</span>="<span class="symbol">para</span>"&gt;你好&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">            &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">        &lt;/<span class="symbol">div</span>&gt;</span><br><span class="line">    &lt;/<span class="symbol">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p>现在三个选择器打架： 最终显示蓝色</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box1</span> <span class="selector-tag">div</span><span class="selector-class">.box2</span> <span class="selector-class">.box3</span> <span class="selector-id">#para</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>:green;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="selector-id">#box1</span> <span class="selector-id">#box2</span> <span class="selector-id">#box3</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>:blue;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="selector-id">#box1</span> <span class="selector-class">.box22</span><span class="selector-class">.box3</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>:red;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p>判断方法就是数id选择器的数量、类选择器的数量、标签选择器的数量</p><blockquote><p>权重：id》类》标签》继承</p></blockquote><blockquote><p>如果权重一样，谁写在下面（即最接近标签的那个选择器）听谁的</p></blockquote><p>就近原则：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">如果都是继承而来的，则比谁里最内层文字所在标签近</span><br><span class="line">如果一样近，则<span class="built_in">id</span>数量、类数量、标签数量比权重</span><br><span class="line">如果权重也一样，则看谁在最下面</span><br><span class="line"></span><br><span class="line">  近  权  下</span><br></pre></td></tr></table></figure></div><h1 id="3-层叠"><a href="#3-层叠" class="headerlink" title="3  层叠"></a>3 层叠</h1><p>层叠就是在html文件中对于同一个元素可以有多个css样式存在，当有相同权重的样式存在时，会根据这些css样式的前后顺序来决定，处于最后面的css样式会被应用。</p><p>如下面代码:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">p&#123;color:red;&#125;</span><br><span class="line">p&#123;color:green;&#125;</span><br><span class="line">&lt;p <span class="keyword">class</span>="<span class="symbol">first</span>"&gt;三年级时，我还是一个&lt;<span class="symbol">span</span>&gt;胆小如鼠&lt;/<span class="symbol">span</span>&gt;的孩子。&lt;/<span class="symbol">p</span>&gt;</span><br></pre></td></tr></table></figure></div><p>最后 p 中的文本会设置为green，这个层叠很好理解，理解为后面的样式会覆盖前面的样式。</p><p>所以前面的css样式优先级就不难理解了：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">内联样式表（标签内部）&gt; 嵌入样式表（当前文件中）&gt; 外部样式表（外部文件中）</span><br></pre></td></tr></table></figure></div><h1 id="4-重要性"><a href="#4-重要性" class="headerlink" title="4  重要性"></a>4 重要性</h1><p>我们在做网页代码的时，有些特殊的情况需要为某些样式设置具有最高权值，怎么办？这时候我们可以使用!important来解决。</p><p>如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">p&#123;color:red!important;&#125;</span><br><span class="line">p&#123;color:green;&#125;</span><br><span class="line">&lt;p <span class="keyword">class</span>="<span class="symbol">first</span>"&gt;三年级时，我还是一个&lt;<span class="symbol">span</span>&gt;胆小如鼠&lt;/<span class="symbol">span</span>&gt;的孩子。&lt;/<span class="symbol">p</span>&gt;</span><br></pre></td></tr></table></figure></div><p>这时 p 段落中的文本会显示的red红色。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELM"><figure class="iseeu highlight /elm"><table><tr><td class="code"><pre><span class="line">注意：!important要写在分号的前面</span><br><span class="line"></span><br><span class="line">这里注意当网页制作者不设置css样式时，浏览器会按照自己的一套样式来显示网页。</span><br><span class="line">并且用户也可以在浏览器中设置自己习惯的样式，比如有的用户习惯把字号设置为大一些，使其查看网页的文本更加清楚。</span><br><span class="line">这时注意样式优先级为：浏览器默认的样式 &lt; 网页制作者样式 &lt; 用户自己设置的样式.</span><br><span class="line">但记住!important优先级样式是个例外，权值高于用户自己设置的样式。</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>三、CSS选择器</title>
    <url>/post/effdef64.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="1-什么是选择器？"><a href="#1-什么是选择器？" class="headerlink" title="1  什么是选择器？"></a>1 什么是选择器？</h1><p>每一条css样式声明（定义）由两部分组成，形式如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">选择器&#123;</span><br><span class="line">    样式<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>在{}之前的部分就是“选择器”，“选择器”指明了{}中的“样式”的作用对象，也就是“样式”作用于网页中的哪些元素。</p><h1 id="2-标签选择器"><a href="#2-标签选择器" class="headerlink" title="2  标签选择器"></a>2 标签选择器</h1><p>标签选择器其实就是html代码中的标签。<br>例如下面代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">line-height</span>:<span class="number">1.6em</span>;&#125;</span><br></pre></td></tr></table></figure></div><p>上面的css样式代码的作用：</p><blockquote><p>为p标签设置12px字号，行间距设置1.6em的样式。</p></blockquote><p>比如，我们现在要选择页面上的所有p标签，只要写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">   <span class="selector-tag">p</span>&#123;</span><br><span class="line">     <span class="attribute">color</span>:red;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p>在工作中，标签选择器通常用来给某种标签设置初始样式。比如:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DSCONFIG"><figure class="iseeu highlight /dsconfig"><table><tr><td class="code"><pre><span class="line">我们需要给页面上的所有超级链接去掉下划线：</span><br><span class="line">  a&#123;</span><br><span class="line">      <span class="string">text-decoration:none;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">给列表去掉小圆点：</span><br><span class="line">  <span class="string">ul&#123;</span></span><br><span class="line">      <span class="built_in">list-style:</span> <span class="string">none;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><h1 id="3-类选择器"><a href="#3-类选择器" class="headerlink" title="3  类选择器"></a>3 类选择器</h1><p>类选择器在css样式编码中是最常用到的。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">.类选器名称&#123;css样式代码<span class="comment">;&#125;</span></span><br></pre></td></tr></table></figure></div><p>注意：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、英文圆点开头</span><br><span class="line"><span class="number">2</span>、其中类选器名称可以任意起名（但不要起中文噢）</span><br></pre></td></tr></table></figure></div><p>使用方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CS"><figure class="iseeu highlight /cs"><table><tr><td class="code"><pre><span class="line">第一步：使用合适的标签把要修饰的内容标记起来，如下：</span><br><span class="line">  &lt;span&gt;胆小如鼠&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">第二步：使用<span class="keyword">class</span>=<span class="string">"类选择器名称"</span>为标签设置一个类，如下：</span><br><span class="line">  &lt;span <span class="keyword">class</span>=<span class="string">"stress"</span>&gt;胆小如鼠&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">第三步：设置类选器css样式，如下：</span><br><span class="line">  .stress&#123;color:red;&#125;<span class="comment">/*类前面要加入一个英文圆点*/</span></span><br></pre></td></tr></table></figure></div><p>类可以同名，也就是说，多个HTML标签可以属于同一个类：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;h3 <span class="keyword">class</span>="<span class="symbol">special</span>"&gt;你好&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span> <span class="symbol">class</span>="<span class="symbol">special</span>"&gt;你好&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span> <span class="symbol">class</span>="<span class="symbol">special</span>"&gt;你好&lt;/<span class="symbol">h3</span>&gt;</span><br></pre></td></tr></table></figure></div><p>同一个HTML标签可以属于多个类： 中间用空格隔开</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"special"</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"special danger"</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"special danger"</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> .special&#123;</span><br><span class="line">            text-decoration:underline;</span><br><span class="line">            color:red;</span><br><span class="line">        &#125;</span><br><span class="line"> .danger&#123;</span><br><span class="line">            font-style:italic;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><h1 id="4-ID选择器"><a href="#4-ID选择器" class="headerlink" title="4  ID选择器"></a>4 ID选择器</h1><p>在很多方面，ID选择器都类似于类选择符，但也有一些重要的区别：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、为标签设置<span class="built_in">id</span>=<span class="string">"ID名称"</span>，而不是<span class="built_in">class</span>=<span class="string">"类名称"</span>。</span><br><span class="line"><span class="number">2</span>、ID选择符的前面是井号（<span class="comment">#）号，而不是英文圆点（.）。</span></span><br></pre></td></tr></table></figure></div><p>比如给HTML标签添加了一个id属性，这是这个标签就有了名字：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"title"</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>CSS选择器需要使用#来匹配id：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"> <span class="selector-id">#title</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>:red;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></div><p>Id选择器不许用。为什么？</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">因为<span class="number">99</span>%的公司要求<span class="built_in">id</span>留给js使用。你CSS把<span class="built_in">id</span>占用了，js编程<span class="built_in">id</span>会造成混乱。</span><br><span class="line">同一个<span class="built_in">id</span>页面上绝对不能有重名的，都是独一无二的</span><br><span class="line">Id的命名，一般来说是字母开头，后面随意。</span><br></pre></td></tr></table></figure></div><h1 id="5-类和ID选择器的区别"><a href="#5-类和ID选择器的区别" class="headerlink" title="5   类和ID选择器的区别"></a>5 类和ID选择器的区别</h1><p>相同点：</p><blockquote><p>可以应用于任何元素</p></blockquote><p>不同点：</p><blockquote><p>1、ID选择器只能在文档中使用一次。与类选择器不同，在一个HTML文档中，ID选择器只能使用一次，而且仅一次。而类选择器可以使用多次。</p></blockquote><p>下面代码是正确的：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;三年级时，我还是一个&lt;span <span class="keyword">class</span>="<span class="symbol">stress</span>"&gt;胆小如鼠&lt;/<span class="symbol">span</span>&gt;的孩子，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个&lt;<span class="symbol">span</span> <span class="symbol">class</span>="<span class="symbol">stress</span>"&gt;勇气&lt;/<span class="symbol">span</span>&gt;来回答老师提出的问题。&lt;/<span class="symbol">p</span>&gt;</span><br></pre></td></tr></table></figure></div><p>而下面代码是错误的：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>三年级时，我还是一个<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"stress"</span>&gt;</span>胆小如鼠<span class="tag">&lt;/<span class="name">span</span>&gt;</span>的孩子，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"stress"</span>&gt;</span>勇气<span class="tag">&lt;/<span class="name">span</span>&gt;</span>来回答老师提出的问题。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p>2、可以使用类选择器词列表方法为一个元素同时设置多个样式。我们可以为一个元素同时设多个样式，但只可以用类选择器的方法实现，ID选择器是不可以的（不能使用 ID 词列表）。</p></blockquote><p>下面的代码是正确的:</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">.stress</span>&#123;</span><br><span class="line">    color<span class="function">:red</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">.bigsize</span>&#123;</span><br><span class="line">    font-size<span class="function">:25px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;p&gt;到了&lt;span class=<span class="string">"stress bigsize"</span>&gt;三年级&lt;<span class="string">/span</span>&gt;下学期时，我们班上了一节公开课<span class="string">...</span>&lt;<span class="string">/p</span>&gt;</span><br></pre></td></tr></table></figure><p>上面代码的作用是为“三年级”三个文字设置文本颜色为红色并且字号为25px。</p><p>下面的代码是不正确的:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="meta">#stressid&#123;</span></span><br><span class="line"><span class="symbol">    color:</span>red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#bigsizeid&#123;</span></span><br><span class="line">    font-size:<span class="number">25</span>px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="params">&lt;p&gt;</span>到了<span class="params">&lt;span id="stressid bigsizeid"&gt;</span>三年级<span class="params">&lt;/span&gt;</span>下学期时，我们班上了一节公开课...<span class="params">&lt;/p&gt;</span></span><br></pre></td></tr></table></figure></div><p>上面代码不可以实现为“三年级”三个文字设置文本颜色为红色并且字号为25px的作用。</p><h1 id="6-子选择器"><a href="#6-子选择器" class="headerlink" title="6  子选择器"></a>6 子选择器</h1><p>还有一个比较有用的选择器子选择器，即大于符号(&gt;),用于选择指定标签元素的第一代子元素。如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.food</span>&gt;<span class="selector-tag">li</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid red;&#125;</span><br></pre></td></tr></table></figure></div><p>这行代码会使class名为food下的子元素li（水果、蔬菜）加入红色实线边框。</p><h1 id="7-包含-后代-选择器"><a href="#7-包含-后代-选择器" class="headerlink" title="7  包含(后代)选择器"></a>7 包含(后代)选择器</h1><p>包含选择器，即加入空格,用于选择指定标签元素下的后辈元素。如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.first</span>  <span class="selector-tag">span</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure></div><p>这行代码会使第一段文字内容中的“胆小如鼠”字体颜色变为红色。</p><blockquote><p>请注意这个选择器与子选择器的区别，子选择器（child selector）仅是指它的直接后代，或者你可以理解为作用于子元素的第一代后代。而后代选择器是作用于所有子后代元素。后代选择器通过空格来进行选择，而子选择器是通过“&gt;”进行选择。</p></blockquote><blockquote><p>总结：&gt;作用于元素的第一代后代，空格作用于元素的所有后代。</p></blockquote><p>比如现在有两个div标签，里面分别有4个p标签：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>现在我们想让第二个div标签内部的p标签都是红字，则：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"> <span class="selector-class">.box2</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">           <span class="attribute">color</span>:red;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>空格表示“内部的”，box2这个盒子内部的p标签”</p></blockquote><h1 id="8-通用选择器（通配符选择器）"><a href="#8-通用选择器（通配符选择器）" class="headerlink" title="8  通用选择器（通配符选择器）"></a>8 通用选择器（通配符选择器）</h1><p>通用选择器是功能最强大的选择器，它使用一个（*）号指定，它的作用是匹配html中所有标签元素，如下使用下面代码使用html中任意标签元素字体颜色全部设置为红色：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">* &#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure></div><h1 id="9-伪类选择符"><a href="#9-伪类选择符" class="headerlink" title="9  伪类选择符"></a>9 伪类选择符</h1><p>什么叫做伪类选择符，它允许给html不存在的标签（标签的某种状态）设置样式，比如说我们给html中一个标签元素的鼠标滑过的状态来设置字体颜色：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure></div><p>上面一行代码就是为<code>a</code>标签鼠标滑过的状态设置字体颜色变红。这样就会使鼠标滑过字体颜色变为红色特效。</p><p>关于伪选择符：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"> 关于伪类选择符，到目前为止，可以兼容所有浏览器的“伪类选择符”就是 <span class="selector-tag">a</span> 标签上使用 :hover 了</span><br><span class="line"></span><br><span class="line">其实伪类选择符还有很多，尤其是 css3 中，但是因为不能兼容所有浏览器，所以这里只是讲了这一种最常用的。</span><br><span class="line"></span><br><span class="line">其实 :hover 可以放在任意的标签上，比如说 <span class="selector-tag">p</span>:hover，但是它们的兼容性也是很不好的，所以现在比较常用的还是 <span class="selector-tag">a</span>:hover 的组合。</span><br></pre></td></tr></table></figure></div><h1 id="10-分组选择符"><a href="#10-分组选择符" class="headerlink" title="10   分组选择符"></a>10 分组选择符</h1><p>当你想为html中多个标签元素设置同一个样式时，可以使用分组选择符（，），如下代码为h1、span标签同时设置字体颜色为红色：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">span</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure></div><p>它相当于下面两行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br><span class="line"><span class="selector-tag">span</span>&#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure></div><h1 id="11-交集选择器"><a href="#11-交集选择器" class="headerlink" title="11   交集选择器"></a>11 交集选择器</h1><p>比如HTML结构：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">    &lt;h3 <span class="keyword">class</span>="<span class="symbol">special</span>"&gt;文字&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span>&gt;文字&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">h3</span> <span class="symbol">class</span>="<span class="symbol">special</span>"&gt;文字&lt;/<span class="symbol">h3</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span> <span class="symbol">class</span>="<span class="symbol">special</span>"&gt;文字&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span>&gt;文字&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">    &lt;<span class="symbol">p</span> <span class="symbol">class</span>="<span class="symbol">special</span>"&gt;文字&lt;/<span class="symbol">p</span>&gt;</span><br></pre></td></tr></table></figure></div><p>现在想让所有的携带special的p标签变红，即：又是p、又是special类</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.special</span>&#123;</span><br><span class="line">           <span class="attribute">color</span>:red;</span><br><span class="line">          &#125;</span><br></pre></td></tr></table></figure></div><h1 id="12-并集选择器"><a href="#12-并集选择器" class="headerlink" title="12   并集选择器"></a>12 并集选择器</h1><p>比如，选择页面上上所有的ol标签和ul标签：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DSCONFIG"><figure class="iseeu highlight /dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">ol,</span><span class="string">ul&#123;</span></span><br><span class="line">           <span class="built_in">list-style:none;</span></span><br><span class="line"><span class="built_in"></span>       &#125;</span><br></pre></td></tr></table></figure></div><p>逗号这里就是“和”的意思</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>二、CSS样式基本知识</title>
    <url>/post/3fbab54.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="1-内联式css样式，直接写在现有的HTML标签中"><a href="#1-内联式css样式，直接写在现有的HTML标签中" class="headerlink" title="1  内联式css样式，直接写在现有的HTML标签中"></a>1 内联式css样式，直接写在现有的HTML标签中</h1><p>CSS样式可以写在哪些地方呢？从CSS 样式代码插入的形式来看基本可以分为以下3种：内联式、嵌入式和外部式三种。</p><p>内联式css样式表就是把css代码直接写在现有的HTML标签中，如下面代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>这里文字是红色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>注意要写在元素的开始标签里，下面这种写法是错误的：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这里文字是红色。<span class="tag">&lt;/<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>并且css样式代码要写在style=””双引号中，如果有多条css样式代码设置可以写在一起，中间用分号隔开。如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red;font-size:12px"</span>&gt;</span>这里文字是红色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h1 id="2-嵌入式css样式，写在当前的文件中"><a href="#2-嵌入式css样式，写在当前的文件中" class="headerlink" title="2  嵌入式css样式，写在当前的文件中"></a>2 嵌入式css样式，写在当前的文件中</h1><p>嵌入式css样式，就是可以把css样式代码写在<code>&lt;style type=&quot;text/css&quot;&gt;&lt;/style&gt;</code>标签之间。如下面代码实现把<span>标签中的文字设置为红色：</span></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">  span&#123;</span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>嵌入式css样式必须写在<code>&lt;style&gt;&lt;/style&gt;</code>之间，并且一般情况下嵌入式css样式写在<code>&lt;head&gt;&lt;/head&gt;</code>之间。</p><h1 id="3-外部式css样式，写在单独的一个文件中"><a href="#3-外部式css样式，写在单独的一个文件中" class="headerlink" title="3  外部式css样式，写在单独的一个文件中"></a>3 外部式css样式，写在单独的一个文件中</h1><p>外部式css样式(也可称为外联式)就是把css代码写一个单独的外部文件中，这个css样式文件以“.css”为扩展名，在<code>&lt;head&gt;</code>内（不是在<code>&lt;style&gt;</code>标签内）使用<code>&lt;link&gt;</code>标签将css样式文件链接到HTML文件内，如下面代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;link <span class="attribute">href</span>=<span class="string">"base.css"</span> <span class="attribute">rel</span>=<span class="string">"stylesheet"</span> <span class="attribute">type</span>=<span class="string">"text/css"</span> /&gt;</span><br></pre></td></tr></table></figure></div><p>注意：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="BASIC"><figure class="iseeu highlight /basic"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、css样式文件名称以有意义的英文字母命名，如 main.css。</span><br><span class="line"><span class="number">2</span>、rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> 是固定写法不可修改。</span><br><span class="line"><span class="number">3</span>、&lt;link&gt;标签位置一般写在&lt;head&gt;标签之内。</span><br><span class="line"><span class="symbol">4 </span> 三种方法的优先级</span><br></pre></td></tr></table></figure></div><p>这三种样式是有优先级的：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">内联式 &gt; 嵌入式 &gt; 外部式</span><br></pre></td></tr></table></figure></div><p>但是嵌入式&gt;外部式有一个前提：</p><blockquote><p>嵌入式css样式的位置一定在外部式的后面。</p></blockquote><p>如果<code>&lt;link href=&quot;style.css&quot; ...&gt;</code>代码在<code>&lt;style type=&quot;text/css&quot;&gt;...&lt;/style&gt;</code>代码的前面（实际开发中也是这么写的）。感兴趣的小伙伴可以试一下，把它们调换顺序，再看他们的优先级是否变化。</p><p>其实总结来说，就是–就近原则（离被设置元素越近优先级别越高）。</p><p>但注意上面所总结的优先级是有一个前提：</p><blockquote><p>内联式、嵌入式、外部式样式表中css样式是在的相同权值的情况下。</p></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>一、开始学习CSS，为网页添加样式</title>
    <url>/post/5685bf44.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="1、CSS"><a href="#1、CSS" class="headerlink" title="1、CSS"></a>1、CSS</h1><blockquote><p>CSS是一个很神奇的东西，设计者可以通过修改样式表的定义而使网页呈现出完全不同的外观。</p></blockquote><p>Html4的时候，w3c组织将HTML的结构和样式做了分离:</p><h2 id="（1）前端三层："><a href="#（1）前端三层：" class="headerlink" title="（1）前端三层："></a>（1）前端三层：</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line">  <span class="attr">HTML</span>        <span class="string">结构层，搭建网页的整体结构</span></span><br><span class="line">  <span class="attr">CSS</span>         <span class="string">样式层，装饰页面</span></span><br><span class="line">  <span class="attr">JavaScript</span>  <span class="string">行为层，一些页面交互效果</span></span><br><span class="line"><span class="attr">这三层标准都是由w3c组织来维护</span></span><br><span class="line"><span class="attr">CSS发展到现在，最新版本是CSS3，最常用的还是CSS2.1版本</span></span><br></pre></td></tr></table></figure></div><h2 id="（2）CSS作用"><a href="#（2）CSS作用" class="headerlink" title="（2）CSS作用:"></a>（2）CSS作用:</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">CSS两个重要概念：层叠式，样式</span><br><span class="line"></span><br><span class="line">样式：HTML标签在页面的显示效果</span><br><span class="line">某一个标签有什么样式，直接将对应的属性值罗列出来</span><br><span class="line"></span><br><span class="line">CSS样式设置的时候，有两个关键：选择器、样式表</span><br><span class="line"></span><br><span class="line">CSS作用细化：</span><br><span class="line">  ①给文本添加文字显示样式</span><br><span class="line">  ②给盒子添加属性进行结构布局</span><br></pre></td></tr></table></figure></div><h2 id="（3）CSS几个小属性"><a href="#（3）CSS几个小属性" class="headerlink" title="（3）CSS几个小属性:"></a>（3）CSS几个小属性:</h2><h3 id="①文本样式"><a href="#①文本样式" class="headerlink" title="①文本样式:"></a>①文本样式:</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SCSS"><figure class="iseeu highlight /scss"><table><tr><td class="code"><pre><span class="line">字体、颜色、大小</span><br><span class="line"></span><br><span class="line">大小：<span class="attribute">font-size</span>  本身是一个复合属性<span class="attribute">font</span>，里面的单一属性，需要用<span class="attribute">font</span>单一属性名。</span><br><span class="line">   属性值：以像素为单位  <span class="attribute">font-size</span>:<span class="number">30px</span>;</span><br><span class="line">颜色：<span class="attribute">color</span>  属性有几种选择方案：十六进制，RGB,rgba,颜色名（英文）</span><br><span class="line">    红色red</span><br><span class="line">    橙色orange</span><br><span class="line">    黄色yellow</span><br><span class="line">    绿色green</span><br><span class="line">    青色cyan</span><br><span class="line">    蓝色blue</span><br><span class="line">    紫色purple</span><br><span class="line">    白色white</span><br><span class="line">    黑色black</span><br><span class="line">    粉色pink</span><br><span class="line">    金色gold</span><br><span class="line">    浅蓝色lightblue</span><br><span class="line">    黄绿色yellowgreen</span><br><span class="line">    天蓝色skyblue</span><br><span class="line"></span><br><span class="line">    白色的几种表示方法：<span class="selector-id">#fffff</span>    rgb(255,255,255)   white</span><br><span class="line"></span><br><span class="line">字体：<span class="attribute">font-family</span>  复合属性的一个单一属性。中文字体和英文字体</span><br><span class="line">  书写的时候将英文字体写在前面，中文字体在后面</span><br><span class="line">  英文字体常用：Arial,consolas</span><br><span class="line">  中文字体：默认字体为宋体，常用字体有宋体、微软雅黑。所有电脑都有宋体，写字体是标注好备选字体。</span><br><span class="line"></span><br><span class="line">  <span class="attribute">font-family</span>:<span class="string">"Arial"</span>,<span class="string">"隶书"</span>,<span class="string">"微软雅黑"</span>,<span class="string">"宋体"</span>;</span><br><span class="line">  浏览器首先检索英文字体  在给中文检索字体时，若电脑上没有设置的第一个中文字体，则自动检索下一个中文字体。</span><br><span class="line">字体用引号包裹，字体之间用逗号隔开，表示或为了追求加载速度，将一些中文字体名字用英文书写:</span><br><span class="line">    微软雅黑： Microsoft Yahei</span><br><span class="line">    宋体：     SimSun</span><br></pre></td></tr></table></figure></div><h3 id="②盒子实体化基本属性"><a href="#②盒子实体化基本属性" class="headerlink" title="②盒子实体化基本属性"></a>②盒子实体化基本属性</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">实体化：将盒子给宽、高、背景色、边框</span><br><span class="line">宽度：<span class="selector-tag">width</span>  属性值是像素为单位</span><br><span class="line">高度：<span class="selector-tag">height</span>   属性值是像素为单位</span><br><span class="line">背景色：<span class="selector-tag">background-color</span>  属性值就是颜色的色值</span><br><span class="line">边框：<span class="selector-tag">border</span>  复合属性，有多个属性值，属性值之间用空格隔开，边框的宽度、颜色、线的类型。</span><br><span class="line">实线边框：<span class="selector-tag">solid</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">"Arial"</span>,<span class="string">"隶书"</span>,<span class="string">"微软雅黑"</span>,<span class="string">"宋体"</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:lightblue;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">5px</span> solid red;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div><h1 id="2、认识CSS样式"><a href="#2、认识CSS样式" class="headerlink" title="2、认识CSS样式"></a>2、认识CSS样式</h1><p>CSS全称为“层叠样式表 (Cascading Style Sheets)”，它主要是用于定义HTML内容在浏览器内的显示样式，如文字大小、颜色、字体加粗等。</p><p>如下列代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">   <span class="attribute">font-size</span>:<span class="number">12px</span>;</span><br><span class="line">   <span class="attribute">color</span>:red;</span><br><span class="line">   <span class="attribute">font-weight</span>:bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>使用CSS样式的一个好处是通过定义某个样式，可以让不同网页位置的文字有着统一的字体、字号或者颜色等。</p><h1 id="3、CSS代码语法"><a href="#3、CSS代码语法" class="headerlink" title="3、CSS代码语法"></a>3、CSS代码语法</h1><p>css 样式由选择符和声明组成，而声明又由属性和值组成。</p><p>选择符：又称选择器，指明网页中要应用样式规则的元素。</p><p>声明：在英文大括号“｛｝”中的的就是声明，属性和值之间用英文冒号“：”分隔。当有多条声明时，中间可以英文分号“;”分隔，如下所示：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure></div><p>注意：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">1、最后一条声明可以没有分号，但是为了以后修改方便，一般也加上分号。</span><br><span class="line">2、为了使用样式更加容易阅读，可以将每条代码写在一个新行内，如下所示：</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">   <span class="attribute">font-size</span>:<span class="number">12px</span>;</span><br><span class="line">   <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h1 id="4、CSS注释代码"><a href="#4、CSS注释代码" class="headerlink" title="4、CSS注释代码"></a>4、CSS注释代码</h1><p>就像在Html的注释一样，在CSS中也有注释语句：用/<em>注释语句</em>/来标明<code>（Html中使用&lt;!--注释语句--&gt;)</code>。就像下面代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*设置段落默认格式*/</span></span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">   <span class="attribute">font-size</span>:<span class="number">12px</span>;</span><br><span class="line">   <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>八、HTML的标签（四）</title>
    <url>/post/ec0412fb.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="八、HTML的标签（四）"><a href="#八、HTML的标签（四）" class="headerlink" title="八、HTML的标签（四）"></a>八、HTML的标签（四）</h1><h2 id="1-使用表单标签，与用户交互"><a href="#1-使用表单标签，与用户交互" class="headerlink" title="1 使用表单标签，与用户交互"></a>1 使用表单标签，与用户交互</h2><p>网站怎样与用户进行交互？答案是使用HTML表单(form)。表单是可以把浏览者输入的数据传送到服务器端，这样服务器端程序就可以处理表单传过来的数据。</p><p>表单：网页上可以提供用户输入和选择的一些控件</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="OXYGENE"><figure class="iseeu highlight /oxygene"><table><tr><td class="code"><pre><span class="line">&lt;form   <span class="function"><span class="keyword">method</span>="传送方式"   <span class="title">action</span>="服务器文件"&gt;</span></span><br></pre></td></tr></table></figure></div><p>讲解：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="FORTRAN"><figure class="iseeu highlight /fortran"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>&lt;<span class="keyword">form</span>&gt; ：&lt;<span class="keyword">form</span>&gt;标签是成对出现的，以&lt;<span class="keyword">form</span>&gt;开始，以&lt;/<span class="keyword">form</span>&gt;结束。</span><br><span class="line">我们所有的表单元素需要写在<span class="keyword">form</span>标签内部，不是一个结构性标签，而是一个功能性的标签。</span><br><span class="line">功能：规定我们提交的数据发送到哪里，发送的方法是哪种。</span><br><span class="line"><span class="number">2.</span><span class="keyword">action</span> ：提交的位置。浏览者输入的数据被传送到的地方,比如一个PHP页面(<span class="keyword">save</span>.php)。</span><br><span class="line"><span class="number">3.</span>method ： 方法。数据传送的方式。属性值（get/post）。</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span>    method=<span class="string">"post"</span>   action=<span class="string">"save.php"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">label</span> <span class="keyword">for</span>=<span class="string">"username"</span>&gt;用户名:&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"text"</span> name=<span class="string">"username"</span> /&gt;</span><br><span class="line">        &lt;<span class="keyword">label</span> <span class="keyword">for</span>=<span class="string">"pass"</span>&gt;密码:&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"password"</span> name=<span class="string">"pass"</span> /&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure></div><form method="post" action="save.php"><label for="username">用户名:</label><input type="text" name="username"><label for="pass">密码:</label><input type="password" name="pass"></form><p>注意:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">1、所有表单控件（文本框、文本域、按钮、单选框、复选框等）都必须放在 &lt;<span class="keyword">form</span>&gt;&lt;/<span class="keyword">form</span>&gt; 标签之间（否则用户输入的信息可提交不到服务器上哦！）。</span><br><span class="line">2、method : <span class="keyword">post</span>/get 的区别这一部分内容属于后端程序员考虑的问题。</span><br></pre></td></tr></table></figure></div><h2 id="2-文本输入框、密码输入框"><a href="#2-文本输入框、密码输入框" class="headerlink" title="2 文本输入框、密码输入框"></a>2 文本输入框、密码输入框</h2><p>当用户要在表单中键入字母、数字等内容时，就会用到文本输入框。文本框也可以转化为密码输入框。<br>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;form&gt;</span><br><span class="line">   &lt;<span class="keyword">input</span> <span class="keyword">type</span>="text/password" <span class="type">name</span>="名称" <span class="keyword">value</span>="文本" /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></div><form><input type="text/password" name="名称" value="文本"></form>1、input<p>2、type：<br>当type=”text”时，输入框为文本输入框;<br>当type=”password”时, 输入框为密码输入框。</p><p>3、name：为文本框命名，以备后台程序ASP 、PHP使用。</p><p>4、value：为文本输入框设置默认值。(一般起到提示作用)</p><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span>&gt;</span><br><span class="line">  姓名：</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"text"</span> name=<span class="string">"myName"</span>/&gt;</span><br><span class="line">  &lt;<span class="keyword">br</span>/&gt;</span><br><span class="line">  密码：</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"password"</span> name=<span class="string">"pass"</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure></div><p>在浏览器中显示的结果：</p><form>姓名： <input type="text" name="myName"><br>密码： <input type="password" name="pass"></form><h2 id="3-文本域，支持多行文本输入"><a href="#3-文本域，支持多行文本输入" class="headerlink" title="3 文本域，支持多行文本输入"></a>3 文本域，支持多行文本输入</h2><p>当用户需要在表单中输入大段文字时，需要用到文本输入域。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;textarea  <span class="attribute">rows</span>=<span class="string">"行数"</span> <span class="attribute">cols</span>=<span class="string">"列数"</span>&gt;文本&lt;/textarea&gt;</span><br></pre></td></tr></table></figure></div><p>结果：</p><p><textarea rows="行数" cols="列数">文本</textarea></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">1、<span class="tag">&lt;<span class="name">textarea</span>&gt;</span>标签是成对出现的，以<span class="tag">&lt;<span class="name">textarea</span>&gt;</span>开始，以<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span>结束。</span><br><span class="line">   Area  区域</span><br><span class="line">2、cols ：多行输入域的列数。能放多少个字节</span><br><span class="line">3、rows ：多行输入域的行数。</span><br><span class="line">4、在<span class="tag">&lt;<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span>标签之间可以输入默认值。</span><br></pre></td></tr></table></figure></div><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>  <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"save.php"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">"50"</span> <span class="attr">rows</span>=<span class="string">"10"</span> &gt;</span>在这里输入内容...<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>结果：</p><form method="post" action="save.php"><label>联系我们</label><textarea cols="50" rows="10">在这里输入内容...</textarea></form><blockquote><p>注意这两个属性可用css样式的width和height来代替：col用width、row用height来代替。（这两个css样式在以后的章节会讲解）</p></blockquote><h2 id="4-使用单选框、复选框，让用户选择"><a href="#4-使用单选框、复选框，让用户选择" class="headerlink" title="4 使用单选框、复选框，让用户选择"></a>4 使用单选框、复选框，让用户选择</h2><p>在使用表单设计调查表时，为了减少用户的操作，使用选择框是一个好主意，html中有两种选择框，即单选框和复选框，两者的区别是单选框中的选项用户只能选择一项，而复选框中用户可以任意选择多项，甚至全选。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;input   <span class="attribute">type</span>=<span class="string">"radio/checkbox"</span>   <span class="attribute">value</span>=<span class="string">"值"</span>    <span class="attribute">name</span>=<span class="string">"名称"</span>   <span class="attribute">checked</span>=<span class="string">"checked"</span>/&gt;</span><br></pre></td></tr></table></figure></div><p>结果：</p><input type="radio/checkbox" value="值" name="名称" checked><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="FSHARP"><figure class="iseeu highlight /fsharp"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="class"><span class="keyword">type</span>:</span></span><br><span class="line">   当 <span class="class"><span class="keyword">type</span></span>=<span class="string">"radio"</span> 时，控件为单选框</span><br><span class="line">   当 <span class="class"><span class="keyword">type</span></span>=<span class="string">"checkbox"</span> 时，控件为复选框</span><br><span class="line"><span class="number">2</span>、value：提交数据到服务器的值（后台程序PHP使用）</span><br><span class="line"><span class="number">3</span>、name：为控件命名，以备后台程序 ASP、PHP 使用</span><br><span class="line"><span class="number">4</span>、checked：当设置 checked=<span class="string">"checked"</span> 时，该选项被默认选中</span><br></pre></td></tr></table></figure></div>注意:同一组的单选按钮，name 取值一定要一致，比如上面例子为同一个名称“radioLove”，这样同一组的单选按钮才可以起到单选的作用。如果不设置name属性，不知道哪些单选框是一组，不能做到单选的效果。<h2 id="5-使用下拉列表框，节省空间"><a href="#5-使用下拉列表框，节省空间" class="headerlink" title="5 使用下拉列表框，节省空间"></a>5 使用下拉列表框，节省空间</h2><p>下拉列表在网页中也常会用到，它可以有效的节省网页空间。既可以单选、又可以多选。</p><p>Select 选择</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="keyword">value</span>：</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、selected="selected"：</span><br><span class="line">设置selected="selected"属性，则该选项就被默认选中。</span><br><span class="line">&lt;<span class="keyword">select</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span>&gt;北京&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span>&gt;上海&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span> selected="selected"&gt;深圳&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span>&gt;广州&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span>&gt;郑州&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure></div><p>在浏览器中显示的结果：<br><select><br><option>北京</option><br><option>上海</option><br><option selected>深圳</option><br><option>广州</option><br><option>郑州</option><br></select></p><h2 id="6-使用下拉列表框进行多选"><a href="#6-使用下拉列表框进行多选" class="headerlink" title="6 使用下拉列表框进行多选"></a>6 使用下拉列表框进行多选</h2><p>下拉列表也可以进行多选操作，在<code>&lt;select&gt;</code>标签中设置<code>multiple=&quot;multiple&quot;</code>属性，就可以实现多选功能，在 <code>windows</code> 操作系统下，进行多选时按下<code>Ctrl</code>键同时进行单击（在 <code>Mac</code>下使用 <code>Command</code> +单击），可以选择多个选项。</p><h2 id="7-使用提交按钮，提交数据"><a href="#7-使用提交按钮，提交数据" class="headerlink" title="7 使用提交按钮，提交数据"></a>7 使用提交按钮，提交数据</h2><p>在表单中有两种按钮可以使用，分别为：提交按钮、重置。</p><p>当用户需要提交表单信息到服务器时，需要用到提交按钮。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">input</span>   <span class="keyword">type</span>="submit"   <span class="keyword">value</span>="提交"&gt;</span><br></pre></td></tr></table></figure></div><p>在浏览器中显示的结果：</p><input type="submit" value="提交"><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ELM"><figure class="iseeu highlight /elm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span>：只有当<span class="keyword">type</span>值设置为submit时，按钮才有提交作用</span><br><span class="line"><span class="title">value</span>：按钮上显示的文字</span><br></pre></td></tr></table></figure></div><h2 id="8-使用重置按钮，重置表单信息"><a href="#8-使用重置按钮，重置表单信息" class="headerlink" title="8 使用重置按钮，重置表单信息"></a>8 使用重置按钮，重置表单信息</h2><p>当用户需要重置表单信息到初始时的状态时，比如用户输入“用户名”后，发现书写有误，可以使用重置按钮使输入框恢复到初始状态。只需要把<code>type</code>设置为<code>&quot;reset&quot;</code>就可以。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">input</span> <span class="keyword">type</span>="reset" <span class="keyword">value</span>="重置"&gt;</span><br></pre></td></tr></table></figure></div><blockquote><p>type：只有当type值设置为reset时，按钮才有重置作用</p></blockquote><blockquote><p>value：按钮上显示的文字</p></blockquote><h2 id="9-普通按钮"><a href="#9-普通按钮" class="headerlink" title="9 普通按钮"></a>9 普通按钮</h2><p>Type：button</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span>&gt;</span><br><span class="line">		账号：&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"text"</span>/&gt;&lt;<span class="keyword">br</span>/&gt;</span><br><span class="line">		密码：&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"password"</span>&gt;&lt;<span class="keyword">br</span>/&gt;</span><br><span class="line">		&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"button"</span> value=<span class="string">"普通按钮"</span>/&gt;</span><br><span class="line">		&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"reset"</span> value=<span class="string">"重置"</span>/&gt;</span><br><span class="line">		&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"submit"</span> value=<span class="string">"提交"</span>/&gt;</span><br><span class="line">	&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure></div><p>在浏览器中显示的结果：</p><form>账号：<input type="text"><br>密码：<input type="password"><br><input type="button" value="普通按钮"> <input type="reset" value="重置"> <input type="submit" value="提交"></form><h2 id="10-form表单中的label标签"><a href="#10-form表单中的label标签" class="headerlink" title="10 form表单中的label标签"></a>10 form表单中的label标签</h2><p>label标签不会向用户呈现任何特殊效果，它的作用是为鼠标用户改进了可用性。如果你在 label 标签内点击文本，就会触发此控件。就是说，当用户单击选中该label标签时，浏览器就会自动将焦点转到和标签相关的表单控件上（就自动选中和该label标签相关连的表单控件上）。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DOCKERFILE"><figure class="iseeu highlight /dockerfile"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">label</span><span class="bash"> <span class="keyword">for</span>=<span class="string">"控件id名称"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p>注意：标签的 for 属性中的值应当与相关控件的 id 属性值一定要相同。</p></blockquote><p>例子：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STATA"><figure class="iseeu highlight /stata"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">label</span> <span class="keyword">for</span>=<span class="string">"male"</span>&gt;男&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"gender"</span> id=<span class="string">"male"</span> /&gt;</span><br><span class="line">  &lt;<span class="keyword">br</span> /&gt;</span><br><span class="line">  &lt;<span class="keyword">label</span> <span class="keyword">for</span>=<span class="string">"female"</span>&gt;女&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"radio"</span> name=<span class="string">"gender"</span> id=<span class="string">"female"</span> /&gt;</span><br><span class="line">  &lt;<span class="keyword">label</span> <span class="keyword">for</span>=<span class="string">"email"</span>&gt;输入你的邮箱地址&lt;/<span class="keyword">label</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"email"</span> id=<span class="string">"email"</span> placeholder=<span class="string">"Enter email"</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure></div><p>在浏览器中显示的结果：</p><form><label for="male">男</label><input type="radio" name="gender" id="male"><br><label for="female">女</label><input type="radio" name="gender" id="female"><p><label for="email">输入你的邮箱地址</label><br><input type="email" id="email" placeholder="Enter email"></p></form><blockquote><p>表单：是一些提供用户输入或选择的小控件</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">文本框：&lt;<span class="keyword">input</span> <span class="keyword">type</span>="text"/&gt;</span><br><span class="line"></span><br><span class="line">密码框：&lt;<span class="keyword">input</span> <span class="keyword">type</span>="password"/&gt;</span><br><span class="line"></span><br><span class="line">单选框：&lt;<span class="keyword">input</span> <span class="keyword">type</span>="radio"/&gt;</span><br><span class="line"></span><br><span class="line">复选框：&lt;<span class="keyword">input</span> <span class="keyword">type</span>="checkbox"/&gt;</span><br><span class="line"></span><br><span class="line">普通按钮：&lt;<span class="keyword">input</span> <span class="keyword">type</span>="button" <span class="keyword">value</span>="普通按钮"/&gt;</span><br><span class="line"></span><br><span class="line">提交按钮：&lt;<span class="keyword">input</span> <span class="keyword">type</span>="submit" <span class="keyword">value</span>="提交"/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">重置按钮：&lt;<span class="keyword">input</span> <span class="keyword">type</span>="reset" <span class="keyword">value</span>="重置"/&gt;</span><br><span class="line"></span><br><span class="line">文本域：&lt;textarea cols="30" <span class="keyword">rows</span>="10"&gt;&lt;/textarea&gt;</span><br><span class="line"></span><br><span class="line">下拉菜单：</span><br><span class="line">&lt;<span class="keyword">select</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span> <span class="keyword">value</span>=""&gt;&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span> <span class="keyword">value</span>=""&gt;&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">	&lt;<span class="keyword">option</span> <span class="keyword">value</span>=""&gt;&lt;/<span class="keyword">option</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">select</span>&gt;</span><br></pre></td></tr></table></figure></div><p>在浏览器中显示的结果：</p><p>文本框：<input type="text"></p><p>密码框：<input type="password"></p><p>单选框：<input type="radio"></p><p>复选框：<input type="checkbox"></p><p>普通按钮：<input type="button" value="普通按钮"></p><p>提交按钮：<input type="submit" value="提交"></p><p>重置按钮：<input type="reset" value="重置"></p><p>文本域：<textarea cols="30" rows="10"></textarea></p><p>下拉菜单：<br><select><br><option value=""></option><br><option value=""></option><br><option value=""></option><br></select></p><h2 id="11-杂项"><a href="#11-杂项" class="headerlink" title="11 杂项"></a>11 杂项</h2><h3 id="11-1-字符实体"><a href="#11-1-字符实体" class="headerlink" title="11.1  字符实体"></a>11.1 字符实体</h3><p>我们的一些特殊符号，并不能直接在文本内容里书写</p><p>HTML提供了一套书写特殊符号的替代符号，就是字符实体，转义字符。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="params">&lt;  小于号 <span class="variable">&amp;lt</span>  less than</span></span><br><span class="line"><span class="params">&gt;</span>  大于号 <span class="variable">&amp;gt</span>  greater than</span><br><span class="line">无换行空格 <span class="variable">&amp;nbsp</span> no breaking space</span><br><span class="line">© 版权 <span class="variable">&amp;copy</span> copyright</span><br><span class="line"></span><br><span class="line">更多字符实体，参看：HTML ISO<span class="number">-8859</span><span class="number">-1</span>   </span><br><span class="line"><span class="symbol">https:</span><span class="comment">//www.w3school.com.cn/tags/html_ref_entities.html</span></span><br></pre></td></tr></table></figure></div><h3 id="11-2-废弃标签"><a href="#11-2-废弃标签" class="headerlink" title="11.2  废弃标签"></a>11.2 废弃标签</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">b</span>&gt;</span>这是一个b标签<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">u</span>&gt;</span>这是一个U标签<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">i</span>&gt;</span>这是一个i标签<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><font color="red">文字</font><br><b>这是一个b标签</b><br><u>这是一个U标签</u><br><i>这是一个i标签</i></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">b:</span>加粗 bold</span><br><span class="line"><span class="symbol">u:</span>下划线 underline</span><br><span class="line"><span class="symbol">i:</span>倾斜 italic</span><br><span class="line"><span class="symbol">del:</span>删除线 delete</span><br><span class="line"><span class="symbol">strong:</span>加强，突出，有加粗自己的效果</span><br><span class="line"><span class="symbol">em:</span>emphasis 加强，有倾斜字体的效果</span><br><span class="line"><span class="symbol">br:</span>breaking 换行   <span class="params">&lt;br/&gt;</span></span><br><span class="line"><span class="symbol">hr:</span>horizontal rule  水平分割线  <span class="params">&lt;hr/&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>html标签</tag>
      </tags>
  </entry>
  <entry>
    <title>七、HTML的标签（三）</title>
    <url>/post/afb230ff.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:24 GMT+0800 (GMT+08:00) --><h1 id="七、HTML的标签（三）"><a href="#七、HTML的标签（三）" class="headerlink" title="七、HTML的标签（三）"></a>七、HTML的标签（三）</h1><h2 id="1-使用-lt-a-gt-标签，链接到另一个页面"><a href="#1-使用-lt-a-gt-标签，链接到另一个页面" class="headerlink" title="1 使用&lt;a&gt;标签，链接到另一个页面"></a>1 使用<code>&lt;a&gt;</code>标签，链接到另一个页面</h2><p>a标签 anchor 锚的意思，超级链接的缩写</p><p>href hypertext reference 超文本引用，值为跳转连接的地址</p><p>target 表示是否在新标签页打开链接，属性值”_blank”表示在新窗口打开</p><p>title 设置鼠标悬停文本</p><p>使用<code>&lt;a&gt;</code>标签可实现超链接，它在网页制作中可以说是无处不在，只要有链接的地方，就会有这个标签。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;a  <span class="attribute">href</span>=<span class="string">"目标网址"</span>  <span class="attribute">title</span>=<span class="string">"鼠标滑过显示的文本"</span>&gt;链接显示的文本&lt;/a&gt;</span><br></pre></td></tr></table></figure></div><p>例如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>  <span class="attr">href</span>=<span class="string">"https://mango185.github.io/"</span>  <span class="attr">title</span>=<span class="string">"点击进入Mango的小站"</span>&gt;</span>click here!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><a href="https://mango185.github.io/" target="_blank" rel="noopener" title="点击进入Mango的小站">click here!</a></p><p>上面例子作用是单击click here!文字，网页链接到<code>https://mango185.github.io/</code>这个网页。</p><p>title属性的作用，鼠标滑过链接文字时会显示这个属性的文本内容。<br>这个属性在实际网页开发中作用很大，主要方便搜索引擎了解链接地址的内容（语义化更友好）。</p><p>注意：只要为文本加入a标签后，文字的颜色就会自动变为蓝色（被点击过的文本颜色为紫色）。</p><p>a 的页面内锚点跳转：id名和name名在网页里必须是唯一的。<br>添加锚点的方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">（1）给对应位置的标签加一个id属性，属性值就是id名 <span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">”shenghuo”</span>&gt;</span>生活经历<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">在需要添加锚点的位置，加入一个a标签，不用书写href属性，添加一个name，命名与id一致。<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">”#shenghuo”</span>&gt;</span>个人生活<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">（2）   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">”#shenghuo”</span>&gt;</span>个人生活<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">”shenghuo”</span>&gt;</span> <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">       h2&gt;生活经历<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">跳转锚点：将href属性值书写为#id名，#name名</span><br><span class="line">（3）在网页111.html中点击“王宝强主要作品”跳转到网页222.html中标题“王宝强主要作品”的位置”：</span><br><span class="line">     在网页111.html中  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">”222.html#zuopin”</span>&gt;</span>王宝强主要作品<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">     在网页222.html中  <span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">”zuopin”</span>&gt;</span>王宝强主要作品<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="1-1-a标签的伪类"><a href="#1-1-a标签的伪类" class="headerlink" title="1.1  a标签的伪类"></a>1.1 a标签的伪类</h3><p>a标签有4个特殊属性和状态，根据用户的不同行为，显示不同的状态</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>:link        <span class="selector-tag">a</span> 标签未点击前状态</span><br><span class="line"><span class="selector-tag">a</span>:visited     <span class="selector-tag">a</span> 标签点击后的状态</span><br><span class="line"><span class="selector-tag">a</span>:hover      <span class="selector-tag">a</span> 标签悬停状态</span><br><span class="line"><span class="selector-tag">a</span>:active      <span class="selector-tag">a</span> 标签激活状态</span><br></pre></td></tr></table></figure></div><p>伪类和类.box的区别：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ASCIIDOC"><figure class="iseeu highlight /asciidoc"><table><tr><td class="code"><pre><span class="line">伪类和类一样也有权重，和类权重相同</span><br><span class="line">伪类样式不能直接加载，只有用户触发相应行为，a标签才能渲染对应的效果</span><br><span class="line"><span class="title">.box类样式直接渲染在浏览器不需要用户干预</span></span><br></pre></td></tr></table></figure></div><h3 id="1-2-4个伪类顺序不能颠倒"><a href="#1-2-4个伪类顺序不能颠倒" class="headerlink" title="1.2  4个伪类顺序不能颠倒"></a>1.2 4个伪类顺序不能颠倒</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="STYLUS"><figure class="iseeu highlight /stylus"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>:link  <span class="selector-tag">a</span>:visited  <span class="selector-tag">a</span>:hover  <span class="selector-tag">a</span>:active</span><br></pre></td></tr></table></figure></div><p>4个伪类顺序不能颠倒，颠倒之后不能正常渲染效果</p><p>因为4个伪类也有权重，权重相同，后面的会层叠掉之前的</p><h3 id="1-3-应用"><a href="#1-3-应用" class="headerlink" title="1.3  应用"></a>1.3 应用</h3><p>在使用a标签一般只需要渲染a:hover，其他的样式和a标签相同</p><p>a标签设置样式属性都将加载在4个伪类身上</p><p>有特殊样式再用伪类层叠（只需要将伪类样式书写在伪类选择器上）</p><p>a标签是行内元素，想设置宽高，必须转块。</p><p>a标签颜色和下划线必须单独设置，不能从祖先继承</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">	<span class="comment">/* a标签是行内元素，想设置宽高，必须转块 */</span></span><br><span class="line">   <span class="attribute">display</span>: block;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">80px</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: lightblue;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* 块级元素水平居中 */</span></span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* 文字属性   */</span></span><br><span class="line">   <span class="attribute">font-size</span>:<span class="number">30px</span>;</span><br><span class="line">   <span class="attribute">text-align</span>:center;</span><br><span class="line">   <span class="attribute">line-height</span>:<span class="number">80px</span>;         </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">	<span class="comment">/* 伪类只需要书写特殊样式 */</span></span><br><span class="line">	<span class="attribute">background-color</span>: pink;</span><br><span class="line">	<span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="2-在新建浏览器窗口中打开链接"><a href="#2-在新建浏览器窗口中打开链接" class="headerlink" title="2 在新建浏览器窗口中打开链接"></a>2 在新建浏览器窗口中打开链接</h2><p><code>&lt;a&gt;</code>标签在默认情况下，链接的网页是在当前浏览器窗口中打开，有时我们需要在新的浏览器窗口中打开。<br>如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"目标网址"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>click here!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="3-认识-lt-img-gt-标签，为网页插入图片"><a href="#3-认识-lt-img-gt-标签，为网页插入图片" class="headerlink" title="3 认识&lt;img&gt;标签，为网页插入图片"></a>3 认识<code>&lt;img&gt;</code>标签，为网页插入图片</h2><p>在网页的制作中为使网页炫丽美观，肯定是缺少不了图片，可以使用<code>&lt;img&gt;</code>标签来插入图片。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;img <span class="attribute">src</span>=<span class="string">"图片地址"</span> <span class="attribute">alt</span>=<span class="string">"下载失败时的替换文本"</span> title = <span class="string">"提示文本"</span>&gt;</span><br></pre></td></tr></table></figure></div><p>讲解：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MAXIMA"><figure class="iseeu highlight /maxima"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、img标签</span><br><span class="line"><span class="built_in">image</span>，图片的缩写，表示定义一个图像，相当于一个特殊的文本</span><br><span class="line">  可插入图片的类型：jpg、png、gif。</span><br><span class="line"><span class="number">2</span>、img标签的属性：</span><br><span class="line">	① src：标识图像的位置；</span><br><span class="line">	② alt：指定图像的描述性文本，当图像不可见时（下载不成功时），可看到该属性指定的文本；</span><br><span class="line">	③ <span class="built_in">title</span>：提供在图像可见时对图像的描述(鼠标滑过图片时显示的文本)；</span><br><span class="line">	④ <span class="built_in">width</span>：表示图片的宽度     <span class="built_in">width</span>=”<span class="number">200</span>”px可以不写，高度也可以不写，会同比例缩放</span><br><span class="line">	⑤ <span class="built_in">height</span>：表示图片的高度</span><br><span class="line">	⑥ <span class="built_in">border</span>：边框属性，它的值可以设置边框的厚度</span><br></pre></td></tr></table></figure></div><h2 id="4-路径"><a href="#4-路径" class="headerlink" title="4 路径"></a>4 路径</h2><p>路径就是我们查找相关文件的位置的方法：相对路径、绝对路径</p><h3 id="（1）相对路径："><a href="#（1）相对路径：" class="headerlink" title="（1）相对路径："></a>（1）相对路径：</h3><p>查找文件时，从HTML出发，查找文件的位置。</p><p>同级查找：直接书写文件名字（包括文件名和扩展名）</p><p>子级查找：进入文件查找过程，书写对应的文件夹的名字，后面用/表示文件夹，再书写文件名和扩展名。</p><p>上级查找：文件放在html上级的文件夹里，需要先退出当前级别，退回到上一级文件夹，方法就是用../表示退回，退出几级就书写几次。后面直接书写指定的文件名和扩展名</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;img <span class="attribute">src</span>=”images/cat.jpg” <span class="attribute">alt</span>=””/&gt;     子级查找</span><br><span class="line">&lt;img <span class="attribute">src</span>=”../cat1.jpg” <span class="attribute">alt</span>=””/&gt;          上级查找 </span><br><span class="line">&lt;img <span class="attribute">src</span>=”../../images/cat2.jpg” <span class="attribute">alt</span>=””/&gt;  子级和上级综合查找</span><br><span class="line">   注意：不能夸盘符进行查找</span><br></pre></td></tr></table></figure></div><h3 id="（2）绝对路径"><a href="#（2）绝对路径" class="headerlink" title="（2）绝对路径"></a>（2）绝对路径</h3><p>绝对路径是从盘符出发寻找目标文件</p><p>以http：//开头的路径也是绝对路径</p><p>实际工作当中不推荐使用从盘符出发的绝对路径，因为它不可移植、不可移动</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;img <span class="attribute">src</span>=”C:/images/cat.jpg” <span class="attribute">alt</span>=””/&gt;     从盘符查找</span><br><span class="line">&lt;img <span class="attribute">src</span>=”http://bssl.duitang.com/uploads/blog/201312/04/20131204184148_hhXUT.jpeg” <span class="attribute">alt</span>=””/&gt;  子级和上级综合查找</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">常用：相对路径和网址形式的绝对路径</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>html标签</tag>
      </tags>
  </entry>
  <entry>
    <title>六、HTML的标签（二）</title>
    <url>/post/29e9757d.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="六、HTML的标签（二）"><a href="#六、HTML的标签（二）" class="headerlink" title="六、HTML的标签（二）"></a>六、HTML的标签（二）</h1><h2 id="1-使用ul，添加新闻信息列表"><a href="#1-使用ul，添加新闻信息列表" class="headerlink" title="1 使用ul，添加新闻信息列表"></a>1 使用ul，添加新闻信息列表</h2><p>在浏览网页时，你会发现网页上有很多信息的列表，如新闻列表、图片列表，这些列表就可以使用ul-li标签来完成。</p><p>ul-li是没有前后顺序的信息列表。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>信息<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>信息<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>举例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>精彩少年<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>美丽突然出现<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>触动心灵的旋律<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>ul-li在网页中显示的默认样式一般为：</p><ul><li>精彩少年</li><li>美丽突然出现</li><li>触动心灵的旋律</li></ul><p>快捷键：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">①  ul&gt;li，按tab键</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">②  ul&gt;li*5，按tab键</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">③ （ul&gt;li*2）*3，按tab键</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>Li标签是一个容器，可以嵌套其他标签:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h2</span>&gt;</span>饮食<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>荤<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>素<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h2</span>&gt;</span>服装<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>男装<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>女装<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">li</span>&gt;</span>童装<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="2-使用ol，添加图书销售排行榜"><a href="#2-使用ol，添加图书销售排行榜" class="headerlink" title="2 使用ol，添加图书销售排行榜"></a>2 使用ol，添加图书销售排行榜</h2><p>如果想在网页中展示有前后顺序的信息列表，这类信息展示就可以使用<code>&lt;ol&gt;</code>标签来制作有序列表来展示。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>信息<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>信息<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>举例：</p><p>下面是一个热点课程下载排行榜：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>前端开发面试心法 <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>零基础学习html<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">li</span>&gt;</span>JavaScript全攻略<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>页面展示为：</p><ol><li>前端开发面试心法</li><li>零基础学习html</li><li>JavaScript全攻略</li></ol><p><code>&lt;ol&gt;</code>在网页中显示的默认样式一般为：</p><p>每项<code>&lt;li&gt;</code>前都自带一个序号，序号默认从1开始</p><p>快捷键同ul</p><p>Li标签内容同ul</p><h2 id="3-定义列表-dl-dt-dd"><a href="#3-定义列表-dl-dt-dd" class="headerlink" title="3 定义列表 dl dt dd"></a>3 定义列表 dl dt dd</h2><p>定义列表有三个标签：dl dt dd</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dt</span>&gt;</span>胡歌<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dd</span>&gt;</span>代表作：琅琊榜、神话、仙剑奇侠传<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dt</span>&gt;</span>杨洋<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">dd</span>&gt;</span>代表作：红楼梦、盗墓笔记<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>快捷键可用：</p><blockquote><p>dt+dd和（dt+dd）*3，然后按tab键</p></blockquote><figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dl</span> 定义列表</span><br><span class="line"><span class="built_in">dt</span>  定义标题</span><br><span class="line"><span class="built_in">dd</span>  定义说明、解释</span><br><span class="line"><span class="built_in">dl</span>&gt;<span class="built_in">dt</span>+<span class="built_in">dd</span></span><br><span class="line">每一个<span class="built_in">dt</span>后可以加一个或多个<span class="built_in">dd</span></span><br></pre></td></tr></table></figure><h2 id="4-认识div在排版中的作用"><a href="#4-认识div在排版中的作用" class="headerlink" title="4 认识div在排版中的作用"></a>4 认识div在排版中的作用</h2><p>Div division 范围、区域、分割。并没有什么特殊的语义，经常用来布局。</p><p>在网页制作过程过中，可以把一些独立的逻辑部分划分出来，放在一个<code>&lt;div&gt;</code>标签中，这个<code>&lt;div&gt;</code>标签的作用就相当于一个容器。</p><p>div是大的范围</p><p>span是小的跨度</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span>&gt;…&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><p>确定逻辑部分：</p><p>什么是逻辑部分？它是页面上相互关联的一组元素。如网页中的独立的栏目版块，就是一个典型的逻辑部分。此时就可以使用<code>&lt;div&gt;</code>标签作为容器。</p><h2 id="5-给div命名，使逻辑更加清晰"><a href="#5-给div命名，使逻辑更加清晰" class="headerlink" title="5 给div命名，使逻辑更加清晰"></a>5 给div命名，使逻辑更加清晰</h2><p>为了使逻辑更加清晰，我们可以为这一个独立的逻辑部分设置一个名称，用<code>id</code>属性来为<code>&lt;div&gt;</code>提供唯一的名称，这个就像我们每个人都有一个身份证号，这个身份证号是唯一标识我们的身份的，也是必须唯一的。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="APPLESCRIPT"><figure class="iseeu highlight /applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span>  <span class="built_in">id</span>=<span class="string">"版块名称"</span>&gt;…&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></div><h2 id="6-table标签，认识网页上的表格"><a href="#6-table标签，认识网页上的表格" class="headerlink" title="6 table标签，认识网页上的表格"></a>6 table标签，认识网页上的表格</h2><p>有时候我们需要在网页上展示一些数据，如某公司想在网页上展示公司的库存清单。可以使用以下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="GAMS"><figure class="iseeu highlight /gams"><table><tr><td class="code"><pre><span class="line"><span class="keyword">table</span>、thead、tbody、tr、th、td</span><br><span class="line"><span class="keyword">table</span>  表格</span><br><span class="line">tr <span class="keyword">table</span> rows</span><br><span class="line">th <span class="keyword">table</span> head  表头单元格</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">1、<span class="tag">&lt;<span class="name">table</span>&gt;</span>…<span class="tag">&lt;/<span class="name">table</span>&gt;</span>：整个表格以<span class="tag">&lt;<span class="name">table</span>&gt;</span>标记开始、<span class="tag">&lt;/<span class="name">table</span>&gt;</span>标记结束。</span><br><span class="line">2、<span class="tag">&lt;<span class="name">tbody</span>&gt;</span>…<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span>：如果不加<span class="tag">&lt;<span class="name">thead</span>&gt;</span><span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">tfooter</span>&gt;</span> , table表格加载完后才显示。加上这些表格结构， tbody包含行的内容下载完优先显示，不必等待表格结束后在显示，同时如果表格很长，用tbody分段，可以一部分一部分地显示。（通俗理解table 可以按结构一块块的显示，不在等整个表格加载完后显示。）</span><br><span class="line">3、<span class="tag">&lt;<span class="name">tr</span>&gt;</span>…<span class="tag">&lt;/<span class="name">tr</span>&gt;</span>：表格的一行，所以有几对tr 表格就有几行。</span><br><span class="line">4、<span class="tag">&lt;<span class="name">td</span>&gt;</span>…<span class="tag">&lt;/<span class="name">td</span>&gt;</span>：表格的一个单元格，一行中包含几对<span class="tag">&lt;<span class="name">td</span>&gt;</span>...<span class="tag">&lt;/<span class="name">td</span>&gt;</span>，说明一行中就有几列。</span><br><span class="line">5、<span class="tag">&lt;<span class="name">th</span>&gt;</span>…<span class="tag">&lt;/<span class="name">th</span>&gt;</span>：表格的头部的一个单元格，表格表头。</span><br><span class="line">6、表格中列的个数，取决于一行中数据单元格的个数。</span><br></pre></td></tr></table></figure></div><p>总结：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、table表格在没有添加css样式之前，在浏览器中显示是没有表格线的</span><br><span class="line"><span class="number">2</span>、表头，也就是th标签中的文本默认为粗体并且居中显示</span><br></pre></td></tr></table></figure></div><h2 id="7-用css样式，为表格加入边框"><a href="#7-用css样式，为表格加入边框" class="headerlink" title="7 用css样式，为表格加入边框"></a>7 用css样式，为表格加入边框</h2><p>Table 表格在没有添加 css 样式之前，是没有边框的。我们为表格添加一些样式，为它添加边框。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">    table tr td,th&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">border</span><span class="selector-pseudo">:1px</span> <span class="selector-tag">solid</span> <span class="selector-id">#000</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>上述代码是用 css 样式代码，为th，td单元格添加粗细为一个像素的黑色边框。</p><p>也可以用<code>&lt;table border=&quot;1&quot;&gt;</code>来添加像素为1px的边框</p><h2 id="8-合并单元格"><a href="#8-合并单元格" class="headerlink" title="8 合并单元格"></a>8 合并单元格</h2><p>单元格标签： th td</p><p>Rowspan 合并行单元格</p><p>Colspan 合并列单元格</p><p>属性值：是一些数字，是几表示合并几个单元格</p><p>案例：</p><p>上边线在第几行就是第几行的单元格</p><p>方法：先将所有tr写完，再对每一个tr内部的td单独书写：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">th</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">th</span>&gt;</span>2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">th</span>&gt;</span>3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">th</span>&gt;</span>4<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">th</span>&gt;</span>5<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>9<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>11<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>12<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>13<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>14<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span>15<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><table border="1"><tbody><tr><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr><tr><td rowspan="2">6</td><td colspan="2">7</td><td colspan="2">8</td></tr><tr><td>9</td><td>10</td><td rowspan="2">11</td><td>12</td></tr><tr><td colspan="2">13</td><td>14</td><td>15</td></tr></tbody></table><h2 id="9-caption标签，为表格添加标题和摘要"><a href="#9-caption标签，为表格添加标题和摘要" class="headerlink" title="9 caption标签，为表格添加标题和摘要"></a>9 caption标签，为表格添加标题和摘要</h2><p>表格还是需要添加一些标签进行优化，可以添加标题和摘要。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PGSQL"><figure class="iseeu highlight /pgsql"><table><tr><td class="code"><pre><span class="line">&lt;<span class="keyword">table</span> <span class="keyword">summary</span>="表格简介文本"&gt;</span><br></pre></td></tr></table></figure></div><p>标题:</p><blockquote><p>用以描述表格内容，标题的显示位置：表格上方。</p></blockquote><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span>      标题</span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span>                   表头</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>3<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>4<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span>5<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span>                    主体</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>9<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>10<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>11<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>12<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>13<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>14<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>15<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>标题文本<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>…<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>…<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div><table border="1"><caption>标题</caption><thead><tr><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th></tr></thead><tbody><tr><td rowspan="2">6</td><td colspan="2">7</td><td colspan="2">8</td></tr><tr><td>9</td><td>10</td><td rowspan="2">11</td><td>12</td></tr><tr><td colspan="2">13</td><td>14</td><td>15</td></tr></tbody></table><table><caption>标题文本</caption><tr><td>…</td><td>…</td></tr></table><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>html标签</tag>
      </tags>
  </entry>
  <entry>
    <title>五、HTML的标签（一）</title>
    <url>/post/7d3369a9.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:24 GMT+0800 (GMT+08:00) --><h1 id="五、HTML的标签（一）"><a href="#五、HTML的标签（一）" class="headerlink" title="五、HTML的标签（一）"></a>五、HTML的标签（一）</h1><h2 id="1、-lt-body-gt-标签，网页上显示的内容放在这里"><a href="#1、-lt-body-gt-标签，网页上显示的内容放在这里" class="headerlink" title="1、&lt;body&gt;标签，网页上显示的内容放在这里"></a>1、<code>&lt;body&gt;</code>标签，网页上显示的内容放在这里</h2><p>在网页上要展示出来的页面内容一定要放在body标签中。</p><h2 id="2、-lt-p-gt-标签，添加段落"><a href="#2、-lt-p-gt-标签，添加段落" class="headerlink" title="2、&lt;p&gt;标签，添加段落"></a>2、<code>&lt;p&gt;</code>标签，添加段落</h2><p>P标签 paragraph 段落的缩写</p><p>如果想在网页上显示文章，这时就需要<code>&lt;p&gt;</code>标签了，把文章的段落放到<code>&lt;p&gt;</code>标签中。<br>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>注意一段文字一个<code>&lt;p&gt;</code>标签，如在一篇新闻文章中有3段文字，就要把这3个段落分别放到3个<code>&lt;p&gt;</code>标签中。如下图所示。</p><p>在浏览器中显示的效果：</p><p><code>&lt;p&gt;</code>标签的默认样式，可以在上图中看出来，段前段后都会有空白，如果不喜欢这个空白，可以用css样式来删除或改变它。</p><h2 id="3、了解-lt-h-gt-标签，为你的网页添加标题"><a href="#3、了解-lt-h-gt-标签，为你的网页添加标题" class="headerlink" title="3、了解&lt;h&gt;标签，为你的网页添加标题"></a>3、了解<code>&lt;h&gt;</code>标签，为你的网页添加标题</h2><p>H标签 headline 标题的缩写</p><p>标题标签一共有6个，h1、h2、h3、h4、h5、h6分别为一级标题、二级标题、三级标题、四级标题、五级标题、六级标题。并且依据重要性递减。<code>&lt;h1&gt;</code>是最高的等级。</p><p>约定成俗，一般一个页面里h1标签的权重是最高的，最便于搜索引擎搜索的。一个页面只写一个h1标签，一般将这个标签给logo。<br>所有的h标签虽然是容器级，单不存在嵌套关系。<br>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">&lt;hx&gt;标题文本&lt;/hx&gt; (x为<span class="number">1</span><span class="number">-6</span>)</span><br></pre></td></tr></table></figure></div><p>文章的标题前面已经说过了，可以使用标题标签，另外网页上的各个栏目的标题也可使用它们。如下图为腾讯网站。</p><p>注意：因为h1标签在网页中比较重要，所以一般h1标签被用在网站名称上。腾讯网站就是这样做的。如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>腾讯网<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>h1标签字号最大，h2标签字号相对h1要小，以此类推h6标签的字号最小。</p><h2 id="4、加入强调语气，使用-lt-strong-gt-和-lt-em-gt-标签"><a href="#4、加入强调语气，使用-lt-strong-gt-和-lt-em-gt-标签" class="headerlink" title="4、加入强调语气，使用&lt;strong&gt;和&lt;em&gt;标签"></a>4、加入强调语气，使用<code>&lt;strong&gt;</code>和<code>&lt;em&gt;</code>标签</h2><p>有了段落又有了标题，现在如果想在一段话中特别强调某几个文字，这时候就可以用到<code>&lt;em&gt;</code>或<code>&lt;strong&gt;</code>标签。</p><p>但两者在强调的语气上有区别:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span> 表示强调，<span class="tag">&lt;<span class="name">strong</span>&gt;</span> 表示更强烈的强调。</span><br><span class="line">并且在浏览器中<span class="tag">&lt;<span class="name">em</span>&gt;</span> 默认用斜体表示，<span class="tag">&lt;<span class="name">strong</span>&gt;</span> 用粗体表示。</span><br><span class="line">两个标签相比，目前国内前端程序员更喜欢使用<span class="tag">&lt;<span class="name">strong</span>&gt;</span>表示强调。</span><br></pre></td></tr></table></figure></div><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>需要强调的文本<span class="tag">&lt;/<span class="name">em</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>需要强调的文本<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><code>&lt;em&gt;</code>的内容在浏览中显示为斜体，<code>&lt;strong&gt;</code>显示为加粗。<br>如果不喜欢这种样式，没有关系，以后可以使用css样式去改变它。</p><h2 id="5、使用标签为文字设置单独样式"><a href="#5、使用标签为文字设置单独样式" class="headerlink" title="5、使用标签为文字设置单独样式"></a>5、使用<span>标签为文字设置单独样式</span></h2><p><code>&lt;em&gt;</code>、<code>&lt;strong&gt;</code>、<code>&lt;span&gt;</code>这三个标签的区别：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line">1）. <span class="tag">&lt;<span class="name">em</span>&gt;</span>和<span class="tag">&lt;<span class="name">strong</span>&gt;</span>标签是为了强调一段话中的关键字时使用，它们的语义是强调。</span><br><span class="line">2）. <span class="tag">&lt;<span class="name">span</span>&gt;</span>标签是没有语义的，它的作用就是为了设置单独的样式用的。</span><br></pre></td></tr></table></figure></div><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="6、-lt-q-gt-标签，短文本引用"><a href="#6、-lt-q-gt-标签，短文本引用" class="headerlink" title="6、&lt;q&gt;标签，短文本引用"></a>6、<code>&lt;q&gt;</code>标签，短文本引用</h2><p>在html中加一段引用,比如在网页的文章里想引用某个作家的一句诗.<br>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">q</span>&gt;</span>引用文本<span class="tag">&lt;/<span class="name">q</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="7、-lt-blockquote-gt-标签，长文本引用"><a href="#7、-lt-blockquote-gt-标签，长文本引用" class="headerlink" title="7、&lt;blockquote&gt;标签，长文本引用"></a>7、<code>&lt;blockquote&gt;</code>标签，长文本引用</h2><p><code>&lt;blockquote&gt;</code>的作用也是引用别人的文本。但它是对长文本的引用，如在文章中引入大段某知名作家的文字，这时需要这个标签。</p><p>语法:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>引用文本<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="8、使用-lt-br-gt-标签分行显示文本"><a href="#8、使用-lt-br-gt-标签分行显示文本" class="headerlink" title="8、使用&lt;br/&gt;标签分行显示文本"></a>8、使用<code>&lt;br/&gt;</code>标签分行显示文本</h2><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">xhtml1<span class="number">.0</span>写法：</span><br><span class="line">&lt;br /&gt;</span><br><span class="line">html4<span class="number">.01</span>写法：</span><br><span class="line">&lt;br&gt;</span><br></pre></td></tr></table></figure></div><p>大家注意，现在一般使用 xhtml1.0 的版本的写法（其它标签也是），这种版本比较规范。</p><p>与以前我们学过的标签不一样，<code>&lt;br /&gt;</code>标签是一个空标签，没有HTML内容的标签就是空标签，空标签只需要写一个开始标签，这样的标签有<code>&lt;br /&gt;</code>、<code>&lt;hr /&gt;</code>和<code>&lt;img /&gt;</code>。</p><p>在 html 代码中输入回车、空格都是没有作用的。在html文本中想输入回车换行，就必须输入<code>&lt;br /&gt;</code>。</p><h2 id="9、在网页中添加一些空格"><a href="#9、在网页中添加一些空格" class="headerlink" title="9、在网页中添加一些空格"></a>9、在网页中添加一些空格</h2><p>在html代码中输入空格、回车都是没有作用的。要想输入空格，必须写入<code>&amp;nbsp;</code>。<br>语法：</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="meta">&amp;nbsp;</span></span><br></pre></td></tr></table></figure><h2 id="10、-lt-hr-gt-标签，添加水平横线"><a href="#10、-lt-hr-gt-标签，添加水平横线" class="headerlink" title="10、&lt;hr/&gt;标签，添加水平横线"></a>10、<code>&lt;hr/&gt;</code>标签，添加水平横线</h2><p>在信息展示时，有时会需要加一些用于分隔的横线，这样会使文章看起来整齐些。</p><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">html4<span class="number">.01</span>版本 &lt;hr&gt;</span><br><span class="line">xhtml1<span class="number">.0</span>版本 &lt;hr /&gt;</span><br></pre></td></tr></table></figure></div><p>注意：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span>标签和<span class="tag">&lt;<span class="name">br</span> /&gt;</span>标签一样也是一个空标签，所以只有一个开始标签，没有结束标签。</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span>标签的在浏览器中的默认样式线条比较粗，颜色为灰色。</span><br><span class="line">现在一般使用 xhtml1.0 的版本（其它标签也是），这种版本比较规范。</span><br></pre></td></tr></table></figure></div><h2 id="11、-lt-address-gt-标签，为网页加入地址信息"><a href="#11、-lt-address-gt-标签，为网页加入地址信息" class="headerlink" title="11、&lt;address&gt;标签，为网页加入地址信息"></a>11、<code>&lt;address&gt;</code>标签，为网页加入地址信息</h2><p>一般网页中会有一些网站的联系地址信息需要在网页中展示出来，这些联系地址信息如公司的地址就可以<code>&lt;address&gt;</code>标签。也可以定义一个地址（比如电子邮件地址）、签名或者文档的作者身份。<br>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span>联系地址信息<span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><code>&lt;address&gt;</code>标签的默认样式在浏览器上显示的样式为斜体。</p><h2 id="12、使用-lt-code-gt-标签入一行代码"><a href="#12、使用-lt-code-gt-标签入一行代码" class="headerlink" title="12、使用&lt;code&gt;标签入一行代码"></a>12、使用<code>&lt;code&gt;</code>标签入一行代码</h2><p>在介绍语言技术的网站中，避免不了在网页中显示一些计算机专业的编程代码，当代码为一行代码时，就可以使用<code>&lt;code&gt;</code>标签了，如下面例子：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="EXCEL"><figure class="iseeu highlight /excel"><table><tr><td class="code"><pre><span class="line">&lt;<span class="built_in">code</span>&gt;<span class="built_in">var</span> i=i+<span class="number">300</span>;&lt;/<span class="built_in">code</span>&gt;</span><br></pre></td></tr></table></figure></div><p>注意：在文章中一般如果要插入多行代码时不能使用<code>&lt;code&gt;</code>标签了。<br>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARMASM"><figure class="iseeu highlight /armasm"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">code</span>&gt;代码语言&lt;/<span class="meta">code</span>&gt;</span><br></pre></td></tr></table></figure></div><p>注：如果是多行代码，可以使用<code>&lt;pre&gt;</code>标签。</p><h2 id="13、使用-lt-pre-gt-标签为你的网页加入大段代码"><a href="#13、使用-lt-pre-gt-标签为你的网页加入大段代码" class="headerlink" title="13、使用&lt;pre&gt;标签为你的网页加入大段代码"></a>13、使用<code>&lt;pre&gt;</code>标签为你的网页加入大段代码</h2><p>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>语言代码段<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><code>&lt;pre&gt;</code>标签的主要作用:预格式化的文本。被包围在 pre 元素中的文本通常会保留空格和换行符。<br>如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ABNF"><figure class="iseeu highlight /abnf"><table><tr><td class="code"><pre><span class="line">&lt;pre&gt;</span><br><span class="line">    var message=<span class="string">"欢迎"</span><span class="comment">;</span></span><br><span class="line">    for(var i=<span class="number">1</span><span class="comment">;i&lt;=10;i++)</span></span><br><span class="line">    &#123;</span><br><span class="line">        alert(message)<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/pre&gt;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>html标签</tag>
      </tags>
  </entry>
  <entry>
    <title>四、HTML的语法</title>
    <url>/post/e4bcdf34.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:25 GMT+0800 (GMT+08:00) --><h1 id="四、HTML的语法"><a href="#四、HTML的语法" class="headerlink" title="四、HTML的语法"></a>四、HTML的语法</h1><h2 id="1、标签对换行和空格不敏感，对标签嵌套敏感"><a href="#1、标签对换行和空格不敏感，对标签嵌套敏感" class="headerlink" title="1、标签对换行和空格不敏感，对标签嵌套敏感"></a>1、标签对换行和空格不敏感，对标签嵌套敏感</h2><p>为保证我们代码的可读性强，需要对我们的标签进行合理的缩进</p><h2 id="2、空白折叠现象"><a href="#2、空白折叠现象" class="headerlink" title="2、空白折叠现象"></a>2、空白折叠现象</h2><p>在普通文本内部：如果有空格、缩进、换行，将这些空白区域折叠成一个空格显示在浏览器里。</p><h2 id="3、HTML标签"><a href="#3、HTML标签" class="headerlink" title="3、HTML标签"></a>3、HTML标签</h2><p>标签：也叫做标记</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">（<span class="number">1</span>）标签必须写在一对尖括号里&lt;p&gt;</span><br><span class="line">（<span class="number">2</span>）双标签必须成对出现&lt;p&gt;&lt;/p&gt;</span><br><span class="line">（<span class="number">3</span>）结束标签必须写/</span><br><span class="line">（<span class="number">4</span>）标签分类：</span><br><span class="line">  容器级：</span><br><span class="line">    内部可以放置嵌套任意类型的标签，甚至是容器级标签 div  h系列</span><br><span class="line">  文本级：</span><br><span class="line">    只能放文字、图片、表单元素、废弃文字修饰标签等，不能放容器级标签。 P标签。</span><br></pre></td></tr></table></figure></div><h2 id="4、head标签"><a href="#4、head标签" class="headerlink" title="4、head标签"></a>4、head标签</h2><p>文档的头部描述了文档的各种属性和信息，包括文档的标题等。绝大多数文档头部包含的数据都不会真正作为内容显示给读者。<br>下面这些标签可用在 head 部分：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>...<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span>...<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span>...<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h2 id="5、title标签："><a href="#5、title标签：" class="headerlink" title="5、title标签："></a>5、title标签：</h2><p>在<code>&lt;title&gt;</code>和<code>&lt;/title&gt;</code>标签之间的文字内容是网页的标题信息，它会出现在浏览器的标题栏中。网页的title标签用于告诉用户和搜索引擎这个网页的主要内容是什么，搜索引擎可以通过网页标题，迅速的判断出网页的主题。每个网页的内容都是不同的，每个网页都应该有一个独一无二的title。</p><p>例如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><code>&lt;title&gt;</code> 标签的内容“hello world”会在浏览器中的标题栏上显示出来</p><h2 id="5、标签属性"><a href="#5、标签属性" class="headerlink" title="5、标签属性"></a>5、标签属性</h2><p>每一个标签都有自己特定的属性</p><p>属性都有属性值，属性名k(key)，属性值v(value),键值对写法:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">（<span class="number">1</span>）属性书写在标签的起始标签内部，与标签名之间用空格隔开，属性与属性之间也用空格隔开</span><br><span class="line">（<span class="number">2</span>）键值对书写格式：k=”v”   中间不能有空格</span><br><span class="line">    &lt;p <span class="keyword">class</span>=”<span class="symbol">duanluo</span>” <span class="symbol">id</span>=”<span class="symbol">op</span>”&gt;<span class="symbol">p</span>&lt;/<span class="symbol">p</span>&gt;</span><br><span class="line">（<span class="symbol">3</span>）属性值必须用双引号包裹，<span class="symbol">XHTML</span>严格要求使用双引号</span><br><span class="line">（<span class="symbol">4</span>）标签属性值可以有一个或者多个，多个属性值之间用空格隔开，全部必须在引号内部</span><br><span class="line">    &lt;<span class="symbol">p</span> <span class="symbol">class</span>=”<span class="symbol">duanluo</span> <span class="symbol">ps</span> <span class="symbol">para</span>” <span class="symbol">id</span>=”<span class="symbol">op</span>”&gt;<span class="symbol">p</span>&lt;/<span class="symbol">p</span>&gt;</span><br></pre></td></tr></table></figure></div><h2 id="6、了解HTML的代码注释"><a href="#6、了解HTML的代码注释" class="headerlink" title="6、了解HTML的代码注释"></a>6、了解HTML的代码注释</h2><p>代码注释的作用是帮助程序员标注代码的用途，过一段时间后再看你所编写的代码，就能很快想起这段代码的用途。</p><p>代码注释不仅方便程序员自己回忆起以前代码的用途，还可以帮助其他程序员很快的读懂你的程序的功能，方便多人合作开发网页代码。<br>语法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--注释文字 --&gt;</span></span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>html标签</tag>
      </tags>
  </entry>
  <entry>
    <title>三、HTML结构</title>
    <url>/post/7a7303.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:24 GMT+0800 (GMT+08:00) --><h1 id="三、HTML结构"><a href="#三、HTML结构" class="headerlink" title="三、HTML结构"></a>三、HTML结构</h1><h2 id="1、基本骨架"><a href="#1、基本骨架" class="headerlink" title="1、基本骨架"></a>1、基本骨架</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>……<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>HTML：最根本的标签，表示整个的网页</p><p>Head：网页的头部，里面都是一些网页的配置，除了title标签，其他的内容在网页上都是不可见的</p><p>Title：网页的标题</p><p>Body：用户能够看到的内容区域</p><h2 id="2、文档DTD-文档类型定义"><a href="#2、文档DTD-文档类型定义" class="headerlink" title="2、文档DTD 文档类型定义"></a>2、文档DTD 文档类型定义</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="meta-string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>DTD：doctype definition 文档类型定义。定义我们这个HTML文件使用的是那一个版本的HTML规范。</p><p>HTML规范是我们书写HTML要遵循的规范，规定了我们要使用的标签、语法。</p><p>HTML、CSS、JS 规范的维护和制定的组织W3C。</p><p>版本：<br>HTML1.0-html5</p><p>HTML4.0版本，将结构和样式进行了分离。大部分网站常用的HTML4.01版本。</p><p>XHTML是在HTML4.0基础上进行的升级扩展。在HTML1.0中，严格规定了标签必须小写，属性必须用双引号包裹，结束标签用/<br>两个规范下面分别包含了三个小规范：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">Strict</span>  <span class="string">严格版：不能使用font等废弃标签，不能使用框架集，结构和样式分离。</span></span><br><span class="line"><span class="attr">Transitional</span>  <span class="string">过渡版（通用版）：可以使用font等废弃标签，不能使用框架集。</span></span><br><span class="line"><span class="attr">Frameset</span>  <span class="string">框架集版：可以使用框架集。</span></span><br></pre></td></tr></table></figure></div><p>严格程度：XHTML1.0 strict&gt;html4.01 strict &gt; xhtml1.0 transitional &gt;html4.01 transitional</p><p>发展到HTML5版本时，进行了大幅度更新升级，取消了3个版本</p><p>HTML5的DTD尽行了极大的简化：<br><!DOCTYPE html></p><h2 id="3、HTML标签"><a href="#3、HTML标签" class="headerlink" title="3、HTML标签"></a>3、HTML标签</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span> <span class="attr">xml:lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>HTML是一个双标签</p><p>HTML标签有两个属性：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">Xmlns   是xml的<span class="keyword">namespace</span> 命名空间 规定了我们的标签使用的是哪种命名规范。用户浏览器不一致，必须规范死什么标签是什么内容，标签具有什么语义。</span><br><span class="line"><span class="symbol">Lang</span>    规定<span class="symbol">HTML</span>文件标签都必须使用英文。</span><br></pre></td></tr></table></figure></div><h2 id="4、head标签"><a href="#4、head标签" class="headerlink" title="4、head标签"></a>4、head标签</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=UTF-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>Meta 标签：</p><p>单标签，规范的是我们网页使用的字符集</p><p>中文字符集包括：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">国际标准字库：Utf<span class="number">-8</span> ，包括世界上所有的人类语言。中文占<span class="number">3</span>个字节。</span><br><span class="line">国家标准字库：gb2312或gbk，包括所有的简体字、大部分繁体 、一些特殊符号、片假名。中文占<span class="number">2</span>个字符</span><br><span class="line">  这两种字库的使用情况：</span><br><span class="line">    ①网页中有大量中文，同时要求加载速度，选择gbk</span><br><span class="line">    ②制作外文网站、有少数民族语言的网站，或者不要求加载速度，选择utf<span class="number">-8</span></span><br><span class="line">注意：规定的字符集必须与编辑软件的保存字符集类型一致，否则会出现乱码</span><br></pre></td></tr></table></figure></div><p>Title ：</p><p>双标签，内部书写的是网页的标题</p><p>搜索引擎优化：SEO 提升我们的搜索排名。Title里的文字会作为关键词首先被搜索引擎抓取。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>二、HTML基础</title>
    <url>/post/d69de096.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:24 GMT+0800 (GMT+08:00) --><h1 id="二、HTML基础"><a href="#二、HTML基础" class="headerlink" title="二、HTML基础"></a>二、HTML基础</h1><h2 id="1、纯文本"><a href="#1、纯文本" class="headerlink" title="1、纯文本"></a>1、纯文本</h2><p>纯文本：只包含文字。</p><p>最简单的案例：记事本。txt是text的缩写。</p><p>可以通过改变扩展名来更改文件类型。</p><p>txt只保存文字的内容，不保存文字的样式。</p><p>Txt文件样式设置之后，只是一个本机显示状态，不会保存在文件里，其他计算机查看时，就是默认显示状态</p><p>我们所学习的html css js 都是纯文本文件。</p><p>纯文本文件都能用纯文本文件编辑器进行编辑。（记事本、editplus、notepad++等）</p><p>常用软件有：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PROPERTIES"><figure class="iseeu highlight /properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">VSCode</span></span><br><span class="line"><span class="attr">Dreamweaver</span></span><br><span class="line"><span class="attr">Sublime</span>      <span class="string">高效率程序书写工具</span></span><br><span class="line"><span class="attr">Webstorm</span>     <span class="string">高级项目编程工具</span></span><br><span class="line"><span class="attr">……</span></span><br></pre></td></tr></table></figure></div><h2 id="2、HTML基本概念"><a href="#2、HTML基本概念" class="headerlink" title="2、HTML基本概念"></a>2、HTML基本概念</h2><p>HTML：hypertext markup language 超文本标记语言</p><p>作用：制作网页页面，负责描述文档语义的语言。</p><p>HTML使用文本给普通文本添加语义，超文本在浏览器里不会显示。</p><h2 id="3、sublime"><a href="#3、sublime" class="headerlink" title="3、sublime"></a>3、sublime</h2><p>快捷键：</p><table><thead><tr><th>HTML：xt</th><th align="right">点击tab或ctrl+e</th><th align="center">自动生成HTML结构</th></tr></thead><tbody><tr><td>标签名</td><td align="right">tab</td><td align="center">自动生成标签</td></tr><tr><td>h$*数字</td><td align="right">tab</td><td align="center">生成h1到h数字的标签</td></tr><tr><td>p{$}*数字</td><td align="right">tab</td><td align="center">生成多个p标签，文本内容从1开始自动填充</td></tr><tr><td>标签名*数字</td><td align="right">tab</td><td align="center">生成数字多个的同一个标签</td></tr><tr><td>Ctrl+滑轮滚动</td><td align="right">放大缩小文字</td><td align="center"></td></tr><tr><td>按住滚轮拖动</td><td align="right">选中多行，一起进行编辑</td><td align="center"></td></tr><tr><td>Ctrl+shift+d</td><td align="right">复制光标所在行</td><td align="center"></td></tr><tr><td>Ctrl+shift+k/ctrl+x</td><td align="right">删除光标所在行</td><td align="center"></td></tr><tr><td>Ctrl+shift+↑</td><td align="right">上移当前行</td><td align="center"></td></tr><tr><td>Ctrl+shift+↓</td><td align="right">下移当前行</td><td align="center"></td></tr><tr><td>Ctrl+/</td><td align="right">添加注释</td><td align="center"></td></tr></tbody></table><p>代码书写时，所有标签及符号都是都是在英文状态下的。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="LISP"><figure class="iseeu highlight /lisp"><table><tr><td class="code"><pre><span class="line">ul&gt;(<span class="name">li&gt;img</span>[src=<span class="string">"images/lunbo/$.jpg"</span>])*7</span><br></pre></td></tr></table></figure></div><p>按tab键:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="XML"><figure class="iseeu highlight /xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/6.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/lunbo/7.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">li&gt;img[<span class="attribute">src</span>=<span class="string">"images/mingxing/<span class="variable">$@0</span>.jpg"</span>]<span class="number">*9</span></span><br></pre></td></tr></table></figure></div><p>按tab键:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ROUTEROS"><figure class="iseeu highlight /routeros"><table><tr><td class="code"><pre><span class="line">&lt;li&gt;</span><br><span class="line">    &lt;img <span class="attribute">src</span>=<span class="string">"images/mingxing/0.jpg"</span> <span class="attribute">alt</span>=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;img <span class="attribute">src</span>=<span class="string">"images/mingxing/1.jpg"</span> <span class="attribute">alt</span>=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;img <span class="attribute">src</span>=<span class="string">"images/mingxing/2.jpg"</span> <span class="attribute">alt</span>=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;img <span class="attribute">src</span>=<span class="string">"images/mingxing/3.jpg"</span> <span class="attribute">alt</span>=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;img <span class="attribute">src</span>=<span class="string">"images/mingxing/4.jpg"</span> <span class="attribute">alt</span>=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;img <span class="attribute">src</span>=<span class="string">"images/mingxing/5.jpg"</span> <span class="attribute">alt</span>=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;img <span class="attribute">src</span>=<span class="string">"images/mingxing/6.jpg"</span> <span class="attribute">alt</span>=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;img <span class="attribute">src</span>=<span class="string">"images/mingxing/7.jpg"</span> <span class="attribute">alt</span>=<span class="string">""</span>&gt;</span><br><span class="line">    &lt;img <span class="attribute">src</span>=<span class="string">"images/mingxing/8.jpg"</span> <span class="attribute">alt</span>=<span class="string">""</span>&gt;</span><br></pre></td></tr></table></figure></div><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>sublime</tag>
      </tags>
  </entry>
  <entry>
    <title>一、互联网基础</title>
    <url>/post/8c8bebb1.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:24 GMT+0800 (GMT+08:00) --><h1 id="一、互联网基础"><a href="#一、互联网基础" class="headerlink" title="一、互联网基础"></a>一、互联网基础</h1><p>HTML：制作网页</p><p>互联网原理：上网即请求数据</p><p>在浏览器输入一个网址，浏览器会通过http协议向服务器发送请求，服务器响应之后，将文件传输到浏览器端，过程中有实际的物理文件的传输。</p><p>数据：文字、图片、视频、音频等。</p><h2 id="1、服务器"><a href="#1、服务器" class="headerlink" title="1、服务器"></a>1、服务器</h2><p>本身也是一台计算机</p><p>服务器：server 功能比我们普通的计算机更强大，主要用于储存网页文件和数据。</p><p>服务器要求24小时在线，保证用户可以随时访问数据。</p><h2 id="2、浏览器"><a href="#2、浏览器" class="headerlink" title="2、浏览器"></a>2、浏览器</h2><p>网页请求和接受的客户端</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARMASM"><figure class="iseeu highlight /armasm"><table><tr><td class="code"><pre><span class="line">浏览器：<span class="keyword">browser </span>    客户端渲染网页使用的软件。</span><br><span class="line">浏览器的作用：发起http请求，接收服务器传输的文件。</span><br><span class="line">浏览器由不同的厂商提供和维护，有很多品牌、版本。</span><br></pre></td></tr></table></figure></div><p>全球五大浏览器：谷歌（Chrome）、火狐（Firefox）、IE、苹果（Safari）欧朋（Opera）。</p><p>每个浏览器都有不同的版本，功能越来越完善，旧的浏览器淘汰过程跟不上更新速度，不同的浏览器版本渲染网页的能力不同，用户的浏览效果不一样。</p><p>后期开发时，兼容低版本的用户，需要做兼容的书写。</p><p>请求的数据并不是存在浏览器软件上，而是存在本地计算机的一个临时文件夹。</p><p>临时文件夹：打开浏览器-设置-工具-Internet选项-常规-设置-当前位置-查看文件</p><p>作用：临时存储文件。任何网站第二次打开时速度变快，原因是第一次打开时已经将大部分文件缓存到本地计算机里。</p><h2 id="3、http协议"><a href="#3、http协议" class="headerlink" title="3、http协议"></a>3、http协议</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ERLANG"><figure class="iseeu highlight /erlang"><table><tr><td class="code"><pre><span class="line">http：HyperText Transfer Protocol，超文本传输协议.</span><br></pre></td></tr></table></figure></div><p>http包含请求和响应两部分</p><p>发起请求的方法：在浏览器中输入网址或点击网址链接</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="VBSCRIPT"><figure class="iseeu highlight /vbscript"><table><tr><td class="code"><pre><span class="line">请求：<span class="built_in">request</span> ，浏览器根据网址相对应的服务器发送请求</span><br><span class="line">响应：<span class="built_in">response</span> ，服务器根据请求响应文件，将页面传输给客户端，在浏览器中进行网页的渲染。</span><br></pre></td></tr></table></figure></div><p>浏览一个网页的时候，http请求并不是一个，多个http请求同时发送,包含网页的图片、视频、音频等文件。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>web前端</category>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>http协议</tag>
      </tags>
  </entry>
  <entry>
    <title>RobotFramework自动化环境搭建</title>
    <url>/post/9af7d3f8.html</url>
    <content><![CDATA[<!-- build time:Sun Aug 09 2020 21:07:28 GMT+0800 (GMT+08:00) --><h1 id="一、准备一个python的3-7-5的安装包（暂不兼容3-8版本，会有一些难以解决的bug）"><a href="#一、准备一个python的3-7-5的安装包（暂不兼容3-8版本，会有一些难以解决的bug）" class="headerlink" title="一、准备一个python的3.7.5的安装包（暂不兼容3.8版本，会有一些难以解决的bug）"></a>一、准备一个python的3.7.5的安装包（暂不兼容3.8版本，会有一些难以解决的bug）</h1><p><a href="https://www.python.org/" target="_blank" rel="noopener" class="LinkCard">python官网</a></p><p>下载完成后，双击运行安装软件</p><p>勾选 Add Python 3.7 to PATH</p><p>然后点击 Install Now 选择默认安装位置即可</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DOCKERFILE"><figure class="iseeu highlight /dockerfile"><table><tr><td class="code"><pre><span class="line">安装完成后，打开<span class="keyword">cmd</span><span class="bash">命令行，输入python，进行验证。出现python版本信息，证明安装成功，环境变量成功添加</span></span><br></pre></td></tr></table></figure></div><p>PS：暂不兼容3.8版本，可能会有一些bug。如：</p><p><img src="https://s1.ax1x.com/2020/07/25/aSo15F.png" alt="aSo15F.png"></p><h1 id="二、使用pip命令进行后续安装"><a href="#二、使用pip命令进行后续安装" class="headerlink" title="二、使用pip命令进行后续安装"></a>二、使用pip命令进行后续安装</h1><p>打开cmd，依次输入：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>pip install -i https:<span class="comment">//pypi.douban.com/simple/ wxPython</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>pip install -i https:<span class="comment">//pypi.douban.com/simple/ robotframework==3.1.2</span></span><br><span class="line"># 后面省略==<span class="number">3.1</span><span class="number">.2</span>，默认安装最新版本，但是安装最新版本可能出现一些关键字丢失的问题</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>pip install -i https:<span class="comment">//pypi.douban.com/simple/ robotframework-selenium2library</span></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>pip install -i https:<span class="comment">//pypi.douban.com/simple/ robotframework-ride</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ARMASM"><figure class="iseeu highlight /armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">ps</span>：使用豆瓣镜像依次安装</span><br><span class="line">    wxPython    Robot framework     robotframework-<span class="keyword">selenium2library </span>    RIDE</span><br></pre></td></tr></table></figure></div><h1 id="三、启动RIDE"><a href="#三、启动RIDE" class="headerlink" title="三、启动RIDE"></a>三、启动RIDE</h1><p>双击Python37\Scripts路径下的ride.py文件，即可打开RIDE的运行界面</p><p>当然也可以通过使用命令 ride.py 打开</p><h1 id="四、关于报错："><a href="#四、关于报错：" class="headerlink" title="四、关于报错："></a>四、关于报错：</h1><h2 id="1、启动ride-py-遇到如下错误："><a href="#1、启动ride-py-遇到如下错误：" class="headerlink" title="1、启动ride.py 遇到如下错误："></a>1、启动ride.py 遇到如下错误：</h2><p><img src="https://s1.ax1x.com/2020/07/06/Uiy04U.png" alt="Uiy04U.png"></p><p>提示当前环境没有pub模板，通过pip安装</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="AWK"><figure class="iseeu highlight /awk"><table><tr><td class="code"><pre><span class="line">pip install -i https:<span class="regexp">//</span>pypi.douban.com<span class="regexp">/simple/</span> Pypubsub==<span class="number">3.3</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure></div><h2 id="2、导入selenium2library成功后，F5查询关键字时找不到open-browser"><a href="#2、导入selenium2library成功后，F5查询关键字时找不到open-browser" class="headerlink" title="2、导入selenium2library成功后，F5查询关键字时找不到open browser"></a>2、导入selenium2library成功后，F5查询关键字时找不到open browser</h2><p>① 卸载高版本的robotframework，我的是robotframework3.2.1</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MEL"><figure class="iseeu highlight /mel"><table><tr><td class="code"><pre><span class="line">在<span class="keyword">python</span>目录下运行：pip uninstall robotframework</span><br></pre></td></tr></table></figure></div><p>② 安装低版本robotframework 3.1.2</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="ANGELSCRIPT"><figure class="iseeu highlight /angelscript"><table><tr><td class="code"><pre><span class="line">在python目录下运行：pip install robotframework==<span class="number">3.1</span><span class="number">.2</span></span><br><span class="line"></span><br><span class="line">也可以使用豆瓣镜像安装，速度比较快：pip install -i https:<span class="comment">//pypi.douban.com/simple/ robotframework==3.1.2</span></span><br></pre></td></tr></table></figure></div><p>③ 重启ride就OK啦！</p><h2 id="3、Robotframework日志包含中文，输出乱码的问题"><a href="#3、Robotframework日志包含中文，输出乱码的问题" class="headerlink" title="3、Robotframework日志包含中文，输出乱码的问题"></a>3、Robotframework日志包含中文，输出乱码的问题</h2><p><img src="https://s1.ax1x.com/2020/07/26/aCDTOg.png" alt="aCDTOg.png"></p><p>解决方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line">找到<span class="selector-tag">Python</span>安装目录下的<span class="selector-tag">Lib</span>\<span class="selector-tag">site-packages</span>\<span class="selector-tag">robotide</span>\<span class="selector-tag">contrib</span>\<span class="selector-tag">testrunner</span>\<span class="selector-tag">testrunnerplugin</span><span class="selector-class">.py</span>文件 </span><br><span class="line"></span><br><span class="line">修改第565行，把<span class="selector-tag">encoding</span><span class="selector-attr">[<span class="string">'SYSTEM'</span>]</span>  改为  <span class="selector-tag">encoding</span><span class="selector-attr">[<span class="string">'OUTPUT'</span>]</span></span><br><span class="line"></span><br><span class="line">重启<span class="selector-tag">ride</span>，再次运行，乱码解决</span><br></pre></td></tr></table></figure></div><h2 id="4、执行脚本时报错，提示是chromedriver的问题"><a href="#4、执行脚本时报错，提示是chromedriver的问题" class="headerlink" title="4、执行脚本时报错，提示是chromedriver的问题"></a>4、执行脚本时报错，提示是chromedriver的问题</h2><p>需要下载一个浏览器驱动，找到对应版本</p><p>① 查看Chrome版本号</p><p>如未安装Chrome浏览器，移步官网下载安装</p><p>查看版本号：</p><blockquote><p>chrome菜单========》关于google chrome</p></blockquote><p>我Chrome使用的版本号为83.0.4103</p><p>② 下载相应版本号的chromedriver</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="DTS"><figure class="iseeu highlight /dts"><table><tr><td class="code"><pre><span class="line">淘宝镜像源：</span><br><span class="line"><span class="symbol">    http:</span><span class="comment">//npm.taobao.org/mirrors/chromedriver/</span></span><br><span class="line"></span><br><span class="line">官网镜像源：</span><br><span class="line"><span class="symbol">    http:</span><span class="comment">//chromedriver.storage.googleapis.com/index.html</span></span><br></pre></td></tr></table></figure></div><p><img src="https://s1.ax1x.com/2020/07/06/Ui6xdx.png" alt="Ui6xdx.png"></p><p>③ 解压后放到<code>python37\</code> 下 或 <code>python37\Script</code> 下</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>软件测试</tag>
        <tag>RobotFramework</tag>
      </tags>
  </entry>
</search>
